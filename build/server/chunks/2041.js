"use strict";exports.id=2041,exports.ids=[2041],exports.modules={16350:(e,r,t)=>{t.d(r,{z:()=>createADXL345Stream});var a=t(83926),s=t(89799),n=t(41060),i=t(46891),p=t(90345),l=t(1458),o=t(57314);let c=0,getSensorEndpoint=e=>{switch(e.type){case"adxl345":return"adxl345/dump_adxl345";case"beacon":return"beacon/dump_accel";case"lis2dw":return"lis2dw/dump_lis2dw";default:throw Error("Sensor type not supported. Must be 'adxl345', 'beacon', or 'lis2dw'")}},isSuccessResponse=e=>null!=e&&"object"==typeof e&&!("error"in e),isKlipperAccelSubscriptionResponse=e=>s.NI.safeParse(e).success,isKlipperAccelSubscriptionData=e=>isSuccessResponse(e)&&null!=e.params&&"data"in e.params&&null!=e.params&&Array.isArray(e.params.data)&&Array.isArray(e.params.data[0])&&4===e.params.data[0].length,detrendFloatSignal=e=>{let r=e.reduce((e,r)=>e+r,0)/e.length;for(let t=0;t<e.length;t++)e[t]-=r;return e},detrendBatch=e=>{let r=detrendFloatSignal(e.map(e=>e[1])),t=detrendFloatSignal(e.map(e=>e[2])),a=detrendFloatSignal(e.map(e=>e[3]));return e.map((e,s)=>[e[0],r[s],t[s],a[s]])},createADXL345Stream=(e,r)=>{let t=(0,o.jZ)({url:e,deserializer:e=>{try{return JSON.parse(e.data,(e,r,t)=>"0"===e&&"number"==typeof r&&t?.source!=null?(0,n.Z)(r):r)}catch(e){return(0,a.j)().error(e,"Error parsing JSON from klipper socket"),null}}}),s=t.multiplex(()=>({jsonrpc:"2.0",method:getSensorEndpoint(r),params:{sensor:r.name,response_template:{}},id:++c}),()=>null,e=>{if("result"in e&&isKlipperAccelSubscriptionResponse(e.result))return e.result.header,!1;if(isKlipperAccelSubscriptionData(e))return!0;if(!isSuccessResponse(e))throw(0,a.j)().error(e,"Error in response from adxl345 subscription on klipper socket"),Error(`${e.error.error}: ${e.error.message}`);return!1}).pipe((0,i.B)(),(0,p.h)(e=>isKlipperAccelSubscriptionData(e)),(0,l.U)(e=>({...e.params,data:detrendBatch(e.params.data)})),(0,i.B)());return s.subscribe(),{dataStream$:s,close:()=>{t.complete.bind(t)()}}}},52485:(e,r,t)=>{t.d(r,{q:()=>createSignalBuffers});var a=t(41060),s=t(328),n=t(94933),i=t(1458),p=t(6704),l=t(22212),o=t(68653),c=t(95754),u=t(46891),d=t(22663),m=t(50509),b=t(63969),S=t(86619);let h=[100,200,400,800,1600,3200,6400,12800,25600,51200],createSignalBuffers=async e=>{let r=await (0,s.z)(e.pipe((0,n.P)(),(0,i.U)(e=>(0,a.Z)(e.data[0][0]).decimalPlaces(0,a.Z.ROUND_FLOOR).toNumber()))),t=new Date().getTime(),f=(0,p.x)(e,l.z).pipe((0,o.b)(e=>(0,p.x)((0,c.D)(e.data),l.z)),(0,i.U)(([e,t,s,n])=>[(0,a.Z)(e).minus(r).shiftedBy(3),t,s,n]),(0,u.B)()),g=f.pipe((0,d.e)(1e3),(0,i.U)(e=>e.length<1?1:Math.floor(e.length/e[e.length-1][0].minus(e[0][0]).shiftedBy(-3).toNumber())),(0,m.x)(),(0,u.B)()),x=f.pipe((0,o.b)(e=>{let r=new Date().getTime()-t,a=e[0].toNumber();return r<a?(0,p.x)((0,b.of)(e).pipe((0,S.g)(a-r)),l.z):(0,b.of)(e)}),(0,u.B)()),y=g.pipe((0,i.U)(e=>h.reduce((r,t)=>Math.abs(t-e)<Math.abs(r-e)?t:r,h[0])),(0,m.x)(),(0,u.B)());return{timeStamp:r,signal$:f,timeMappedSignal$:x,specSampleRate$:y,sampleRate$:g}}}};