exports.id=5774,exports.ids=[5774],exports.modules={5774:(e,t,r)=>{"use strict";r.d(t,{dj:()=>deserializeToolheadConfiguration,fM:()=>loadSerializedConfig,uz:()=>readSerializedConfig,regenerateKlipperConfiguration:()=>regenerateKlipperConfiguration});var o,i,n,a=r(38316),s=r(49013),l=r(32081),d=r(57147),p=r.n(d),c=r(71017),u=r.n(c),h=r(14521),g=r(73837),f=r(11641),_=r(64269);let m=a.z.object({x_step_pin:a.z.string().optional(),x_dir_pin:a.z.string().optional(),x_enable_pin:a.z.string().optional(),x_uart_pin:a.z.string().optional(),x_diag_pin:a.z.string().optional(),x_endstop_pin:a.z.string().optional(),x1_step_pin:a.z.string().optional(),x1_dir_pin:a.z.string().optional(),x1_enable_pin:a.z.string().optional(),x1_uart_pin:a.z.string().optional(),x1_diag_pin:a.z.string().optional(),x1_endstop_pin:a.z.string().optional(),dual_carriage_step_pin:a.z.string().optional(),dual_carriage_dir_pin:a.z.string().optional(),dual_carriage_enable_pin:a.z.string().optional(),dual_carriage_uart_pin:a.z.string().optional(),dual_carriage_diag_pin:a.z.string().optional(),dual_carriage_endstop_pin:a.z.string().optional(),y_step_pin:a.z.string().optional(),y_dir_pin:a.z.string().optional(),y_enable_pin:a.z.string().optional(),y_uart_pin:a.z.string().optional(),y_diag_pin:a.z.string().optional(),y_endstop_pin:a.z.string().optional(),y1_step_pin:a.z.string().optional(),y1_dir_pin:a.z.string().optional(),y1_enable_pin:a.z.string().optional(),y1_uart_pin:a.z.string().optional(),y1_diag_pin:a.z.string().optional(),y1_endstop_pin:a.z.string().optional(),y2_step_pin:a.z.string().optional(),y2_dir_pin:a.z.string().optional(),y2_enable_pin:a.z.string().optional(),y2_uart_pin:a.z.string().optional(),y2_diag_pin:a.z.string().optional(),y2_endstop_pin:a.z.string().optional(),z0_step_pin:a.z.string().optional(),z0_dir_pin:a.z.string().optional(),z0_enable_pin:a.z.string().optional(),z0_uart_pin:a.z.string().optional(),z0_diag_pin:a.z.string().optional(),z1_step_pin:a.z.string().optional(),z1_dir_pin:a.z.string().optional(),z1_enable_pin:a.z.string().optional(),z1_uart_pin:a.z.string().optional(),z1_diag_pin:a.z.string().optional(),z2_step_pin:a.z.string().optional(),z2_dir_pin:a.z.string().optional(),z2_enable_pin:a.z.string().optional(),z2_uart_pin:a.z.string().optional(),z2_diag_pin:a.z.string().optional(),z3_step_pin:a.z.string().optional(),z3_dir_pin:a.z.string().optional(),z3_enable_pin:a.z.string().optional(),z3_uart_pin:a.z.string().optional(),z3_diag_pin:a.z.string().optional(),e_step_pin:a.z.string().optional(),e_dir_pin:a.z.string().optional(),e_enable_pin:a.z.string().optional(),e_uart_pin:a.z.string().optional(),e_diag_pin:a.z.string().optional(),e_heater_pin:a.z.string().optional(),e_sensor_pin:a.z.string().optional(),stepper_spi_mosi_pin:a.z.string().optional(),stepper_spi_miso_pin:a.z.string().optional(),stepper_spi_sclk_pin:a.z.string().optional(),adxl345_cs_pin:a.z.string().optional(),bltouch_sensor_pin:a.z.string().optional(),bltouch_control_pin:a.z.string().optional(),probe_pin:a.z.string().optional(),fan_part_cooling_pin:a.z.string().optional(),fan_toolhead_cooling_pin:a.z.string().optional(),fan_controller_board_pin:a.z.string().optional(),heater_bed_heating_pin:a.z.string().optional(),heater_bed_sensor_pin:a.z.string().optional(),"4p_fan_part_cooling_pin":a.z.string().optional(),"4p_fan_part_cooling_tach_pin":a.z.string().optional(),"4p_toolhead_cooling_pin":a.z.string().optional(),"4p_toolhead_cooling_tach_pin":a.z.string().optional(),"4p_controller_board_pin":a.z.string().optional(),"4p_controller_board_tach_pin":a.z.string().optional()}),b=m.extend({x_step_pin:a.z.string(),x_dir_pin:a.z.string(),x_enable_pin:a.z.string(),x_uart_pin:a.z.string(),x_endstop_pin:a.z.string(),y_step_pin:a.z.string(),y_dir_pin:a.z.string(),y_enable_pin:a.z.string(),y_uart_pin:a.z.string(),y_endstop_pin:a.z.string(),z0_step_pin:a.z.string(),z0_dir_pin:a.z.string(),z0_enable_pin:a.z.string(),z0_uart_pin:a.z.string(),e_step_pin:a.z.string(),e_dir_pin:a.z.string(),e_enable_pin:a.z.string(),e_uart_pin:a.z.string(),e_heater_pin:a.z.string(),e_sensor_pin:a.z.string(),probe_pin:a.z.string(),heater_bed_heating_pin:a.z.string(),heater_bed_sensor_pin:a.z.string()}).and(a.z.object({fan_part_cooling_pin:a.z.string(),fan_toolhead_cooling_pin:a.z.string()}).or(a.z.object({"4p_fan_part_cooling_pin":a.z.string(),"4p_fan_part_cooling_tach_pin":a.z.string(),"4p_toolhead_cooling_pin":a.z.string(),"4p_toolhead_cooling_tach_pin":a.z.string()}))),z=m.extend({x_step_pin:a.z.string(),x_dir_pin:a.z.string(),x_enable_pin:a.z.string(),x_uart_pin:a.z.string(),x_endstop_pin:a.z.string(),y_step_pin:a.z.string(),y_dir_pin:a.z.string(),y_enable_pin:a.z.string(),y_uart_pin:a.z.string(),y_endstop_pin:a.z.string(),z0_step_pin:a.z.string(),z0_dir_pin:a.z.string(),z0_enable_pin:a.z.string(),z0_uart_pin:a.z.string(),z1_step_pin:a.z.string(),z1_dir_pin:a.z.string(),z1_enable_pin:a.z.string(),z1_uart_pin:a.z.string(),z2_step_pin:a.z.string(),z2_dir_pin:a.z.string(),z2_enable_pin:a.z.string(),z2_uart_pin:a.z.string(),probe_pin:a.z.string(),heater_bed_heating_pin:a.z.string(),heater_bed_sensor_pin:a.z.string()}).and(a.z.object({fan_part_cooling_pin:a.z.string(),fan_toolhead_cooling_pin:a.z.string()}).or(a.z.object({"4p_fan_part_cooling_pin":a.z.string(),"4p_fan_part_cooling_tach_pin":a.z.string(),"4p_toolhead_cooling_pin":a.z.string(),"4p_toolhead_cooling_tach_pin":a.z.string()}))),T=m.extend({e_step_pin:a.z.string(),e_dir_pin:a.z.string(),e_enable_pin:a.z.string(),e_uart_pin:a.z.string(),e_heater_pin:a.z.string(),e_sensor_pin:a.z.string(),adxl345_cs_pin:a.z.string(),probe_pin:a.z.string()}).and(a.z.object({fan_part_cooling_pin:a.z.string(),fan_toolhead_cooling_pin:a.z.string()}).or(a.z.object({"4p_fan_part_cooling_pin":a.z.string(),"4p_fan_part_cooling_tach_pin":a.z.string(),"4p_toolhead_cooling_pin":a.z.string(),"4p_toolhead_cooling_tach_pin":a.z.string()}))),x=a.z.object({uart_pin:a.z.string(),uart_address:a.z.string().optional(),rx_pin:a.z.string().optional(),tx_pin:a.z.string().optional()}),P=a.z.object({cs_pin:a.z.string()}).and(a.z.object({spi_bus:a.z.string()}).or(a.z.object({spi_software_mosi_pin:a.z.string().optional(),spi_software_miso_pin:a.z.string().optional(),spi_software_sclk_pin:a.z.string().optional()}))),hasSPI=e=>P.safeParse(e).success,hasUART=e=>x.safeParse(e).success,y=a.z.object({title:a.z.string(),step_pin:a.z.string(),dir_pin:a.z.string(),enable_pin:a.z.string(),diag_pin:a.z.string().optional(),endstop_pin:a.z.string().optional(),uart_pin:a.z.string().optional(),uart_address:a.z.string().optional(),rx_pin:a.z.string().optional(),tx_pin:a.z.string().optional(),cs_pin:a.z.string().optional(),spi_bus:a.z.string().optional(),spi_software_mosi_pin:a.z.string().optional(),spi_software_miso_pin:a.z.string().optional(),spi_software_sclk_pin:a.z.string().optional()}).refine(e=>hasSPI(e)||hasUART(e),{message:"Motor slot must have either SPI or UART pins"});y.innerType().omit({title:!0}).partial();let v=a.z.string(),reversePinLookup=(e,t)=>{let r=Object.entries(t.motorSlots??{});for(let[t,o]of r)if(Object.entries(e).every(([e,t])=>o[e]===t))return t},C=a.z.string().brand("BoardID"),S=a.z.string().brand("BoardPath"),w=a.z.string().brand("BoardSerialPath"),E=a.z.record(a.z.nativeEnum(_.po),a.z.string()),$=a.z.record(v,y),R=a.z.object({id:C,isToolboard:a.z.boolean().optional(),isHost:a.z.boolean().optional(),serialPath:w.optional(),name:a.z.string(),manufacturer:a.z.string(),firmwareBinaryName:a.z.string(),compileScript:a.z.string(),flashScript:a.z.string().optional(),flashInstructions:a.z.string().optional(),disableAutoFlash:a.z.boolean().optional(),documentationLink:a.z.string().optional(),hasQuirksFiles:a.z.boolean().optional(),driverCount:a.z.number(),integratedDrivers:E.optional(),extruderlessConfig:a.z.string().optional(),fourPinFanConnectorCount:a.z.number().optional(),driverVoltages:_.v6.array().default([24]),hasMcuTempSensor:a.z.boolean().default(!0),alternativePT1000Resistor:a.z.number().optional(),motorSlots:a.z.record(v,y).optional(),outputPins:a.z.array(a.z.object({pin:a.z.string(),name:a.z.string(),value:a.z.number().min(0).max(1)})).optional(),dfu:a.z.object({dfuBootImage:a.z.string(),flashDevice:a.z.string(),instructions:a.z.array(a.z.string()),reminder:a.z.string().optional(),hasBoot0Jumper:a.z.boolean()}).optional(),stepperSPI:a.z.object({software:a.z.object({sclk:a.z.string(),mosi:a.z.string(),miso:a.z.string()})}).or(a.z.object({hardware:a.z.object({bus:a.z.string()})})).optional(),ADXL345SPI:a.z.object({cs_pin:a.z.string()}).and(a.z.object({software:a.z.object({sclk:a.z.string(),mosi:a.z.string(),miso:a.z.string()})}).or(a.z.object({hardware:a.z.object({bus:a.z.string()})}))).optional(),path:S}).and(a.z.object({isToolboard:a.z.literal(!0),motorSlots:a.z.undefined()}).or(a.z.object({motorSlots:$})).or(a.z.object({isHost:a.z.literal(!0),motorSlots:a.z.undefined()}))),A=R.and(a.z.object({detected:a.z.boolean()})),N=a.z.object({id:a.z.string(),disableAutoFlash:a.z.literal(!1).optional(),isToolboard:a.z.boolean().optional(),compileScript:a.z.string(),flashScript:a.z.string(),path:S}),O=R.and(a.z.object({isToolboard:a.z.literal(!0),isHost:a.z.literal(!1).optional(),integratedDrivers:E.and(a.z.object({[_.po.extruder]:a.z.string()}))})),F=O.and(a.z.object({detected:a.z.boolean()}));var I=r(92249),L=r(24580),M=r.n(L);let D=new(M())({useClones:!1}),j=new Map,k=new(M())({useClones:!1}),H=new Map;new Date().getTime();let cacheAsyncMetadataFn=(e,t,r)=>async o=>{let i=r.get(`${t}-${o}`);if(null==i){let i=H.get(`${t}-${o}`);null==i&&(i=e(o),H.set(`${t}-${o}`,i));let n=await i;return r.set(`${t}-${o}`,n),n}return i},parseMetadata=async(e,t)=>{if(""===e.trim())return null;let r=await (0,g.promisify)(l.exec)(`sed -n '/^# {/{:a; N; /\\n# }/!ba; p}' ${e}`),o=r.stdout.split("\n").map(e=>e.trim()).filter(e=>""!==e).map(e=>0===e.indexOf("#")?e.substring(1):e);if(0===o.length)return null;try{let r=JSON.parse(o.join("\n"));r.path=e;let i=e.split("/").pop();if(null==i)throw Error("File name couldn't be parsed from path: "+e);return r.id=i.replace(/\.cfg$/g,""),t.parse(r)}catch(t){throw t instanceof Error&&(0,s.getLogger)().error(t.message),Error("Failed to parse JSON from file: "+e+" with content: "+o.join("\n"))}},parsePinValue=e=>{if(!("null"===e||e.startsWith("<")&&e.endsWith(">")))return e},B=cacheAsyncMetadataFn(async e=>{let t=(0,I.xg)(),r=await (0,g.promisify)(l.exec)(`python3 ${u().join(t,"initojson.py")} ${e}`),o=JSON.parse(r.stdout);if(null==o)throw Error("Failed to parse config file: "+e);let i=Object.keys(o).find(e=>e.startsWith("board_pins"));if(null==i)throw Error("Failed to find board pin section in config file: "+e);let n=o[i].aliases.map(e=>e.replace(",","")),a=o[i].aliases.filter(e=>!e.includes("="));if(a.length>0)throw Error('Board pin aliases do not parse correctly, got "'+a.join(", ")+'"');let s={};return n.forEach(e=>{let t=e.split("=");if(t.length>2)throw Error('Board pin aliases do not parse correctly, got "'+e+'"');s[t[0]]=parsePinValue(t[1])}),s},"parsePinAlias",k),exportBoardPinAlias=(e,t,r)=>{let o=Object.keys(t).map((e,r)=>null==t[e]?e+"=null":e+"="+t[e]),i=[`[board_pins ${e}]`];return null!=r&&i.push(`mcu: ${r}`),i.push("aliases:",`	${o.join(",\n	")}`),i.join("\n")},parseBoardPinConfig=async(e,t)=>{let r=u().join(e.path,e.isToolboard?"toolboard-config.cfg":t&&null!=e.extruderlessConfig?e.extruderlessConfig:"config.cfg"),o=e.isToolboard?T:t?z:b;return o.parse(await B(r))};cacheAsyncMetadataFn(async e=>{if(!(0,d.existsSync)(e))throw Error("Firmware config file does not exist: "+e);let t=(0,d.createReadStream)(e),r=(0,h.createInterface)({input:t,crlfDelay:1/0}),o='CONFIG_MCU="';for await(let e of r)if(e.startsWith(o))return e.substring(o.length,e.length-2);throw Error("Failed to find MCU in firmware config file: "+e)},"extractMcuFromFirmwareConfig",k);let q=(o=e=>{let t=f.serverSchema.parse(process.env),r=u().join(t.RATOS_CONFIGURATION_PATH,"extruders",e+".cfg"),o=(0,I.xg)(),i=(0,l.execSync)(`python3 ${u().join(o,"initojson.py")} ${r}`),n=JSON.parse(i.toString());if(null==n)throw Error("Failed to parse config file: "+r);let a=Object.keys(n).find(e=>e.startsWith("extruder"));if(null==a)throw Error("Failed to find extruder section in config file: "+r);let s=n[a];if(null==s||null==s.rotation_distance)throw Error("Failed to find extruder rotation distance");return s.rotation_distance},i="getExtruderRotationDistance",e=>{let t=k.get(`${i}-${e}`);if(null==t){let t=o(e);return k.set(`${i}-${e}`,t),t}return t}),readInclude=e=>{let t=f.serverSchema.parse(process.env),r=u().join(t.RATOS_CONFIGURATION_PATH,e);if(!(0,d.existsSync)(r))throw Error("Extruder config file doesn't exist: "+e);return(0,d.readFileSync)(r,"utf-8")},stripIncludes=e=>stripLinesStartingWith(e,"[include"),stripCommentLines=e=>stripLinesStartingWith(e,"#"),stripLinesStartingWith=(e,t)=>e.split("\n").filter(e=>!e.trim().startsWith(t)).join("\n"),stripDriverSections=e=>{let t=!1;return e.split("\n").map(e=>{if(e.trim().startsWith("[tmc")&&(t=!0),t){if(!e.trim().startsWith("["))return null;t=!1}return e}).filter(e=>null!=e).join("\n")},replaceLinesStartingWith=(e,t,r)=>e.split("\n").map(e=>e.trim().startsWith(t)?r:e).join("\n"),W=["EPCOS 100K B57560G104F","ATC Semitec 104GT-2","ATC Semitec 104NT-4-R025H42G","Generic 3950","Honeywell 100K 135-104LAG-J01","NTC 100K MGB18-104F39050L32","SliceEngineering 450","TDK NTCG104LH104JT1","PT1000"],U="";if(process.env.RATOS_CONFIGURATION_PATH){let e=f.serverSchema.parse(process.env);U=e.RATOS_CONFIGURATION_PATH}let G=a.z.object({path:a.z.string().startsWith(U).endsWith(".cfg"),id:a.z.string()}),V=a.z.enum(W),K=G.extend({type:a.z.literal("hotend"),title:a.z.string(),thermistor:a.z.enum(W),flowType:a.z.union([a.z.literal("sf"),a.z.literal("hf"),a.z.literal("uhf")])}),X=a.z.object({type:a.z.enum(["Regular","CHT"]),diameter:a.z.number().min(.2).max(1.8)}),Y=G.extend({type:a.z.literal("extruder"),stepper:_.vF.shape.id.optional(),current:_.P6.shape.current.optional(),title:a.z.string()}),Z=G.extend({type:a.z.literal("static-probe").or(a.z.literal("stowable-probe")),title:a.z.string()}),J=a.z.object({id:a.z.enum(["endstop","endstop-toolboard","sensorless"]),title:a.z.string()}),Q=a.z.object({id:a.z.enum(["toolboard","controlboard","sbc","none"]),title:a.z.string()}),ee=a.z.object({id:a.z.enum(["2pin","4pin","4pin-dedicated","2pin-toolboard","4pin-toolboard","4pin-dedicated-toolboard","none"]),title:a.z.string()}),getDefaultNozzle=()=>({diameter:.4,type:"Regular"}),et=a.z.object({hotend:K,thermistor:V,extruder:Y,xEndstop:J,yEndstop:J,hotendFan:ee,partFan:ee,nozzle:X.default(getDefaultNozzle()),xAccelerometer:Q.optional().nullable(),yAccelerometer:Q.optional().nullable(),toolboard:O.nullable(),probe:Z.optional(),axis:a.z.literal(_.po.x).or(a.z.literal(_.po.dual_carriage)),description:a.z.string().optional(),toolNumber:a.z.number().optional()}).strict(),er=a.z.union([a.z.literal(0),a.z.literal(1)]),eo=a.z.union([a.z.literal(_.po.x),a.z.literal(_.po.dual_carriage),a.z.literal(_.po.extruder),a.z.literal(_.po.extruder1)]),ei=a.z.union([eo,er]),en=et.refine(e=>null!==e.toolboard||"endstop-toolboard"!==e.xEndstop.id,"Cannot use toolboard endstop without a toolboard").refine(e=>null!==e.toolboard||!["2pin-toolboard","4pin-toolboard","4pin-dedicated-toolboard"].includes(e.hotendFan.id),"Cannot use toolboard hotend fan without a toolboard").refine(e=>null!==e.toolboard||!["2pin-toolboard","4pin-toolboard","4pin-dedicated-toolboard"].includes(e.partFan.id),"Cannot use toolboard part cooling fan without a toolboard"),ea=et.partial().optional(),es=et.extend({hotend:K.shape.id,extruder:Y.shape.id,thermistor:V,xEndstop:J.shape.id,yEndstop:J.shape.id,hotendFan:ee.shape.id,partFan:ee.shape.id,xAccelerometer:Q.shape.id.optional().nullable(),yAccelerometer:Q.shape.id.optional().nullable(),toolboard:C.optional().nullable(),probe:Z.shape.id.optional().nullable()}).strict(),el=es.partial().optional(),ed="";if(process.env.RATOS_CONFIGURATION_PATH){let e=f.serverSchema.parse(process.env);ed=u().join(e.RATOS_CONFIGURATION_PATH,"printers")}let ep=a.z.object({velocity:a.z.number().min(0).describe("Maximum velocity for this printer"),accel:a.z.number().min(0).describe("Maximum acceleration for this printer"),z_velocity:a.z.number().min(0).describe("Maximum z velocity for this printer"),z_accel:a.z.number().min(0).describe("Maximum z acceleration for this printer"),square_corner_velocity:a.z.number().min(0).default(5).describe("Maximum square corner velocity for this printer"),travel_velocity:a.z.number().min(0).default(200).describe("Maximum travel velocity for this printer"),travel_accel:a.z.number().min(0).default(3e3).describe("Maximum travel velocity for this printer")}).strict(),ec=a.z.object({id:a.z.string(),name:a.z.string().describe("The name of the printer"),description:a.z.string().describe("A description of the printer"),manufacturer:a.z.string().describe("The name of the manufacturer of this printer"),documentationLink:a.z.string().describe("Link to the RatOS documentation for this printer"),image:a.z.string().describe("Link to an image of the printer"),sizes:a.z.array(a.z.number()).describe("Size options for this printer").optional(),template:a.z.string().describe("Printer.cfg template for this printer"),path:a.z.string().startsWith(ed),driverCountRequired:a.z.number().describe("Number of drivers required for this printer"),kinematics:a.z.union([a.z.literal("cartesian"),a.z.literal("corexy"),a.z.literal("hybrid-corexy"),a.z.literal("hybrid-corexy-idex")]).optional(),bedMargin:a.z.object({x:a.z.tuple([a.z.number().default(0),a.z.number().default(0)]),y:a.z.tuple([a.z.number().default(0),a.z.number().default(0)])}).describe("Margin of available movement around the bed for this printer").default({x:[0,0],y:[0,0]}),speedLimits:a.z.object({basic:ep,performance:ep.optional()}).strict().describe("Speed limits for this printer"),defaults:a.z.object({toolheads:a.z.array(es).describe("Default toolheads for this printer"),board:C.describe("Default board for this printer. Should be the name of the board directory."),rails:a.z.array(_.r).describe("Default rails for this printer"),controllerFan:ee.shape.id.optional().describe("Default controller fan for this printer")}).strict().describe("Default hardware for this printer")}).describe("A RatOS supported 3d printer"),eu=ec.extend({defaults:ec.shape.defaults.extend({toolheads:a.z.array(en)}).strict()}),eh=a.z.array(_.HB).parse([{id:"BTT-TMC2209-13",title:"BTT TMC2209 v1.3",type:"TMC2209",protocol:"UART",senseResistor:.11,coolingCurrentThreshold:1.1,voltages:[24],maxCurrent:2},{id:"BTT-TMC2226-10",title:"BTT TMC2226 v1.0",type:"TMC2209",protocol:"UART",senseResistor:.11,coolingCurrentThreshold:1.1,voltages:[24],maxCurrent:2},{id:"BTT-TMC5160-PRO-11",title:"BTT TMC5160(T) Pro v1.1",type:"TMC5160",protocol:"SPI",senseResistor:.075,voltages:[24,36,48,56],maxCurrent:3,coolingCurrentThreshold:1.5},{id:"BTT-TMC5160T-PLUS-10",title:"BTT TMC5160T Plus v1.0",type:"TMC5160",protocol:"SPI",senseResistor:.022,voltages:[24,36,48,56,60],maxCurrent:10.6,coolingCurrentThreshold:3,external:!0},{id:"BTT-EZ2209",title:"BTT EZ2209",type:"TMC2209",protocol:"UART",senseResistor:.11,coolingCurrentThreshold:1.3,voltages:[24],maxCurrent:2},{id:"BTT-EZ2226",title:"BTT EZ2226",type:"TMC2209",protocol:"UART",senseResistor:.11,coolingCurrentThreshold:1.3,voltages:[24],maxCurrent:2},{id:"BTT-EZ2130",title:"BTT EZ2130",type:"TMC2130",protocol:"SPI",senseResistor:.11,coolingCurrentThreshold:.9,voltages:[24],maxCurrent:2},{id:"BTT-EZ5160-PRO",title:"BTT EZ5160 Pro",type:"TMC5160",protocol:"SPI",senseResistor:.075,coolingCurrentThreshold:1.6,voltages:[24,36,48],maxCurrent:2.5},{id:"BTT-EZ5160-RGB",title:"BTT EZ5160 RGB",type:"TMC5160",protocol:"SPI",senseResistor:.05,coolingCurrentThreshold:3,voltages:[24,48,36,56],maxCurrent:4.7},{id:"MELLOW-FLY-HV-TMC5160-PRO-12",title:"Mellow FLY HV TMC5160 Pro v1.2",type:"TMC5160",protocol:"SPI",senseResistor:.033,coolingCurrentThreshold:3,voltages:[24,36,48],maxCurrent:4.25,external:!0},{id:"MELLOW-FLY-TMC2209",title:"Mellow FLY TMC2209",type:"TMC2209",protocol:"UART",senseResistor:.11,coolingCurrentThreshold:1.1,voltages:[24],maxCurrent:2},{id:"PRUSA-EINSY-RAMBO-TMC2130",title:"Prusa Einsy Rambo TMC2130",type:"TMC2130",protocol:"SPI",senseResistor:.22,coolingCurrentThreshold:.9,voltages:[24],maxCurrent:2},{id:"PRUSA-BUDDY-TMC2209",title:"Prusa Buddy TMC2209",type:"TMC2209",protocol:"UART",senseResistor:.11,coolingCurrentThreshold:1.1,voltages:[24],maxCurrent:2}]),findPreset=(e,t,r,o,i)=>e.presets?.slice().sort((e,t)=>i?t.run_current-e.run_current:e.run_current-t.run_current).find(e=>e.driver===t.type&&e.voltage===r&&e.sense_resistor===t.senseResistor&&(null==o||e.run_current===o)),eg=a.z.array(_.vF).parse([{id:"generic",title:"Generic Stepper",maxPeakCurrent:2.8},{id:"BONDTECH-42H025H-0704-002",title:"Bondtech LGX Stepper",maxPeakCurrent:.7},{id:"LDO-42STH48-2504AC",title:"LDO-42STH48-2504AC",maxPeakCurrent:2.5,presets:[{run_current:1.1,voltage:24,driver:"TMC2209",sense_resistor:.11,driver_TBL:1,driver_TOFF:3,driver_HEND:0,driver_HSTRT:0},{run_current:1.6,voltage:24,driver:"TMC2209",sense_resistor:.11,driver_TBL:2,driver_TOFF:3,driver_HEND:0,driver_HSTRT:6},{run_current:1.6,voltage:24,driver:"TMC5160",sense_resistor:.075,driver_TBL:2,driver_TOFF:3,driver_HEND:0,driver_HSTRT:6},{run_current:1.768,voltage:48,driver:"TMC5160",sense_resistor:.075,driver_TBL:0,driver_TOFF:4,driver_HEND:0,driver_HSTRT:4}]},{id:"LDO-42STH40-1684AC",title:"LDO-42STH40-1684AC",maxPeakCurrent:1.68,presets:[{run_current:.4,voltage:24,driver:"TMC2130",sense_resistor:.22,driver_IHOLDDELAY:8,driver_TPOWERDOWN:0,driver_TBL:2,driver_TOFF:3,driver_HEND:1,driver_HSTRT:5,driver_PWM_FREQ:2,driver_PWM_GRAD:2,driver_PWM_AMPL:230,driver_PWM_AUTOSCALE:!0,driver_SGT:5},{run_current:.52,voltage:24,driver:"TMC2130",sense_resistor:.22,driver_IHOLDDELAY:8,driver_TPOWERDOWN:0,driver_TBL:2,driver_TOFF:3,driver_HEND:1,driver_HSTRT:5,driver_PWM_FREQ:2,driver_PWM_GRAD:4,driver_PWM_AMPL:240,driver_PWM_AUTOSCALE:!0,driver_SGT:3},{run_current:.8,voltage:24,driver:"TMC2209",sense_resistor:.11,driver_TBL:1,driver_TOFF:3,driver_HEND:3,driver_HSTRT:0},{run_current:1.188,voltage:24,driver:"TMC2209",sense_resistor:.11,driver_TBL:0,driver_TOFF:3,driver_HEND:0,driver_HSTRT:0}]},{id:"LDO-42STH48-2004MAH",title:"LDO-42STH48-2004MAH",maxPeakCurrent:2,fullStepsPerRotation:400},{id:"LDO-42STH48-2004AC",title:"LDO-42STH48-2004AC",maxPeakCurrent:2},{id:"LDO-42STH25-1404MAC",title:"LDO-42STH25-1404MAC",maxPeakCurrent:1.4,fullStepsPerRotation:400,presets:[{voltage:24,driver:"TMC2209",sense_resistor:.11,run_current:.85,driver_TBL:1,driver_TOFF:3,driver_HEND:2,driver_HSTRT:0}]},{id:"LDO-42STH25-1004CL200E",title:"LDO-42STH25-1004CL200E",maxPeakCurrent:1},{id:"LDO-36STH20-1004AHG",title:"LDO-36STH20-1004AHG",maxPeakCurrent:1,presets:[{voltage:24,driver:"TMC2209",sense_resistor:.11,run_current:.707,driver_TBL:0,driver_HEND:6,driver_HSTRT:7,driver_TOFF:4}]},{id:"LDO-36STH17-1004AHG",title:"LDO-36STH17-1004AHG",maxPeakCurrent:1},{id:"LDO-35STH48-1684AH",title:"LDO-35STH48-1684AH",maxPeakCurrent:1.68}]),deserializeDriver=e=>eh.find(t=>t.id===e)??null,deserializeStepper=e=>eg.find(t=>t.id===e)??null,deserializePrinterRail=e=>{let t=deserializeStepper(e.stepper),r=deserializeDriver(e.driver);if(null==t)throw Error(`Stepper ${e.stepper} not found in database`);if(null==r)throw Error(`Driver ${e.driver} not found in database`);return _.g6.parse({...e,stepper:t,driver:r})},deserializePrinterRailDefinition=e=>{let t=deserializeStepper(e.stepper),r=deserializeDriver(e.driver);if(null==t)throw Error(`Stepper ${e.stepper} not found in database`);if(null==r)throw Error(`Driver ${e.driver} not found in database`);return _.P6.parse({...e,stepper:t,driver:r})},stringToTitleObject=e=>({id:e,title:e}),serializePrinterRail=e=>_.Ah.parse({...e,driver:e.driver.id,stepper:e.stepper.id}),serializeToolheadConfiguration=e=>({...e,toolboard:e.toolboard?.id,hotend:e.hotend.id,thermistor:e.thermistor,extruder:e.extruder.id,probe:e.probe?.id,xEndstop:e.xEndstop.id,yEndstop:e.yEndstop.id,partFan:e.partFan.id,hotendFan:e.hotendFan.id,xAccelerometer:e.xAccelerometer?.id,yAccelerometer:e.yAccelerometer?.id}),extractToolheadsFromPrinterConfiguration=e=>{let t=e?.toolheads?.map(e=>{if(null==e)throw Error("Toolhead can not be null");return new ToolheadHelper(en.parse(e))}).filter(Boolean);if(null==t)throw Error("No toolheads found");return t},extractToolheadFromPrinterConfiguration=(e,t)=>{if(t?.toolheads==null||0===t.toolheads.length)throw Error("No toolheads preset in supplied printer config");let r=extractToolheadsFromPrinterConfiguration(t),o="number"==typeof e?r.find(t=>t.getTool()===e):r.find(t=>t.getExtruderAxis()===e||t.getMotionAxis()===e);return o};var ef=r(56988),e_=r.n(ef);let ToolheadHelper=class ToolheadHelper{constructor(e){this.config=e}hasToolboard(){return null!=this.config.toolboard}getToolboard(){return this.config.toolboard}getMotionStepperName(){return this.config.axis===_.po.dual_carriage?"dual_carriage":`stepper_${this.getMotionAxis()}`}getToolboardName(){if(null==this.config.toolboard)throw Error(`Toolhead T${this.getTool()} does not have a toolboard`);return`toolboard_${this.getShortToolName()}`}getShortToolName(){return`t${this.getTool()}`}getDescription(){return this.config.description??"the printer's toolhead"}getMotionAxis(){return this.config.axis===_.po.dual_carriage?_.po.dual_carriage:_.po.x}getExtruderAxis(){return this.config.axis===_.po.dual_carriage?_.po.extruder1:_.po.extruder}getToolCommand(){return`T${this.getTool()}`}getTool(){return this.config.axis===_.po.dual_carriage?1:0}getSerialSuffix(){return`t${this.getTool()}`}getExtruder(){return this.config.extruder}getHotend(){return this.config.hotend}getNozzle(){return this.config.nozzle??getDefaultNozzle()}getThermistor(){return this.config.thermistor}getXEndstop(){return this.config.xEndstop}getYEndstop(){return this.config.yEndstop}getXAccelerometer(){return this.config.xAccelerometer}getYAccelerometer(){return this.config.yAccelerometer}getXAccelerometerName(){switch(this.getXAccelerometer()?.id){case"controlboard":return"controlboard";case"toolboard":if(this.hasToolboard())return this.getToolboardName();case"sbc":return"rpi";default:return"controlboard"}}getYAccelerometerName(){switch(this.getYAccelerometer()?.id){case"controlboard":return"controlboard";case"toolboard":if(this.hasToolboard())return this.getToolboardName();case"sbc":return"rpi";default:return"controlboard"}}getChangeSet(e){if(null==e)return null;let t={};Object.keys(e).forEach(r=>{let o=this.getConfig()[r],i=e[r];if(null!=o&&null==i||null==o&&null!=i){t[r]=i;return}o&&i&&("object"==typeof o&&"id"in o&&"object"==typeof i&&"id"in i?o.id!==i.id&&(t[r]=i):e_()(o,i)||(t[r]=i))});let r=ea.safeParse(t);return r}getProbe(){return this.config.probe}getPartFan(){return this.config.partFan}getHotendFan(){return this.config.hotendFan}serialize(){return serializeToolheadConfiguration(this.config)}getConfig(){return{...this.config}}};let em=a.z.object({printer:ec,controlboard:R,toolheads:a.z.array(en).min(1).max(2),size:a.z.number().optional().nullable(),controllerFan:ee,performanceMode:a.z.boolean().default(!1),stealthchop:a.z.boolean().default(!1),standstillStealth:a.z.boolean().default(!1),rails:a.z.array(_.JQ)}).strict(),eb=em.superRefine((e,t)=>{if(null!=e.size){let r=e.printer.sizes??[];r.includes(e.size)||t.addIssue({code:a.z.ZodIssueCode.custom,message:`Size ${e.size} is not a valid size for a ${e.printer.name} config`})}else null!=e.printer.sizes&&e.printer.sizes.length>0&&t.addIssue({code:a.z.ZodIssueCode.custom,message:`Size is required for a ${e.printer.name} config`})}).superRefine((e,t)=>{let r=e.toolheads.map(e=>e.toolboard).filter(Boolean).length;r+e.controlboard.driverCount<e.printer.driverCountRequired&&t.addIssue({code:a.z.ZodIssueCode.too_small,message:`Your combination of controlboard and toolboards do not have enough stepper drivers for a ${e.printer.name} config`,minimum:e.printer.driverCountRequired,inclusive:!0,type:"number"})}).superRefine((e,t)=>{let r=e.toolheads.map(e=>new ToolheadHelper(e)),o=e.rails.map((o,i)=>{let n=r.find(e=>e.getExtruderAxis()===o.axis);if(null!=o.motorSlot){let s=e.rails.filter(e=>{let t=r.find(t=>t.getExtruderAxis()===e.axis);return e.axis!==o.axis&&n?.hasToolboard()==null&&t?.hasToolboard==null&&e.motorSlot===o.motorSlot}),railName=e=>"extruder"===e?"Extruder T0":e===_.po.extruder1?"Extruder T1":"Stepper "+e.toLocaleUpperCase();return 1===s.length?t.addIssue({code:a.z.ZodIssueCode.custom,message:`Motor slot ${o.motorSlot} is already in use on ${railName(s[0].axis)}`,path:["rails",i,"motorSlot"]}):s.length>1&&t.addIssue({code:a.z.ZodIssueCode.custom,message:`Motor slot ${o.motorSlot} is already in use on ${s.slice(0,-1).map(e=>railName(e.axis)).join(", ")} and ${railName(s[s.length-1].axis)}`,path:["rails",i,"motorSlot"]}),s.length>0?{rail:o,conflicts:s}:0}return null}).filter(Boolean);o.length>0&&t.addIssue({code:a.z.ZodIssueCode.custom,message:"Motor slot conflicts detected"})}),ez=em.extend({printer:ec.shape.id,controlboard:C,toolheads:a.z.array(es).min(1).max(2),controllerFan:ee.shape.id,rails:a.z.array(_.Ah)}).strict(),eT=em.extend({toolheads:a.z.array(ea).min(1).max(2)}).strict().partial().optional(),ex=ez.extend({toolheads:a.z.array(el).min(1).max(2)}).strict().partial(),xEndstopOptions=(e,t)=>{let r=[];return t?.toolboard!=null&&r.push({id:"endstop-toolboard",title:"Physical Endstop (toolboard)"}),t?.axis===_.po.x&&(r.push({id:"endstop",title:"Physical Endstop"}),r.push({id:"sensorless",title:"Sensorless Homing"})),r},yEndstopOptions=(e,t)=>[{id:"endstop",title:"Physical Endstop"},{id:"sensorless",title:"Sensorless Homing"}];var eP=r(61618);let getBoardSerialPath=(e,t)=>e.isHost&&"serialPath"in e&&null!=e.serialPath?e.serialPath:"/dev/RatOS/"+getBoardChipId(e,t),getBoardChipId=(e,t)=>{if(e.isHost)throw Error("Cannot get chip ID for a host board");return e.id+(t?`-${t.getSerialSuffix()}`:"")};let ToolheadGenerator=class ToolheadGenerator extends ToolheadHelper{static async fromConfig(e,t,r,o){let i=e.toolboard?await parseBoardPinConfig(e.toolboard):null;return new ToolheadGenerator(e,i,t,r,o)}constructor(e,t,r,o,i){super(e),this.toolboardPins=t,this.controlboardPins=r,this.printer=o,this.size=i}requireControlboardPin(e){if(this.controlboardPins?.[e]==null)throw Error(`Toolhead ${this.getTool()} is configured to use the controlboard for ${e}, but the controlboard does not define a pin with that name.`)}requireToolboardPin(e){if(this.toolboardPins?.[e]==null)throw Error(`Toolhead ${this.getTool()} is configured to use the toolboard for ${e}, but the toolboard does not define a pin with that name.`)}getExtruderToolAxisPinPrefix(){return 0===this.getTool()?"":this.getTool()}getToolheadPin(e,t){let r=e===this.getExtruderAxis()?this.getPinPrefix():"",o=e===_.po.z?"z0":e!==this.getExtruderAxis()?e:null!=this.getToolboard()?"e":"e"+this.getExtruderToolAxisPinPrefix(),i=o+t,n=null;try{n=this.getPinFromAlias(i)}catch(e){n=null}if(null==n)throw Error(`Pin name "${i}" constructed from axis "${e}" and alias "${t}" not found on toolhead ${this.getToolCommand()} with extruder axis ${this.getExtruderAxis()}. Resolved axis alias ${o}. Searched in ${this.getToolboard()?"toolboard":"controlboard"}`);return r+n}getPinFromAlias(e){let t=null;if(this.getToolboard()){if(this.toolboardPins?.[e]!=null)t=this.toolboardPins[e];else throw Error(`Alias "${e}" not found in toolboard pin definition.`)}else this.controlboardPins?.[e]!=null&&(t=this.controlboardPins[e]);if(null!=t)return t;throw Error(`Unknown pin alias ${e}`)}getXEndstopPin(){let e;switch(this.getXEndstop().id){case"endstop":if(this.controlboardPins?.x_endstop_pin==null)throw Error(`Toolhead ${this.getTool()} is configured to use the controlboard for the x endstop, but the controlboard has no x_endstop_pin`);e=this.controlboardPins.x_endstop_pin;break;case"endstop-toolboard":if(this.toolboardPins?.x_endstop_pin==null)throw Error(`Toolhead ${this.getTool()} is configured to use a toolboard for the x endstop, but the toolboard has no x_endstop_pin`);e=this.getPinPrefix()+this.toolboardPins.x_endstop_pin;break;default:throw Error(`Unknown endstop type ${this.getXEndstop().id}`)}return e}getYEndstopPin(){let e;switch(this.getYEndstop().id){case"endstop":if(this.controlboardPins?.y_endstop_pin==null)throw Error(`Toolhead ${this.getTool()} is configured to use the controlboard for the x endstop, but the controlboard has no y_endstop_pin`);e=this.controlboardPins.y_endstop_pin;break;case"endstop-toolboard":if(this.toolboardPins?.y_endstop_pin==null)throw Error(`Toolhead ${this.getTool()} is configured to use a toolboard for the x endstop, but the toolboard has no y_endstop_pin`);e=this.getPinPrefix()+this.toolboardPins.y_endstop_pin;break;default:throw Error(`Unknown endstop type ${this.getXEndstop().id}`)}return e}getPinPrefix(){return this.config.toolboard?`${this.getToolboardName()}:`:""}renderToolboard(){let e=this.toolboardPins,t=this.config.toolboard;if(null==t||null==e)return"";let r=["",exportBoardPinAlias(this.getToolboardName(),e,this.getToolboardName()),"",`[mcu ${this.getToolboardName()}]`,`serial: ${getBoardSerialPath(t,this)}`];return t.hasMcuTempSensor&&(r.push(""),r.push(`[temperature_sensor ${t.name.replace(/\s/g,"_")}_${this.getToolCommand()}]`),r.push("sensor_type: temperature_mcu"),r.push(`sensor_mcu: ${this.getToolboardName()}`)),null!=t.ADXL345SPI&&(r.push(""),r.push(`[adxl345 ${this.getToolboardName()}]`),r.push(`cs_pin: ${this.getPinPrefix()}${t.ADXL345SPI.cs_pin}`),"hardware"in t.ADXL345SPI?r.push(`spi_bus: ${t.ADXL345SPI.hardware.bus}`):(r.push(`spi_software_mosi_pin: ${this.getPinPrefix()}${t.ADXL345SPI.software.mosi}`),r.push(`spi_software_miso_pin: ${this.getPinPrefix()}${t.ADXL345SPI.software.miso}`),r.push(`spi_software_sclk_pin: ${this.getPinPrefix()}${t.ADXL345SPI.software.sclk}`))),null!=t.outputPins&&t.outputPins.forEach(e=>{r.push(""),r.push(`[output_pin ${e.name}]`),r.push(`pin: ${this.getPinPrefix()}${e.pin}`),r.push(`value: ${e.value}`)}),r.join("\n")}renderHotend(){let e=[],t=readInclude(`hotends/${this.getHotend().id}.cfg`);return t=replaceLinesStartingWith(t=stripIncludes(t=stripCommentLines(t)),"[extruder]",`[${this.getExtruderAxis()}]`),t=replaceLinesStartingWith(t,"heater_pin",`heater_pin: ${this.getToolheadPin(this.getExtruderAxis(),"_heater_pin")}`),t=replaceLinesStartingWith(t,"sensor_pin",`sensor_pin: ${this.getToolheadPin(this.getExtruderAxis(),"_sensor_pin")}`),t=(t="PT1000"===this.getThermistor()&&this.getToolboard()?.alternativePT1000Resistor!=null?t.split("\n").some(e=>e.trim().startsWith("pullup_resistor"))?replaceLinesStartingWith(t,"pullup_resistor",`pullup_resistor: ${this.getToolboard()?.alternativePT1000Resistor}`):replaceLinesStartingWith(t,"sensor_type",`sensor_type: ${this.getThermistor()}
pullup_resistor: ${this.getToolboard()?.alternativePT1000Resistor}`):replaceLinesStartingWith(t,"sensor_type",`sensor_type: ${this.getThermistor()}`)).split("\n").some(e=>e.trim().startsWith("nozzle_diameter"))?replaceLinesStartingWith(t,"nozzle_diameter",`nozzle_diameter: ${this.getNozzle().diameter}`):replaceLinesStartingWith(t,`[${this.getExtruderAxis()}]`,`[${this.getExtruderAxis()}]
nozzle_diameter: ${this.getNozzle().diameter}`),e.push(`# ${this.getToolCommand()} ${this.getHotend().title} definition (from RatOS/hotends/${this.getHotend().id}.cfg)`),e.push(t.trim()),e.join("\n")}renderExtruder(){let e=[];e.push(`# ${this.getToolCommand()} ${this.getExtruder().title} definition (from RatOS/extruders/${this.getExtruder().id}.cfg)`);let t=stripCommentLines(stripIncludes(stripDriverSections(readInclude(`extruders/${this.getExtruder().id}.cfg`))));return e.push((t=replaceLinesStartingWith(t,"[extruder]",`[${this.getExtruderAxis()}]`)).trim()),e.join("\n")}renderPartFan(e=!1){let t=[];if(e){let e=`part_fan_${this.getShortToolName()}`;t.push(`[fan_generic ${e}]`)}else t.push("[fan]");switch(this.getPartFan().id){case"2pin":this.requireControlboardPin("fan_part_cooling_pin"),t.push("# 2-pin fan connected to the controller board"),t.push(`pin: ${this.controlboardPins?.fan_part_cooling_pin}`);break;case"4pin":this.requireControlboardPin("fan_part_cooling_pin"),t.push("# 4-pin fan connected to the controller board"),t.push(`pin: !${this.controlboardPins?.fan_part_cooling_pin}`),t.push("cycle_time:  0.00004");break;case"4pin-dedicated":this.requireControlboardPin("4p_fan_part_cooling_pin"),t.push("# 4-pin fan connected to a dedicated 4-pin fan header on the controller board"),t.push(`pin: ${this.controlboardPins?.["4p_fan_part_cooling_pin"]}`),t.push("cycle_time:  0.00004"),this.controlboardPins?.["4p_fan_part_cooling_tach_pin"]!=null&&(t.push(`tachometer_pin: ${this.controlboardPins?.["4p_fan_part_cooling_tach_pin"]}`),t.push("tachometer_poll_interval: 0.0005"));break;case"2pin-toolboard":this.requireToolboardPin("fan_part_cooling_pin"),t.push(`# 2-pin fan connected to the toolboard on T${this.getTool()} (${this.getToolboardName()})`),t.push(`pin: ${this.getPinPrefix()}${this.toolboardPins?.fan_part_cooling_pin}`);break;case"4pin-toolboard":this.requireToolboardPin("fan_part_cooling_pin"),t.push(`# 4-pin fan connected to the toolboard on T${this.getTool()} (${this.getToolboardName()})`),t.push(`pin: !${this.getPinPrefix()}${this.toolboardPins?.fan_part_cooling_pin}`),t.push("cycle_time:  0.00004");break;case"4pin-dedicated-toolboard":this.requireToolboardPin("4p_fan_part_cooling_tach_pin"),t.push(`# 4-pin fan connected to a dedicated 4-pin fan header on the toolboard on T${this.getTool()} (${this.getToolboardName()})`),t.push(`pin: ${this.getPinPrefix()}${this.toolboardPins?.["4p_fan_part_cooling_tach_pin"]}`),t.push("cycle_time:  0.00004"),this.toolboardPins?.["4p_fan_part_cooling_tach_pin"]!=null&&(t.push(`tachometer_pin: ${this.toolboardPins?.["4p_fan_part_cooling_tach_pin"]}`),t.push("tachometer_poll_interval: 0.0005"));break;default:throw Error(`Unsupported part cooling fan option "${this.getHotendFan().title}"`)}return t.join("\n")}renderHotendFan(){let e=[`[heater_fan toolhead_cooling_fan${this.getTool()>0?`_${this.getShortToolName()}`:""}]`,`heater: ${this.getExtruderAxis().toLocaleLowerCase()}`];switch(this.getHotendFan().id){case"2pin":this.requireControlboardPin("fan_toolhead_cooling_pin"),e.push("# 2-pin fan connected to the controller board"),e.push(`pin: ${this.controlboardPins?.fan_toolhead_cooling_pin}`);break;case"4pin":this.requireControlboardPin("fan_toolhead_cooling_pin"),e.push("# 4-pin fan connected to the controller board"),e.push(`pin: !${this.controlboardPins?.fan_toolhead_cooling_pin}`),e.push("cycle_time:  0.00004");break;case"4pin-dedicated":this.requireControlboardPin("4p_fan_part_cooling_tach_pin"),e.push("# 4-pin fan connected to a dedicated 4-pin fan header on the controller board"),e.push(`pin: ${this.controlboardPins?.["4p_fan_part_cooling_tach_pin"]}`),e.push("cycle_time:  0.00004"),this.controlboardPins?.["4p_fan_part_cooling_tach_pin"]!=null&&(e.push(`tachometer_pin: ^${this.controlboardPins?.["4p_fan_part_cooling_tach_pin"]}`),e.push("tachometer_poll_interval: 0.0005"));break;case"2pin-toolboard":this.requireToolboardPin("fan_toolhead_cooling_pin"),e.push(`# 2-pin fan connected to the toolboard on T${this.getTool()} (${this.getToolboardName()})`),e.push(`pin: ${this.getPinPrefix()}${this.toolboardPins?.fan_toolhead_cooling_pin}`);break;case"4pin-toolboard":this.requireToolboardPin("fan_toolhead_cooling_pin"),e.push(`# 4-pin fan connected to the toolboard on T${this.getTool()} (${this.getToolboardName()})`),e.push(`pin: !${this.getPinPrefix()}${this.toolboardPins?.fan_toolhead_cooling_pin}`),e.push("cycle_time:  0.00004");break;case"4pin-dedicated-toolboard":this.requireToolboardPin("4p_toolhead_cooling_pin"),e.push(`# 4-pin fan connected to a dedicated 4-pin fan header on the toolboard on T${this.getTool()} (${this.getToolboardName()})`),e.push(`pin: ${this.getPinPrefix()}${this.toolboardPins?.["4p_toolhead_cooling_pin"]}`),e.push("cycle_time:  0.00004"),this.toolboardPins?.["4p_toolhead_cooling_tach_pin"]!=null&&(e.push(`tachometer_pin: ^${this.toolboardPins?.["4p_toolhead_cooling_tach_pin"]}`),e.push("tachometer_poll_interval: 0.0005"));break;default:throw Error(`Unsupported hotend fan option "${this.getHotendFan().title}"`)}return e.join("\n")}renderToolheadMacro(){let e=null;if(this.getMotionAxis()===_.po.x)e=this.printer.bedMargin.x[0]+5;else if(this.getMotionAxis()===_.po.dual_carriage){if(null==this.size)throw Error("Can't render T1 toolhead macro variables without an explicitly defined printer size");e=this.size+this.printer.bedMargin.x[1]-5}if(null==e||isNaN(e))throw Error(`Failed to generate parking position for toolhead ${this.getToolCommand()}`);let t=[`[gcode_macro ${this.getToolCommand()}]`,`variable_active: ${0===this.getTool()?"True":"False"}`,`variable_color: "${0===this.getTool()?"7bff33":"0ea5e9"}"              # Used in frontends`,`variable_hotend_type: "${this.getHotend().flowType.toUpperCase()}"`,`variable_has_cht_nozzle: ${"CHT"===this.getNozzle().type?"True":"False"}`,"variable_enable_extruder_test: True","variable_cooling_position_to_nozzle_distance: 40 # heatbreak length from cold zone to nozzle","variable_tooolhead_sensor_to_extruder_gear_distance: 15 # distance in mm from the sensor to the extruder gear","variable_extruder_gear_to_cooling_position_distance: 30 # distance in mm from the extruder gear to the end of the hotend cold zone","variable_filament_loading_nozzle_offset: -5","variable_filament_grabbing_length: 5","variable_filament_grabbing_speed: 1","variable_extrude_after_load: 0","variable_extrude_before_unload: 0","variable_extruder_load_speed: 60","variable_filament_load_speed: 10"];return"hybrid-corexy-idex"==this.printer.kinematics&&t.push(`variable_loading_position: ${0===this.getTool()?e+25:e-25} # filament load x position`,`variable_parking_position: ${e} # parking x position`),t.push("gcode:",`	{% set x = params.X|default(-1.0)|float %}`,`	{% set y = params.Y|default(-1.0)|float %}`,`	{% set z = params.Z|default(0.0)|float %}`,`	{% set s = params.S|default(1)|int %}`,`	_SELECT_TOOL T=${this.getTool()} X={x} Y={y} Z={z} TOOLSHIFT={s}`),t.join("\n")}};let constructKlipperConfigUtils=async e=>{let t=e.toolheads.reduce((e,t)=>e+(t.toolboard?.driverCount??0),0),r=null!=e.controlboard.extruderlessConfig?1:0,o=e.printer.driverCountRequired>e.controlboard.driverCount,i=await parseBoardPinConfig(e.controlboard,o),n=await Promise.all(e.toolheads.map(async t=>{if(null==t.toolboard&&o)throw Error("A toolboard is required when using an extruderless controlboard configuration (your controlboard alone does not have enough drivers for this printer). Please add a toolboard to your configuration.");return await ToolheadGenerator.fromConfig(t,i,e.printer,e.size)}));return{extruderLessConfigBonus:r,isExtruderlessBoard:o,toolboardDriverCount:t,getControlboardPins:()=>({...i}),requireControlboardPin(e){if(null==this.getControlboardPins()[e])throw Error(`The controlboard has no "${e}" defined in its config.`)},isExtruderToolheadAxis:e=>n.some(t=>t.getExtruderAxis()===e),getToolhead:e=>{let t="number"==typeof e?n.find(t=>t.getTool()===e):n.find(t=>t.getExtruderAxis()===e||t.getMotionAxis()===e);if(null==t)throw Error(`No toolhead found for tool/axis ${e}`);return t},renderCommentHeader(e,t){let r="------------------------------------------------------------------------------------------------------------",o=(r.length-e.length-2)/2,i=`#${"-".repeat(Math.floor(o))} ${e} ${"-".repeat(Math.ceil(o))}`;return[i,...t,`#${r}`]},getToolheads:()=>n.slice(),getRail(t){let r=e.rails.find(e=>e.axis===t);if(null==r)throw Error(`No rail found for axis ${t}`);return r},getAxisPin(t,r){let o=(t===_.po.z?"z0":t)+r,n=null;if(this.isExtruderToolheadAxis(t))n=this.getToolhead(t).getToolheadPin(t,r);else{let a=this.getRail(t),s=r.startsWith("_")?r.substring(1):r;if(null!=e.controlboard.motorSlots&&null!=a.motorSlot&&s in e.controlboard.motorSlots[a.motorSlot]){if(null==(n=e.controlboard.motorSlots[a.motorSlot][s]))throw Error(`Motor slot was selected, but pin ${s} wasn't found in motor slot config.`)}else n=i[o]}if(null==n)throw Error(`Pin name "${o}" constructed from axis "${t}" and alias "${r}" not found in board pin configs.`);return n},getAxisStepperName:e=>e===_.po.extruder?"extruder":e===_.po.extruder1?"extruder1":e===_.po.dual_carriage?"dual_carriage":"stepper_"+e,getAxisDriverType(e){return this.getRail(e).driver.type.toLowerCase()},getAxisDriverVariables(t,r=!1,o=[]){let i=e.rails.filter(e=>(r?e.axis.startsWith(t):e.axis===t)||o.includes(e.axis)),n=[];return n.push(`variable_${t}_driver_types: [${i.map(e=>`"${e.driver.type.toLowerCase()}"`).join(", ")}]`),n.push(`variable_${t}_axes: [${i.map(e=>`"${e.axis}"`).join(", ")}]`),n.join("\n")},isSensorless:e=>n.find(t=>t.getMotionAxis()===e)?.getXEndstop().id==="sensorless"||e===_.po.y&&n.some(e=>"sensorless"===e.getYEndstop().id),getAxisHomingSpeed(e){let t=this.getRail(e),r=this.isSensorless(e)?50:t.homingSpeed;return r},getAxisDriverSectionName(e){return`${this.getAxisDriverType(e)} ${this.getAxisStepperName(e)}`},getAxisVirtualEndstop(e){return`${this.getAxisDriverType(e)}_${this.getAxisStepperName(e)}:virtual_endstop`},getAxisDriverStallGuardThreshold(e,t){let r=this.getRail(e);return(t=Math.max(0,Math.min(1,t)),["TMC2130","TMC5160","TMC2240"].includes(r.driver.type))?`driver_SGT: ${Math.round(127*t)-64} # Lower value = higher sensitity, range -64 to 63`:`driver_SGTHRS: ${Math.round(255*t)} # Lower value = lower sensitivity, range 0 to 255`},getAxisDriverDiagConfig(e){return"UART"===this.getRail(e).driver.protocol?`diag_pin: ^${this.getAxisPin(e,"_diag_pin")}`:"SPI"===this.getRail(e).driver.protocol?`diag1_pin: ^!${this.getAxisPin(e,"_diag_pin")}`:""},getAxisDriverHomingCurrent(e,t){let r=this.getRail(e);return t=Math.max(0,Math.min(1,t)),.71*r.stepper.maxPeakCurrent*t},getExtruderPinPrefix(e=0){let t=this.getToolhead(e);if(null==t)throw Error(`No toolhead found for tool ${e}`);return t.getPinPrefix()},formatInlineComments(e,t="#"){let r=e.reduce((e,r)=>Math.max(e,r.substring(0,r.indexOf(t)).trim().length),0);return e.map(e=>{let o=e.indexOf(t),i=e.lastIndexOf(t);if((-1===o||e.trim().startsWith(t))&&i===o)return e;o!==i&&(o=e.indexOf(t,o+1));let n=e.substring(o),a=e.substring(0,o).trim(),s=r-a.length+2;return a+" ".repeat(s)+" "+n})}}},constructKlipperConfigExtrasGenerator=(e,t)=>{let r=[],o=[];return{getFilesToWrite:()=>r.slice(),addFileToRender(e){r.push(e)},getReminders:()=>o.slice(),generateSaveVariables(){let e=f.serverSchema.parse(process.env);return[{fileName:"ratos-variables.cfg",content:"[Variables]\nidex_applied_offset = 1\nidex_xcontrolpoint = 150.0\nidex_xoffset = 0.0\nidex_ycontrolpoint = 50.0\nidex_yoffset = 0.0\nidex_zcontrolpoint = 50.0\nidex_zoffset = 0.0\nidex_zoffsetcontrolpoint = 25.0",overwrite:!1}].map(t=>(this.addFileToRender(t),`[save_variables]
filename: ${u().join(e.KLIPPER_CONFIG_PATH,t.fileName)}`))},generateSensorlessHomingIncludes(){let r=[];if(t.isSensorless(_.po.x)&&r.push({fileName:"sensorless-homing-x.cfg",content:(0,eP.i)(e,t),overwrite:!1}),t.isSensorless(_.po.y)&&r.push({fileName:"sensorless-homing-y.cfg",content:(0,eP.E)(e,t),overwrite:!1}),r.length>0){let e=[];e.push("# REMEMBER TO TUNE SENSORLESS HOMING BEFORE ATTEMPTING TO PRINT!"),e.push("# You'll find instructions in the generated sensorless-homing-*.cfg file(s),","# where you should keep your sensorless homing settings."),this.addReminder(e.join("\n"))}return r.map(e=>(this.addFileToRender(e),`[include ${e.fileName}]`)).join("\n")},addReminder(e){o.push(e)}}},constructKlipperConfigHelpers=async(e,t,r)=>({...r,renderToolboards:()=>r.getToolheads().map(e=>e.renderToolboard()).join("\n"),renderControlboard(){let t=["",exportBoardPinAlias(e.controlboard.id,r.getControlboardPins()),"","[mcu]",`serial: ${getBoardSerialPath(e.controlboard)}`];return e.controlboard.hasMcuTempSensor&&(t.push(""),t.push(`[temperature_sensor ${e.controlboard.name.replace(/\s/g,"_")}]`),t.push("sensor_type: temperature_mcu")),null!=e.controlboard.ADXL345SPI&&(t.push(""),t.push("[adxl345 controlboard]"),t.push(`cs_pin: ${e.controlboard.ADXL345SPI.cs_pin}`),"hardware"in e.controlboard.ADXL345SPI?t.push(`spi_bus: ${e.controlboard.ADXL345SPI.hardware.bus}`):(t.push(`spi_software_mosi_pin: ${e.controlboard.ADXL345SPI.software.mosi}`),t.push(`spi_software_miso_pin: ${e.controlboard.ADXL345SPI.software.miso}`),t.push(`spi_software_sclk_pin: ${e.controlboard.ADXL345SPI.software.sclk}`))),null!=e.controlboard.outputPins&&e.controlboard.outputPins.forEach(e=>{t.push(""),t.push(`[output_pin ${e.name}]`),t.push(`pin: ${e.pin}`),t.push(`value: ${e.value}`)}),t.join("\n")},renderBoards(){if(e.printer.driverCountRequired>e.controlboard.driverCount&&e.controlboard.driverCount+r.toolboardDriverCount+r.extruderLessConfigBonus<e.printer.driverCountRequired)throw Error("Your control and toolboard combination does not make up enough drivers for this printer.");let t=["[include RatOS/boards/rpi/config.cfg]",this.renderControlboard(),this.renderToolboards()];return t.join("\n")},renderStepperSections(){return e.rails.map(e=>this.renderStepperSection(e)).join("\n")},getMotorComments(t){let o="object"==typeof t?t:e.rails.find(e=>e.axis===t);if(null==o)throw Error(`No rail found for axis ${t}`);let i=[`# ${o.axisDescription}`];if(o.motorSlot&&e.controlboard.motorSlots)i.push(`# Connected to ${e.controlboard.motorSlots[o.motorSlot].title} on ${e.controlboard.name}`);else if(this.isExtruderToolheadAxis(o.axis)){let t=r.getToolhead(o.axis);if(null==t)throw Error(`No toolhead found for ${o.axis}`);i.push(`# Connected to ${(t.getToolboard()||e.controlboard).name}`)}return r.renderCommentHeader(o.axis.toUpperCase(),i)},renderMotorSections(){let t=e.rails.map(e=>this.getMotorComments(e).join("\n")+"\n"+this.renderDriverSection(e,!0)+"\n"+this.renderStepperSection(e,!0));return t.push(this.renderBoardQuirks()),t.join("\n")},renderStepperSection(t,o=!1){let i="object"==typeof t?t:e.rails.find(e=>e.axis===t);if(null==i)throw Error(`No rail found for axis ${t}`);let n=o?[]:this.getMotorComments(i);if(n.push(`[${r.getAxisStepperName(i.axis)}]`,`step_pin: ${r.getAxisPin(i.axis,"_step_pin")}`,`dir_pin: ${r.getAxisPin(i.axis,"_dir_pin")}`,`enable_pin: !${r.getAxisPin(i.axis,"_enable_pin")}`,`microsteps: ${i.microstepping}`),i.axis===_.po.extruder||i.axis===_.po.extruder1){let e=r.getToolhead(i.axis);if(null==e)throw Error(`No toolhead found for ${i.axis}`);n.push(`rotation_distance: ${q(e.getExtruder().id)}`)}else n.push(`rotation_distance: ${i.rotationDistance}`);if(i.axis===_.po.z&&n.push("position_min: -5"),[_.po.x,_.po.y,_.po.z,_.po.dual_carriage].includes(i.axis)&&n.push(`homing_speed: ${this.getAxisHomingSpeed(i.axis)}`),null!=i.gearRatio&&n.push(`gear_ratio: ${i.gearRatio}`),i.axis===_.po.z){let t=e.toolheads.find(e=>null!=e.probe);t?.probe!=null&&n.push("endstop_pin: probe:z_virtual_endstop")}return n.join("\n")+"\n"},renderUserStepperSections(t){return this.formatInlineComments(e.rails.map(e=>{let r=t[e.axis],{directionInverted:o,rotationComment:i,additionalLines:n}=r??{},a=null!=r&&"limits"in r?r.limits:null,s=null!=r&&"safeDistance"in r?r.safeDistance:void 0;return this.renderUserStepperSection(e.axis,o,a,s,i,n)}).join("\n").split("\n")).join("\n")},renderUserStepperSection(t,o=!1,i,n,a,s){let l="object"==typeof t?t:e.rails.find(e=>e.axis===t);if(null==l)throw Error(`No rail found for axis ${t}`);let d=o?`# Remove ! in front of pin name to reverse the direction of ${r.getAxisStepperName(l.axis)}`:`# Add ! in front of pin name to reverse the direction of ${r.getAxisStepperName(l.axis)}`,p=this.getMotorComments(l).concat([`[${r.getAxisStepperName(l.axis)}]`,`dir_pin: ${o?"!":""}${r.getAxisPin(l.axis,"_dir_pin")} ${d}`]);if(l.axis===_.po.extruder||l.axis===_.po.extruder1){let e=r.getToolhead(l.axis);if(null==e)throw Error(`No toolhead found for ${l.axis}`);p.push(`rotation_distance: ${q(e.getExtruder().id)} # ${e.getExtruder().title} default`)}else p.push(`rotation_distance: ${l.rotationDistance} ${a?`# ${a}`:""}`);if([_.po.x,_.po.y,_.po.z].includes(l.axis)&&p.push(`homing_speed: ${this.getAxisHomingSpeed(l.axis)}`),i){let t=l.axis!==_.po.y?e.printer.bedMargin.x[0]:e.printer.bedMargin.y[0],r=l.axis!==_.po.y?e.printer.bedMargin.x[1]:e.printer.bedMargin.y[1];Object.entries("function"==typeof i?i({min:t,max:r}):i).forEach(([e,t])=>{p.push(`position_${e}: ${l.axis===_.po.z&&"min"===e?Math.min(t,-5):t}`)})}return n&&p.push(`safe_distance: ${n}`),null!=s&&p.push(...s),p.join("\n")+"\n"},renderDriverSections(){let t=e.rails.map(e=>this.renderDriverSection(e));return t.push(this.renderBoardQuirks()),t.join("\n")},renderDriverSection(t,o=!1){let i="object"==typeof t?t:e.rails.find(e=>e.axis===t);if(null==i)throw Error(`No rail found for axis ${t}`);let n=findPreset(i.stepper,i.driver,i.voltage,i.current),a=o?[]:this.getMotorComments(i);if(a.push(`[${r.getAxisDriverSectionName(i.axis)}]`,`stealthchop_threshold: ${e.stealthchop?"9999999":e.standstillStealth?"1":"0"}`,`interpolate: ${i.microstepping<64||e.stealthchop?"True":"False"}`),"UART"===i.driver.protocol){if(i.motorSlot){let t=e.controlboard.motorSlots?.[i.motorSlot];if(null==t||!hasUART(e.controlboard.motorSlots?.[i.motorSlot]))throw Error(`No controlboard motor slot UART pins defined for motor slot ${i.motorSlot}`);Object.entries(x.parse(t)).forEach(([e,t])=>{a.push(`${e}: ${t}`)})}else a.push(`uart_pin: ${r.getAxisPin(i.axis,"_uart_pin")}`)}if("SPI"===i.driver.protocol){if(i.motorSlot){let t=e.controlboard.motorSlots?.[i.motorSlot];if(null==t||!hasSPI(e.controlboard.motorSlots?.[i.motorSlot]))throw Error(`No controlboard motor slot SPI pins defined for motor slot ${i.motorSlot}`);Object.entries(P.parse(t)).forEach(([e,t])=>{a.push(`${e}: ${t}`)})}else a.push(`cs_pin: ${r.getAxisPin(i.axis,"_uart_pin")}`),null!=e.controlboard.stepperSPI?"hardware"in e.controlboard.stepperSPI?a.push(`spi_bus: ${e.controlboard.stepperSPI.hardware.bus}`):(a.push(`spi_software_mosi_pin: ${e.controlboard.stepperSPI.software.mosi}`),a.push(`spi_software_miso_pin: ${e.controlboard.stepperSPI.software.miso}`),a.push(`spi_software_sclk_pin: ${e.controlboard.stepperSPI.software.sclk}`)):(a.push("spi_software_mosi_pin: stepper_spi_mosi_pin"),a.push("spi_software_miso_pin: stepper_spi_miso_pin"),a.push("spi_software_sclk_pin: stepper_spi_sclk_pin"))}if(n){let{driver:e,voltage:t,...r}=n;Object.entries(r).forEach(([e,t])=>{a.push(`${e}: ${t}`)})}else a.push(`run_current: ${i.current}`);return a.join("\n")+"\n"},renderSpeedLimits(){let t=e.performanceMode&&e.printer.speedLimits.performance?e.printer.speedLimits.performance:e.printer.speedLimits.basic;return`[printer]
max_velocity: ${e.stealthchop?"135":t.velocity}
max_accel: ${t.accel/(e.stealthchop?2:1)}
max_accel_to_decel: ${t.accel/(e.stealthchop?4:2)}
max_z_velocity: ${t.z_velocity}
max_z_accel: ${t.z_accel}
square_corner_velocity: ${t.square_corner_velocity}

[gcode_macro RatOS]
variable_macro_travel_speed: ${this.getMacroTravelSpeed()}
variable_macro_travel_accel: ${this.getMacroTravelAccel()}`},getMacroTravelSpeed(){let t=e.performanceMode&&e.printer.speedLimits.performance?e.printer.speedLimits.performance:e.printer.speedLimits.basic;return e.stealthchop?"135":t.travel_velocity},getMacroTravelAccel(){let t=e.performanceMode&&e.printer.speedLimits.performance?e.printer.speedLimits.performance:e.printer.speedLimits.basic;return e.stealthchop?"1000":t.travel_accel},renderBoardQuirks(){let t=[];return e.controlboard.hasQuirksFiles&&(t.push("# Include controlboard quirk file"),null!=r.getToolhead(_.po.extruder)?t.push(`[include RatOS/boards/${e.controlboard.id}/quirks-toolboard.cfg]`):t.push(`[include RatOS/boards/${e.controlboard.id}/quirks.cfg]`)),r.getToolheads().forEach(e=>{let r=e.getToolboard();r?.hasQuirksFiles&&(t.push("# Include toolboard quirk file"),t.push(`[include RatOS/boards/${r.id}/quirks.cfg]`))}),t.join("\n")},renderHotend(){return this.getToolheads().map(e=>e.renderHotend()).join("\n")},renderExtruder(){return this.getToolheads().map(e=>e.renderExtruder()).join("\n")},renderInputShaper(e){let t=[];t.push("[resonance_tester]");let r=this.getToolhead(_.po.x);return t.push(`accel_chip_x: adxl345 ${r.getXAccelerometerName()}`),t.push(`accel_chip_y: adxl345 ${r.getYAccelerometerName()}`),t.push("probe_points:"),t.push(`	${e/2},${e/2},20`),t.join("\n")},renderProbeIncludes(){let e=[],t=this.getToolheads().find(e=>null!=e.getProbe());return t&&e.push(`[include RatOS/z-probe/${t.getProbe()?.id+".cfg"}]`),e.push(this.renderProbePinSection(!0)),e.join("\n")},renderProbePinSection(e=!1){let r=[],o=this.getToolheads().find(e=>null!=e.getProbe());if(o)switch(o.getProbe()?.id){case"bltouch":let i=o.getPinPrefix()+(e?o.getPinFromAlias("bltouch_control_pin"):"bltouch_control_pin"),n=o.getPinPrefix()+(e?o.getPinFromAlias("bltouch_sensor_pin"):"bltouch_sensor_pin");r.push("# BLTouch configuration"),r.push("[bltouch]"),r.push("control_pin: "+i),r.push("sensor_pin: ^"+n),e||r.push("z_offset: 0");break;case"beacon":if(!e){let e=[];e.push("# REMEMBER TO CALIBRATE YOUR BEACON!"),e.push("# Follow along from step 6 in the official beacon guide https://docs.beacon3d.com/quickstart/#6-calibrate-beacon"),t.addReminder(e.join("\n"))}break;default:let a=o.getPinPrefix()+(e?o.getPinFromAlias("probe_pin"):"probe_pin");r.push("# Probe configuration"),r.push("[probe]"),e||r.push("z_offset: 0.0 # Will be commented out after a successful PROBE_CALIBRATE and SAVE_CONFIG"),r.push(`pin: ^${a}# For NPN NC probes such as the Super Pinda / Vinda / SupCR / Decoprobe probes.`),e||(r.push(`#pin: ^!${a} # NPN NO (refer to the specs of your probe)`),r.push(`#pin: ${a} # PNP NO (refer to the specs of your probe)`),r.push(`#pin: !${a} # PNP NC (refer to the specs of your probe)`))}return r.join("\n")},renderEndstopSection(o){let i=[],n=this.getToolheads(),a="sensorless";if(n.forEach(e=>{if("sensorless"!==e.getXEndstop().id&&(i.push(""),i.push("# Physical X endstop configuration"),i.push(`[${e.getMotionStepperName()}]`),i.push(`endstop_pin: ${e.getXEndstopPin()}`),i.push("[gcode_macro RatOS]"),i.push('variable_homing_x: "endstop"')),"sensorless"!==e.getYEndstop().id){if("sensorless"==a)a=e.getYEndstopPin();else if(a!==e.getYEndstopPin())throw Error("Multiple toolheads configured with different y endstops is currently not supported.")}}),"sensorless"!==a&&(i.push(""),i.push("# Physical Y endstop configuration"),i.push("[stepper_y]"),i.push(`endstop_pin: ${a}`),i.push("[gcode_macro RatOS]"),i.push('variable_homing_y: "endstop"')),n.some(e=>"sensorless"===e.getXEndstop().id||"sensorless"===e.getYEndstop().id)){let n=e.printer.defaults.rails.find(e=>e.axis===_.po.x),a=e.printer.defaults.rails.find(e=>e.axis===_.po.dual_carriage),s=e.printer.defaults.rails.find(e=>e.axis===_.po.y);i.push(""),n&&s&&null!=o&&(0,_.R_)(r.getRail(_.po.x),deserializePrinterRailDefinition(n),e.performanceMode)&&(0,_.R_)(r.getRail(_.po.y),deserializePrinterRailDefinition(s),e.performanceMode)&&(null==a||(0,_.R_)(r.getRail(_.po.dual_carriage),deserializePrinterRailDefinition(a),e.performanceMode))?i.push(`[include ${o}]`):i.push(t.generateSensorlessHomingIncludes())}return this.getToolheads().every(e=>null==e.getProbe())&&(i.push(""),i.push("# Physical Z endstop configuration"),i.push("[stepper_z]"),i.push("pin: z_endstop_pin"),i.push("position_endstop: -0.1"),i.push("second_homing_speed: 3.0"),i.push("homing_retract_dist: 3.0")),i.join("\n")},renderMacroVariableOverrides(t){let o=[`variable_bed_margin_x: [${e.printer.bedMargin.x[0]}, ${e.printer.bedMargin.x[1]}]`,`variable_bed_margin_y: [${e.printer.bedMargin.y[0]}, ${e.printer.bedMargin.y[1]}]`],i=this.getToolheads(),n=i.some(e=>e.getMotionAxis()===_.po.dual_carriage);if(n){let e=i.find(e=>null!=e.getProbe())?.getTool();o.push(`variable_default_toolhead: ${e}                             # the toolhead with the z-probe, 0=left 1=right toolhead`);let t=this.getToolhead(0).getXAccelerometerName(),r=this.getToolhead(1).getXAccelerometerName();o.push(`variable_adxl_chip: ["${t}", "${r}"]           # toolheads adxl chip names`),o.push(`variable_toolchange_travel_speed: ${this.getMacroTravelSpeed()}     # parking travel speed`),o.push(`variable_toolchange_travel_accel: ${this.getMacroTravelAccel()}     # parking travel accel`),o.push("variable_shaper_x_freq: [0, 0, 0, 0]                    # shaper frequency [T0, T1, COPY, MIRROR]"),o.push("variable_shaper_y_freq: [0, 0, 0, 0]                    # shaper frequency [T0, T1, COPY, MIRROR]"),o.push('variable_shaper_x_type: ["mzv", "mzv", "mzv", "mzv"]    # shaper frequency algorythm [T0, T1, COPY, MIRROR]'),o.push('variable_shaper_y_type: ["mzv", "mzv", "mzv", "mzv"]    # shaper frequency algorythm [T0, T1, COPY, MIRROR]')}return o.push(r.getAxisDriverVariables(_.po.x,"hybrid-corexy"!==e.printer.kinematics)),o.push(r.getAxisDriverVariables(_.po.y,!0,"hybrid-corexy"===e.printer.kinematics?[_.po.x1]:[])),o.push(r.getAxisDriverVariables(_.po.z,!0)),this.formatInlineComments(o).join("\n")},renderSaveVariables:()=>t.generateSaveVariables().join("\n"),renderUserMacroVariableOverrides(e){let t=[`variable_macro_travel_speed: ${this.getMacroTravelSpeed()}`,`variable_macro_travel_accel: ${this.getMacroTravelAccel()}`],r=this.getToolheads(),o=r.some(e=>e.getMotionAxis()===_.po.dual_carriage);return o&&(t.push(`variable_toolchange_travel_speed: ${this.getMacroTravelSpeed()}     # parking travel speed`),t.push(`variable_toolchange_travel_accel: ${this.getMacroTravelAccel()}     # parking travel accel`),t.push("variable_shaper_x_freq: [0, 0, 0, 0]                    # shaper frequency [T0, T1, COPY, MIRROR]"),t.push("variable_shaper_y_freq: [0, 0, 0, 0]                    # shaper frequency [T0, T1, COPY, MIRROR]"),t.push('variable_shaper_x_type: ["mzv", "mzv", "mzv", "mzv"]    # shaper frequency algorythm [T0, T1, COPY, MIRROR]'),t.push('variable_shaper_y_type: ["mzv", "mzv", "mzv", "mzv"]    # shaper frequency algorythm [T0, T1, COPY, MIRROR]')),this.formatInlineComments(t).join("\n")},renderControllerFan(){let t=[];if("none"===e.controllerFan.id)return t.push("# No controller fan configured"),t.join("\n");switch(t.push("[controller_fan controller_fan]"),e.controllerFan.id){case"2pin":this.requireControlboardPin("fan_controller_board_pin"),t.push("# 2-pin fan connected to the controller board"),t.push(`pin: ${this.getControlboardPins().fan_controller_board_pin}`);break;case"4pin":this.requireControlboardPin("fan_controller_board_pin"),t.push("# 4-pin fan connected to the controller board"),t.push(`pin: !${this.getControlboardPins().fan_controller_board_pin}`),t.push("cycle_time:  0.00004");break;case"4pin-dedicated":this.requireControlboardPin("4p_fan_part_cooling_tach_pin"),t.push("# 4-pin fan connected to a dedicated 4-pin fan header on the controller board"),t.push(`pin: ${this.getControlboardPins()["4p_fan_part_cooling_tach_pin"]}`),t.push("cycle_time:  0.00004"),null!=this.getControlboardPins()["4p_fan_part_cooling_tach_pin"]&&(t.push(`tachometer_pin: ^${this.getControlboardPins()["4p_fan_part_cooling_tach_pin"]}`),t.push("tachometer_poll_interval: 0.0005"));break;default:throw Error(`Unsupported controller fan option "${e.controllerFan.title}"`)}return t.join("\n")},renderFans(){let e=[],t=this.getToolheads().filter(e=>e.getPartFan()).length>1;return e.push("# Part cooling fan"),t&&(e.push("# Multiple toolheads with part cooling fans configured"),e.push("# [fan] will use an unused io pin, proxy m106 settings to active toolhead via macro."),e.push("[fan]"),e.push("pin: rpi:gpio4         # sacrifical part fan, use this to independently control your both toolhead part fans")),e.push(this.getToolheads().map(e=>e.renderPartFan(t)).join("\n")),e.push(""),e.push("# Hotend cooling fan"),e.push(this.getToolheads().map(e=>e.renderHotendFan()).join("\n")),e.push(""),e.push("# Controller cooling fan"),e.push(this.renderControllerFan()),e.join("\n")},renderBase:()=>"[include RatOS/homing.cfg]\n[include RatOS/macros.cfg]\n[include RatOS/shell-macros.cfg]",renderReminders:()=>t.getReminders().join("\n"),renderMacros(){return this.formatInlineComments(this.getToolheads().flatMap(e=>e.renderToolheadMacro().split("\n"))).join("\n")},uncommentIf:e=>!0===e?"":"#"}),partFanOptions=(e,t)=>{let r=[];return(null==t||t?.axis===_.po.x||t?.axis===null)&&(r.push({id:"2pin",title:"2-pin fan"}),r.push({id:"4pin",title:"4-pin fan"})),e?.controlboard?.fourPinFanConnectorCount!=null&&e.controlboard.fourPinFanConnectorCount>0&&r.push({id:"4pin-dedicated",title:"4-pin fan (dedicated 4-pin header)"}),t?.toolboard!=null&&(r.push({id:"2pin-toolboard",title:"2-pin toolboard fan"}),r.push({id:"4pin-toolboard",title:"4-pin toolboard fan"}),t?.toolboard.fourPinFanConnectorCount!=null&&t.toolboard.fourPinFanConnectorCount>0&&r.push({id:"4pin-dedicated-toolboard",title:"4-pin fan (dedicated 4-pin header on toolboard)"})),r},hotendFanOptions=(e,t)=>{let r=[];return(null==t||t?.axis===_.po.x)&&(r.push({id:"2pin",title:"2-pin fan"}),r.push({id:"4pin",title:"4-pin fan"})),(e?.controlboard?.fourPinFanConnectorCount!=null&&e.controlboard.fourPinFanConnectorCount>2||e?.controlboard?.fourPinFanConnectorCount!=null&&e.controlboard.fourPinFanConnectorCount>1&&e.controllerFan?.id!=="4pin-dedicated")&&r.push({id:"4pin-dedicated",title:"4-pin fan (dedicated 4-pin header)"}),t?.toolboard!=null&&(r.push({id:"2pin-toolboard",title:"2-pin toolboard fan"}),r.push({id:"4pin-toolboard",title:"4-pin toolboard fan"}),t?.toolboard.fourPinFanConnectorCount!=null&&t.toolboard.fourPinFanConnectorCount>0&&r.push({id:"4pin-dedicated-toolboard",title:"4-pin fan (dedicated 4-pin header on toolboard)"})),r},controllerFanOptions=(e,t)=>{let r=[{id:"2pin",title:"2-pin fan"},{id:"4pin",title:"4-pin fan"}];return(e?.controlboard?.fourPinFanConnectorCount!=null&&e.controlboard.fourPinFanConnectorCount>2||e?.controlboard?.fourPinFanConnectorCount!=null&&e.controlboard.fourPinFanConnectorCount>1&&t?.some(e=>e?.hotendFan?.id!=="4pin-dedicated"))&&r.push({id:"4pin-dedicated",title:"4-pin fan (dedicated 4-pin header)"}),r.push({id:"none",title:"No fan"}),r};var ey=r(56368);let runSudoScript=(e,...t)=>{let r=(0,I.xg)();return new Promise((o,i)=>{try{let n=(0,l.spawn)("sudo",[u().join(r,e),...t]),a="",s="";n.stdout.on("data",e=>{a+=e}),n.stderr.on("data",e=>{s+=e}),n.on("error",e=>{i(e)}),n.on("exit",e=>{0===e?o({stdout:a,stderr:s}):i("An error occured while attempting to run script: \n"+a+"\n"+s)}),n.on("close",e=>{0===e?o({stderr:s,stdout:a}):i(s)})}catch(e){if(e instanceof Error)return i(e.message);i("An error occured while attempting to run script")}})};var ev=r(79068),eC=r(54230),eS=r(73292);let ew=f.serverSchema.parse(process.env),eE=u().join(ew.RATOS_DATA_DIR,"last-printer-settings.json"),getLastPrinterSettings=async(e,t)=>{let r=e??eE;if(!(0,d.existsSync)(r))throw Error("Couldn't find printer settings file: "+r);return t?await readSerializedConfig(r):await loadSerializedConfig(r)},savePrinterSettings=async e=>await (0,eS.writeFile)(u().join(ew.RATOS_DATA_DIR,"last-printer-settings.json"),JSON.stringify(e)),hasLastPrinterSettings=()=>(0,d.existsSync)(eE),e$=a.z.object({boardPath:a.z.string().optional(),toolhead:es.optional()}),detect=(e,t)=>p().existsSync(getBoardSerialPath(e,t)),getBoards=async()=>{let e=D.get("boards");if(null!=e&&e.length>0)return e.map(e=>(e.detected=detect(e),e));let t=await (0,eC.glob)(`${process.env.RATOS_CONFIGURATION_PATH}/boards/*/board-definition.json`),r=t.map(e=>""===e.trim()?null:{...JSON.parse(p().readFileSync(e).toString()),path:S.parse(e.replace("board-definition.json",""))}).filter(Boolean).map(e=>{e.detected=detect(e);try{return A.parse(e)}catch(t){throw new ey.TRPCError({code:"INTERNAL_SERVER_ERROR",message:`Invalid board definition for ${e.name} in ${e.path}`,cause:t})}});return D.set("boards",r),r},updateDetectionStatus=async(e,t)=>e.map(e=>(e.detected=detect(e,t),e)),compileFirmware=async(e,t,r)=>{let o=null,i=f.serverSchema.parse(process.env);try{let n=u().join(i.KLIPPER_DIR,".config");if(await (0,eS.copyFile)(u().join(e.path,"firmware.config"),n),e.isHost||await (0,I.u5)(n,/CONFIG_USB_SERIAL_NUMBER=".+"/g,`CONFIG_USB_SERIAL_NUMBER="${getBoardChipId(e,t)}"`),r)return(0,d.readFileSync)(n).toString();let a=e.firmwareBinaryName,s=u().extname(a),l=u().join(i.KLIPPER_DIR,"out",`klipper${s}`),p=u().join(i.RATOS_DATA_DIR,a);if((0,d.existsSync)(p)&&await (0,eS.unlink)(p),o=await runSudoScript("klipper-compile.sh"),(0,d.existsSync)(l))await (0,eS.copyFile)(l,p);else if(!e.isHost)throw Error(`Could not find compiled firmware at ${l}`);return o}catch(r){let t=r instanceof Error?r.message:r;throw new ey.TRPCError({code:"INTERNAL_SERVER_ERROR",message:`Could not compile firmware for ${e.name}: ${t} 

 ${o?.stdout}`,cause:r})}},getBoardsWithoutHost=e=>e.filter(e=>!e.isHost),getToolboards=e=>a.z.array(F).parse(e.filter(e=>e.isToolboard)),getBoardsWithDriverCount=(e,t)=>e.filter(e=>e.driverCount>=t||null!=e.extruderlessConfig&&e.driverCount>=t-1),eR=(0,ev.qR)(async({ctx:e,next:t,meta:r,rawInput:o})=>{let i=null,n=null,s=e$.safeParse(o);try{i=await getBoards();try{n=s.success&&s.data.toolhead?new ToolheadHelper(await deserializeToolheadConfiguration(s.data.toolhead,{},i)):void 0,i=await updateDetectionStatus(i,n)}catch(e){if(e instanceof a.ZodError)throw new ey.TRPCError({code:"INTERNAL_SERVER_ERROR",message:`Toolhead configuration cannot be deserialized, please check the configuration.
${Object.entries(e.flatten().fieldErrors).map(([e,t])=>`${e}: ${t}`).join("\n")}`,cause:e});throw new ey.TRPCError({code:"INTERNAL_SERVER_ERROR",message:"Toolhead configuration cannot be deserialized, please check the configuration.",cause:e})}r?.includeHost!==!0&&(i=getBoardsWithoutHost(i))}catch(e){if(e instanceof ey.TRPCError)throw e;throw new ey.TRPCError({code:"INTERNAL_SERVER_ERROR",message:`Invalid board definition(s) in ${process.env.RATOS_CONFIGURATION_PATH}/boards.`,cause:e})}let l=null;if(r?.boardRequired&&(!s.success||null==s.data.boardPath))throw new ey.TRPCError({code:"PRECONDITION_FAILED",message:"boardPath parameter missing."});if(s.success&&null!=s.data.boardPath&&null==(l=i.find(e=>e.path===s.data.boardPath)))throw new ey.TRPCError({code:"PRECONDITION_FAILED",message:`No supported board exists for the path ${s.data.boardPath}`});return t({ctx:{...e,boards:i,board:l,toolhead:n}})}),eA=ev.$y.use(eR);(0,ev.Nd)({boards:eA.input(a.z.object({boardFilters:a.z.object({toolboard:a.z.boolean().optional(),driverCountRequired:a.z.number().optional()}).optional(),toolhead:es.optional()})).output(a.z.array(A)).query(({ctx:e,input:t})=>{let r=e.boards;return t.boardFilters?.toolboard===!0&&(r=getToolboards(r)),t.boardFilters?.driverCountRequired!=null&&(r=getBoardsWithDriverCount(r,t.boardFilters.driverCountRequired)),r}),detect:eA.input(e$).meta({boardRequired:!0}).query(({ctx:e,input:t})=>{if(null==e.board)throw new ey.TRPCError({code:"PRECONDITION_FAILED",message:`No supported board exists for the path ${t.boardPath}`});return detect(e.board,e.toolhead)}),unidentifiedDevices:eA.query(async({ctx:e})=>{let t=e.boards.filter(e=>e.detected).map(e=>p().realpathSync(getBoardSerialPath(e)));return(await (0,eC.glob)("/dev/serial/by-id/usb-Klipper*")).filter(e=>!t.includes(p().realpathSync(e)))}),boardVersion:eA.input(e$).meta({boardRequired:!0}).query(async({ctx:e,input:t})=>{if(null==e.board)throw new ey.TRPCError({code:"PRECONDITION_FAILED",message:`No supported board exists for the path ${t.boardPath}`});if(null==process.env.KLIPPER_ENV||""===process.env.KLIPPER_ENV.trim())throw new ey.TRPCError({code:"PRECONDITION_FAILED",message:"Environment variable KLIPPER_ENV is missing"});if(null==process.env.KLIPPER_DIR||""===process.env.KLIPPER_DIR.trim())throw new ey.TRPCError({code:"PRECONDITION_FAILED",message:"Environment variable KLIPPER_DIR is missing"});let r=(0,I.xg)(),o={stdout:""},i=null;try{await fetch("http://127.0.0.1:7125/machine/services/stop?service=klipper",{method:"POST"}),o=await (0,g.promisify)(l.exec)(`${u().join(process.env.KLIPPER_ENV,"bin","python")} ${u().join(r,"check-version.py")} ${getBoardSerialPath(e.board,e.toolhead)}`,{env:{KLIPPER_DIR:process.env.KLIPPER_DIR,NODE_ENV:"production"}})}catch(e){i=e}finally{await fetch("http://127.0.0.1:7125/machine/services/start?service=klipper",{method:"POST"})}if(i)throw new ey.TRPCError({code:"INTERNAL_SERVER_ERROR",cause:i});return o.stdout.match(/Version:\s(v\d+\.\d+\.\d+-\d+-\w{9})/)?.[1]}),compile:eA.input(a.z.object({boardPath:a.z.string(),toolhead:es.optional()})).meta({boardRequired:!0}).mutation(async({ctx:e,input:t})=>{if(null==e.board)throw new ey.TRPCError({code:"PRECONDITION_FAILED",message:`No supported board exists for the path ${t.boardPath}`});return await compileFirmware(e.board,e.toolhead),"success"}),reversePinLookup:eA.meta({boardRequired:!0}).input(a.z.object({axis:a.z.nativeEnum(_.po),canUseExtruderlessConfigs:a.z.boolean(),boardPath:a.z.string()})).query(async({ctx:e,input:t})=>{if(null==e.board)return;let r=null!=e.board.extruderlessConfig&&t.canUseExtruderlessConfigs,o=await parseBoardPinConfig(e.board,r),i=t.axis===_.po.z?"z0":t.axis===_.po.extruder?"e":_.po.extruder1===t.axis?"e1":t.axis;return reversePinLookup({step_pin:o[`${i}_step_pin`],dir_pin:o[`${i}_dir_pin`]},e.board)??null}),flashAllConnected:eA.meta({boardRequired:!1,includeHost:!0}).mutation(async({ctx:e})=>{let t=await getLastPrinterSettings(),r=t.toolheads.map(e=>new ToolheadHelper(e)),o=e.boards.flatMap(e=>{if(e.flashScript&&e.compileScript&&!0!==e.disableAutoFlash){if(detect(e))return{board:e,toolhead:null};let t=r.map(t=>detect(e,t)?{board:e,toolhead:t}:null).filter(Boolean);return t}return null}).filter(Boolean),i=[];for(let e of o)try{let t=N.parse(e.board);await compileFirmware(e.board,e.toolhead);let r=null;try{let o=u().join(t.path.replace(`${process.env.RATOS_CONFIGURATION_PATH}/boards/`,""),t.flashScript);r=e.toolhead?await runSudoScript("flash-path.sh",getBoardSerialPath(e.board,e.toolhead)):await runSudoScript("board-script.sh",o)}catch(o){let t=o instanceof Error?o.message:o;throw new ey.TRPCError({code:"INTERNAL_SERVER_ERROR",message:`Could not flash firmware to ${e.board.name}: 

 ${r?.stdout??t}`,cause:o})}i.push({board:e.board,result:"success",message:`${e.board.manufacturer} ${e.board.name} on ${e.toolhead?` ${e.toolhead.getToolCommand}`:""} was successfully flashed.`})}catch(r){let t=r instanceof Error?r.message:r;i.push({board:e.board,result:"error",message:"string"==typeof t?t:`Unknown error occured while flashing ${e.board.manufacturer} ${e.board.name} on ${e.toolhead?` ${e.toolhead.getToolCommand}`:""}`})}let n=i.filter(e=>"success"===e.result).length,a=`${n}/${o.length} connected board(s) flashed successfully.
`;return i.map(e=>{"error"===e.result?a+=`${e.board.manufacturer} ${e.board.name} failed to flash: ${e.message}
`:a+=`${e.board.manufacturer} ${e.board.name} was successfully flashed.
`}),{report:a,flashResults:i}}),flashViaPath:eA.input(a.z.object({boardPath:a.z.string(),flashPath:a.z.string().optional(),toolhead:es.optional()})).meta({boardRequired:!0}).mutation(async({ctx:e,input:t})=>{if(null==e.board)throw new ey.TRPCError({code:"PRECONDITION_FAILED",message:`No supported board exists for the path ${t.boardPath}`});if(null==e.board.flashScript)throw new ey.TRPCError({code:"PRECONDITION_FAILED",message:`${e.board.name} does not support automatic flashing via serial path.`});if(t.flashPath&&!p().existsSync(t.flashPath))throw new ey.TRPCError({code:"PRECONDITION_FAILED",message:`The path ${t.flashPath} does not exist.`});await compileFirmware(e.board,e.toolhead);let r=null;try{let o=u().join(e.board.path.replace(`${process.env.RATOS_CONFIGURATION_PATH}/boards/`,""),e.board.flashScript);r=t.flashPath?await runSudoScript("flash-path.sh",getBoardSerialPath(e.board,e.toolhead),t.flashPath):e.toolhead?await runSudoScript("flash-path.sh",getBoardSerialPath(e.board,e.toolhead)):await runSudoScript("board-script.sh",o)}catch(o){let t=o instanceof Error?o.message:o;throw new ey.TRPCError({code:"INTERNAL_SERVER_ERROR",message:`Could not flash firmware to ${e.board.name}: 

 ${r?.stdout??t}`,cause:o})}if(!detect(e.board,e.toolhead))throw new ey.TRPCError({code:"INTERNAL_SERVER_ERROR",message:`Could not flash firmware to ${e.board.name}, device did not show up at expected path.: 

 ${r.stdout}`});return"success"}),dfuDetect:eA.input(e$).meta({boardRequired:!0}).query(async({ctx:e,input:t})=>{let r=parseInt((await (0,g.promisify)(l.exec)('lsusb | grep "0483:df11" | wc -l')).stdout,10);if(1===r)return!0;if(r>1)throw new ey.TRPCError({code:"PRECONDITION_FAILED",message:"Multiple DFU devices detected, please disconnect the other devices."});return!1}),dfuFlash:eA.input(e$).meta({boardRequired:!0}).mutation(async({ctx:e,input:t})=>{if(null!=e.board){if(null==e.board.dfu)throw new ey.TRPCError({code:"PRECONDITION_FAILED",message:"Board does not support DFU."});try{await compileFirmware(e.board,e.toolhead)}catch(r){let t=r instanceof Error?r.message:r;throw new ey.TRPCError({code:"INTERNAL_SERVER_ERROR",message:`Could not compile firmware for ${e.board.name}: 

 ${t}`,cause:r})}try{let t=await runSudoScript("dfu-flash.sh",getBoardSerialPath(e.board,e.toolhead));return t.stdout}catch(e){throw new ey.TRPCError({code:"INTERNAL_SERVER_ERROR",message:"Failed to flash device",cause:e})}}})});let xAccelerometerOptions=(e,t)=>{let r=[{id:"none",title:"None"},{id:"sbc",title:"Wired to Host Computer"}];return e?.controlboard?.ADXL345SPI!=null&&r.push({id:"controlboard",title:"Wired to Controlboard"}),t?.toolboard!=null&&null!=t.toolboard.ADXL345SPI&&r.push({id:"toolboard",title:"Integrated on toolboard"}),r},yAccelerometerOptions=(e,t)=>{let r=[{id:"none",title:"None"},{id:"sbc",title:"Wired to Host Computer"}];return e?.controlboard?.ADXL345SPI!=null&&r.push({id:"controlboard",title:"Wired to Controlboard"}),t?.toolboard!=null&&null!=t.toolboard.ADXL345SPI&&r.push({id:"toolboard",title:"Integrated on toolboard"}),r};var eN=r(29755),eO=r(44101),eF=r(15140);r(16689);var eI=r(85337);function getBaseUrl(){return process.env.RENDER_INTERNAL_HOSTNAME?`http://${process.env.RENDER_INTERNAL_HOSTNAME}:${process.env.PORT}/configure`:`http://127.0.0.1:${process.env.PORT??3e3}/configure`}(0,r(4129).createTRPCNext)({config:()=>({links:[(0,eI.httpBatchLink)({url:`${getBaseUrl()}/api/trpc`,maxURLLength:2083})]}),ssr:!1});let eL=(0,eI.createTRPCProxyClient)({links:[(0,eI.httpBatchLink)({url:`${getBaseUrl()}/api/trpc`,maxURLLength:2083})]});r(20997),r(18910),r(7636),r(53489);let eM=new EventTarget,DispatchSaveAtomEvent=(e,t)=>{eM.dispatchEvent(new CustomEvent("saveAtom",{detail:{itemKey:e,value:t}}))},moonrakerWriteEffect=()=>e=>{e.onSet(t=>{console.debug(`RatOS Atom Sync Effect: new value was saved to moonraker "${e.trigger}"`,e.node.key,t),DispatchSaveAtomEvent(e.node.key,null==t?"null":t)})},eD={},readPrinterAtom=async({read:e})=>{let t=await e(ej.key);if(null!=t){let e=a.z.object({id:eu.shape.id}).safeParse(t);if(e.success){let t=eD[e.data.id];return null==t&&(t=await eL.printer.printer.query(e.data.id,{}))&&(eD[e.data.id]=t),t??null}}return null},readPrinterRailAtom=e=>async({read:t})=>{let r=await t(eB(e).key);if(null!=r){let o=_.Ah.safeParse(r);if(o.success)return o.data;let i=await readPrinterAtom({read:t}),n=i?.defaults.rails.find(t=>t.axis===e);if(null!=n){let e=_.Ah.safeParse({...n,...r});if(e.success)return e.data}}return null},ej=(0,eN.atom)({key:"Printer",default:null,effects:[moonrakerWriteEffect(),(0,eO.syncEffect)({read:readPrinterAtom,write:async({write:e},t)=>{await new Promise(r=>{t instanceof eN.DefaultValue?e(ej.key,null):e(ej.key,t??null),setTimeout(()=>{},500)})},refine:(0,eF.getRefineCheckerForZodSchema)(eu.nullable())})]});(0,eN.selector)({key:"LoadablePrinterState",get:async({get:e})=>{let t=e((0,eN.noWait)(ej));return({hasValue:()=>t.contents,hasError:()=>[],loading:()=>[]})[t.state]()}});let ek=(0,eN.atom)({key:"PrinterOption",default:null,effects:[moonrakerWriteEffect(),(0,eO.syncEffect)({refine:(0,eF.getRefineCheckerForZodSchema)(ec.shape.sizes.unwrap().element.nullable())})]}),eH=(0,eN.atom)({key:"Controlboard",default:null,effects:[moonrakerWriteEffect(),(0,eO.syncEffect)({read:async({read:e})=>{let t=await e(eH.key);if(null!=t){let e=a.z.object({path:S}).safeParse(t);if(e.success){let t=await eL.mcu.boards.query({boardFilters:{toolboard:!1}}),r=t.find(t=>t.path===e.data.path);return r??null}}return null},refine:(0,eF.getRefineCheckerForZodSchema)(R.nullable())})]}),eB=(0,eN.atomFamily)({key:"PrinterRail",default:null,effects:e=>[moonrakerWriteEffect(),(0,eO.syncEffect)({read:readPrinterRailAtom(e),refine:(0,eF.getRefineCheckerForZodSchema)(_.Ah.nullable())})]}),eq=(0,eN.selector)({key:"PrinterRails",get:({get:e})=>{let t=e(ej),r=t?.defaults.rails.map(t=>{let r=e(eB(t.axis));return deserializePrinterRail(r??t)});return r??[]},set:({set:e},t)=>{if(t instanceof eN.DefaultValue){Object.values(_.po).forEach(t=>{e(eB(t),null)});return}t.forEach(t=>{e(eB(t.axis),serializePrinterRail(t))})}});(0,eN.selector)({key:"LoadablePrinterRailsState",get:async({get:e})=>{let t=e((0,eN.noWait)(eq));return({hasValue:()=>t.contents,hasError:()=>[],loading:()=>[]})[t.state]()}});let eW=(0,eN.atomFamily)({key:"PrinterToolhead",default:null,effects:e=>[moonrakerWriteEffect(),(0,eO.syncEffect)({read:async({read:t})=>{let r=await t(eW(e).key);if("object"!=typeof r||null==r)return null;let{toolNumber:o,...i}=r;if(null!=i){let t=en.safeParse(i);if(t.success){let r=t.data.toolboard;if(r&&null!=r){let e=a.z.object({path:S}).safeParse(r);if(e.success){let t=await eL.mcu.boards.query({boardFilters:{toolboard:!0}}),o=t.find(t=>t.path===e.data.path);o&&(r=O.parse(o))}}return{...t.data,toolboard:r,toolNumber:e}}console.debug("RecoilSync: failed to read toolhead!",eW(e).key,t.error,i)}return null},refine:(0,eF.getRefineCheckerForZodSchema)(et.extend({toolNumber:er}).nullable())})]});(0,eN.selectorFamily)({key:"DeserializeToolheadQuery",get:e=>async({get:t})=>{let r=en.safeParse(await eL.printer.deserializeToolheadConfiguration.query({config:e.th,printerConfig:{controlboard:e.boardId}}));return r.success?{...r.data,toolNumber:e.toolNumber}:null}});let eU=(0,eN.selector)({key:"PrinterToolheadsState",get:({get:e})=>{let t=e(ej);return null==t?[]:e((0,eN.waitForAll)(t.defaults.toolheads.map((e,t)=>eW(t)))).filter(Boolean)},set:({set:e,reset:t},r)=>{if(r instanceof eN.DefaultValue)throw Error("ToolheadsState cannot be reset, please reset the individual ToolheadState instead");r.forEach(t=>{e(eW(t.toolNumber),{...t,toolNumber:t.toolNumber})})}});(0,eN.selector)({key:"LoadablePrinterToolheadsState",get:async({get:e})=>{let t=e((0,eN.noWait)(eU));return({hasValue:()=>t.contents,hasError:()=>[],loading:()=>[]})[t.state]()}});let eG=(0,eN.atom)({key:"PerformanceMode",default:!1,effects:[moonrakerWriteEffect(),(0,eO.syncEffect)({refine:(0,eF.getRefineCheckerForZodSchema)(a.z.boolean().optional().nullable())})]}),eV=(0,eN.atom)({key:"Stealchop",default:!1,effects:[moonrakerWriteEffect(),(0,eO.syncEffect)({refine:(0,eF.getRefineCheckerForZodSchema)(a.z.boolean().optional().nullable())})]}),eK=(0,eN.atom)({key:"StandstillStealth",default:!1,effects:[moonrakerWriteEffect(),(0,eO.syncEffect)({refine:(0,eF.getRefineCheckerForZodSchema)(a.z.boolean().optional().nullable())})]}),eX=(0,eN.atom)({key:"ControllerFan",default:{id:"2pin",title:"2-pin fan"},effects:[moonrakerWriteEffect(),(0,eO.syncEffect)({refine:(0,eF.getRefineCheckerForZodSchema)(ee.nullable())})]}),eY=(0,eN.selector)({key:"PrinterConfiguration",get:async({get:e})=>{let{printer:t,printerSize:r,performanceMode:o,stealthchop:i,standstillStealth:n,rails:a,controlboard:s,controllerFan:l,toolheads:d}=e((0,eN.waitForAll)({printer:ej,printerSize:ek,performanceMode:eG,stealthchop:eV,standstillStealth:eK,rails:eq,controlboard:eH,controllerFan:eX,toolheads:eU})),p=eT.safeParse({printer:null==t?null:{...t,defaults:{...t.defaults,toolheads:t?.defaults.toolheads.map(e=>serializeToolheadConfiguration(e))}},size:r,performanceMode:o,stealthchop:i,standstillStealth:n,rails:a,controlboard:s,controllerFan:l,toolheads:d});return!1===p.success&&console.error(p.error.flatten().fieldErrors),p.success?p.data:null}});(0,eN.selector)({key:"LoadablePrinterConfigurationState",get:async({get:e})=>{let t=e((0,eN.noWait)(eY));return({hasValue:()=>t.contents,hasError:()=>null,loading:()=>null})[t.state]()}});let serializePrinterConfiguration=e=>{let t={printer:e.printer.id,toolheads:e.toolheads.map(e=>serializeToolheadConfiguration(e)),size:e.size,controlboard:e.controlboard.id,controllerFan:e.controllerFan.id,performanceMode:e.performanceMode,stealthchop:e.stealthchop,standstillStealth:e.standstillStealth,rails:e.rails.map(e=>serializePrinterRail(e))};return ez.parse(t)};var eZ=r(1642),eJ=r(71569),eQ=r.n(eJ);function isNodeError(e){return e instanceof Error}let e0=(n=async(e,t)=>{let r=D.get(e);if(null!=r)return a.z.array(t).parse(r);let o=await (0,eC.glob)(`${process.env.RATOS_CONFIGURATION_PATH}/${e}/*.cfg`),i=(await Promise.all(o.map(e=>e.trim()).filter(e=>""!==e).map(async e=>{let r=await parseMetadata(e,t);return null==r?((0,s.getLogger)().warn(`No metadata present in ${e} skipping..`),null):r}))).filter(e=>null!=e);return D.set(e,i),i},async(e,t)=>{let r=D.get(`${e}`);if(null==r){let r=j.get(`${e}`);null==r&&(r=n(e,t),j.set(`${e}`,r));let o=await r;return D.set(`${e}`,o),o}return r}),serializedPartialConfigFromPrinterDefinition=e=>ex.parse({printer:e.id,controlboard:e.defaults.board}),getPrinters=async(e=!1)=>{let t=(0,eC.glob)(`${process.env.RATOS_CONFIGURATION_PATH}/printers/*/printer-definition.json`),r=await e0("hotends",K),o=await getBoards(),i={},n=(await Promise.all((await t).map(async e=>""===e.trim()?null:{...JSON.parse((await (0,eS.readFile)(e)).toString()),path:e.replace("printer-definition.json",""),id:e.replace("/printer-definition.json","").split("/").pop()}))).filter(Boolean);n.forEach(t=>{let n=serializedPartialConfigFromPrinterDefinition(t);i[t.id]=t.defaults.toolheads.map(async t=>{let i=(await r).find(e=>e.id===t.hotend);if(null==t.thermistor&&null!=i&&(t.thermistor=i.thermistor),null==t.nozzle&&(t.nozzle=getDefaultNozzle()),e){let e=await deserializeToolheadConfiguration(t,n,o);t=e}return t})});let s={};return await Promise.all(Object.keys(i).map(async e=>{let t=i[e];s[e]=await Promise.all(t)})),a.z.array(e?eu:ec).parse(n.map(e=>(e.defaults.toolheads=s[e.id],e)))},isPrinterCfgInitialized=async()=>{let e=f.serverSchema.parse(process.env);try{await (0,eS.access)(u().join(e.KLIPPER_CONFIG_PATH,"printer.cfg"),d.constants.F_OK)}catch(e){if(isNodeError(e)&&"ENOENT"===e.code)return!1;throw e}let t=await (0,eS.readFile)(u().join(e.KLIPPER_CONFIG_PATH,"printer.cfg"));return -1===t.indexOf("[include RatOS/printers/initial-setup.cfg]")},deserializeToolheadConfiguration=async(e,t,r)=>{let o=null==r?await getBoards():r,i=o.find(e=>e.id===t.controlboard),n=getToolboards(o),a=await e0("hotends",K),s=await e0("extruders",Y),l=await e0("z-probe",Z),d=n.find(t=>t.id===e.toolboard)??null,p=xAccelerometerOptions({controlboard:i},{toolboard:d}),c=yAccelerometerOptions({controlboard:i},{toolboard:d}),u={...e,toolboard:d,hotend:a.find(t=>t.id===e.hotend),extruder:s.find(t=>t.id===e.extruder),probe:l.find(t=>t.id===e.probe),thermistor:W.find(t=>t===e.thermistor),xEndstop:xEndstopOptions(t,e).find(t=>t.id===e.xEndstop),yEndstop:yEndstopOptions(t,e).find(t=>t.id===e.yEndstop),xAccelerometer:p.find(t=>t.id===e.xAccelerometer)??(d&&null!=d.ADXL345SPI?p.find(e=>"toolboard"===e.id):null),yAccelerometer:c.find(t=>t.id===e.yAccelerometer)??(d&&null!=d.ADXL345SPI?c.find(e=>"toolboard"===e.id):null),partFan:partFanOptions({controlboard:i},{toolboard:d,axis:e.axis}).find(t=>t.id===e.partFan),hotendFan:hotendFanOptions({controlboard:i},{toolboard:d,axis:e.axis}).find(t=>t.id===e.hotendFan)};return en.parse(u)},deserializePartialToolheadConfiguration=async(e,t,r)=>{r=r??await getBoards();let o=r.find(e=>e.id===t?.controlboard),i=getToolboards(r),n=await e0("hotends",K),a=await e0("extruders",Y),s=await e0("z-probe",Z),l=i.find(t=>t.id===e?.toolboard);return ea.parse({...e,toolboard:l??null,hotend:n.find(t=>t.id===e?.hotend),extruder:a.find(t=>t.id===e?.extruder),probe:s.find(t=>t.id===e?.probe),thermistor:W.find(t=>t===e?.thermistor),xEndstop:xEndstopOptions(t,e).find(t=>t.id===e?.xEndstop),yEndstop:yEndstopOptions(t,e).find(t=>t.id===e?.yEndstop),xAccelerometer:xAccelerometerOptions({controlboard:o},{toolboard:l}).find(t=>t.id===e?.xAccelerometer),yAccelerometer:yAccelerometerOptions({controlboard:o},{toolboard:l}).find(t=>t.id===e?.yAccelerometer),partFan:partFanOptions({controlboard:o},{toolboard:l,axis:e?.axis??_.po.x}).find(t=>t.id===e?.partFan),hotendFan:hotendFanOptions({controlboard:o},{toolboard:l,axis:e?.axis??_.po.x}).find(t=>t.id===e?.hotendFan)})},deserializePartialPrinterConfiguration=async e=>{let t=await getBoards(),r=t.find(t=>t.id===e?.controlboard),o=null==e.toolheads?void 0:await Promise.all(e.toolheads.map(async r=>await deserializePartialToolheadConfiguration(r,e,t)));return eT.parse({toolheads:o,printer:(await getPrinters()).find(t=>t.id===e?.printer),size:e?.size,controllerFan:controllerFanOptions({controlboard:r}).find(t=>t.id===e?.controllerFan),controlboard:r,performanceMode:e?.performanceMode,stealthchop:e?.stealthchop,standstillStealth:e?.standstillStealth,rails:e?.rails?.map(e=>deserializePrinterRail(e))})},deserializePrinterConfiguration=async e=>{let t=await getBoards(),r=t.find(t=>t.id===e?.controlboard),o=null==e.toolheads?void 0:await Promise.all(e.toolheads.map(r=>deserializeToolheadConfiguration(r,e,t)));return eb.parse({toolheads:o,printer:(await getPrinters()).find(t=>t.id===e?.printer),size:e?.size,controllerFan:controllerFanOptions({controlboard:r}).find(t=>t.id===e?.controllerFan),controlboard:r,performanceMode:e?.performanceMode,stealthchop:e?.stealthchop,standstillStealth:e?.standstillStealth,rails:e?.rails.map(e=>deserializePrinterRail(e))})},getTimeStamp=()=>{let e=new Date,t=String(e.getDate()).padStart(2,"0"),r=String(e.getMonth()+1).padStart(2,"0"),o=e.getFullYear(),i=String(e.getHours()).padStart(2,"0"),n=String(e.getMinutes()).padStart(2,"0"),a=String(e.getSeconds()).padStart(2,"0");return`${o}${r}${t}_${i}${n}${a}`},getFilesToWrite=async(e,t)=>{let o=await constructKlipperConfigUtils(e),i=constructKlipperConfigExtrasGenerator(e,o),n=await constructKlipperConfigHelpers(e,i,o),{template:a,initialPrinterCfg:s}=await r(26004)(`./${e.printer.template.replace("-printer.template.cfg",".ts")}`),l=a(e,n).trim(),p=s(e,n).trim(),c=i.getFilesToWrite();return[{fileName:"RatOS.cfg",content:l,overwrite:!0,order:0},{fileName:"printer.cfg",order:1,content:p,overwrite:!await isPrinterCfgInitialized()}].concat(c).map(e=>{let r={...e,exists:!1};return(t?.includes(r.fileName)||t?.includes("*"))&&(r.overwrite=!0),r.exists=(0,d.existsSync)(u().join(f.serverSchema.parse(process.env).KLIPPER_CONFIG_PATH,r.fileName)),r})},generateKlipperConfiguration=async(e,t,r)=>{let o=f.serverSchema.parse(process.env),i=await getFilesToWrite(e,t),n=await Promise.all(i.map(async e=>{let t="created";try{if(await (0,eS.access)(u().join(o.KLIPPER_CONFIG_PATH,e.fileName),d.constants.F_OK),!e.overwrite)return{fileName:e.fileName,action:"skipped"};{let r=`${e.fileName.split(".").slice(0,-1).join(".")}-${getTimeStamp()}.cfg`;try{await (0,eS.copyFile)(u().join(o.KLIPPER_CONFIG_PATH,e.fileName),u().join(o.KLIPPER_CONFIG_PATH,r));let t=await (0,eC.glob)(u().join(o.KLIPPER_CONFIG_PATH,`${e.fileName.split(".").slice(0,-1).join(".")}-+([0-9])_+([0-9]).cfg`));if(t.length>0){let e=t.sort((e,t)=>{let r=new Date(e.split("-").slice(-1)[0].split(".cfg")[0]),o=new Date(t.split("-").slice(-1)[0].split(".cfg")[0]);return r.getTime()-o.getTime()});e.length>5&&await Promise.all(e.reverse().slice(0,e.length-5).map(e=>((0,s.getLogger)().info(`Removing old backup: ${e}`),(0,eS.unlink)(e))))}}catch(t){return{fileName:e.fileName,action:"error",err:t}}t="overwritten"}}catch(t){if(!isNodeError(t)||"ENOENT"!==t.code)return{fileName:e.fileName,action:"error",err:t}}try{if(r?.includes(e.fileName))return{fileName:e.fileName,action:"skipped"};return await (0,eS.writeFile)(u().join(o.KLIPPER_CONFIG_PATH,e.fileName),e.content),{fileName:e.fileName,action:t}}catch(t){return{fileName:e.fileName,action:"error",err:t}}})),a=n.filter(e=>"error"===e.action);if(a.length>0)throw a.map(e=>(0,s.getLogger)().error(e)),Error("Something went wrong when saving the configuration. The following files couldn't be written: "+a.map(e=>e.fileName).join(", "));try{await savePrinterSettings(serializePrinterConfiguration(e))}catch(e){throw Error("Couldn't backup your current printer settings to disk, but your klipper configuration has been generated.")}return n},compareSettings=async e=>{let t=f.serverSchema.parse(process.env),r=hasLastPrinterSettings()?await getFilesToWrite(await getLastPrinterSettings()):[],o=await getFilesToWrite(await deserializePrinterConfiguration(e)),i=await Promise.all(o.filter(e=>!r.some(t=>t.fileName===e.fileName)).map(async e=>{let t=new Date().getTime()+eQ()(e);await (0,eS.writeFile)(`/tmp/ratos-added-new-${t}.cfg`,e.content);let r=await new Promise((e,r)=>{(0,l.exec)(`git diff --minimal --no-index /dev/null /tmp/ratos-added-new-${t}.cfg`,(t,o,i)=>{""==o.trim()&&r(i),e(o)})});return{fileName:e.fileName,diff:r,exists:e.exists,overwrite:e.overwrite,order:e.order,state:"created"}})),n=await Promise.all(r.filter(e=>!o.some(t=>t.fileName===e.fileName)).map(async e=>{let t=new Date().getTime()+eQ()(e);await (0,eS.writeFile)(`/tmp/ratos-removed-old-${t}.cfg`,e.content);let r=await new Promise((e,r)=>{(0,l.exec)(`git diff --minimal --no-index /tmp/ratos-removed-old-${t}.cfg /dev/null`,(t,o,i)=>{""==o.trim()&&r(i),e(o)})});return{fileName:e.fileName,diff:r,exists:e.exists,overwrite:e.overwrite,order:e.order,state:"removed"}})),a=await Promise.all(o.filter(e=>r.some(t=>t.fileName===e.fileName&&t.content!==e.content)).map(async e=>{let o=r.find(t=>t.fileName===e.fileName);if(null==o)throw Error("This should never happen.");let i=new Date().getTime()+eQ()(e),n=u().resolve(u().join(t.KLIPPER_CONFIG_PATH,o.fileName));o.exists||(n=`/tmp/ratos-changed-old-${i}.cfg`,await (0,eS.writeFile)(n,o.content)),await (0,eS.writeFile)(`/tmp/ratos-changed-new-${i}.cfg`,e.content);let a=await new Promise((e,t)=>{(0,l.exec)(`git diff --minimal --no-index ${n} /tmp/ratos-changed-new-${i}.cfg`,(r,o,i)=>{""==o.trim()&&t(i),e(o)})});return{fileName:e.fileName,diff:a,exists:e.exists,overwrite:e.overwrite,order:e.order,state:"changed"}})),s=o.filter(e=>r.some(t=>t.fileName===e.fileName&&t.content===e.content)).map(e=>({fileName:e.fileName,diff:null,exists:e.exists,overwrite:e.overwrite,order:e.order,state:"unchanged"})),d=i.concat(n).concat(a).concat(s).sort((e,t)=>{if(null!=e.order||null!=t.order){if((e.order??9999)>(t.order??9999))return 1;if((e.order??9999)<(t.order??9999))return -1}return o.findIndex(t=>t.fileName===e.fileName)<o.findIndex(e=>e.fileName===t.fileName)?-1:o.findIndex(t=>t.fileName===e.fileName)>o.findIndex(e=>e.fileName===t.fileName)?1:e.fileName<t.fileName?-1:e.fileName>t.fileName?1:0});return d},loadSerializedConfig=async e=>{let t=await deserializePrinterConfiguration(await readSerializedConfig(e));return t},readSerializedConfig=async e=>{let t=await (0,eS.readFile)(e),r=ez.parse(JSON.parse(t.toString()));return r},regenerateKlipperConfiguration=async(e,t,r)=>await generateKlipperConfiguration(await getLastPrinterSettings(e),t,r),getToolhead=async(e,t,r)=>{let o=extractToolheadFromPrinterConfiguration(t,await deserializePartialPrinterConfiguration(e??{}))??null;return null==o?null:!0===r?o.serialize():o},getToolheads=async(e,t)=>{let r=extractToolheadsFromPrinterConfiguration(await deserializePartialPrinterConfiguration(e??{}))??null;return null==r?null:!0===t?r.map(e=>e.serialize()):r};(0,ev.Nd)({getSavedConfig:ev.$y.output(ez.nullable()).query(async e=>{let t=await getLastPrinterSettings(void 0,!0);return t}),getSavedPrinterName:ev.$y.output(a.z.string().nullable()).query(async e=>{let t=await getLastPrinterSettings(void 0,!0),r=(await getPrinters()).find(e=>e.id===t.printer);return null==r?null:r.manufacturer+" "+r.name}),printers:ev.$y.output(a.z.array(eu)).query(async()=>(await getPrinters(!0)).sort((e,t)=>"Rat Rig"===e.manufacturer&&("Rat Rig"!==t.manufacturer||t.description.indexOf("Discontinued")>-1)?-1:e.name.localeCompare(t.name))),printer:ev.$y.input(a.z.string()).output(eu.nullable()).query(async e=>{let t=(await getPrinters()).find(t=>t.id===e.input);return t?(t.defaults.toolheads=await Promise.all(t.defaults.toolheads.map(e=>deserializeToolheadConfiguration(e,serializedPartialConfigFromPrinterDefinition(t)))),eu.parse(t)):null}),hotends:ev.$y.output(a.z.array(K)).query(()=>e0("hotends",K)),extruders:ev.$y.output(a.z.array(Y)).query(()=>e0("extruders",Y)),probes:ev.$y.output(a.z.array(Z)).query(()=>e0("z-probe",Z)),thermistors:ev.$y.query(()=>W.map(stringToTitleObject)),xEndstops:ev.$y.input(a.z.object({config:ex.nullable(),toolOrAxis:ei})).output(a.z.array(J)).query(async e=>xEndstopOptions(e.input.config,await getToolhead(e.input.config,e.input.toolOrAxis,!0))),yEndstops:ev.$y.input(a.z.object({config:ex.nullable(),toolOrAxis:ei})).output(a.z.array(J)).query(async e=>yEndstopOptions(e.input.config,await getToolhead(e.input.config,e.input.toolOrAxis,!0))),partFanOptions:ev.$y.input(a.z.object({config:ex.nullable(),toolOrAxis:ei})).output(a.z.array(ee)).query(async e=>partFanOptions(await deserializePartialPrinterConfiguration(e.input.config??{}),(await getToolhead(e.input.config,e.input.toolOrAxis))?.getConfig())),hotendFanOptions:ev.$y.input(a.z.object({config:ex.nullable(),toolOrAxis:ei})).output(a.z.array(ee)).query(async e=>hotendFanOptions(await deserializePartialPrinterConfiguration(e.input.config??{}),(await getToolhead(e.input.config,e.input.toolOrAxis))?.getConfig())),controllerFanOptions:ev.$y.input(a.z.object({config:ex.nullable()})).output(a.z.array(ee)).query(async e=>controllerFanOptions(await deserializePartialPrinterConfiguration(e.input.config??{}),(await getToolheads(e.input.config))?.map(e=>e.getConfig()))),xAccelerometerOptions:ev.$y.input(a.z.object({config:ex.nullable(),toolOrAxis:ei})).output(a.z.array(Q)).query(async e=>xAccelerometerOptions(await deserializePartialPrinterConfiguration(e.input.config??{}),(await getToolhead(e.input.config,e.input.toolOrAxis))?.getConfig())),yAccelerometerOptions:ev.$y.input(a.z.object({config:ex.nullable(),toolOrAxis:ei})).output(a.z.array(Q)).query(async e=>yAccelerometerOptions(await deserializePartialPrinterConfiguration(e.input.config??{}),(await getToolhead(e.input.config,e.input.toolOrAxis))?.getConfig())),deserializeToolheadConfiguration:ev.$y.input(a.z.object({config:es,printerConfig:ex.optional()})).query(async e=>await deserializeToolheadConfiguration(e.input.config,e.input.printerConfig??{})),printercfgStatus:ev.$y.query(async()=>({isInitialized:await isPrinterCfgInitialized()})),regenerateConfiguration:ev.$y.input(a.z.object({overwriteFiles:a.z.array(a.z.string()).optional(),skipFiles:a.z.array(a.z.string()).optional()})).mutation(async({input:e})=>{let t=await regenerateKlipperConfiguration(void 0,e.overwriteFiles,e.skipFiles);return t.some(e=>"created"===e.action||"overwritten"===e.action)&&(0,eZ.klipperRestart)(),t}),getFilesToWrite:ev.$y.input(a.z.object({config:ez})).mutation(async e=>{let{config:t}=e.input;return await compareSettings(t)}),saveConfiguration:ev.$y.input(a.z.object({config:ez,overwriteFiles:a.z.array(a.z.string()).optional(),skipFiles:a.z.array(a.z.string()).optional()})).mutation(async e=>{let{config:t,overwriteFiles:r,skipFiles:o}=e.input,i=await deserializePrinterConfiguration(t),n=await generateKlipperConfiguration(i,r,o);return(0,eZ.klipperRestart)(),n})})},26004:(e,t,r)=>{var o={"./caramba":[14158,4158],"./caramba-chonk":[89863,9863],"./caramba-chonk.ts":[89863,9863],"./caramba-hybrid":[78447,8447],"./caramba-hybrid.ts":[78447,8447],"./caramba-idex":[79173,9173],"./caramba-idex.ts":[79173,9173],"./caramba.ts":[14158,4158],"./extras/sensorless-homing":[61618,1618],"./extras/sensorless-homing.ts":[61618,1618],"./prusa-mini":[11877,1877],"./prusa-mini.ts":[11877,1877],"./prusa-mk3s":[81005,1005],"./prusa-mk3s.ts":[81005,1005],"./v-core-3":[26336,6336],"./v-core-3.ts":[26336,6336],"./v-core-pro":[62498,2498],"./v-core-pro.ts":[62498,2498],"./v-minion":[50122,122],"./v-minion.ts":[50122,122],"./voron-v01":[11287,1287],"./voron-v01.ts":[11287,1287],"./voron-v24":[84613,4613],"./voron-v24.ts":[84613,4613]};function webpackAsyncContext(e){if(!r.o(o,e))return Promise.resolve().then(()=>{var t=Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t});var t=o[e],i=t[0];return r.e(t[1]).then(()=>r(i))}webpackAsyncContext.keys=()=>Object.keys(o),webpackAsyncContext.id=26004,e.exports=webpackAsyncContext}};