{"version":3,"file":"static/chunks/3938.cdc3b244c95e9ea1.js","mappings":"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","sources":["webpack://_N_E/./app/_helpers/logger.ts","webpack://_N_E/./app/analysis/_worker/processing.ts","webpack://_N_E/./app/analysis/_worker/adxl345-stream.ts","webpack://_N_E/./app/analysis/_worker/index.ts","webpack://_N_E/./components/common/badge.tsx","webpack://_N_E/./helpers/logger.ts","webpack://_N_E/./helpers/trpc.ts","webpack://_N_E/./utils/trpc.ts","webpack://_N_E/./zods/analysis.tsx","webpack://_N_E/./zods/hardware.tsx","webpack://_N_E/./zods/motion.tsx","webpack://_N_E/./zods/util.tsx","webpack://_N_E/./env/schema.mjs","webpack://_N_E/webpack/bootstrap","webpack://_N_E/webpack/runtime/chunk loaded","webpack://_N_E/webpack/runtime/compat get default export","webpack://_N_E/webpack/runtime/create fake namespace object","webpack://_N_E/webpack/runtime/define property getters","webpack://_N_E/webpack/runtime/ensure chunk","webpack://_N_E/webpack/runtime/get javascript chunk filename","webpack://_N_E/webpack/runtime/get mini-css chunk filename","webpack://_N_E/webpack/runtime/hasOwnProperty shorthand","webpack://_N_E/webpack/runtime/make namespace object","webpack://_N_E/webpack/runtime/trusted types policy","webpack://_N_E/webpack/runtime/trusted types script url","webpack://_N_E/webpack/runtime/publicPath","webpack://_N_E/webpack/runtime/importScripts chunk loading","webpack://_N_E/webpack/runtime/startup chunk dependencies","webpack://_N_E/webpack/before-startup","webpack://_N_E/webpack/startup","webpack://_N_E/webpack/after-startup","webpack://_N_E/<anon>"],"sourcesContent":["import pino from 'pino';\nimport { globalPinoOpts } from '@/helpers/logger';\nimport { trpcClient } from '@/helpers/trpc';\nimport { PinoLogEvent } from '@/zods/util';\nimport { prettyFactory, write } from 'pino-pretty-browser';\n\nconst send = async function (level: pino.Level, logEvent: pino.LogEvent) {\n\ttrpcClient.clientLog.mutate({ level, logEvent: PinoLogEvent.parse(logEvent) });\n};\n\nlet logger: pino.Logger | null = null;\nexport const getLogger = () => {\n\tif (logger != null) {\n\t\treturn logger;\n\t}\n\tlogger = pino({\n\t\t...globalPinoOpts,\n\t\tbrowser: {\n\t\t\ttransmit: {\n\t\t\t\tsend,\n\t\t\t},\n\t\t},\n\t});\n\treturn logger;\n};\n","import { KlipperAccelSubscriptionData } from '@/zods/analysis';\nimport BigNumber from 'bignumber.js';\nimport {\n\tObservable,\n\tasyncScheduler,\n\tbufferTime,\n\tconcatMap,\n\tdelay,\n\tdistinctUntilChanged,\n\tfirst,\n\tfirstValueFrom,\n\tfrom,\n\tmap,\n\tof,\n\tscheduled,\n\tshare,\n\ttap,\n} from 'rxjs';\n\nconst expectedSampleRates = [100, 200, 400, 800, 1600, 3200, 6400, 12800, 25600, 51200];\n/**\n * The first element of the sample is the timestamp in seconds.\n */\nexport type AccelSample = [BigNumber | number, number, number, number];\n/**\n * The first element of the sample is the timestamp in milliseconds.\n */\nexport type BigNumberAccelSample = [BigNumber, number, number, number];\nexport type AccelSampleMs = [number, number, number, number];\n\ntype KlipperAccelSubscriptionDataCompat = Omit<KlipperAccelSubscriptionData, 'data'> & { data: AccelSample[] };\nexport const createSignalBuffers = async (dataStream$: Observable<KlipperAccelSubscriptionDataCompat>) => {\n\tconst timeStamp: number | BigNumber = await firstValueFrom(\n\t\tdataStream$.pipe(\n\t\t\tfirst(),\n\t\t\tmap((data) => {\n\t\t\t\treturn BigNumber(data.data[0][0]).decimalPlaces(0, BigNumber.ROUND_FLOOR).toNumber();\n\t\t\t}),\n\t\t),\n\t);\n\tconst realTimeStamp = new Date().getTime();\n\tconst subtractTimeStamp = ([time, x, y, z]: AccelSample): BigNumberAccelSample => [\n\t\tBigNumber(time).minus(timeStamp).shiftedBy(3),\n\t\tx,\n\t\ty,\n\t\tz,\n\t];\n\n\tconst signal$ = scheduled(dataStream$, asyncScheduler).pipe(\n\t\tconcatMap((data) => scheduled(from(data.data), asyncScheduler)),\n\t\tmap(subtractTimeStamp),\n\t\tshare(),\n\t);\n\n\tconst sampleRate$ = signal$.pipe(\n\t\tbufferTime(1000),\n\t\tmap((samples) =>\n\t\t\tsamples.length < 1\n\t\t\t\t? 1\n\t\t\t\t: Math.floor(samples.length / samples[samples.length - 1][0].minus(samples[0][0]).shiftedBy(-3).toNumber()),\n\t\t),\n\t\tdistinctUntilChanged(),\n\t\tshare(),\n\t);\n\n\tconst timeMappedSignal$ = signal$.pipe(\n\t\tconcatMap((sample) => {\n\t\t\tconst offsetFromRealtime = new Date().getTime() - realTimeStamp;\n\t\t\tconst offsetFromTimestamp = sample[0].toNumber();\n\t\t\tif (offsetFromRealtime < offsetFromTimestamp) {\n\t\t\t\treturn scheduled(of(sample).pipe(delay(offsetFromTimestamp - offsetFromRealtime)), asyncScheduler);\n\t\t\t}\n\t\t\treturn of(sample);\n\t\t}),\n\t\tshare(),\n\t);\n\n\tconst specSampleRate$ = sampleRate$.pipe(\n\t\tmap((sr) =>\n\t\t\texpectedSampleRates.reduce((prev, cur) => {\n\t\t\t\tif (Math.abs(cur - sr) < Math.abs(prev - sr)) {\n\t\t\t\t\treturn cur;\n\t\t\t\t}\n\t\t\t\treturn prev;\n\t\t\t}, expectedSampleRates[0]),\n\t\t),\n\t\tdistinctUntilChanged(),\n\t\tshare(),\n\t);\n\n\treturn {\n\t\t/**\n\t\t * All timestamps are relative to the first timestamp in the stream. This is that first timestamp.\n\t\t */\n\t\ttimeStamp,\n\t\tsignal$,\n\t\ttimeMappedSignal$,\n\t\tspecSampleRate$,\n\t\tsampleRate$,\n\t};\n};\n","import { getLogger } from '@/app/_helpers/logger';\nimport { JSONRPCRequest, JSONRPCResponseSuccess } from '@/moonraker/types';\nimport {\n\tBeaconAccelSubscriptionData,\n\tKlipperAccelSubscriptionData,\n\tKlipperAccelSubscriptionResponse,\n\tklipperADXL345SubscriptionResponseSchema,\n} from '@/zods/analysis';\nimport { KlipperAccelSensorName, KlipperAccelSensorSchema } from '@/zods/hardware';\nimport BigNumber from 'bignumber.js';\nimport { filter, map, share } from 'rxjs';\nimport { webSocket } from 'rxjs/webSocket';\n\nlet id = 0;\n\nconst getSensorEndpoint = (sensor: KlipperAccelSensorSchema) => {\n\tswitch (sensor.type) {\n\t\tcase 'adxl345':\n\t\t\treturn 'adxl345/dump_adxl345';\n\t\tcase 'beacon':\n\t\t\treturn 'beacon/dump_accel';\n\t\tcase 'lis2dw':\n\t\t\treturn 'lis2dw/dump_lis2dw';\n\t\tdefault:\n\t\t\tthrow new Error(\"Sensor type not supported. Must be 'adxl345', 'beacon', or 'lis2dw'\");\n\t}\n};\n\ntype KlipperADXLRequest = JSONRPCRequest<\n\tReturnType<typeof getSensorEndpoint>,\n\t{ sensor: KlipperAccelSensorName; response_template: {} }\n>;\n\nexport interface RealtimeADXLOptions {\n\tonDataUpdate?: (status: KlipperAccelSubscriptionData) => void;\n\tonSubscriptionFailure?: ReactCallback<(err: Error) => void>;\n\tonSubscriptionSuccess?: ReactCallback<(header: KlipperAccelSubscriptionResponse['header']) => void>;\n\tsensor: KlipperAccelSensorName;\n}\n\nconst isSuccessResponse = (res: unknown): res is JSONRPCResponseSuccess => {\n\treturn res != null && typeof res === 'object' && !('error' in res);\n};\n\nconst isKlipperAccelSubscriptionResponse = (msg: unknown): msg is KlipperAccelSubscriptionResponse => {\n\treturn klipperADXL345SubscriptionResponseSchema.safeParse(msg).success;\n};\n\nconst isKlipperAccelSubscriptionData = (msg: unknown): msg is { params: KlipperAccelSubscriptionData } => {\n\treturn (\n\t\tisSuccessResponse(msg) &&\n\t\tmsg.params != null &&\n\t\t'data' in msg.params &&\n\t\tArray.isArray(msg.params.data) &&\n\t\tArray.isArray(msg.params.data[0]) &&\n\t\tmsg.params.data[0].length === 4\n\t);\n};\n\nconst isBeaconAccelSubscriptionData = (msg: unknown): msg is { params: BeaconAccelSubscriptionData } => {\n\treturn (\n\t\tisSuccessResponse(msg) &&\n\t\tmsg.params != null &&\n\t\tArray.isArray(msg.params) &&\n\t\tArray.isArray(msg.params[0]) &&\n\t\tmsg.params[0].length === 4\n\t);\n};\n\nconst detrendFloatSignal = (signal: number[]) => {\n\tconst mean = signal.reduce((acc, val) => acc + val, 0) / signal.length;\n\tfor (let i = 0; i < signal.length; i++) {\n\t\tsignal[i] -= mean;\n\t}\n\treturn signal;\n};\n\nconst detrendBatch = (signal: [number, number, number, number][]): [number, number, number, number][] => {\n\tconst x = detrendFloatSignal(signal.map((s) => s[1]));\n\tconst y = detrendFloatSignal(signal.map((s) => s[2]));\n\tconst z = detrendFloatSignal(signal.map((s) => s[3]));\n\treturn signal.map((s, i) => [s[0], x[i], y[i], z[i]]);\n};\n\nexport const createADXL345Stream = (url: string, sensor: KlipperAccelSensorSchema) => {\n\t'use client';\n\tconst subject = webSocket({\n\t\turl,\n\t\tdeserializer: (e) => {\n\t\t\ttry {\n\t\t\t\treturn JSON.parse(e.data, (key, val, context?: { source?: string }) => {\n\t\t\t\t\t// context is a relatively new feature\n\t\t\t\t\tif (key === '0' && typeof val === 'number' && context?.source != null) {\n\t\t\t\t\t\treturn BigNumber(val);\n\t\t\t\t\t}\n\t\t\t\t\treturn val;\n\t\t\t\t});\n\t\t\t} catch (e) {\n\t\t\t\tgetLogger().error(e, 'Error parsing JSON from klipper socket');\n\t\t\t\treturn null;\n\t\t\t}\n\t\t},\n\t});\n\n\t// We don't use this yet..\n\tlet header: null | KlipperAccelSubscriptionResponse['header'] = null;\n\n\tconst dataStream$ = subject\n\t\t.multiplex(\n\t\t\t() =>\n\t\t\t\t({\n\t\t\t\t\tjsonrpc: '2.0',\n\t\t\t\t\tmethod: getSensorEndpoint(sensor),\n\t\t\t\t\tparams: {\n\t\t\t\t\t\tsensor: sensor.name,\n\t\t\t\t\t\tresponse_template: {},\n\t\t\t\t\t},\n\t\t\t\t\tid: ++id,\n\t\t\t\t}) satisfies KlipperADXLRequest,\n\t\t\t() => {\n\t\t\t\treturn null;\n\t\t\t},\n\t\t\t(msg) => {\n\t\t\t\tif ('result' in msg && isKlipperAccelSubscriptionResponse(msg.result)) {\n\t\t\t\t\theader = msg.result.header;\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (isKlipperAccelSubscriptionData(msg) || isBeaconAccelSubscriptionData(msg)) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tif (!isSuccessResponse(msg)) {\n\t\t\t\t\tgetLogger().error(msg, 'Error in response from adxl345 subscription on klipper socket');\n\t\t\t\t\tthrow new Error(`${msg.error.error}: ${msg.error.message}`);\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t},\n\t\t)\n\t\t.pipe(\n\t\t\tshare(),\n\t\t\tfilter(\n\t\t\t\t(msg): msg is { params: KlipperAccelSubscriptionData | BeaconAccelSubscriptionData } =>\n\t\t\t\t\tisKlipperAccelSubscriptionData(msg) || isBeaconAccelSubscriptionData(msg),\n\t\t\t),\n\t\t\tmap((msg) => {\n\t\t\t\tif (isBeaconAccelSubscriptionData(msg)) {\n\t\t\t\t\treturn { overflows: 0, errors: 0, data: detrendBatch(msg.params) };\n\t\t\t\t}\n\t\t\t\tif (isKlipperAccelSubscriptionData(msg)) {\n\t\t\t\t\treturn { ...msg.params, data: detrendBatch(msg.params.data) };\n\t\t\t\t}\n\t\t\t\tthrow new Error('Got invalid data from klipper accelerometer subscription.');\n\t\t\t}),\n\t\t\tshare(),\n\t\t);\n\n\t// Keep a subscription open. The caller will be responsible for closing the stream.\n\t// This prevents us from rapidly connecting / disconnecting from the socket depending on downstream behavior.\n\tdataStream$.subscribe();\n\n\treturn {\n\t\tdataStream$,\n\t\tclose: () => {\n\t\t\tsubject.complete.bind(subject)();\n\t\t},\n\t};\n};\n","import { KlipperAccelSensorName, KlipperAccelSensorSchema } from '@/zods/hardware';\nimport { DoWork, fromWorker, runWorker } from 'observable-webworker';\nimport { EMPTY, Observable, Subject, asyncScheduler, firstValueFrom, from, of, scheduled } from 'rxjs';\nimport { filter, map, mergeAll, mergeMap, share } from 'rxjs/operators';\nimport { createSignalBuffers, type AccelSampleMs } from '@/app/analysis/_worker/processing';\nimport { createADXL345Stream } from '@/app/analysis/_worker/adxl345-stream';\nimport type { PSDResult, PSDWorkerInput, PSDWorkerOutput } from '@/app/analysis/_worker/psd';\n\nexport enum WorkCommand {\n\tSTART = 'START',\n\tSTOP = 'STOP',\n\tSTART_ACCUMULATION = 'START_ACCUMULATION',\n\tSTOP_ACCUMULATION = 'STOP_ACCUMULATION',\n}\n\nexport enum WorkResult {\n\tSTARTED = 'STARTED',\n\tSTOPPED = 'STOPPED',\n\tACCUMULATING = 'ACCUMULATING',\n\tACCUMULATED = 'ACCUMULATED',\n\tSIGNAL = 'SIGNAL',\n\tPSD = 'PSD',\n\tRX_RATE = 'RX_RATE',\n\tSAMPLE_RATE = 'SAMPLE_RATE',\n\tSPEC_SAMPLE_RATE = 'SPEC_SAMPLE_RATE',\n}\n\nexport type WorkerInput =\n\t| {\n\t\t\ttype: WorkCommand.STOP;\n\t  }\n\t| {\n\t\t\ttype: WorkCommand.START;\n\t\t\tpayload: {\n\t\t\t\turl: string;\n\t\t\t\tsensor: KlipperAccelSensorSchema;\n\t\t\t};\n\t  }\n\t| {\n\t\t\ttype: WorkCommand.START_ACCUMULATION;\n\t  }\n\t| {\n\t\t\ttype: WorkCommand.STOP_ACCUMULATION;\n\t  };\n\nexport type WorkerSignalOutput = {\n\ttype: WorkResult.SIGNAL;\n\t/**\n\t * The buffer of a Float64Array containing the timestamp in milliseconds and the x, y, z values.\n\t */\n\tpayload: ArrayBuffer;\n};\n\nexport type WorkerPSDOutput = {\n\ttype: WorkResult.PSD;\n\t/**\n\t * The power spectral density.\n\t */\n\tpayload: Omit<PSDResult, 'source'>;\n};\n\nexport type WorkerAccumulationResultOuput = {\n\ttype: WorkResult.ACCUMULATED;\n\t/**\n\t * The power spectral density.\n\t */\n\tpayload: PSDResult;\n};\n\nexport type WorkerAccumulationStarted = {\n\ttype: WorkResult.ACCUMULATING;\n};\n\nexport type WorkerOutput =\n\t| {\n\t\t\ttype: WorkResult.STARTED;\n\t\t\t/**\n\t\t\t * The first timestamp recieved from the socket (seconds).\n\t\t\t */\n\t\t\tpayload: number;\n\t  }\n\t| {\n\t\t\ttype: WorkResult.STOPPED;\n\t  }\n\t| WorkerSignalOutput\n\t| {\n\t\t\ttype: WorkResult.SAMPLE_RATE;\n\t\t\t/**\n\t\t\t * The sample rate in Hz.\n\t\t\t */\n\t\t\tpayload: number;\n\t  }\n\t| {\n\t\t\ttype: WorkResult.SPEC_SAMPLE_RATE;\n\t\t\t/**\n\t\t\t * Normalized spec sheet sample rate in Hz.\n\t\t\t */\n\t\t\tpayload: number;\n\t  }\n\t| WorkerPSDOutput\n\t| WorkerAccumulationStarted\n\t| WorkerAccumulationResultOuput;\n\nconst mapToWorkerOutput = <T>(mapFn: (input: T) => WorkerOutput) => map(mapFn);\n\n// Here be dragons. Thou art forewarned!\n// All workers needs serious refactor\n\nconst psdInput$ = new Subject<PSDWorkerInput>();\n\nconst psdWorker = fromWorker<PSDWorkerInput, PSDWorkerOutput>(\n\t() => new Worker(new URL('@/app/analysis/_worker/psd', import.meta.url)),\n\tpsdInput$,\n).pipe(share());\n\nconst psdOutput$ = psdWorker.pipe(\n\tfilter((output): output is { type: 'psd'; psd: PSDResult } => output.type === 'psd'),\n\tmapToWorkerOutput((output) => {\n\t\t// console.log('mapping psd result');\n\t\treturn {\n\t\t\ttype: WorkResult.PSD,\n\t\t\tpayload: output.psd,\n\t\t};\n\t}),\n\tshare(),\n);\nexport class AccelSensorWorker implements DoWork<WorkerInput, WorkerOutput> {\n\tprivate stream: ReturnType<typeof createADXL345Stream> | null = null;\n\tprivate signalProcessor: Awaited<ReturnType<typeof createSignalBuffers>> | null = null;\n\tprivate psdSubscribed = false;\n\tpublic work(input$: Observable<WorkerInput>) {\n\t\treturn input$.pipe(\n\t\t\tmergeMap((input): Observable<WorkerOutput> => {\n\t\t\t\tswitch (input.type) {\n\t\t\t\t\tcase WorkCommand.START: {\n\t\t\t\t\t\tif (this.stream != null) {\n\t\t\t\t\t\t\tthrow Error(`Stream already started`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.stream = createADXL345Stream(input.payload.url, input.payload.sensor);\n\t\t\t\t\t\tconst setup = async (): Promise<Observable<WorkerOutput>> => {\n\t\t\t\t\t\t\tif (this.stream == null) {\n\t\t\t\t\t\t\t\tthrow Error(`Stream not initialized`);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis.signalProcessor = await createSignalBuffers(this.stream.dataStream$);\n\t\t\t\t\t\t\tthis.signalProcessor.signal$.subscribe((s) =>\n\t\t\t\t\t\t\t\tpsdInput$.next({ command: 'sampleInput', payload: [s[0].toNumber(), s[1], s[2], s[3]] }),\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tthis.signalProcessor.specSampleRate$.subscribe((s) =>\n\t\t\t\t\t\t\t\tpsdInput$.next({ command: 'specSampleRateInput', payload: s }),\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tconst res = scheduled(\n\t\t\t\t\t\t\t\tfrom([\n\t\t\t\t\t\t\t\t\tof({\n\t\t\t\t\t\t\t\t\t\ttype: WorkResult.STARTED,\n\t\t\t\t\t\t\t\t\t\tpayload: this.signalProcessor.timeStamp,\n\t\t\t\t\t\t\t\t\t} as WorkerOutput),\n\t\t\t\t\t\t\t\t\tthis.signalProcessor.timeMappedSignal$.pipe(\n\t\t\t\t\t\t\t\t\t\tmapToWorkerOutput((data) => {\n\t\t\t\t\t\t\t\t\t\t\tconst sample = new Float64Array([data[0].toNumber(), ...data.slice(1)] as AccelSampleMs);\n\t\t\t\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\t\t\t\ttype: WorkResult.SIGNAL,\n\t\t\t\t\t\t\t\t\t\t\t\tpayload: sample.buffer,\n\t\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\tthis.signalProcessor.sampleRate$.pipe(\n\t\t\t\t\t\t\t\t\t\tmapToWorkerOutput((sampleRate) => ({\n\t\t\t\t\t\t\t\t\t\t\ttype: WorkResult.SAMPLE_RATE,\n\t\t\t\t\t\t\t\t\t\t\tpayload: sampleRate,\n\t\t\t\t\t\t\t\t\t\t})),\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\tthis.signalProcessor.specSampleRate$.pipe(\n\t\t\t\t\t\t\t\t\t\tmapToWorkerOutput((specSampleRate) => ({\n\t\t\t\t\t\t\t\t\t\t\ttype: WorkResult.SPEC_SAMPLE_RATE,\n\t\t\t\t\t\t\t\t\t\t\tpayload: specSampleRate,\n\t\t\t\t\t\t\t\t\t\t})),\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\tthis.psdSubscribed ? EMPTY : psdOutput$,\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\tasyncScheduler,\n\t\t\t\t\t\t\t).pipe(mergeAll());\n\t\t\t\t\t\t\tif (!this.psdSubscribed) {\n\t\t\t\t\t\t\t\tthis.psdSubscribed = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn res;\n\t\t\t\t\t\t};\n\t\t\t\t\t\treturn from(setup()).pipe(mergeAll());\n\t\t\t\t\t}\n\t\t\t\t\tcase WorkCommand.STOP: {\n\t\t\t\t\t\tif (this.stream != null) {\n\t\t\t\t\t\t\tthis.stream.close();\n\t\t\t\t\t\t\tthis.stream = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn of({\n\t\t\t\t\t\t\ttype: WorkResult.STOPPED,\n\t\t\t\t\t\t} as WorkerOutput);\n\t\t\t\t\t}\n\t\t\t\t\tcase WorkCommand.START_ACCUMULATION: {\n\t\t\t\t\t\tif (this.signalProcessor == null) {\n\t\t\t\t\t\t\tthrow Error(`Stream not initialized`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (psdWorker == null) {\n\t\t\t\t\t\t\tthrow Error(`PSD worker not initialized`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tpsdInput$.next({ command: 'accumulate', payload: true });\n\t\t\t\t\t\treturn scheduled(\n\t\t\t\t\t\t\tfrom([\n\t\t\t\t\t\t\t\tof({\n\t\t\t\t\t\t\t\t\ttype: WorkResult.ACCUMULATING,\n\t\t\t\t\t\t\t\t} as WorkerOutput),\n\t\t\t\t\t\t\t\tscheduled(\n\t\t\t\t\t\t\t\t\tfrom(\n\t\t\t\t\t\t\t\t\t\tfirstValueFrom(\n\t\t\t\t\t\t\t\t\t\t\tpsdWorker.pipe(\n\t\t\t\t\t\t\t\t\t\t\t\tfilter(\n\t\t\t\t\t\t\t\t\t\t\t\t\t(output): output is { type: 'accumulation_finished'; psd: PSDResult } =>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\toutput.type === 'accumulation_finished',\n\t\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t).pipe(\n\t\t\t\t\t\t\t\t\t\tmapToWorkerOutput((result) => {\n\t\t\t\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\t\t\t\ttype: WorkResult.ACCUMULATED,\n\t\t\t\t\t\t\t\t\t\t\t\tpayload: result.psd,\n\t\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\tasyncScheduler,\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\tasyncScheduler,\n\t\t\t\t\t\t).pipe(mergeAll());\n\t\t\t\t\t}\n\t\t\t\t\tcase WorkCommand.STOP_ACCUMULATION: {\n\t\t\t\t\t\tif (psdWorker == null) {\n\t\t\t\t\t\t\tthrow Error(`Stream not initialized`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (psdWorker == null) {\n\t\t\t\t\t\t\tthrow Error(`PSD process not initialized`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tpsdInput$.next({ command: 'accumulate', payload: false });\n\t\t\t\t\t\treturn EMPTY;\n\t\t\t\t\t}\n\t\t\t\t\tdefault: {\n\t\t\t\t\t\tthis.stream?.close();\n\t\t\t\t\t\tthis.stream = null;\n\t\t\t\t\t\tthrow new Error(`Invalid command`);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t}\n\tpublic selectTransferables(output: WorkerOutput): Transferable[] {\n\t\tswitch (output.type) {\n\t\t\tcase WorkResult.SIGNAL: {\n\t\t\t\treturn [output.payload];\n\t\t\t}\n\t\t\tcase WorkResult.PSD: {\n\t\t\t\treturn [\n\t\t\t\t\toutput.payload.x.estimates.buffer,\n\t\t\t\t\toutput.payload.x.frequencies.buffer,\n\t\t\t\t\toutput.payload.y.estimates.buffer,\n\t\t\t\t\toutput.payload.y.frequencies.buffer,\n\t\t\t\t\toutput.payload.z.estimates.buffer,\n\t\t\t\t\toutput.payload.z.frequencies.buffer,\n\t\t\t\t\toutput.payload.total.estimates.buffer,\n\t\t\t\t\toutput.payload.total.frequencies.buffer,\n\t\t\t\t];\n\t\t\t}\n\t\t\tcase WorkResult.ACCUMULATED: {\n\t\t\t\treturn [\n\t\t\t\t\toutput.payload.x.estimates.buffer,\n\t\t\t\t\toutput.payload.x.frequencies.buffer,\n\t\t\t\t\toutput.payload.y.estimates.buffer,\n\t\t\t\t\toutput.payload.y.frequencies.buffer,\n\t\t\t\t\toutput.payload.z.estimates.buffer,\n\t\t\t\t\toutput.payload.z.frequencies.buffer,\n\t\t\t\t\toutput.payload.total.estimates.buffer,\n\t\t\t\t\toutput.payload.total.frequencies.buffer,\n\t\t\t\t];\n\t\t\t}\n\t\t\tdefault: {\n\t\t\t\treturn [];\n\t\t\t}\n\t\t}\n\t}\n}\n\nrunWorker(AccelSensorWorker);\n","import { VariantProps, cva } from 'class-variance-authority';\nimport { twMerge } from 'tailwind-merge';\nimport { z } from 'zod';\n\nexport const badgeColorOptions = z.union([\n\tz.literal('rose'),\n\tz.literal('red'),\n\tz.literal('yellow'),\n\tz.literal('orange'),\n\tz.literal('green'),\n\tz.literal('lime'),\n\tz.literal('blue'),\n\tz.literal('sky'),\n\tz.literal('indigo'),\n\tz.literal('purple'),\n\tz.literal('pink'),\n\tz.literal('brand'),\n\tz.literal('gray'),\n\tz.literal('plain'),\n]);\nexport const badgeTextColorStyle = cva('', {\n\tvariants: {\n\t\tcolor: {\n\t\t\trose: 'text-rose-700 dark:text-rose-400',\n\t\t\tred: 'text-red-700 dark:text-red-400',\n\t\t\tyellow: 'text-yellow-800 dark:text-yellow-500',\n\t\t\torange: 'text-orange-800 dark:text-orange-500',\n\t\t\tgreen: 'text-green-700 dark:text-green-400',\n\t\t\tlime: 'text-lime-700 dark:text-lime-400',\n\t\t\tblue: 'text-blue-700 dark:text-blue-400',\n\t\t\tsky: 'text-sky-700 dark:text-sky-400',\n\t\t\tindigo: 'text-indigo-700 dark:text-indigo-400',\n\t\t\tpurple: 'text-purple-700 dark:text-purple-400',\n\t\t\tpink: 'text-pink-700 dark:text-pink-400',\n\t\t\tbrand: 'text-brand-700 dark:text-brand-400',\n\t\t\tgray: 'text-zinc-600 dark:text-zinc-400',\n\t\t\tplain: 'text-zinc-900 dark:text-zinc-100',\n\t\t} satisfies { [key in z.infer<typeof badgeColorOptions>]: string },\n\t},\n});\n\nexport const badgeBackgroundColorStyle = cva('', {\n\tvariants: {\n\t\tcolor: {\n\t\t\trose: 'bg-rose-50 dark:bg-rose-400/10',\n\t\t\tred: 'bg-red-50 dark:bg-red-400/10',\n\t\t\tyellow: 'bg-yellow-50 dark:bg-yellow-400/10',\n\t\t\torange: 'bg-orange-50 dark:bg-orange-400/10',\n\t\t\tgreen: 'bg-green-50 dark:bg-green-500/10',\n\t\t\tlime: 'bg-lime-50 dark:bg-lime-500/10',\n\t\t\tblue: 'bg-blue-50 dark:bg-blue-400/10',\n\t\t\tsky: 'bg-sky-50 dark:bg-sky-400/10',\n\t\t\tindigo: 'bg-indigo-50 dark:bg-indigo-400/10',\n\t\t\tpurple: 'bg-purple-50 dark:bg-purple-400/10',\n\t\t\tpink: 'bg-pink-50 dark:bg-pink-400/10',\n\t\t\tbrand: 'bg-brand-100 dark:bg-brand-400/10',\n\t\t\tgray: 'bg-zinc-50 dark:bg-zinc-400/10',\n\t\t\tplain: 'bg-zinc-900/10 dark:bg-zinc-100/10',\n\t\t} satisfies { [key in z.infer<typeof badgeColorOptions>]: string },\n\t},\n});\n\nexport const badgeBorderColorStyle = cva('', {\n\tvariants: {\n\t\tcolor: {\n\t\t\trose: 'border-rose-600/10 dark:border-rose-400/20 ring-rose-600/10 dark:ring-rose-400/20',\n\t\t\tred: 'border-red-600/10 dark:border-red-400/20 ring-red-600/10 dark:ring-red-400/20',\n\t\t\tyellow: 'border-yellow-600/20 dark:border-yellow-400/20 ring-yellow-600/20 dark:ring-yellow-400/20',\n\t\t\torange: 'border-orange-600/20 dark:border-orange-400/20 ring-orange-600/20 dark:ring-orange-400/20',\n\t\t\tgreen: 'border-green-600/20 dark:border-green-500/20 ring-green-600/20 dark:ring-green-500/20',\n\t\t\tlime: 'border-lime-600/20 dark:border-lime-500/20 ring-lime-600/20 dark:ring-lime-500/20',\n\t\t\tblue: 'border-blue-700/10 dark:border-blue-400/30 ring-blue-700/10 dark:ring-blue-400/30',\n\t\t\tsky: 'border-sky-700/10 dark:border-sky-400/30 ring-sky-700/10 dark:ring-sky-400/30',\n\t\t\tindigo: 'border-indigo-700/10 dark:border-indigo-400/30 ring-indigo-700/10 dark:ring-indigo-400/30',\n\t\t\tpurple: 'border-purple-700/10 dark:border-purple-400/30 ring-purple-700/10 dark:ring-purple-400/30',\n\t\t\tpink: 'border-pink-700/10 dark:border-pink-400/20 ring-pink-700/10 dark:ring-pink-400/20',\n\t\t\tbrand: 'border-brand-600/40 dark:border-brand-400/30 ring-brand-600/40 dark:ring-brand-400/30',\n\t\t\tgray: 'border-zinc-500/10 dark:border-zinc-400/20 ring-zinc-500/10 dark:ring-zinc-400/20',\n\t\t\tplain: 'border-zinc-900 dark:border-zinc-100 ring-zinc-900 dark:ring-zinc-100',\n\t\t} satisfies { [key in z.infer<typeof badgeColorOptions>]: string },\n\t},\n});\n\nconst badgeStyle = cva('flex-0 inline-flex w-auto items-center rounded-md font-medium ring-1 ring-inset', {\n\tvariants: {\n\t\tsize: {\n\t\t\tsm: 'px-1.5 gap-1.5 py-1 text-2xs leading-3',\n\t\t\tmd: 'px-2 gap-2 py-1 text-xs leading-4',\n\t\t\tlg: 'px-2 gap-2 py-1 text-xs leading-6',\n\t\t},\n\t\tcolor: {\n\t\t\trose: [\n\t\t\t\tbadgeBackgroundColorStyle({ color: 'rose' }),\n\t\t\t\tbadgeBorderColorStyle({ color: 'rose' }),\n\t\t\t\tbadgeTextColorStyle({ color: 'rose' }),\n\t\t\t],\n\t\t\tred: [\n\t\t\t\tbadgeBackgroundColorStyle({ color: 'red' }),\n\t\t\t\tbadgeBorderColorStyle({ color: 'red' }),\n\t\t\t\tbadgeTextColorStyle({ color: 'red' }),\n\t\t\t],\n\t\t\tyellow: [\n\t\t\t\tbadgeBackgroundColorStyle({ color: 'yellow' }),\n\t\t\t\tbadgeBorderColorStyle({ color: 'yellow' }),\n\t\t\t\tbadgeTextColorStyle({ color: 'yellow' }),\n\t\t\t],\n\t\t\torange: [\n\t\t\t\tbadgeBackgroundColorStyle({ color: 'orange' }),\n\t\t\t\tbadgeBorderColorStyle({ color: 'orange' }),\n\t\t\t\tbadgeTextColorStyle({ color: 'orange' }),\n\t\t\t],\n\t\t\tgreen: [\n\t\t\t\tbadgeBackgroundColorStyle({ color: 'green' }),\n\t\t\t\tbadgeBorderColorStyle({ color: 'green' }),\n\t\t\t\tbadgeTextColorStyle({ color: 'green' }),\n\t\t\t],\n\t\t\tlime: [\n\t\t\t\tbadgeBackgroundColorStyle({ color: 'lime' }),\n\t\t\t\tbadgeBorderColorStyle({ color: 'lime' }),\n\t\t\t\tbadgeTextColorStyle({ color: 'lime' }),\n\t\t\t],\n\t\t\tblue: [\n\t\t\t\tbadgeBackgroundColorStyle({ color: 'blue' }),\n\t\t\t\tbadgeBorderColorStyle({ color: 'blue' }),\n\t\t\t\tbadgeTextColorStyle({ color: 'blue' }),\n\t\t\t],\n\t\t\tsky: [\n\t\t\t\tbadgeBackgroundColorStyle({ color: 'sky' }),\n\t\t\t\tbadgeBorderColorStyle({ color: 'sky' }),\n\t\t\t\tbadgeTextColorStyle({ color: 'sky' }),\n\t\t\t],\n\t\t\tindigo: [\n\t\t\t\tbadgeBackgroundColorStyle({ color: 'indigo' }),\n\t\t\t\tbadgeBorderColorStyle({ color: 'indigo' }),\n\t\t\t\tbadgeTextColorStyle({ color: 'indigo' }),\n\t\t\t],\n\t\t\tpurple: [\n\t\t\t\tbadgeBackgroundColorStyle({ color: 'purple' }),\n\t\t\t\tbadgeBorderColorStyle({ color: 'purple' }),\n\t\t\t\tbadgeTextColorStyle({ color: 'purple' }),\n\t\t\t],\n\t\t\tpink: [\n\t\t\t\tbadgeBackgroundColorStyle({ color: 'pink' }),\n\t\t\t\tbadgeBorderColorStyle({ color: 'pink' }),\n\t\t\t\tbadgeTextColorStyle({ color: 'pink' }),\n\t\t\t],\n\t\t\tbrand: [\n\t\t\t\tbadgeBackgroundColorStyle({ color: 'brand' }),\n\t\t\t\tbadgeBorderColorStyle({ color: 'brand' }),\n\t\t\t\tbadgeTextColorStyle({ color: 'brand' }),\n\t\t\t],\n\t\t\tgray: [\n\t\t\t\tbadgeBackgroundColorStyle({ color: 'gray' }),\n\t\t\t\tbadgeBorderColorStyle({ color: 'gray' }),\n\t\t\t\tbadgeTextColorStyle({ color: 'gray' }),\n\t\t\t],\n\t\t\tplain: [\n\t\t\t\tbadgeBackgroundColorStyle({ color: 'plain' }),\n\t\t\t\tbadgeBorderColorStyle({ color: 'plain' }),\n\t\t\t\tbadgeTextColorStyle({ color: 'plain' }),\n\t\t\t],\n\t\t} satisfies { [key in z.infer<typeof badgeColorOptions>]: string[] },\n\t},\n\tdefaultVariants: {\n\t\tsize: 'md',\n\t\tcolor: 'gray',\n\t},\n});\n\nexport type BadgeProps = JSX.IntrinsicElements['span'] &\n\tVariantProps<typeof badgeStyle> & {\n\t\tchildren: React.ReactNode;\n\t\tclassName?: string;\n\t};\n\nexport const Badge: React.FC<BadgeProps> = (props) => {\n\tconst { size, color, className, children, ...forwardProps } = props;\n\treturn (\n\t\t<span className={twMerge(badgeStyle({ size, color }), className)} {...forwardProps}>\n\t\t\t{children}\n\t\t</span>\n\t);\n};\n","import { LoggerOptions } from 'pino';\n\nexport const globalPinoOpts: LoggerOptions = {\n\ttimestamp: true,\n\tlevel: process.env.NODE_ENV === 'development' ? 'debug' : 'info',\n};\n","import { proxyClient, trpc } from '@/utils/trpc';\nexport { trpc, proxyClient as trpcClient };\n","'use client';\nimport { createTRPCProxyClient, httpBatchLink } from '@trpc/client';\nimport { createTRPCNext } from '@trpc/next';\nimport type { AppRouter } from '@/server/routers/index';\nexport type {\n\tPrinterRouterLike,\n\tDropdownQuery,\n\tDropdownQueryKeys,\n\tDropdownQueryInput,\n\tDropdownQueryOutput,\n} from '@/server/routers/printer';\n\nexport function getBaseUrl() {\n\tif (typeof window !== 'undefined')\n\t\t// browser should use relative path\n\t\treturn '/configure';\n\tif (process.env.RENDER_INTERNAL_HOSTNAME)\n\t\t// reference for render.com\n\t\treturn `http://${process.env.RENDER_INTERNAL_HOSTNAME}:${process.env.PORT}/configure`;\n\t// assume localhost\n\treturn `http://127.0.0.1:${process.env.PORT ?? 3000}/configure`;\n}\nexport const trpc = createTRPCNext<AppRouter>({\n\tconfig() {\n\t\treturn {\n\t\t\tlinks: [\n\t\t\t\thttpBatchLink({\n\t\t\t\t\t/**\n\t\t\t\t\t * @link https://trpc.io/docs/ssr\n\t\t\t\t\t **/\n\t\t\t\t\turl: `${getBaseUrl()}/api/trpc`,\n\t\t\t\t\tmaxURLLength: 2083, // a suitable size\n\t\t\t\t}),\n\t\t\t],\n\t\t};\n\t},\n\toverrides: {\n\t\tuseMutation: {\n\t\t\t/**\n\t\t\t * This function is called whenever a `.useMutation` succeeds\n\t\t\t **/\n\t\t\tasync onSuccess(opts) {\n\t\t\t\t/**\n\t\t\t\t * @note that order here matters:\n\t\t\t\t * The order here allows route changes in `onSuccess` without\n\t\t\t\t * having a flash of content change whilst redirecting.\n\t\t\t\t **/\n\t\t\t\t// Calls the `onSuccess` defined in the `useQuery()`-options:\n\t\t\t\tawait opts.originalFn();\n\t\t\t\t// Invalidate all queries in the react-query cache:\n\t\t\t\tawait opts.queryClient.invalidateQueries();\n\t\t\t},\n\t\t},\n\t},\n\t/**\n\t * @link https://trpc.io/docs/ssr\n\t **/\n\tssr: false,\n});\nexport const proxyClient = createTRPCProxyClient<AppRouter>({\n\tlinks: [\n\t\thttpBatchLink({\n\t\t\t/**\n\t\t\t * @link https://trpc.io/docs/ssr\n\t\t\t **/\n\t\t\turl: `${getBaseUrl()}/api/trpc`,\n\t\t\tmaxURLLength: 2083, // a suitable size\n\t\t}),\n\t],\n});\n","import { z } from 'zod';\nimport { KlipperAccelSensorNameSchame } from '@/zods/hardware';\n\nexport const aDXL345ResponseHeaderSchema = z.union([\n\tz.literal('time'),\n\tz.literal('x_acceleration'),\n\tz.literal('y_acceleration'),\n\tz.literal('z_acceleration'),\n\tz.literal('x'), // Beacon returns x, y, z\n\tz.literal('y'), // Beacon returns x, y, z\n\tz.literal('z'), // Beacon returns x, y, z\n]);\n\nexport const klipperADXL345SubscriptionResponseSchema = z.object({\n\theader: z.tuple([\n\t\taDXL345ResponseHeaderSchema,\n\t\taDXL345ResponseHeaderSchema,\n\t\taDXL345ResponseHeaderSchema,\n\t\taDXL345ResponseHeaderSchema,\n\t]),\n});\n\nexport const klipperADXL345SubscriptionDataSchema = z.object({\n\tdata: z.array(z.tuple([z.number(), z.number(), z.number(), z.number()])),\n\toverflows: z.number().optional(),\n\terrors: z.number().optional(),\n});\n\nexport const beaconAccelSubscriptionDataSchema = z.array(z.tuple([z.number(), z.number(), z.number(), z.number()]));\n\nexport const psdSchema = z.object({\n\tfrequencies: z.array(z.number()),\n\testimates: z.array(z.number()),\n\tpowerRange: z.object({\n\t\tmax: z.number(),\n\t\tmin: z.number(),\n\t}),\n});\n\nexport const accumulatedPSDSchema = z.object({\n\tx: psdSchema,\n\ty: psdSchema,\n\tz: psdSchema,\n\ttotal: psdSchema,\n});\n\n// Macro data structure\nexport const macroIDSchema = z.string().brand('MacroID');\n\nexport const macroSequenceIDSchema = z.string().brand('MacroSequenceID');\n\nexport const macroRecordingIdSchema = z.string().brand('MacroRecordingID');\n\nexport const macroRecordingRunIdSchema = z.string().brand('MacroRecordingRunID');\n\nexport const macroRecordingSettingsSchema = z\n\t.object({\n\t\tcapturePSD: z.boolean().default(false),\n\t\taccelerometer: KlipperAccelSensorNameSchame.optional(),\n\t\tcolor: z.string().optional(),\n\t})\n\t.superRefine((val, ctx) => {\n\t\tif (val.capturePSD && val.accelerometer == null) {\n\t\t\tctx.addIssue({\n\t\t\t\tcode: z.ZodIssueCode.custom,\n\t\t\t\tmessage: 'Required when recording resonance data',\n\t\t\t\tpath: ['accelerometer'],\n\t\t\t});\n\t\t}\n\t\treturn val;\n\t});\n\nexport const macroRecordingSchema = z.object({\n\tid: macroRecordingIdSchema,\n\tmacroRecordingRunId: macroRecordingRunIdSchema,\n\tmacroId: macroIDSchema,\n\tsequenceId: macroSequenceIDSchema,\n\tstartTimeStamp: z.number(),\n\tendTimeStamp: z.number(),\n\taccelerometer: KlipperAccelSensorNameSchame,\n\trecordingHardwareName: z.string(),\n\tpsd: accumulatedPSDSchema,\n\tname: z.string(),\n});\n\nexport const macroRecordingSchemaWithoutSourcePSDs = macroRecordingSchema;\n\nexport const macroSequenceSchema = z.object({\n\tid: macroSequenceIDSchema,\n\tname: z.string(),\n\trecording: macroRecordingSettingsSchema.nullable(),\n\tgcode: z.string().min(2),\n});\n\nexport const macroSchema = z.object({\n\tid: macroIDSchema,\n\tname: z.string(),\n\tdescription: z.string(),\n\tcreatedAtTimeStamp: z.number(),\n\tupdatedAtTimeStamp: z.number().nullable(),\n\trecordingCount: z.record(macroSequenceIDSchema, z.number()),\n\tsequences: z.array(macroSequenceSchema),\n});\n\nexport const createMacroSchema = macroSchema.omit({\n\trecordingCount: true,\n\tcreatedAtTimeStamp: true,\n\tupdatedAtTimeStamp: true,\n});\n\n// inferred types:\n\nexport type KlipperAccelResponseHeader = z.infer<typeof aDXL345ResponseHeaderSchema>;\n\nexport type KlipperAccelSubscriptionResponse = z.infer<typeof klipperADXL345SubscriptionResponseSchema>;\n\nexport type KlipperAccelSubscriptionData = z.infer<typeof klipperADXL345SubscriptionDataSchema>;\nexport type BeaconAccelSubscriptionData = z.infer<typeof beaconAccelSubscriptionDataSchema>;\n\nexport type PSD = z.infer<typeof psdSchema>;\n\nexport type AccumulatedPSD = z.infer<typeof accumulatedPSDSchema>;\n\nexport type MacroID = z.infer<typeof macroIDSchema>;\n\nexport type MacroRecordingSettings = z.infer<typeof macroRecordingSettingsSchema>;\n\nexport type MacroRecording = z.infer<typeof macroRecordingSchema>;\n\nexport type MacroRecordingWithoutSourcePSDs = z.infer<typeof macroRecordingSchemaWithoutSourcePSDs>;\n\nexport type MacroSequence = z.infer<typeof macroSequenceSchema>;\n\nexport type Macro = z.infer<typeof macroSchema>;\n","import { z } from 'zod';\nimport { serverSchema } from '@/env/schema.mjs';\nimport { PrinterRailDefinition, Stepper } from '@/zods/motion';\nimport { badgeColorOptions } from '@/components/common/badge';\n\nexport const thermistors = [\n\t'EPCOS 100K B57560G104F',\n\t'ATC Semitec 104GT-2',\n\t'ATC Semitec 104NT-4-R025H42G',\n\t'Generic 3950',\n\t'Honeywell 100K 135-104LAG-J01',\n\t'NTC 100K MGB18-104F39050L32',\n\t'SliceEngineering 450',\n\t'TDK NTCG104LH104JT1',\n\t'PT1000',\n] as const;\n\nlet startsWithServerValidation = '';\nif (process.env.RATOS_CONFIGURATION_PATH) {\n\tconst environment = serverSchema.parse(process.env);\n\tstartsWithServerValidation = environment.RATOS_CONFIGURATION_PATH;\n}\nconst hardwareType = z.object({\n\tpath: z.string().startsWith(startsWithServerValidation).endsWith('.cfg'),\n\tid: z.string(),\n});\n\nexport const Thermistor = z.enum(thermistors);\n\nexport const Hotend = hardwareType.extend({\n\ttype: z.literal('hotend'),\n\ttitle: z.string(),\n\tthermistor: z.enum(thermistors),\n\tflowType: z.union([z.literal('sf'), z.literal('hf'), z.literal('uhf')]),\n});\n\nexport const Nozzle = z.object({\n\ttype: z.enum(['Regular', 'CHT']),\n\tdiameter: z.number().min(0.2).max(1.8),\n});\n\nexport const Extruder = hardwareType.extend({\n\ttype: z.literal('extruder'),\n\tstepper: Stepper.shape.id.optional(),\n\tcurrent: PrinterRailDefinition.shape.current.optional(),\n\ttitle: z.string(),\n});\n\nexport const Probe = hardwareType.extend({\n\ttype: z.literal('static-probe').or(z.literal('stowable-probe')),\n\ttitle: z.string(),\n});\n\nexport const Endstop = z.object({\n\tid: z.enum(['endstop', 'endstop-toolboard', 'sensorless']),\n\ttitle: z.string(),\n\tbadge: z\n\t\t.array(\n\t\t\tz.object({\n\t\t\t\tchildren: z.string(),\n\t\t\t\tcolor: badgeColorOptions,\n\t\t\t}),\n\t\t)\n\t\t.optional(),\n});\n\nexport const KlipperAccelSensorNameSchame = z.union([\n\tz.literal('toolboard_t0'),\n\tz.literal('toolboard_t1'),\n\tz.literal('controlboard'),\n\tz.literal('rpi'),\n\tz.literal('beacon'),\n]);\n\nexport const AccelerometerType = z.union([z.literal('adxl345'), z.literal('lis2dw'), z.literal('beacon')]);\n\nexport const Accelerometer = z.object({\n\tid: z.enum(['toolboard', 'controlboard', 'sbc', 'none', 'beacon']),\n\ttitle: z.string(),\n\taccelerometerType: AccelerometerType.default('adxl345').optional(),\n});\n\nexport type KlipperAccelSensorName = z.infer<typeof KlipperAccelSensorNameSchame>;\n\nexport const klipperAccelSensorSchema = z.object({\n\tname: KlipperAccelSensorNameSchame,\n\ttype: AccelerometerType,\n});\n\nexport type KlipperAccelSensorSchema = z.infer<typeof klipperAccelSensorSchema>;\n\nexport const AccelerometerWithType = Accelerometer.extend({\n\taccelerometerType: AccelerometerType,\n});\n\nexport type AccelerometerWithType = z.infer<typeof AccelerometerWithType>;\n\nexport const Fan = z.object({\n\tid: z.enum([\n\t\t'2pin',\n\t\t'4pin',\n\t\t'4pin-dedicated',\n\t\t'2pin-toolboard',\n\t\t'4pin-toolboard',\n\t\t'4pin-dedicated-toolboard',\n\t\t'none',\n\t]),\n\ttitle: z.string(),\n\tbadge: z\n\t\t.array(\n\t\t\tz.object({\n\t\t\t\tchildren: z.string(),\n\t\t\t\tcolor: badgeColorOptions,\n\t\t\t}),\n\t\t)\n\t\t.optional(),\n});\n","import * as z from 'zod';\nimport type { Board, Toolboard } from '@/zods/boards';\nexport enum StepperVoltage {\n\t'24V' = 24,\n\t'36V' = 36,\n\t'48V' = 48,\n\t'56V' = 56,\n\t'60V' = 60,\n}\n\nexport const Voltages: { id: StepperVoltage; title: string }[] = [\n\t{ id: StepperVoltage['24V'], title: '24V' },\n\t{ id: StepperVoltage['36V'], title: '36V' },\n\t{ id: StepperVoltage['48V'], title: '48V' },\n\t{ id: StepperVoltage['56V'], title: '56V' },\n\t{ id: StepperVoltage['60V'], title: '60V' },\n];\n\nexport const getSupportedVoltages = (\n\tboard: Board | Toolboard | null,\n\tdriver?: z.infer<typeof Driver>,\n): typeof Voltages => {\n\tif (driver?.external) {\n\t\treturn Voltages.filter((v) => driver?.voltages?.includes(v.id) || v.id === StepperVoltage['24V']);\n\t}\n\treturn Voltages.filter((v) => board?.driverVoltages?.includes(v.id) || v.id === StepperVoltage['24V']).filter(\n\t\t(v) => driver?.voltages?.includes(v.id) || v.id === StepperVoltage['24V'],\n\t);\n};\n\nexport const matchesDefaultRail = (\n\trail: Zod.infer<typeof BasePrinterRail>,\n\tdefaultRail: Zod.infer<typeof PrinterRailDefinition>,\n\tperformanceMode: boolean,\n) => {\n\treturn (\n\t\trail.axis === defaultRail.axis &&\n\t\trail.driver.id === defaultRail.driver.id &&\n\t\trail.stepper.id === defaultRail.stepper.id &&\n\t\t((performanceMode &&\n\t\t\tdefaultRail.performanceMode &&\n\t\t\trail.voltage === defaultRail.performanceMode?.voltage &&\n\t\t\trail.current === defaultRail.performanceMode?.current) ||\n\t\t\t(!performanceMode && rail.voltage === defaultRail.voltage && rail.current === defaultRail.current))\n\t);\n};\n\nexport const Voltage = z.nativeEnum(StepperVoltage);\n\nexport const DriverID = z.string();\n\nexport const Driver = z\n\t.object({\n\t\tid: DriverID,\n\t\ttitle: z.string(),\n\t\tprotocol: z.enum(['SPI', 'UART']),\n\t\tcoolingCurrentThreshold: z.number(),\n\t\tvoltages: Voltage.array(),\n\t\tmaxCurrent: z.number().min(0),\n\t\texternal: z.boolean().optional(),\n\t})\n\t.and(\n\t\tz\n\t\t\t.object({\n\t\t\t\ttype: z.enum(['TMC2209', 'TMC2226', 'TMC5160', 'TMC2130']),\n\t\t\t\tsenseResistor: z.number().min(0),\n\t\t\t})\n\t\t\t.or(\n\t\t\t\tz.object({\n\t\t\t\t\ttype: z.enum(['TMC2240']),\n\t\t\t\t}),\n\t\t\t),\n\t);\n\nconst BaseStepperPreset = z.object({\n\tvoltage: Voltage,\n\trun_current: z.number(),\n\tdriver: DriverID,\n});\n\nconst BaseSPIStepperPreset = BaseStepperPreset.extend({\n\tdriver_MSLUT0: z.number().optional(),\n\tdriver_MSLUT1: z.number().optional(),\n\tdriver_MSLUT2: z.number().optional(),\n\tdriver_MSLUT3: z.number().optional(),\n\tdriver_MSLUT4: z.number().optional(),\n\tdriver_MSLUT5: z.number().optional(),\n\tdriver_MSLUT6: z.number().optional(),\n\tdriver_MSLUT7: z.number().optional(),\n\tdriver_W0: z.number().optional(),\n\tdriver_W1: z.number().optional(),\n\tdriver_W2: z.number().optional(),\n\tdriver_W3: z.number().optional(),\n\tdriver_X1: z.number().optional(),\n\tdriver_X2: z.number().optional(),\n\tdriver_X3: z.number().optional(),\n\tdriver_START_SIN: z.number().optional(),\n\tdriver_START_SIN90: z.number().optional(),\n\tdriver_IHOLDDELAY: z.number().optional(),\n\tdriver_TPOWERDOWN: z.number().optional(),\n\tdriver_TBL: z.number().optional(),\n\tdriver_TOFF: z.number().optional(),\n\tdriver_HEND: z.number().optional(),\n\tdriver_HSTRT: z.number().optional(),\n\tdriver_PWM_AUTOSCALE: z.boolean().optional(),\n\tdriver_PWM_FREQ: z.number().optional(),\n\tdriver_PWM_GRAD: z.number().optional(),\n\tdriver_PWM_AMPL: z.number().optional(),\n\tdriver_SGT: z.number().optional(),\n});\n\nexport const Stepper = z.object({\n\tid: z.string(),\n\ttitle: z.string(),\n\tfullStepsPerRotation: z.number().default(200),\n\tmaxPeakCurrent: z.number().min(0),\n\tpresets: z\n\t\t.array(\n\t\t\tz.discriminatedUnion('driver', [\n\t\t\t\tBaseSPIStepperPreset.extend({\n\t\t\t\t\tdriver: z.enum(['TMC2130', 'TMC5160']),\n\t\t\t\t\tsense_resistor: z.number(),\n\t\t\t\t}),\n\t\t\t\tBaseSPIStepperPreset.extend({\n\t\t\t\t\tdriver: z.enum(['TMC2240']),\n\t\t\t\t}),\n\t\t\t\tBaseStepperPreset.extend({\n\t\t\t\t\tdriver: z.enum(['TMC2209']),\n\t\t\t\t\tdriver_TBL: z.number().optional(),\n\t\t\t\t\tdriver_TOFF: z.number().optional(),\n\t\t\t\t\tdriver_HEND: z.number().optional(),\n\t\t\t\t\tdriver_HSTRT: z.number().optional(),\n\t\t\t\t\tsense_resistor: z.number(),\n\t\t\t\t}),\n\t\t\t]),\n\t\t)\n\t\t.optional()\n\t\t.describe('Stepper presets are tightly coupled to the driver type, sense_resistor, stepper, voltage and current.'),\n});\n\nexport enum PrinterAxis {\n\t'x' = 'x',\n\t'dual_carriage' = 'dual_carriage',\n\t'x1' = 'x1',\n\t'y' = 'y',\n\t'y1' = 'y1',\n\t'y2' = 'y2',\n\t'z' = 'z',\n\t'z1' = 'z1',\n\t'z2' = 'z2',\n\t'z3' = 'z3',\n\t'extruder' = 'extruder',\n\t'extruder1' = 'extruder1',\n}\n\nexport const BasePrinterRail = z.object({\n\taxis: z.nativeEnum(PrinterAxis).describe('Axis of the rail'),\n\taxisDescription: z.string().optional().describe('Description of the axis'),\n\tdriver: Driver.describe('Stepper driver used on this axis'),\n\tvoltage: Voltage.default(StepperVoltage['24V']).describe('Voltage of the stepper driver'),\n\tstepper: Stepper.describe('Stepper motor connected to this axis'),\n\tinvertStepperDirection: z.boolean().default(false).describe('Invert the default direction of the stepper motor'),\n\taxisMinimum: z.number().optional().describe('Minimum position of the axis in mm'),\n\taxisMaximum: z.number().optional().describe('Maximum position of the axis in mm'),\n\taxisEndstop: z.number().optional().describe('Endstop position of the axis in mm'),\n\tmotorSlot: z.string().optional().describe('Optional board motor slot of the stepper driver'),\n\tcurrent: z.number().min(0),\n\trotationDistance: z.number().min(0).describe('Distance in mm the axis travels per stepper rotation'),\n\tgearRatio: z\n\t\t.string()\n\t\t.regex(/^\\d+:\\d+$/)\n\t\t.optional()\n\t\t.describe('Optional gear ratio of the axis'),\n\thomingSpeed: z.number().min(0).default(10).describe('Axis speed during homing in mm/s'),\n\tmicrostepping: z\n\t\t.number()\n\t\t.min(16)\n\t\t.max(256)\n\t\t.default(64)\n\t\t.describe(\n\t\t\t'Microstepping of the stepper driver, higher values increase resolution and lower noise but increases load on the MCU',\n\t\t),\n});\n\nexport const PrinterRailDefinition = BasePrinterRail.extend({\n\tmotorSlot: z.undefined(),\n\tperformanceMode: z\n\t\t.object({\n\t\t\tcurrent: z.number().min(0),\n\t\t\tvoltage: Voltage.default(StepperVoltage['24V']).describe('Voltage of the stepper driver in performance mode'),\n\t\t\thomingSpeed: z.number().min(0).optional().describe('Axis speed during homing in mm/s in performance mode'),\n\t\t})\n\t\t.optional(),\n});\n\nexport const SerializedPrinterRailDefinition = PrinterRailDefinition.extend({\n\tdriver: DriverID,\n\tstepper: Stepper.shape.id,\n});\n\nexport const PrinterRail = BasePrinterRail\n\t// Don't enforce this, warn about temperatures in the frontend instead.\n\t// .refine(\n\t// \t(data) => data.current <= data.stepper.maxPeakCurrent / 1.41,\n\t// \t'Current must be less than max peak current of the stepper divided by 1.41',\n\t// )\n\t.refine((data) => data.current <= data.driver.maxCurrent, 'Current must be less than max current of the driver');\n\nexport const SerializedPrinterRail = BasePrinterRail.extend({\n\tdriver: DriverID,\n\tstepper: Stepper.shape.id,\n});\n\nexport const Limits = z.object({\n\tmin: z.number(),\n\tmax: z.number(),\n\tendstop: z.number(),\n});\nexport type Limits = z.infer<typeof Limits>;\n","import { z } from 'zod';\n\nexport const PinoLogLevel = z.enum(['trace', 'debug', 'info', 'warn', 'error', 'fatal']);\n\nexport const PinoLogEvent = z.object({\n\tts: z.number(),\n\tmessages: z.array(z.any()),\n\tbindings: z.array(z.record(z.string(), z.any())),\n\tlevel: z.object({\n\t\tlabel: PinoLogLevel,\n\t\tvalue: z.number(),\n\t}),\n});\n","// @ts-check\nimport { z } from 'zod';\n\n/**\n * Specify your server-side environment variables schema here.\n * This way you can ensure the app isn't built with invalid env vars.\n */\nexport const serverSchema = z.object({\n\tNODE_ENV: z.enum(['development', 'test', 'production']),\n\tRATOS_CONFIGURATION_PATH: z.string(),\n\tRATOS_SCRIPT_DIR: z.string(),\n\tKLIPPER_CONFIG_PATH: z.string(),\n\tKLIPPER_DIR: z.string(),\n\tKLIPPER_ENV: z.string(),\n\tMOONRAKER_DIR: z.string(),\n\tLOG_FILE: z.string(),\n\tRATOS_DATA_DIR: z.string(),\n});\n\n/**\n * Specify your client-side environment variables schema here.\n * This way you can ensure the app isn't built with invalid env vars.\n * To expose them to the client, prefix them with `NEXT_PUBLIC_`.\n */\nexport const clientSchema = z.object({\n\tNEXT_PUBLIC_KLIPPER_HOSTNAME: z.string().optional(),\n});\n\n/**\n * You can't destruct `process.env` as a regular object, so you have to do\n * it manually here. This is because Next.js evaluates this at build time,\n * and only used environment variables are included in the build.\n * @type {{ [k in keyof z.infer<typeof clientSchema>]: z.infer<typeof clientSchema>[k] | undefined }}\n */\nexport const clientEnv = {\n\tNEXT_PUBLIC_KLIPPER_HOSTNAME: process.env.NEXT_PUBLIC_KLIPPER_HOSTNAME,\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\tvar threw = true;\n\ttry {\n\t\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\t\tthrew = false;\n\t} finally {\n\t\tif(threw) delete __webpack_module_cache__[moduleId];\n\t}\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// the startup function\n__webpack_require__.x = function() {\n\t// Load entry module and return exports\n\t// This entry module depends on other loaded chunks and execution need to be delayed\n\tvar __webpack_exports__ = __webpack_require__.O(undefined, [966,8965,1880,7163,4344], function() { return __webpack_require__(13938); })\n\t__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n\treturn __webpack_exports__;\n};\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? function(obj) { return Object.getPrototypeOf(obj); } : function(obj) { return obj.__proto__; };\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach(function(key) { def[key] = function() { return value[key]; }; });\n\t}\n\tdef['default'] = function() { return value; };\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = function(chunkId) {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce(function(promises, key) {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.u = function(chunkId) {\n\t// return url for filenames not based on template\n\tif (chunkId === 3692) return \"static/chunks/3692.ffafe43b788f421f.js\";\n\tif (chunkId === 4344) return \"static/chunks/4344.bd90c7a4d3afecbd.js\";\n\tif (chunkId === 5330) return \"static/chunks/5330.94db6d0b2a6f908c.js\";\n\t// return url for filenames based on template\n\treturn \"static/chunks/\" + (chunkId === 9321 ? \"fa86fe2e\" : chunkId) + \"-\" + {\"966\":\"bbd3d7023d7429a5\",\"1880\":\"e37041295ac7e434\",\"7163\":\"d452b6ff8852adf6\",\"8965\":\"ec2ed0ce3c32edb0\",\"9321\":\"e962572a02b89204\"}[chunkId] + \".js\";\n};","// This function allow to reference all chunks\n__webpack_require__.miniCssF = function(chunkId) {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var policy;\n__webpack_require__.tt = function() {\n\t// Create Trusted Type policy if Trusted Types are available and the policy doesn't exist yet.\n\tif (policy === undefined) {\n\t\tpolicy = {\n\t\t\tcreateScriptURL: function(url) { return url; }\n\t\t};\n\t\tif (typeof trustedTypes !== \"undefined\" && trustedTypes.createPolicy) {\n\t\t\tpolicy = trustedTypes.createPolicy(\"nextjs#bundler\", policy);\n\t\t}\n\t}\n\treturn policy;\n};","__webpack_require__.tu = function(url) { return __webpack_require__.tt().createScriptURL(url); };","__webpack_require__.p = \"/configure/_next/\";","__webpack_require__.b = self.location + \"/../../../\";\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t3938: 1\n};\n\n// importScripts chunk loading\nvar installChunk = function(data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\twhile(chunkIds.length)\n\t\tinstalledChunks[chunkIds.pop()] = 1;\n\tparentChunkLoadingFunction(data);\n};\n__webpack_require__.f.i = function(chunkId, promises) {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\timportScripts(__webpack_require__.tu(__webpack_require__.p + __webpack_require__.u(chunkId)));\n\t\t}\n\t}\n};\n\nvar chunkLoadingGlobal = self[\"webpackChunk_N_E\"] = self[\"webpackChunk_N_E\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = installChunk;\n\n// no HMR\n\n// no HMR manifest","var next = __webpack_require__.x;\n__webpack_require__.x = function() {\n\treturn Promise.all([966,8965,1880,7163,4344].map(__webpack_require__.e, __webpack_require__)).then(next);\n};",null,"// run startup\nvar __webpack_exports__ = __webpack_require__.x();\n"],"names":["deferred","leafPrototypes","getProto","policy","installedChunks","chunkLoadingGlobal","parentChunkLoadingFunction","next","send","level","logEvent","trpcClient","clientLog","mutate","PinoLogEvent","parse","logger","getLogger","pino","globalPinoOpts","browser","transmit","WorkCommand","WorkResult","expectedSampleRates","createSignalBuffers","dataStream$","timeStamp","firstValueFrom","pipe","first","map","BigNumber","data","decimalPlaces","ROUND_FLOOR","toNumber","realTimeStamp","Date","getTime","signal$","scheduled","asyncScheduler","concatMap","from","time","x","y","z","param","minus","shiftedBy","share","sampleRate$","bufferTime","samples","length","Math","floor","distinctUntilChanged","timeMappedSignal$","offsetFromRealtime","offsetFromTimestamp","sample","of","delay","specSampleRate$","reduce","prev","cur","abs","sr","id","getSensorEndpoint","sensor","type","isSuccessResponse","res","isKlipperAccelSubscriptionResponse","klipperADXL345SubscriptionResponseSchema","safeParse","msg","success","isKlipperAccelSubscriptionData","params","Array","isArray","isBeaconAccelSubscriptionData","detrendFloatSignal","mean","signal","acc","val","i","detrendBatch","s","createADXL345Stream","url","subject","webSocket","deserializer","JSON","e","key","context","source","error","multiplex","jsonrpc","method","name","response_template","result","header","concat","message","filter","overflows","errors","subscribe","close","complete","bind","mapToWorkerOutput","mapFn","psdInput$","Subject","psdWorker","fromWorker","Worker","__webpack_require__","tu","URL","p","u","b","psdOutput$","output","payload","psd","runWorker","work","input$","mergeMap","input","stream","Error","setup","signalProcessor","command","Float64Array","slice","buffer","sampleRate","specSampleRate","psdSubscribed","EMPTY","mergeAll","_this_stream","selectTransferables","estimates","frequencies","total","badgeColorOptions","union","literal","badgeTextColorStyle","cva","variants","color","rose","red","yellow","orange","green","lime","blue","sky","indigo","purple","pink","brand","gray","plain","badgeBackgroundColorStyle","badgeBorderColorStyle","size","sm","md","lg","defaultVariants","timestamp","getBaseUrl","createTRPCNext","config","links","httpBatchLink","maxURLLength","overrides","useMutation","onSuccess","opts","originalFn","queryClient","invalidateQueries","ssr","proxyClient","createTRPCProxyClient","aDXL345ResponseHeaderSchema","object","tuple","array","number","optional","psdSchema","powerRange","max","min","accumulatedPSDSchema","macroIDSchema","string","macroSequenceIDSchema","macroRecordingIdSchema","macroRecordingRunIdSchema","macroRecordingSettingsSchema","capturePSD","boolean","default","accelerometer","KlipperAccelSensorNameSchame","superRefine","ctx","addIssue","code","ZodIssueCode","custom","path","macroRecordingRunId","macroId","sequenceId","startTimeStamp","endTimeStamp","recordingHardwareName","macroSequenceSchema","recording","nullable","gcode","macroSchema","description","createdAtTimeStamp","updatedAtTimeStamp","recordingCount","record","sequences","omit","thermistors","startsWithServerValidation","process","env","RATOS_CONFIGURATION_PATH","environment","serverSchema","hardwareType","startsWith","endsWith","enum","extend","title","thermistor","flowType","diameter","stepper","Stepper","shape","current","PrinterRailDefinition","or","badge","children","AccelerometerType","Accelerometer","accelerometerType","StepperVoltage","PrinterAxis","Voltage","DriverID","Driver","protocol","coolingCurrentThreshold","voltages","maxCurrent","external","and","senseResistor","BaseStepperPreset","voltage","run_current","driver","BaseSPIStepperPreset","driver_MSLUT0","driver_MSLUT1","driver_MSLUT2","driver_MSLUT3","driver_MSLUT4","driver_MSLUT5","driver_MSLUT6","driver_MSLUT7","driver_W0","driver_W1","driver_W2","driver_W3","driver_X1","driver_X2","driver_X3","driver_START_SIN","driver_START_SIN90","driver_IHOLDDELAY","driver_TPOWERDOWN","driver_TBL","driver_TOFF","driver_HEND","driver_HSTRT","driver_PWM_AUTOSCALE","driver_PWM_FREQ","driver_PWM_GRAD","driver_PWM_AMPL","driver_SGT","fullStepsPerRotation","maxPeakCurrent","presets","sense_resistor","describe","BasePrinterRail","axis","axisDescription","invertStepperDirection","axisMinimum","axisMaximum","axisEndstop","motorSlot","rotationDistance","gearRatio","regex","homingSpeed","microstepping","performanceMode","refine","endstop","PinoLogLevel","ts","messages","any","bindings","label","value","NODE_ENV","RATOS_SCRIPT_DIR","KLIPPER_CONFIG_PATH","KLIPPER_DIR","KLIPPER_ENV","MOONRAKER_DIR","LOG_FILE","RATOS_DATA_DIR","NEXT_PUBLIC_KLIPPER_HOSTNAME","__webpack_module_cache__","moduleId","cachedModule","undefined","exports","module","threw","__webpack_modules__","m","__webpack_exports__","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","Object","keys","every","splice","r","n","getter","__esModule","d","a","getPrototypeOf","obj","__proto__","t","mode","then","ns","create","def","indexOf","getOwnPropertyNames","forEach","definition","o","defineProperty","enumerable","get","f","chunkId","Promise","all","promises","miniCssF","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","tt","createScriptURL","trustedTypes","createPolicy","self","location","importScripts","push","moreModules","runtime","pop"],"sourceRoot":""}