{"version":3,"file":"static/chunks/2383-a671dc4cb5025229.js","mappings":"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","sources":["webpack://_N_E/./components/common/badge.tsx","webpack://_N_E/./components/common/banner.tsx","webpack://_N_E/./components/common/spinner.tsx","webpack://_N_E/./components/forms/dropdown.tsx","webpack://_N_E/./components/forms/text-input.tsx","webpack://_N_E/./data/endstops.ts","webpack://_N_E/./hooks/isClient.tsx","webpack://_N_E/./hooks/usePrinterConfiguration.tsx","webpack://_N_E/./hooks/useToolheadConfiguration.tsx","webpack://_N_E/<anon>"],"sourcesContent":["import { VariantProps, cva } from 'class-variance-authority';\nimport { twMerge } from 'tailwind-merge';\n\nexport const badgeTextColorStyle = cva('', {\n\tvariants: {\n\t\tcolor: {\n\t\t\trose: 'text-rose-700 dark:text-rose-400',\n\t\t\tred: 'text-red-700 dark:text-red-400',\n\t\t\tyellow: 'text-yellow-800 dark:text-yellow-500',\n\t\t\torange: 'text-orange-800 dark:text-orange-500',\n\t\t\tgreen: 'text-green-700 dark:text-green-400',\n\t\t\tlime: 'text-lime-700 dark:text-lime-400',\n\t\t\tblue: 'text-blue-700 dark:text-blue-400',\n\t\t\tsky: 'text-sky-700 dark:text-sky-400',\n\t\t\tindigo: 'text-indigo-700 dark:text-indigo-400',\n\t\t\tpurple: 'text-purple-700 dark:text-purple-400',\n\t\t\tpink: 'text-pink-700 dark:text-pink-400',\n\t\t\tbrand: 'text-brand-700 dark:text-brand-400',\n\t\t\tgray: 'text-zinc-600 dark:text-zinc-400',\n\t\t\tplain: 'text-zinc-900 dark:text-zinc-100',\n\t\t},\n\t},\n});\n\nexport const badgeBackgroundColorStyle = cva('', {\n\tvariants: {\n\t\tcolor: {\n\t\t\trose: 'bg-rose-50 dark:bg-rose-400/10',\n\t\t\tred: 'bg-red-50 dark:bg-red-400/10',\n\t\t\tyellow: 'bg-yellow-50 dark:bg-yellow-400/10',\n\t\t\torange: 'bg-orange-50 dark:bg-orange-400/10',\n\t\t\tgreen: 'bg-green-50 dark:bg-green-500/10',\n\t\t\tlime: 'bg-lime-50 dark:bg-lime-500/10',\n\t\t\tblue: 'bg-blue-50 dark:bg-blue-400/10',\n\t\t\tsky: 'bg-sky-50 dark:bg-sky-400/10',\n\t\t\tindigo: 'bg-indigo-50 dark:bg-indigo-400/10',\n\t\t\tpurple: 'bg-purple-50 dark:bg-purple-400/10',\n\t\t\tpink: 'bg-pink-50 dark:bg-pink-400/10',\n\t\t\tbrand: 'bg-brand-100 dark:bg-brand-400/10',\n\t\t\tgray: 'bg-zinc-50 dark:bg-zinc-400/10',\n\t\t\tplain: 'bg-zinc-900/10 dark:bg-zinc-100/10',\n\t\t},\n\t},\n});\n\nexport const badgeBorderColorStyle = cva('', {\n\tvariants: {\n\t\tcolor: {\n\t\t\trose: 'border-rose-600/10 dark:border-rose-400/20 ring-rose-600/10 dark:ring-rose-400/20',\n\t\t\tred: 'border-red-600/10 dark:border-red-400/20 ring-red-600/10 dark:ring-red-400/20',\n\t\t\tyellow: 'border-yellow-600/20 dark:border-yellow-400/20 ring-yellow-600/20 dark:ring-yellow-400/20',\n\t\t\torange: 'border-orange-600/20 dark:border-orange-400/20 ring-orange-600/20 dark:ring-orange-400/20',\n\t\t\tgreen: 'border-green-600/20 dark:border-green-500/20 ring-green-600/20 dark:ring-green-500/20',\n\t\t\tlime: 'border-lime-600/20 dark:border-lime-500/20 ring-lime-600/20 dark:ring-lime-500/20',\n\t\t\tblue: 'border-blue-700/10 dark:border-blue-400/30 ring-blue-700/10 dark:ring-blue-400/30',\n\t\t\tsky: 'border-sky-700/10 dark:border-sky-400/30 ring-sky-700/10 dark:ring-sky-400/30',\n\t\t\tindigo: 'border-indigo-700/10 dark:border-indigo-400/30 ring-indigo-700/10 dark:ring-indigo-400/30',\n\t\t\tpurple: 'border-purple-700/10 dark:border-purple-400/30 ring-purple-700/10 dark:ring-purple-400/30',\n\t\t\tpink: 'border-pink-700/10 dark:border-pink-400/20 ring-pink-700/10 dark:ring-pink-400/20',\n\t\t\tbrand: 'border-brand-600/40 dark:border-brand-400/30 ring-brand-600/40 dark:ring-brand-400/30',\n\t\t\tgray: 'border-zinc-500/10 dark:border-zinc-400/20 ring-zinc-500/10 dark:ring-zinc-400/20',\n\t\t\tplain: 'border-zinc-900 dark:border-zinc-100 ring-zinc-900 dark:ring-zinc-100',\n\t\t},\n\t},\n});\n\nconst badgeStyle = cva('flex-0 inline-flex w-auto items-center rounded-md font-medium ring-1 ring-inset', {\n\tvariants: {\n\t\tsize: {\n\t\t\tsm: 'px-1.5 gap-1.5 py-1 text-2xs leading-3',\n\t\t\tmd: 'px-2 gap-2 py-1 text-xs leading-4',\n\t\t\tlg: 'px-2 gap-2 py-1 text-xs leading-6',\n\t\t},\n\t\tcolor: {\n\t\t\trose: [\n\t\t\t\tbadgeBackgroundColorStyle({ color: 'rose' }),\n\t\t\t\tbadgeBorderColorStyle({ color: 'rose' }),\n\t\t\t\tbadgeTextColorStyle({ color: 'rose' }),\n\t\t\t],\n\t\t\tred: [\n\t\t\t\tbadgeBackgroundColorStyle({ color: 'red' }),\n\t\t\t\tbadgeBorderColorStyle({ color: 'red' }),\n\t\t\t\tbadgeTextColorStyle({ color: 'red' }),\n\t\t\t],\n\t\t\tyellow: [\n\t\t\t\tbadgeBackgroundColorStyle({ color: 'yellow' }),\n\t\t\t\tbadgeBorderColorStyle({ color: 'yellow' }),\n\t\t\t\tbadgeTextColorStyle({ color: 'yellow' }),\n\t\t\t],\n\t\t\torange: [\n\t\t\t\tbadgeBackgroundColorStyle({ color: 'orange' }),\n\t\t\t\tbadgeBorderColorStyle({ color: 'orange' }),\n\t\t\t\tbadgeTextColorStyle({ color: 'orange' }),\n\t\t\t],\n\t\t\tgreen: [\n\t\t\t\tbadgeBackgroundColorStyle({ color: 'green' }),\n\t\t\t\tbadgeBorderColorStyle({ color: 'green' }),\n\t\t\t\tbadgeTextColorStyle({ color: 'green' }),\n\t\t\t],\n\t\t\tlime: [\n\t\t\t\tbadgeBackgroundColorStyle({ color: 'lime' }),\n\t\t\t\tbadgeBorderColorStyle({ color: 'lime' }),\n\t\t\t\tbadgeTextColorStyle({ color: 'lime' }),\n\t\t\t],\n\t\t\tblue: [\n\t\t\t\tbadgeBackgroundColorStyle({ color: 'blue' }),\n\t\t\t\tbadgeBorderColorStyle({ color: 'blue' }),\n\t\t\t\tbadgeTextColorStyle({ color: 'blue' }),\n\t\t\t],\n\t\t\tsky: [\n\t\t\t\tbadgeBackgroundColorStyle({ color: 'sky' }),\n\t\t\t\tbadgeBorderColorStyle({ color: 'sky' }),\n\t\t\t\tbadgeTextColorStyle({ color: 'sky' }),\n\t\t\t],\n\t\t\tindigo: [\n\t\t\t\tbadgeBackgroundColorStyle({ color: 'indigo' }),\n\t\t\t\tbadgeBorderColorStyle({ color: 'indigo' }),\n\t\t\t\tbadgeTextColorStyle({ color: 'indigo' }),\n\t\t\t],\n\t\t\tpurple: [\n\t\t\t\tbadgeBackgroundColorStyle({ color: 'purple' }),\n\t\t\t\tbadgeBorderColorStyle({ color: 'purple' }),\n\t\t\t\tbadgeTextColorStyle({ color: 'purple' }),\n\t\t\t],\n\t\t\tpink: [\n\t\t\t\tbadgeBackgroundColorStyle({ color: 'pink' }),\n\t\t\t\tbadgeBorderColorStyle({ color: 'pink' }),\n\t\t\t\tbadgeTextColorStyle({ color: 'pink' }),\n\t\t\t],\n\t\t\tbrand: [\n\t\t\t\tbadgeBackgroundColorStyle({ color: 'brand' }),\n\t\t\t\tbadgeBorderColorStyle({ color: 'brand' }),\n\t\t\t\tbadgeTextColorStyle({ color: 'brand' }),\n\t\t\t],\n\t\t\tgray: [\n\t\t\t\tbadgeBackgroundColorStyle({ color: 'gray' }),\n\t\t\t\tbadgeBorderColorStyle({ color: 'gray' }),\n\t\t\t\tbadgeTextColorStyle({ color: 'gray' }),\n\t\t\t],\n\t\t\tplain: [\n\t\t\t\tbadgeBackgroundColorStyle({ color: 'plain' }),\n\t\t\t\tbadgeBorderColorStyle({ color: 'plain' }),\n\t\t\t\tbadgeTextColorStyle({ color: 'plain' }),\n\t\t\t],\n\t\t},\n\t},\n\tdefaultVariants: {\n\t\tsize: 'md',\n\t\tcolor: 'gray',\n\t},\n});\n\nexport type BadgeProps = JSX.IntrinsicElements['span'] &\n\tVariantProps<typeof badgeStyle> & {\n\t\tchildren: React.ReactNode;\n\t\tclassName?: string;\n\t};\n\nexport const Badge: React.FC<BadgeProps> = (props) => {\n\tconst { size, color, className, children, ...forwardProps } = props;\n\treturn (\n\t\t<span className={twMerge(badgeStyle({ size, color }), className)} {...forwardProps}>\n\t\t\t{children}\n\t\t</span>\n\t);\n};\n","import React from 'react';\nimport { badgeBackgroundColorStyle, badgeBorderColorStyle, badgeTextColorStyle } from '@/components/common/badge';\nimport { twJoin, twMerge } from 'tailwind-merge';\nimport { VariantProps, cva } from 'class-variance-authority';\n\nconst bannerStyle = cva('rounded-md p-4 border', {\n\tvariants: {\n\t\tcolor: {\n\t\t\tred: [\n\t\t\t\tbadgeBackgroundColorStyle({ color: 'red' }),\n\t\t\t\tbadgeBorderColorStyle({ color: 'red' }),\n\t\t\t\tbadgeTextColorStyle({ color: 'red' }),\n\t\t\t],\n\t\t\tyellow: [\n\t\t\t\tbadgeBackgroundColorStyle({ color: 'yellow' }),\n\t\t\t\tbadgeBorderColorStyle({ color: 'yellow' }),\n\t\t\t\tbadgeTextColorStyle({ color: 'yellow' }),\n\t\t\t],\n\t\t\torange: [\n\t\t\t\tbadgeBackgroundColorStyle({ color: 'orange' }),\n\t\t\t\tbadgeBorderColorStyle({ color: 'orange' }),\n\t\t\t\tbadgeTextColorStyle({ color: 'orange' }),\n\t\t\t],\n\t\t\tgreen: [\n\t\t\t\tbadgeBackgroundColorStyle({ color: 'green' }),\n\t\t\t\tbadgeBorderColorStyle({ color: 'green' }),\n\t\t\t\tbadgeTextColorStyle({ color: 'green' }),\n\t\t\t],\n\t\t\tlime: [\n\t\t\t\tbadgeBackgroundColorStyle({ color: 'lime' }),\n\t\t\t\tbadgeBorderColorStyle({ color: 'lime' }),\n\t\t\t\tbadgeTextColorStyle({ color: 'lime' }),\n\t\t\t],\n\t\t\tblue: [\n\t\t\t\tbadgeBackgroundColorStyle({ color: 'blue' }),\n\t\t\t\tbadgeBorderColorStyle({ color: 'blue' }),\n\t\t\t\tbadgeTextColorStyle({ color: 'blue' }),\n\t\t\t],\n\t\t\tsky: [\n\t\t\t\tbadgeBackgroundColorStyle({ color: 'sky' }),\n\t\t\t\tbadgeBorderColorStyle({ color: 'sky' }),\n\t\t\t\tbadgeTextColorStyle({ color: 'sky' }),\n\t\t\t],\n\t\t\tindigo: [\n\t\t\t\tbadgeBackgroundColorStyle({ color: 'indigo' }),\n\t\t\t\tbadgeBorderColorStyle({ color: 'indigo' }),\n\t\t\t\tbadgeTextColorStyle({ color: 'indigo' }),\n\t\t\t],\n\t\t\tpurple: [\n\t\t\t\tbadgeBackgroundColorStyle({ color: 'purple' }),\n\t\t\t\tbadgeBorderColorStyle({ color: 'purple' }),\n\t\t\t\tbadgeTextColorStyle({ color: 'purple' }),\n\t\t\t],\n\t\t\tpink: [\n\t\t\t\tbadgeBackgroundColorStyle({ color: 'pink' }),\n\t\t\t\tbadgeBorderColorStyle({ color: 'pink' }),\n\t\t\t\tbadgeTextColorStyle({ color: 'pink' }),\n\t\t\t],\n\t\t\tbrand: [\n\t\t\t\tbadgeBackgroundColorStyle({ color: 'brand' }),\n\t\t\t\tbadgeBorderColorStyle({ color: 'brand' }),\n\t\t\t\tbadgeTextColorStyle({ color: 'brand' }),\n\t\t\t],\n\t\t\tgray: [\n\t\t\t\tbadgeBackgroundColorStyle({ color: 'gray' }),\n\t\t\t\tbadgeBorderColorStyle({ color: 'gray' }),\n\t\t\t\tbadgeTextColorStyle({ color: 'gray' }),\n\t\t\t],\n\t\t},\n\t},\n\tdefaultVariants: {\n\t\tcolor: 'gray',\n\t},\n});\n\ninterface BannerProps extends React.PropsWithChildren<VariantProps<typeof bannerStyle>> {\n\tclassName?: string;\n\tIcon: React.ComponentType<{ className?: string }>;\n\ttitle?: string;\n}\n\nexport const Banner: React.FC<BannerProps> = (props) => {\n\tconst { Icon, className, title } = props;\n\treturn (\n\t\t<div className={twMerge(bannerStyle({ color: props.color }), props.className)}>\n\t\t\t<div className=\"flex\">\n\t\t\t\t<div className=\"flex-shrink-0\">\n\t\t\t\t\t<Icon className={twJoin('h-5 w-5')} aria-hidden=\"true\" />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"ml-3 flex-1\">\n\t\t\t\t\t<h3 className={twJoin('text-sm font-bold')}>{props.title}</h3>\n\t\t\t\t\t<div className=\"mt-2 text-sm\">\n\t\t\t\t\t\t<div>{props.children}</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n","import { twMerge } from 'tailwind-merge';\n\nexport const Spinner: React.FC<{ className?: string; noMargin?: boolean }> = (props) => {\n\treturn (\n\t\t<svg\n\t\t\tclassName={twMerge(\n\t\t\t\t'h-5 w-5 animate-spin text-black dark:text-white',\n\t\t\t\t!props.noMargin ? '-ml-1 mr-3' : '',\n\t\t\t\tprops.className,\n\t\t\t)}\n\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\tfill=\"none\"\n\t\t\tviewBox=\"0 0 24 24\"\n\t\t>\n\t\t\t<circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n\t\t\t<path\n\t\t\t\tclassName=\"opacity-75\"\n\t\t\t\tfill=\"currentColor\"\n\t\t\t\td=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n\t\t\t></path>\n\t\t</svg>\n\t);\n};\n","import React, { Fragment, useCallback, useEffect, useState } from 'react';\nimport { Listbox, Transition } from '@headlessui/react';\nimport { CheckIcon, ChevronUpDownIcon } from '@heroicons/react/20/solid';\nimport { twJoin, twMerge } from 'tailwind-merge';\nimport { Badge, BadgeProps } from '@/components/common/badge';\nimport { DropdownQuery, DropdownQueryInput, DropdownQueryKeys, DropdownQueryOutput, trpc } from '@/utils/trpc';\nimport { Spinner } from '@/components/common/spinner';\nimport { useSerializedPrinterConfiguration } from '@/hooks/usePrinterConfiguration';\nimport { useAutoAnimate } from '@formkit/auto-animate/react';\n\ntype Option = {\n\tid: number | string;\n\ttitle: string;\n\tdisabled?: boolean;\n\tbadge?: BadgeProps | BadgeProps[];\n};\n\ninterface DropdownProps<DropdownOption extends Option = Option> {\n\toptions: DropdownOption[];\n\tvalue: DropdownOption | null | undefined;\n\tonSelect?: (option: DropdownOption) => void;\n\tisFetching?: boolean;\n\tlabel: string;\n\terror?: string;\n\tsort?: boolean;\n\tdisabled?: boolean;\n\tbadge?: BadgeProps | BadgeProps[];\n\tonShown?: () => void;\n}\n\nexport const OnDropdownOpened: React.FC<{ open: boolean; onShown: () => void }> = ({ open, onShown }) => {\n\tuseEffect(() => {\n\t\tif (open) {\n\t\t\tonShown();\n\t\t}\n\t}, [open, onShown]);\n\treturn null;\n};\n\nexport const useDropdownPrinterQueryState = <T extends DropdownQueryKeys = DropdownQueryKeys>(\n\tquery: T,\n\tvars?: DropdownQueryInput<T>,\n\tserializedPrinterConfiguration?: string,\n) => {\n\tconst [isShown, setIsShown] = useState(false);\n\tconst serializedConfig = useSerializedPrinterConfiguration();\n\t// Gigantic hack to avoid suspense in parent components from killing our atom updates.\n\tconst variables: any = vars ?? (serializedPrinterConfiguration ? {} : undefined);\n\tif (variables && serializedPrinterConfiguration != null) {\n\t\tvariables[serializedPrinterConfiguration] = serializedConfig;\n\t}\n\tconst data = (trpc.printer[query] as DropdownQuery<T>).useQuery(variables, {\n\t\tenabled: isShown,\n\t\tkeepPreviousData: true,\n\t});\n\treturn {\n\t\toptions: (data.data ?? []) as DropdownQueryOutput<T>,\n\t\tonShown: () => setIsShown(true),\n\t\tisFetching: data.isFetching,\n\t};\n};\n\nexport const DropdownWithPrinterQuery = <T extends DropdownQueryKeys = DropdownQueryKeys>(\n\tprops: Omit<DropdownProps<DropdownQueryOutput<T>[number]>, 'options' | 'onShown'> & {\n\t\tquery: T;\n\t\tvars?: DropdownQueryInput<T>;\n\t\tserializedPrinterConfiguration?: string;\n\t},\n) => {\n\tconst { query, vars, serializedPrinterConfiguration, ...rest } = props;\n\tconst queryProps = useDropdownPrinterQueryState<T>(query, vars, serializedPrinterConfiguration);\n\treturn (\n\t\t<React.Suspense>\n\t\t\t<Dropdown {...rest} {...queryProps} />\n\t\t</React.Suspense>\n\t);\n};\n\nexport const Dropdown = <DropdownOption extends Option = Option>(props: DropdownProps<DropdownOption>) => {\n\tconst { onSelect, value } = props;\n\n\tconst onSelected = useCallback(\n\t\t(newSelection: DropdownOption['id']) => {\n\t\t\tconst option = props.options.find((o) => o.id === newSelection);\n\t\t\tif (option) {\n\t\t\t\tonSelect?.(option);\n\t\t\t}\n\t\t},\n\t\t[onSelect, props.options],\n\t);\n\n\tconst options =\n\t\tprops.sort == false ? props.options : props.options.slice(0).sort((a, b) => a.title.localeCompare(b.title));\n\n\tconst inputClass = twMerge(\n\t\t'relative flex w-full cursor-default items-center justify-between rounded-md bg-white py-1.5 pl-3 pr-3 text-left text-zinc-900 shadow-sm ring-1 ring-inset ring-zinc-300 focus:outline-none focus:ring-2 focus:ring-brand-600 dark:bg-zinc-800 dark:text-zinc-300 dark:ring-zinc-700 dark:focus:ring-brand-400 sm:text-sm sm:leading-6',\n\t\tprops.error\n\t\t\t? 'ring-red-300 text-red-900 placeholder-red-300 focus:ring-red-500 dark:ring-red-500 dark:text-red-400 dark:placeholder-red-700'\n\t\t\t: 'ring-zinc-300 text-zinc-900 placeholder-zinc-300 focus:ring-brand-600 dark:ring-zinc-700 dark:text-zinc-100 dark:placeholder-zinc-700 dark:focus:ring-brand-400 ',\n\t);\n\n\tconst [animate] = useAutoAnimate();\n\n\treturn (\n\t\t<Listbox value={value?.id ?? value === null ? null : undefined} onChange={onSelected} disabled={props.disabled}>\n\t\t\t{({ open }) => {\n\t\t\t\treturn (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<Listbox.Label\n\t\t\t\t\t\t\tclassName={twMerge(\n\t\t\t\t\t\t\t\t'block text-sm font-semibold leading-6 text-zinc-700 dark:text-zinc-300',\n\t\t\t\t\t\t\t\tprops.error && 'text-red-600 dark:text-red-400',\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{props.label}\n\t\t\t\t\t\t</Listbox.Label>\n\t\t\t\t\t\t{props.onShown && <OnDropdownOpened open={open} onShown={props.onShown} />}\n\t\t\t\t\t\t<div className=\"relative mt-1\">\n\t\t\t\t\t\t\t<Listbox.Button className={inputClass} disabled={props.disabled} title={value?.title}>\n\t\t\t\t\t\t\t\t<span className=\"flex-1 truncate\">{value?.title ?? 'Pick from the list...'}</span>\n\t\t\t\t\t\t\t\t<span className={twJoin('flex items-center space-x-1', props.disabled && '-mr-1.5')}>\n\t\t\t\t\t\t\t\t\t{props.badge &&\n\t\t\t\t\t\t\t\t\t\t(!Array.isArray(props.badge) ? [props.badge] : props.badge).map((badge, i) => (\n\t\t\t\t\t\t\t\t\t\t\t<Badge\n\t\t\t\t\t\t\t\t\t\t\t\t{...badge}\n\t\t\t\t\t\t\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\t\t\t\t\t\t\tcolor={badge.color ?? (props.disabled ? 'plain' : badge.color)}\n\t\t\t\t\t\t\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t{!props.disabled && (\n\t\t\t\t\t\t\t\t\t<span className=\"pointer-events-none -mr-4 flex items-center pr-2\">\n\t\t\t\t\t\t\t\t\t\t<ChevronUpDownIcon className=\"h-5 w-5 text-zinc-400\" aria-hidden=\"true\" />\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Listbox.Button>\n\t\t\t\t\t\t\t<div ref={animate}>\n\t\t\t\t\t\t\t\t{props.error && <p className=\"mt-2 text-sm text-red-600 dark:text-red-400\">{props.error}</p>}\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<Transition\n\t\t\t\t\t\t\t\tshow={open}\n\t\t\t\t\t\t\t\tas={Fragment}\n\t\t\t\t\t\t\t\tenter=\"transition duration-150 ease-out\"\n\t\t\t\t\t\t\t\tenterFrom=\"transform translate-y-1 opacity-0\"\n\t\t\t\t\t\t\t\tenterTo=\"transform translate-y-0 opacity-100\"\n\t\t\t\t\t\t\t\tleave=\"transition duration-200 ease-out\"\n\t\t\t\t\t\t\t\tleaveFrom=\"transform translate-y-0 opacity-100\"\n\t\t\t\t\t\t\t\tleaveTo=\"transform translate-y-1 opacity-0\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Listbox.Options className=\"absolute z-10 mt-1 max-h-60 w-full overflow-auto rounded-md bg-white py-1 text-base shadow-lg ring-1 ring-black ring-opacity-5 scrollbar-thin scrollbar-track-transparent scrollbar-thumb-zinc-400 scrollbar-thumb-rounded-md focus:outline-none dark:bg-zinc-800 dark:scrollbar-thumb-zinc-600 sm:text-sm\">\n\t\t\t\t\t\t\t\t\t{options.map((option) => (\n\t\t\t\t\t\t\t\t\t\t<Listbox.Option\n\t\t\t\t\t\t\t\t\t\t\tkey={option.id}\n\t\t\t\t\t\t\t\t\t\t\tclassName={({ active, disabled }) =>\n\t\t\t\t\t\t\t\t\t\t\t\ttwMerge(\n\t\t\t\t\t\t\t\t\t\t\t\t\tactive ? 'dark bg-brand-600 text-white' : 'text-zinc-900 dark:text-zinc-300',\n\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled && 'text-zinc-400 dark:text-zinc-500',\n\t\t\t\t\t\t\t\t\t\t\t\t\t'relative cursor-default select-none py-2 pl-3 pr-9',\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tdisabled={option.disabled}\n\t\t\t\t\t\t\t\t\t\t\tvalue={option.id}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t{({ selected, active }) => (\n\t\t\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={twJoin(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tselected ? 'font-semibold' : 'font-normal',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'flex items-center space-x-2 truncate',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span>{option.title}</span>{' '}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{option.badge &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(Array.isArray(option.badge) ? (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\toption.badge.map((b, i) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Badge {...b} color={active ? 'plain' : b.color} size=\"sm\" key={i} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Badge {...option.badge} color={active ? 'plain' : option.badge.color} size=\"sm\" />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t{selected ? (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={twJoin(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tactive ? 'text-white' : 'text-brand-600',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'absolute inset-y-0 right-0 flex items-center pr-4',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t</Listbox.Option>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t{props.isFetching && (\n\t\t\t\t\t\t\t\t\t\t<div className=\"flex justify-center px-3 py-2 text-sm text-zinc-400 dark:text-zinc-500\">\n\t\t\t\t\t\t\t\t\t\t\t<Spinner />\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t{!props.isFetching && options.length === 0 && (\n\t\t\t\t\t\t\t\t\t\t<div className=\"px-3 py-2 text-center text-sm text-zinc-400 dark:text-zinc-500\">\n\t\t\t\t\t\t\t\t\t\t\tNo options available\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</Listbox.Options>\n\t\t\t\t\t\t\t</Transition>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</>\n\t\t\t\t);\n\t\t\t}}\n\t\t</Listbox>\n\t);\n};\n","import { EyeIcon, EyeSlashIcon } from '@heroicons/react/24/outline';\nimport { ExclamationCircleIcon } from '@heroicons/react/24/solid';\nimport objectHash from 'object-hash';\nimport React, { ChangeEvent, useCallback, useRef, useState } from 'react';\nimport { twJoin } from 'tailwind-merge';\n\ninterface TextInputProps<T extends string | number>\n\textends Omit<React.InputHTMLAttributes<HTMLInputElement>, 'onChange'> {\n\terror?: string;\n\tlabel: string;\n\thelp?: string;\n\tvalue?: T;\n\tonChange?: (val: T) => void;\n}\n\nexport const TextInput = <T extends string | number>(props: TextInputProps<T>) => {\n\tconst fieldId = useRef(objectHash(props));\n\tconst { onChange: _onChange } = props;\n\tconst [isPasswordVisible, setIsPasswordVisible] = useState(false);\n\n\tlet iconClass = twJoin('h-5 w-5', props.error ? 'text-red-500' : 'text-red-500');\n\n\tconst icon = props.error ? (\n\t\t<div className=\"pointer-events-none absolute inset-y-0 right-0 flex items-center pr-3\">\n\t\t\t<ExclamationCircleIcon className=\"h-5 w-5 text-red-500\" aria-hidden=\"true\" />\n\t\t</div>\n\t) : null;\n\n\tconst inputClass = twJoin(\n\t\tprops.error\n\t\t\t? 'ring-red-300 text-red-900 placeholder-red-300 focus:ring-red-500 dark:ring-red-500 dark:text-red-400 dark:placeholder-red-700'\n\t\t\t: 'ring-zinc-300 text-zinc-900 placeholder-zinc-300 focus:ring-brand-600 dark:ring-zinc-700 dark:text-zinc-100 dark:placeholder-zinc-700 dark:focus:ring-brand-400 ',\n\t\t'block w-full rounded-md bg-white py-1.5 pl-3 pr-3 text-leftshadow-sm ring-1 ring-inset focus:outline-none dark:bg-zinc-800 sm:text-sm sm:leading-6 border-0',\n\t);\n\n\tconst error = props.error ? (\n\t\t<p className=\"mt-2 text-sm text-red-600 dark:text-red-400\" id={fieldId.current + '-error'}>\n\t\t\t{props.error}\n\t\t</p>\n\t) : null;\n\n\tconst help = props.help ? (\n\t\t<p className=\"mt-2 text-sm text-zinc-500\" id=\"email-description\">\n\t\t\t{props.help}\n\t\t</p>\n\t) : null;\n\n\tconst onChange = useCallback(\n\t\t(e: ChangeEvent<HTMLInputElement>) => {\n\t\t\t_onChange?.(props.type === 'number' ? (parseFloat(e.currentTarget.value) as T) : (e.currentTarget.value as T));\n\t\t},\n\t\t[_onChange, props.type],\n\t);\n\n\tconst togglePasswordVisibility = useCallback(() => {\n\t\tsetIsPasswordVisible((b) => !b);\n\t}, []);\n\n\tconst iconRight = icon != null ? 'right-6' : 'right-0';\n\tconst visibility =\n\t\tprops.type === 'password' ? (\n\t\t\t<div\n\t\t\t\tonClick={togglePasswordVisibility}\n\t\t\t\tclassName={`absolute inset-y-0 ${iconRight} flex cursor-pointer items-center pr-3`}\n\t\t\t>\n\t\t\t\t{isPasswordVisible ? (\n\t\t\t\t\t<EyeSlashIcon className=\"h-5 w-5 text-zinc-400\" />\n\t\t\t\t) : (\n\t\t\t\t\t<EyeIcon className=\"h-5 w-5 text-zinc-400\" />\n\t\t\t\t)}\n\t\t\t</div>\n\t\t) : null;\n\n\treturn (\n\t\t<div>\n\t\t\t<label className=\"block text-sm font-semibold leading-6 text-zinc-700 dark:text-zinc-300\">{props.label}</label>\n\t\t\t<div className=\"relative mt-1 rounded-md shadow-sm\">\n\t\t\t\t<input\n\t\t\t\t\t{...props}\n\t\t\t\t\ttype={isPasswordVisible ? 'text' : props.type}\n\t\t\t\t\tclassName={inputClass}\n\t\t\t\t\tplaceholder={props.placeholder}\n\t\t\t\t\tdefaultValue={props.defaultValue}\n\t\t\t\t\tvalue={props.value}\n\t\t\t\t\tonChange={onChange}\n\t\t\t\t\taria-invalid={!!props.error}\n\t\t\t\t\taria-describedby={props.error ? fieldId.current + '-error' : undefined}\n\t\t\t\t/>\n\t\t\t\t{icon}\n\t\t\t\t{visibility}\n\t\t\t</div>\n\t\t\t{error ?? help}\n\t\t</div>\n\t);\n};\n","import { z } from 'zod';\nimport { Endstop } from '@/zods/hardware';\nimport { PrinterAxis } from '@/zods/motion';\nimport type { SerializedPartialPrinterConfiguration } from '@/zods/printer-configuration';\nimport type { SerializedPartialToolheadConfiguration } from '@/zods/toolhead';\n\nexport const xEndstopOptions = (\n\tconfig?: SerializedPartialPrinterConfiguration | null,\n\ttoolheadConfig?: SerializedPartialToolheadConfiguration | null,\n): z.infer<typeof Endstop>[] => {\n\tconst endstops: z.infer<typeof Endstop>[] = [];\n\tif (toolheadConfig?.toolboard != null) {\n\t\tendstops.push({ id: 'endstop-toolboard' as const, title: 'Physical Endstop (toolboard)' });\n\t}\n\tif (toolheadConfig?.axis === PrinterAxis.x) {\n\t\tendstops.push({ id: 'endstop' as const, title: 'Physical Endstop' });\n\t\tendstops.push({ id: 'sensorless' as const, title: 'Sensorless Homing' });\n\t}\n\treturn endstops;\n};\n\nexport const defaultXEndstop = { id: 'endstop' as const, title: 'Physical Endstop' };\n\nexport const yEndstopOptions = (\n\tconfig?: SerializedPartialPrinterConfiguration | null,\n\ttoolheadConfig?: SerializedPartialToolheadConfiguration | null,\n): z.infer<typeof Endstop>[] => [\n\t{ id: 'endstop' as const, title: 'Physical Endstop' },\n\t{ id: 'sensorless' as const, title: 'Sensorless Homing' },\n];\n","'use client';\nimport { useEffect, useState } from 'react';\n\nexport const useIsClient = () => {\n\tconst [isClient, setIsClient] = useState(false);\n\tuseEffect(() => {\n\t\tif (typeof window !== 'undefined') {\n\t\t\tsetIsClient(true);\n\t\t}\n\t}, []);\n\treturn isClient;\n};\n","'use client';\n\nimport { atom, selector, useRecoilValue, useRecoilState, waitForAll, noWait } from 'recoil';\nimport { z } from 'zod';\nimport { Fan } from '@/zods/hardware';\nimport {\n\tPartialPrinterConfiguration,\n\tPrinterConfiguration,\n\tSerializedPartialPrinterConfiguration,\n\tSerializedPrinterConfiguration,\n} from '@/zods/printer-configuration';\nimport { syncEffect } from 'recoil-sync';\nimport { getRefineCheckerForZodSchema } from 'zod-refine';\nimport { useMemo } from 'react';\nimport {\n\tserializePartialToolheadConfiguration,\n\tserializePrinterRail,\n\tserializeToolheadConfiguration,\n} from '@/utils/serialization';\nimport {\n\tControlboardState,\n\tLoadablePrinterRailsState,\n\tPrinterRailsState,\n\tPrinterSizeState,\n\tPrinterState,\n} from '@/recoil/printer';\nimport { PrinterToolheadsState } from '@/recoil/toolhead';\nimport { defaultControllerFan } from '@/data/fans';\nimport { moonrakerWriteEffect } from '@/components/sync-with-moonraker';\n\nexport const PerformanceModeState = atom<boolean | null | undefined>({\n\tkey: 'PerformanceMode',\n\tdefault: false,\n\teffects: [\n\t\tmoonrakerWriteEffect(),\n\t\tsyncEffect({\n\t\t\trefine: getRefineCheckerForZodSchema(z.boolean().optional().nullable()),\n\t\t}),\n\t],\n});\n\nexport const StealthchopState = atom<boolean | null | undefined>({\n\tkey: 'Stealchop',\n\tdefault: false,\n\teffects: [\n\t\tmoonrakerWriteEffect(),\n\t\tsyncEffect({\n\t\t\trefine: getRefineCheckerForZodSchema(z.boolean().optional().nullable()),\n\t\t}),\n\t],\n});\n\nexport const StandstillStealthState = atom<boolean | null | undefined>({\n\tkey: 'StandstillStealth',\n\tdefault: false,\n\teffects: [\n\t\tmoonrakerWriteEffect(),\n\t\tsyncEffect({\n\t\t\trefine: getRefineCheckerForZodSchema(z.boolean().optional().nullable()),\n\t\t}),\n\t],\n});\nexport const ControllerFanState = atom<z.infer<typeof Fan> | null>({\n\tkey: 'ControllerFan',\n\tdefault: defaultControllerFan,\n\teffects: [\n\t\tmoonrakerWriteEffect(),\n\t\tsyncEffect({\n\t\t\trefine: getRefineCheckerForZodSchema(Fan.nullable()),\n\t\t}),\n\t],\n});\n\nexport const PrinterConfigurationState = selector<z.infer<typeof PartialPrinterConfiguration> | null>({\n\tkey: 'PrinterConfiguration',\n\tget: async ({ get }) => {\n\t\tconst {\n\t\t\tprinter,\n\t\t\tprinterSize,\n\t\t\tperformanceMode,\n\t\t\tstealthchop,\n\t\t\tstandstillStealth,\n\t\t\trails,\n\t\t\tcontrolboard,\n\t\t\tcontrollerFan,\n\t\t\ttoolheads,\n\t\t} = get(\n\t\t\twaitForAll({\n\t\t\t\tprinter: PrinterState,\n\t\t\t\tprinterSize: PrinterSizeState,\n\t\t\t\tperformanceMode: PerformanceModeState,\n\t\t\t\tstealthchop: StealthchopState,\n\t\t\t\tstandstillStealth: StandstillStealthState,\n\t\t\t\trails: PrinterRailsState,\n\t\t\t\tcontrolboard: ControlboardState,\n\t\t\t\tcontrollerFan: ControllerFanState,\n\t\t\t\ttoolheads: PrinterToolheadsState,\n\t\t\t}),\n\t\t);\n\n\t\tconst printerConfig = PartialPrinterConfiguration.safeParse({\n\t\t\tprinter:\n\t\t\t\tprinter == null\n\t\t\t\t\t? null\n\t\t\t\t\t: {\n\t\t\t\t\t\t\t...printer,\n\t\t\t\t\t\t\tdefaults: {\n\t\t\t\t\t\t\t\t...printer.defaults,\n\t\t\t\t\t\t\t\ttoolheads: printer?.defaults.toolheads.map((th) => serializeToolheadConfiguration(th)),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\tsize: printerSize,\n\t\t\tperformanceMode,\n\t\t\tstealthchop,\n\t\t\tstandstillStealth,\n\t\t\trails,\n\t\t\tcontrolboard,\n\t\t\tcontrollerFan,\n\t\t\ttoolheads,\n\t\t} satisfies {\n\t\t\t[key in keyof PrinterConfiguration]: NonNullable<PartialPrinterConfiguration>[key] | null | undefined;\n\t\t});\n\t\tif (printerConfig.success === false) {\n\t\t\tconsole.error(printerConfig.error.flatten().fieldErrors);\n\t\t}\n\t\treturn printerConfig.success ? printerConfig.data : null;\n\t},\n});\n\nexport const LoadablePrinterConfigurationState = selector<z.infer<typeof PartialPrinterConfiguration>>({\n\tkey: 'LoadablePrinterConfigurationState',\n\tget: async ({ get }) => {\n\t\tconst loadable = get(noWait(PrinterConfigurationState));\n\t\treturn {\n\t\t\thasValue: () => loadable.contents,\n\t\t\thasError: () => null,\n\t\t\tloading: () => null,\n\t\t}[loadable.state]();\n\t},\n});\n\nexport const serializePrinterConfiguration = (config: PrinterConfiguration): SerializedPrinterConfiguration => {\n\tconst serializedConfig: SerializedPrinterConfiguration = {\n\t\tprinter: config.printer.id,\n\t\ttoolheads: config.toolheads.map((toolhead) => serializeToolheadConfiguration(toolhead)),\n\t\tsize: config.size,\n\t\tcontrolboard: config.controlboard.id,\n\t\tcontrollerFan: config.controllerFan.id,\n\t\tperformanceMode: config.performanceMode,\n\t\tstealthchop: config.stealthchop,\n\t\tstandstillStealth: config.standstillStealth,\n\t\trails: config.rails.map((rail) => serializePrinterRail(rail)),\n\t};\n\treturn SerializedPrinterConfiguration.parse(serializedConfig);\n};\nexport const serializePartialPrinterConfiguration = (\n\tconfig: PartialPrinterConfiguration,\n): SerializedPartialPrinterConfiguration => {\n\tconst toolheads = config?.toolheads?.map((toolhead) => serializePartialToolheadConfiguration(toolhead));\n\tconst serializedConfig: SerializedPartialPrinterConfiguration = {\n\t\tprinter: config?.printer?.id,\n\t\ttoolheads: toolheads,\n\t\tsize: config?.size,\n\t\tcontrolboard: config?.controlboard?.id,\n\t\tcontrollerFan: config?.controllerFan?.id,\n\t\tperformanceMode: config?.performanceMode,\n\t\tstealthchop: config?.stealthchop,\n\t\tstandstillStealth: config?.standstillStealth,\n\t};\n\treturn SerializedPartialPrinterConfiguration.parse(serializedConfig);\n};\n\nexport const useSerializedPrinterConfiguration = () => {\n\tconst printerConfiguration = useRecoilValue(PrinterConfigurationState);\n\tconst serializedPrinterConfiguration = useMemo(\n\t\t() => serializePartialPrinterConfiguration(printerConfiguration ?? {}),\n\t\t[printerConfiguration],\n\t);\n\treturn serializedPrinterConfiguration;\n};\nexport const usePrinterConfiguration = () => {\n\tconst [selectedPrinter, setSelectedPrinter] = useRecoilState(PrinterState);\n\tconst [selectedPrinterOption, setSelectedPrinterOption] = useRecoilState(PrinterSizeState);\n\tconst [selectedBoard, setSelectedBoard] = useRecoilState(ControlboardState);\n\tconst [performanceMode, setPerformanceMode] = useRecoilState(PerformanceModeState);\n\tconst [stealthchop, setStealthchop] = useRecoilState(StealthchopState);\n\tconst [standstillStealth, setStandstillStealth] = useRecoilState(StandstillStealthState);\n\tconst [selectedControllerFan, setSelectedControllerFan] = useRecoilState(ControllerFanState);\n\tconst selectedPrinterRails = useRecoilValue(PrinterRailsState);\n\tconst printerConfiguration = useRecoilValue(PrinterConfigurationState);\n\tconst serializedPrinterConfiguration = useSerializedPrinterConfiguration();\n\tconst parsedPrinterConfiguration = PrinterConfiguration.safeParse(printerConfiguration);\n\n\treturn {\n\t\tselectedPrinter,\n\t\tsetSelectedPrinter,\n\t\tselectedPrinterOption,\n\t\tsetSelectedPrinterOption,\n\t\tselectedBoard,\n\t\tsetSelectedBoard,\n\t\tperformanceMode,\n\t\tsetPerformanceMode,\n\t\tstealthchop,\n\t\tsetStealthchop,\n\t\tstandstillStealth,\n\t\tsetStandstillStealth,\n\t\tselectedPrinterRails,\n\t\tselectedControllerFan,\n\t\tsetSelectedControllerFan,\n\t\tpartialPrinterConfiguration: printerConfiguration,\n\t\tserializedPrinterConfiguration,\n\t\tparsedPrinterConfiguration,\n\t};\n};\n","import { ToolheadHelper } from '@/helpers/toolhead';\nimport { deserializeStepper } from '@/utils/serialization';\nimport { useRecoilCallback, useRecoilValue } from 'recoil';\nimport { useMemo, useRef, useState } from 'react';\nimport { PrinterRailState } from '@/recoil/printer';\nimport { PrinterAxis } from '@/zods/motion';\nimport { LoadablePrinterToolheadsState, PrinterToolheadState, PrinterToolheadsState } from '@/recoil/toolhead';\nimport { BaseToolheadConfiguration, ToolheadConfiguration, ToolNumber, ToolOrAxis } from '@/zods/toolhead';\nimport { defaultXEndstop } from '@/data/endstops';\nimport { hotendFanOptions, partFanOptions } from '@/data/fans';\n\nexport const useToolhead = (toolOrAxis: ToolOrAxis | PrinterAxis | undefined) => {\n\tconst toolheadConfigs = useRecoilValue(PrinterToolheadsState);\n\tconst toolhead = useMemo(() => {\n\t\tif (toolOrAxis == null) {\n\t\t\treturn null;\n\t\t}\n\t\tconst toolheads = toolheadConfigs?.filter(Boolean).map((th) => new ToolheadHelper(th));\n\t\tconst th = toolheads?.find(\n\t\t\t(th) => th.getTool() === toolOrAxis || th.getMotionAxis() === toolOrAxis || th.getExtruderAxis() === toolOrAxis,\n\t\t);\n\t\treturn th;\n\t}, [toolOrAxis, toolheadConfigs]);\n\treturn toolhead;\n};\n\nexport const useToolheads = () => {\n\tconst toolheadConfigs = useRecoilValue(PrinterToolheadsState);\n\tconst toolheads = useMemo(() => {\n\t\treturn toolheadConfigs?.filter(Boolean).map((th) => new ToolheadHelper(th));\n\t}, [toolheadConfigs]);\n\treturn toolheads;\n};\n\ntype MaybeToolhead<T extends boolean> = T extends true ? ToolheadHelper<any> : ToolheadHelper<any> | null;\n\nexport const useToolheadConfiguration = <T extends boolean = true>(\n\ttoolOrAxis: ToolOrAxis | PrinterAxis | undefined,\n\terrorIfNotExist: T = true as T,\n) => {\n\tconst toolheadConfigs = useRecoilValue(LoadablePrinterToolheadsState);\n\tconst toolheadConfigsRef = useRef(toolheadConfigs);\n\tif (toolheadConfigsRef.current !== toolheadConfigs && toolheadConfigs.length > 0) {\n\t\ttoolheadConfigsRef.current = toolheadConfigs.slice();\n\t}\n\tconst toolhead = useMemo(() => {\n\t\tconst toolheads = toolheadConfigsRef.current?.filter(Boolean).map((th) => new ToolheadHelper(th));\n\t\tconst th = toolheads?.find(\n\t\t\t(th) => th.getTool() === toolOrAxis || th.getMotionAxis() === toolOrAxis || th.getExtruderAxis() === toolOrAxis,\n\t\t);\n\t\tif (th == null && errorIfNotExist) {\n\t\t\tthrow new Error(`Toolhead with number or axis ${toolOrAxis} not found`);\n\t\t}\n\t\treturn th ?? null;\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [errorIfNotExist, toolOrAxis, toolheadConfigsRef.current]);\n\tconst [hasManuallySelectedThermistor, setHasManuallySelectedThermistor] = useState(false);\n\n\tconst setToolhead = useRecoilCallback(\n\t\t({ set, snapshot }) =>\n\t\t\tasync (th: ToolheadConfiguration<any>) => {\n\t\t\t\tconst helper = new ToolheadHelper(th);\n\t\t\t\tconst currentConfig = await snapshot.getPromise(PrinterToolheadState(helper.getTool()));\n\t\t\t\tif (currentConfig == null) {\n\t\t\t\t\tthrow new Error(`Toolhead ${helper.getToolCommand()} not found`);\n\t\t\t\t}\n\t\t\t\tconst current = new ToolheadHelper(currentConfig);\n\t\t\t\tif (th.extruder.id != current.getExtruder().id) {\n\t\t\t\t\tif (th.extruder.stepper != null) {\n\t\t\t\t\t\tconst stepper = deserializeStepper(th.extruder.stepper);\n\t\t\t\t\t\tif (stepper != null) {\n\t\t\t\t\t\t\tset(PrinterRailState(helper.getExtruderAxis()), (rail) => {\n\t\t\t\t\t\t\t\treturn rail == null\n\t\t\t\t\t\t\t\t\t? null\n\t\t\t\t\t\t\t\t\t: {\n\t\t\t\t\t\t\t\t\t\t\t...rail,\n\t\t\t\t\t\t\t\t\t\t\tstepper: stepper.id,\n\t\t\t\t\t\t\t\t\t\t\tcurrent: th.extruder.current ?? stepper.maxPeakCurrent * 0.71,\n\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (th.toolboard?.id !== current.getToolboard()?.id) {\n\t\t\t\t\t// Reset toolboard dependent options\n\t\t\t\t\tif (th.toolboard == null && th.xEndstop.id === 'endstop-toolboard') {\n\t\t\t\t\t\tth.xEndstop = defaultXEndstop;\n\t\t\t\t\t}\n\t\t\t\t\tif (th.partFan?.id.endsWith('-toolboard')) {\n\t\t\t\t\t\tconst newFan = partFanOptions(null, th).shift();\n\t\t\t\t\t\tif (newFan == null) {\n\t\t\t\t\t\t\tthrow new Error(`No part fan options available for current T${th.toolNumber} configuration`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tth.partFan = newFan;\n\t\t\t\t\t}\n\t\t\t\t\tif (th.hotendFan?.id.endsWith('-toolboard')) {\n\t\t\t\t\t\tconst newFan = hotendFanOptions(null, th).shift();\n\t\t\t\t\t\tif (newFan == null) {\n\t\t\t\t\t\t\tthrow new Error(`No hotend fan options available for current T${th.toolNumber} configuration`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tth.hotendFan = newFan;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (th.thermistor !== current.getThermistor() && th.thermistor !== th.hotend.thermistor) {\n\t\t\t\t\tsetHasManuallySelectedThermistor(true);\n\t\t\t\t} else if (th.hotend.id != current.getHotend().id && !hasManuallySelectedThermistor) {\n\t\t\t\t\tth.thermistor = th.hotend.thermistor;\n\t\t\t\t}\n\t\t\t\tconst val = BaseToolheadConfiguration.extend({ toolNumber: ToolNumber })\n\t\t\t\t\t.nullable()\n\t\t\t\t\t.safeParse({ ...th, toolNumber: current.getTool() });\n\t\t\t\tif (val.success) {\n\t\t\t\t\tset(PrinterToolheadState(current.getTool()), val.data);\n\t\t\t\t}\n\t\t\t\treturn val;\n\t\t\t},\n\t\t[hasManuallySelectedThermistor],\n\t);\n\treturn {\n\t\ttoolhead: toolhead as MaybeToolhead<T>,\n\t\tsetToolhead,\n\t};\n};\n"],"names":["badgeTextColorStyle","cva","variants","color","rose","red","yellow","orange","green","lime","blue","sky","indigo","purple","pink","brand","gray","plain","badgeBackgroundColorStyle","badgeBorderColorStyle","badgeStyle","size","sm","md","lg","defaultVariants","Badge","className","children","forwardProps","props","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsx","span","twMerge","bannerStyle","Banner","Icon","title","div","jsxs","twJoin","aria-hidden","h3","Spinner","svg","noMargin","xmlns","fill","viewBox","circle","cx","cy","r","stroke","strokeWidth","path","d","OnDropdownOpened","open","onShown","param","useEffect","useDropdownPrinterQueryState","query","vars","serializedPrinterConfiguration","data","isShown","setIsShown","useState","serializedConfig","useSerializedPrinterConfiguration","variables","undefined","_utils_trpc__WEBPACK_IMPORTED_MODULE_3__","SX","printer","useQuery","enabled","keepPreviousData","options","isFetching","DropdownWithPrinterQuery","rest","queryProps","React","Dropdown","value","onSelect","onSelected","useCallback","option","find","o","id","newSelection","sort","slice","a","b","localeCompare","inputClass","error","animate","useAutoAnimate","Listbox","onChange","disabled","Fragment","Label","label","Button","badge","isArray","map","i","react__WEBPACK_IMPORTED_MODULE_1__","createElement","key","ChevronUpDownIcon","ref","p","Transition","show","as","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","Options","Option","active","selected","Array","CheckIcon","length","TextInput","fieldId","useRef","objectHash","_onChange","isPasswordVisible","setIsPasswordVisible","icon","ExclamationCircleIcon","current","help","type","parseFloat","e","currentTarget","togglePasswordVisibility","visibility","onClick","concat","EyeSlashIcon","EyeIcon","input","placeholder","defaultValue","aria-invalid","aria-describedby","xEndstopOptions","config","toolheadConfig","endstops","toolboard","push","axis","PrinterAxis","x","defaultXEndstop","useIsClient","isClient","setIsClient","PerformanceModeState","atom","default","effects","moonrakerWriteEffect","syncEffect","refine","getRefineCheckerForZodSchema","z","boolean","optional","nullable","StealthchopState","StandstillStealthState","ControllerFanState","defaultControllerFan","Fan","PrinterConfigurationState","selector","get","printerSize","performanceMode","stealthchop","standstillStealth","rails","controlboard","controllerFan","toolheads","waitForAll","PrinterState","PrinterSizeState","PrinterRailsState","ControlboardState","PrinterToolheadsState","printerConfig","PartialPrinterConfiguration","safeParse","defaults","serializeToolheadConfiguration","th","success","console","flatten","fieldErrors","LoadablePrinterConfigurationState","loadable","noWait","hasValue","contents","hasError","loading","state","serializePrinterConfiguration","toolhead","serializePrinterRail","rail","SerializedPrinterConfiguration","parse","serializePartialPrinterConfiguration","serializePartialToolheadConfiguration","SerializedPartialPrinterConfiguration","printerConfiguration","useRecoilValue","useMemo","usePrinterConfiguration","selectedPrinter","setSelectedPrinter","useRecoilState","selectedPrinterOption","setSelectedPrinterOption","selectedBoard","setSelectedBoard","setPerformanceMode","setStealthchop","setStandstillStealth","selectedControllerFan","setSelectedControllerFan","selectedPrinterRails","parsedPrinterConfiguration","PrinterConfiguration","partialPrinterConfiguration","useToolheads","toolheadConfigs","filter","Boolean","ToolheadHelper","useToolheadConfiguration","toolOrAxis","errorIfNotExist","LoadablePrinterToolheadsState","toolheadConfigsRef","getTool","getMotionAxis","getExtruderAxis","hasManuallySelectedThermistor","setHasManuallySelectedThermistor","setToolhead","useRecoilCallback","set","snapshot","helper","currentConfig","getPromise","PrinterToolheadState","getToolCommand","extruder","getExtruder","stepper","deserializeStepper","PrinterRailState","maxPeakCurrent","getToolboard","xEndstop","partFan","endsWith","newFan","partFanOptions","shift","toolNumber","hotendFan","hotendFanOptions","thermistor","getThermistor","hotend","getHotend","val","BaseToolheadConfiguration","extend","ToolNumber"],"sourceRoot":""}