{"version":3,"file":"static/chunks/1787-4bb3c7e1f8715898.js","mappings":"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","sources":["webpack://_N_E/./tailwind.config.ts","webpack://_N_E/./app/_helpers/colors.ts","webpack://_N_E/./app/analysis/_worker/processing.ts","webpack://_N_E/./app/analysis/_worker/adxl345-stream.ts","webpack://_N_E/./app/analysis/_worker/index.ts","webpack://_N_E/./app/analysis/chart-theme.ts","webpack://_N_E/./app/analysis/charts.tsx","webpack://_N_E/./app/analysis/hooks.tsx","webpack://_N_E/./components/common/full-load-screen.tsx","webpack://_N_E/./components/common/no-ssr.tsx","webpack://_N_E/./data/endstops.ts","webpack://_N_E/./hooks/isClient.tsx","webpack://_N_E/./hooks/useToolheadConfiguration.tsx","webpack://_N_E/./zods/analysis.tsx","webpack://_N_E/<anon>"],"sourcesContent":["import defaultTheme from 'tailwindcss/defaultTheme';\nimport { Config } from 'tailwindcss/types/config';\n\nimport flattenColorPalette from 'tailwindcss/lib/util/flattenColorPalette';\nimport convert from 'color-convert';\nimport svgToDataUri from 'mini-svg-data-uri';\n\nexport default {\n\tdarkMode: 'class',\n\tcontent: [\n\t\t'./pages/**/*.{js,ts,jsx,tsx}',\n\t\t'./components/**/*.{js,ts,jsx,tsx}',\n\t\t'./helpers/**/*.{js,ts,jsx,tsx}',\n\t\t'./app/**/*.{js,ts,jsx,tsx}',\n\t\t'./data/**/*.{js,ts,jsx,tsx}',\n\t],\n\ttheme: {\n\t\tcontainer: {\n\t\t\tcenter: true,\n\t\t\tpadding: '2rem',\n\t\t\tscreens: {\n\t\t\t\t'2xl': '1400px',\n\t\t\t},\n\t\t},\n\t\textend: {\n\t\t\tfontFamily: {\n\t\t\t\tsans: ['var(--inter-font)', ...defaultTheme.fontFamily.sans],\n\t\t\t},\n\t\t\tkeyframes: {\n\t\t\t\tping: {\n\t\t\t\t\t'0%': {\n\t\t\t\t\t\topacity: '100',\n\t\t\t\t\t},\n\t\t\t\t\t'75%, 100%': {\n\t\t\t\t\t\ttransform: 'scale(2)',\n\t\t\t\t\t\topacity: '0',\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t'accordion-down': {\n\t\t\t\t\tfrom: { height: '0' },\n\t\t\t\t\tto: { height: 'var(--radix-accordion-content-height)' },\n\t\t\t\t},\n\t\t\t\t'accordion-up': {\n\t\t\t\t\tfrom: { height: 'var(--radix-accordion-content-height)' },\n\t\t\t\t\tto: { height: '0' },\n\t\t\t\t},\n\t\t\t},\n\t\t\tanimation: {\n\t\t\t\t'spin-fast': 'spin 0.5s linear infinite',\n\t\t\t\t'accordion-down': 'accordion-down 0.2s ease-out',\n\t\t\t\t'accordion-up': 'accordion-up 0.2s ease-out',\n\t\t\t},\n\t\t\tcolors: {\n\t\t\t\tbrand: {\n\t\t\t\t\t50: '#f2ffe1',\n\t\t\t\t\t100: '#deffcc',\n\t\t\t\t\t200: '#bdff99',\n\t\t\t\t\t300: '#9cff66',\n\t\t\t\t\t400: '#7bff33',\n\t\t\t\t\t500: '#5aff00',\n\t\t\t\t\t600: '#48cc00',\n\t\t\t\t\t700: '#369900',\n\t\t\t\t\t800: '#246600',\n\t\t\t\t\t900: '#123300',\n\t\t\t\t},\n\t\t\t\tborder: 'hsl(var(--border))',\n\t\t\t\tinput: 'hsl(var(--input))',\n\t\t\t\tring: 'hsl(var(--ring))',\n\t\t\t\tbackground: 'hsl(var(--background))',\n\t\t\t\tforeground: 'hsl(var(--foreground))',\n\t\t\t\tprimary: {\n\t\t\t\t\tDEFAULT: 'hsl(var(--brand-400) / 50%)',\n\t\t\t\t\tforeground: 'hsl(var(--white))',\n\t\t\t\t},\n\t\t\t\tsecondary: {\n\t\t\t\t\tDEFAULT: 'hsl(var(--secondary))',\n\t\t\t\t\tforeground: 'hsl(var(--white))',\n\t\t\t\t},\n\t\t\t\tdestructive: {\n\t\t\t\t\tDEFAULT: 'hsl(var(--red-400))',\n\t\t\t\t\tforeground: 'hsl(var(--black))',\n\t\t\t\t},\n\t\t\t\tmuted: {\n\t\t\t\t\tDEFAULT: 'hsl(var(--muted))',\n\t\t\t\t\tforeground: 'hsl(var(--muted-foreground))',\n\t\t\t\t},\n\t\t\t\taccent: {\n\t\t\t\t\tDEFAULT: 'hsl(var(--accent))',\n\t\t\t\t\tforeground: 'hsl(var(--white))',\n\t\t\t\t},\n\t\t\t\tpopover: {\n\t\t\t\t\tDEFAULT: 'hsl(var(--popover))',\n\t\t\t\t\tforeground: 'hsl(var(--popover-foreground))',\n\t\t\t\t},\n\t\t\t\tcard: {\n\t\t\t\t\tDEFAULT: 'hsl(var(--card))',\n\t\t\t\t\tforeground: 'hsl(var(--card-foreground))',\n\t\t\t\t},\n\t\t\t},\n\t\t\tborderRadius: {\n\t\t\t\tlg: 'var(--radius)',\n\t\t\t\tmd: 'calc(var(--radius) - 2px)',\n\t\t\t\tsm: 'calc(var(--radius) - 4px)',\n\t\t\t},\n\t\t\tfontSize: {\n\t\t\t\t'2xs': '0.6rem',\n\t\t\t\ts: '0.8125rem',\n\t\t\t},\n\t\t\tcontainers: {\n\t\t\t\t'screen-sm': '640px',\n\t\t\t\t'screen-md': '768px',\n\t\t\t\t'screen-lg': '1024px',\n\t\t\t\t'screen-xl': '1280px',\n\t\t\t\t'screen-2xl': '1536px',\n\t\t\t},\n\t\t},\n\t},\n\tplugins: [\n\t\trequire('@tailwindcss/forms'),\n\t\trequire('@tailwindcss/container-queries'),\n\t\trequire('tailwindcss-animate'),\n\t\trequire('tailwind-scrollbar')({ nocompatible: true }),\n\t\taddVariablesForColors,\n\t\tfunction ({ matchUtilities, theme }: any) {\n\t\t\tmatchUtilities(\n\t\t\t\t{\n\t\t\t\t\t'bg-grid': (value: any) => ({\n\t\t\t\t\t\tbackgroundImage: `url(\"${svgToDataUri(\n\t\t\t\t\t\t\t`<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\" width=\"32\" height=\"32\" fill=\"none\" stroke=\"${value}\"><path d=\"M0 .5H31.5V32\"/></svg>`,\n\t\t\t\t\t\t)}\")`,\n\t\t\t\t\t}),\n\t\t\t\t\t'bg-grid-small': (value: any) => ({\n\t\t\t\t\t\tbackgroundImage: `url(\"${svgToDataUri(\n\t\t\t\t\t\t\t`<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\" width=\"8\" height=\"8\" fill=\"none\" stroke=\"${value}\"><path d=\"M0 .5H31.5V32\"/></svg>`,\n\t\t\t\t\t\t)}\")`,\n\t\t\t\t\t}),\n\t\t\t\t\t'bg-dot': (value: any) => ({\n\t\t\t\t\t\tbackgroundImage: `url(\"${svgToDataUri(\n\t\t\t\t\t\t\t`<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\" width=\"16\" height=\"16\" fill=\"none\"><circle fill=\"${value}\" id=\"pattern-circle\" cx=\"10\" cy=\"10\" r=\"1.6257413380501518\"></circle></svg>`,\n\t\t\t\t\t\t)}\")`,\n\t\t\t\t\t}),\n\t\t\t\t},\n\t\t\t\t{ values: flattenColorPalette(theme('backgroundColor')), type: 'color' },\n\t\t\t);\n\t\t},\n\t],\n} satisfies Config;\n\nfunction addVariablesForColors({ addBase, theme }: any) {\n\tlet allColors = flattenColorPalette(theme('colors'));\n\tlet newVars = Object.fromEntries(\n\t\tObject.entries(allColors).map(([key, val]) => {\n\t\t\tconst parsed = convert.hex.hsl(val);\n\t\t\treturn [`--${key}`, val.startsWith('#') ? `${parsed[0]} ${parsed[1]}% ${parsed[2]}%` : val];\n\t\t}),\n\t);\n\n\taddBase({\n\t\t':root': newVars,\n\t});\n}\n","import resolveConfig from 'tailwindcss/resolveConfig';\nimport tailwindConfig from '@/tailwind.config';\nconst fullConfig = resolveConfig(tailwindConfig);\ntype TWShade<T extends keyof typeof fullConfig.theme.colors> = {\n\t[Color in T]: ExplicitObject<typeof fullConfig.theme.colors>[Color] extends string | { DEFAULT: string }\n\t\t? never\n\t\t: Color;\n}[T];\nexport type TWShadeableColorName = TWShade<keyof typeof fullConfig.theme.colors>;\nexport const twColors = fullConfig.theme.colors;\nexport const isShadableColor = (color: string): color is TWShadeableColorName => {\n\tconst twColor = twColors[color as keyof typeof twColors];\n\treturn twColor != null && typeof twColor !== 'string' && !('DEFAULT' in twColor);\n};\nexport const shadableTWColors = Object.fromEntries(\n\tObject.keys(twColors)\n\t\t.filter(isShadableColor)\n\t\t.map((c) => [c, twColors[c]]),\n) as { [color in TWShadeableColorName]: (typeof twColors)[TWShadeableColorName] };\n","import { KlipperAccelSubscriptionData } from '@/zods/analysis';\nimport BigNumber from 'bignumber.js';\nimport {\n\tObservable,\n\tasyncScheduler,\n\tbufferTime,\n\tconcatMap,\n\tdelay,\n\tdistinctUntilChanged,\n\tfirst,\n\tfirstValueFrom,\n\tfrom,\n\tmap,\n\tmergeMap,\n\tof,\n\tscheduled,\n\tshare,\n} from 'rxjs';\n\nconst expectedSampleRates = [100, 200, 400, 800, 1600, 3200, 6400, 12800, 25600, 51200];\n/**\n * The first element of the sample is the timestamp in seconds.\n */\nexport type AccelSample = [BigNumber | number, number, number, number];\n/**\n * The first element of the sample is the timestamp in milliseconds.\n */\nexport type BigNumberAccelSample = [BigNumber, number, number, number];\nexport type AccelSampleMs = [number, number, number, number];\n\ntype KlipperAccelSubscriptionDataCompat = Omit<KlipperAccelSubscriptionData, 'data'> & { data: AccelSample[] };\nexport const createSignalBuffers = async (dataStream$: Observable<KlipperAccelSubscriptionDataCompat>) => {\n\tconst timeStamp: number | BigNumber = await firstValueFrom(\n\t\tdataStream$.pipe(\n\t\t\tfirst(),\n\t\t\tmap((data) => {\n\t\t\t\treturn BigNumber(data.data[0][0]).decimalPlaces(0, BigNumber.ROUND_FLOOR).toNumber();\n\t\t\t}),\n\t\t),\n\t);\n\tconst subtractTimeStamp = ([time, x, y, z]: AccelSample): BigNumberAccelSample => [\n\t\tBigNumber(time).minus(timeStamp).shiftedBy(3),\n\t\tx,\n\t\ty,\n\t\tz,\n\t];\n\tconst signal$ = scheduled(dataStream$, asyncScheduler).pipe(\n\t\tconcatMap((data) => scheduled(from(data.data), asyncScheduler)),\n\t\tmap(subtractTimeStamp),\n\t\tshare(),\n\t);\n\n\tconst sampleRate$ = signal$.pipe(\n\t\tbufferTime(1000),\n\t\tmap((samples) =>\n\t\t\tsamples.length < 1\n\t\t\t\t? 1\n\t\t\t\t: Math.floor(samples.length / samples[samples.length - 1][0].minus(samples[0][0]).shiftedBy(-3).toNumber()),\n\t\t),\n\t\tdistinctUntilChanged(),\n\t\tshare(),\n\t);\n\n\tconst timeMappedSignal$ = scheduled(\n\t\tdataStream$.pipe(\n\t\t\tconcatMap((data) => {\n\t\t\t\tconst startTime = BigNumber(data.data[0][0]).minus(timeStamp).shiftedBy(3);\n\t\t\t\treturn scheduled(from(data.data), asyncScheduler).pipe(\n\t\t\t\t\tmap(subtractTimeStamp),\n\t\t\t\t\tmergeMap((sample) => {\n\t\t\t\t\t\tconst d = sample[0].minus(startTime).decimalPlaces(0, BigNumber.ROUND_FLOOR).toNumber();\n\t\t\t\t\t\t// downscale the delay, the scheduler is not perfect as it depends on the load on the worker thread.\n\t\t\t\t\t\treturn scheduled(of(sample).pipe(delay(d * 0.7)), asyncScheduler);\n\t\t\t\t\t}),\n\t\t\t\t);\n\t\t\t}),\n\t\t\tshare(),\n\t\t),\n\t\tasyncScheduler,\n\t);\n\n\tconst specSampleRate$ = sampleRate$.pipe(\n\t\tmap((sr) =>\n\t\t\texpectedSampleRates.reduce((prev, cur) => {\n\t\t\t\tif (Math.abs(cur - sr) < Math.abs(prev - sr)) {\n\t\t\t\t\treturn cur;\n\t\t\t\t}\n\t\t\t\treturn prev;\n\t\t\t}, expectedSampleRates[0]),\n\t\t),\n\t\tdistinctUntilChanged(),\n\t\tshare(),\n\t);\n\n\treturn {\n\t\t/**\n\t\t * All timestamps are relative to the first timestamp in the stream. This is that first timestamp.\n\t\t */\n\t\ttimeStamp,\n\t\tsignal$,\n\t\ttimeMappedSignal$,\n\t\tspecSampleRate$,\n\t\tsampleRate$,\n\t};\n};\n","import { getLogger } from '@/app/_helpers/logger';\nimport { JSONRPCRequest, JSONRPCResponseSuccess } from '@/moonraker/types';\nimport {\n\tKlipperAccelSubscriptionData,\n\tKlipperAccelSubscriptionResponse,\n\tklipperADXL345SubscriptionResponseSchema,\n} from '@/zods/analysis';\nimport { KlipperAccelSensorName, KlipperAccelSensorSchema } from '@/zods/hardware';\nimport BigNumber from 'bignumber.js';\nimport { filter, map, share } from 'rxjs';\nimport { webSocket } from 'rxjs/webSocket';\n\nlet id = 0;\n\nconst getSensorEndpoint = (sensor: KlipperAccelSensorSchema) => {\n\tswitch (sensor.type) {\n\t\tcase 'adxl345':\n\t\t\treturn 'adxl345/dump_adxl345';\n\t\tcase 'beacon':\n\t\t\treturn 'beacon/dump_accel';\n\t\tcase 'lis2dw':\n\t\t\treturn 'lis2dw/dump_lis2dw';\n\t\tdefault:\n\t\t\tthrow new Error(\"Sensor type not supported. Must be 'adxl345', 'beacon', or 'lis2dw'\");\n\t}\n};\n\ntype KlipperADXLRequest = JSONRPCRequest<\n\tReturnType<typeof getSensorEndpoint>,\n\t{ sensor: KlipperAccelSensorName; response_template: {} }\n>;\n\nexport interface RealtimeADXLOptions {\n\tonDataUpdate?: (status: KlipperAccelSubscriptionData) => void;\n\tonSubscriptionFailure?: ReactCallback<(err: Error) => void>;\n\tonSubscriptionSuccess?: ReactCallback<(header: KlipperAccelSubscriptionResponse['header']) => void>;\n\tsensor: KlipperAccelSensorName;\n}\n\nconst isSuccessResponse = (res: unknown): res is JSONRPCResponseSuccess => {\n\treturn res != null && typeof res === 'object' && !('error' in res);\n};\n\nconst isKlipperAccelSubscriptionResponse = (msg: unknown): msg is KlipperAccelSubscriptionResponse => {\n\treturn klipperADXL345SubscriptionResponseSchema.safeParse(msg).success;\n};\n\nconst isKlipperAccelSubscriptionData = (msg: unknown): msg is { params: KlipperAccelSubscriptionData } => {\n\treturn (\n\t\tisSuccessResponse(msg) &&\n\t\tmsg.params != null &&\n\t\t'data' in msg.params &&\n\t\tmsg.params != null &&\n\t\tArray.isArray(msg.params.data) &&\n\t\tArray.isArray(msg.params.data[0]) &&\n\t\tmsg.params.data[0].length === 4\n\t);\n};\n\nconst detrendFloatSignal = (signal: number[]) => {\n\tconst mean = signal.reduce((acc, val) => acc + val, 0) / signal.length;\n\tfor (let i = 0; i < signal.length; i++) {\n\t\tsignal[i] -= mean;\n\t}\n\treturn signal;\n};\n\nconst detrendBatch = (signal: [number, number, number, number][]): [number, number, number, number][] => {\n\tconst x = detrendFloatSignal(signal.map((s) => s[1]));\n\tconst y = detrendFloatSignal(signal.map((s) => s[2]));\n\tconst z = detrendFloatSignal(signal.map((s) => s[3]));\n\treturn signal.map((s, i) => [s[0], x[i], y[i], z[i]]);\n};\n\nexport const createADXL345Stream = (url: string, sensor: KlipperAccelSensorSchema) => {\n\t'use client';\n\tconst subject = webSocket({\n\t\turl,\n\t\tdeserializer: (e) => {\n\t\t\ttry {\n\t\t\t\treturn JSON.parse(e.data, (key, val, context?: { source?: string }) => {\n\t\t\t\t\t// context is a relatively new feature\n\t\t\t\t\tif (key === '0' && typeof val === 'number' && context?.source != null) {\n\t\t\t\t\t\treturn BigNumber(val);\n\t\t\t\t\t}\n\t\t\t\t\treturn val;\n\t\t\t\t});\n\t\t\t} catch (e) {\n\t\t\t\tgetLogger().error(e, 'Error parsing JSON from klipper socket');\n\t\t\t\treturn null;\n\t\t\t}\n\t\t},\n\t});\n\n\t// We don't use this yet..\n\tlet header: null | KlipperAccelSubscriptionResponse['header'] = null;\n\n\tconst dataStream$ = subject\n\t\t.multiplex(\n\t\t\t() =>\n\t\t\t\t({\n\t\t\t\t\tjsonrpc: '2.0',\n\t\t\t\t\tmethod: getSensorEndpoint(sensor),\n\t\t\t\t\tparams: {\n\t\t\t\t\t\tsensor: sensor.name,\n\t\t\t\t\t\tresponse_template: {},\n\t\t\t\t\t},\n\t\t\t\t\tid: ++id,\n\t\t\t\t}) satisfies KlipperADXLRequest,\n\t\t\t() => {\n\t\t\t\treturn null;\n\t\t\t},\n\t\t\t(msg) => {\n\t\t\t\tif ('result' in msg && isKlipperAccelSubscriptionResponse(msg.result)) {\n\t\t\t\t\theader = msg.result.header;\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (isKlipperAccelSubscriptionData(msg)) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tif (!isSuccessResponse(msg)) {\n\t\t\t\t\tgetLogger().error(msg, 'Error in response from adxl345 subscription on klipper socket');\n\t\t\t\t\tthrow new Error(`${msg.error.error}: ${msg.error.message}`);\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t},\n\t\t)\n\t\t.pipe(\n\t\t\tshare(),\n\t\t\tfilter((msg): msg is { params: KlipperAccelSubscriptionData } => isKlipperAccelSubscriptionData(msg)),\n\t\t\tmap((msg) => {\n\t\t\t\treturn { ...msg.params, data: detrendBatch(msg.params.data) };\n\t\t\t}),\n\t\t\tshare(),\n\t\t);\n\n\t// Keep a subscription open. The caller will be responsible for closing the stream.\n\t// This prevents us from rapidly connecting / disconnecting from the socket depending on downstream behavior.\n\tdataStream$.subscribe();\n\n\treturn {\n\t\tdataStream$,\n\t\tclose: () => {\n\t\t\tsubject.complete.bind(subject)();\n\t\t},\n\t};\n};\n","import { KlipperAccelSensorName, KlipperAccelSensorSchema } from '@/zods/hardware';\nimport { DoWork, fromWorker, runWorker } from 'observable-webworker';\nimport { EMPTY, Observable, Subject, asyncScheduler, firstValueFrom, from, of, scheduled } from 'rxjs';\nimport { filter, map, mergeAll, mergeMap, share } from 'rxjs/operators';\nimport { createSignalBuffers, type AccelSampleMs } from '@/app/analysis/_worker/processing';\nimport { createADXL345Stream } from '@/app/analysis/_worker/adxl345-stream';\nimport type { PSDResult, PSDWorkerInput, PSDWorkerOutput } from '@/app/analysis/_worker/psd';\n\nexport enum WorkCommand {\n\tSTART = 'START',\n\tSTOP = 'STOP',\n\tSTART_ACCUMULATION = 'START_ACCUMULATION',\n\tSTOP_ACCUMULATION = 'STOP_ACCUMULATION',\n}\n\nexport enum WorkResult {\n\tSTARTED = 'STARTED',\n\tSTOPPED = 'STOPPED',\n\tACCUMULATING = 'ACCUMULATING',\n\tACCUMULATED = 'ACCUMULATED',\n\tSIGNAL = 'SIGNAL',\n\tPSD = 'PSD',\n\tRX_RATE = 'RX_RATE',\n\tSAMPLE_RATE = 'SAMPLE_RATE',\n\tSPEC_SAMPLE_RATE = 'SPEC_SAMPLE_RATE',\n}\n\nexport type WorkerInput =\n\t| {\n\t\t\ttype: WorkCommand.STOP;\n\t  }\n\t| {\n\t\t\ttype: WorkCommand.START;\n\t\t\tpayload: {\n\t\t\t\turl: string;\n\t\t\t\tsensor: KlipperAccelSensorSchema;\n\t\t\t};\n\t  }\n\t| {\n\t\t\ttype: WorkCommand.START_ACCUMULATION;\n\t  }\n\t| {\n\t\t\ttype: WorkCommand.STOP_ACCUMULATION;\n\t  };\n\nexport type WorkerSignalOutput = {\n\ttype: WorkResult.SIGNAL;\n\t/**\n\t * The buffer of a Float64Array containing the timestamp in milliseconds and the x, y, z values.\n\t */\n\tpayload: ArrayBuffer;\n};\n\nexport type WorkerPSDOutput = {\n\ttype: WorkResult.PSD;\n\t/**\n\t * The power spectral density.\n\t */\n\tpayload: Omit<PSDResult, 'source'>;\n};\n\nexport type WorkerAccumulationResultOuput = {\n\ttype: WorkResult.ACCUMULATED;\n\t/**\n\t * The power spectral density.\n\t */\n\tpayload: PSDResult;\n};\n\nexport type WorkerAccumulationStarted = {\n\ttype: WorkResult.ACCUMULATING;\n};\n\nexport type WorkerOutput =\n\t| {\n\t\t\ttype: WorkResult.STARTED;\n\t\t\t/**\n\t\t\t * The first timestamp recieved from the socket (seconds).\n\t\t\t */\n\t\t\tpayload: number;\n\t  }\n\t| {\n\t\t\ttype: WorkResult.STOPPED;\n\t  }\n\t| WorkerSignalOutput\n\t| {\n\t\t\ttype: WorkResult.SAMPLE_RATE;\n\t\t\t/**\n\t\t\t * The sample rate in Hz.\n\t\t\t */\n\t\t\tpayload: number;\n\t  }\n\t| {\n\t\t\ttype: WorkResult.SPEC_SAMPLE_RATE;\n\t\t\t/**\n\t\t\t * Normalized spec sheet sample rate in Hz.\n\t\t\t */\n\t\t\tpayload: number;\n\t  }\n\t| WorkerPSDOutput\n\t| WorkerAccumulationStarted\n\t| WorkerAccumulationResultOuput;\n\nconst mapToWorkerOutput = <T>(mapFn: (input: T) => WorkerOutput) => map(mapFn);\n\n// Here be dragons. Thou art forewarned!\n// All workers needs serious refactor\n\nconst psdInput$ = new Subject<PSDWorkerInput>();\n\nconst psdWorker = fromWorker<PSDWorkerInput, PSDWorkerOutput>(\n\t() => new Worker(new URL('@/app/analysis/_worker/psd', import.meta.url)),\n\tpsdInput$,\n).pipe(share());\n\nconst psdOutput$ = psdWorker.pipe(\n\tfilter((output): output is { type: 'psd'; psd: PSDResult } => output.type === 'psd'),\n\tmapToWorkerOutput((output) => {\n\t\t// console.log('mapping psd result');\n\t\treturn {\n\t\t\ttype: WorkResult.PSD,\n\t\t\tpayload: output.psd,\n\t\t};\n\t}),\n\tshare(),\n);\nexport class AccelSensorWorker implements DoWork<WorkerInput, WorkerOutput> {\n\tprivate stream: ReturnType<typeof createADXL345Stream> | null = null;\n\tprivate signalProcessor: Awaited<ReturnType<typeof createSignalBuffers>> | null = null;\n\tprivate psdSubscribed = false;\n\tpublic work(input$: Observable<WorkerInput>) {\n\t\treturn input$.pipe(\n\t\t\tmergeMap((input): Observable<WorkerOutput> => {\n\t\t\t\tswitch (input.type) {\n\t\t\t\t\tcase WorkCommand.START: {\n\t\t\t\t\t\tif (this.stream != null) {\n\t\t\t\t\t\t\tthrow Error(`Stream already started`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.stream = createADXL345Stream(input.payload.url, input.payload.sensor);\n\t\t\t\t\t\tconst setup = async (): Promise<Observable<WorkerOutput>> => {\n\t\t\t\t\t\t\tif (this.stream == null) {\n\t\t\t\t\t\t\t\tthrow Error(`Stream not initialized`);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis.signalProcessor = await createSignalBuffers(this.stream.dataStream$);\n\t\t\t\t\t\t\tthis.signalProcessor.signal$.subscribe((s) =>\n\t\t\t\t\t\t\t\tpsdInput$.next({ command: 'sampleInput', payload: [s[0].toNumber(), s[1], s[2], s[3]] }),\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tthis.signalProcessor.specSampleRate$.subscribe((s) =>\n\t\t\t\t\t\t\t\tpsdInput$.next({ command: 'specSampleRateInput', payload: s }),\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tconst res = scheduled(\n\t\t\t\t\t\t\t\tfrom([\n\t\t\t\t\t\t\t\t\tof({\n\t\t\t\t\t\t\t\t\t\ttype: WorkResult.STARTED,\n\t\t\t\t\t\t\t\t\t\tpayload: this.signalProcessor.timeStamp,\n\t\t\t\t\t\t\t\t\t} as WorkerOutput),\n\t\t\t\t\t\t\t\t\tthis.signalProcessor.timeMappedSignal$.pipe(\n\t\t\t\t\t\t\t\t\t\tmapToWorkerOutput((data) => {\n\t\t\t\t\t\t\t\t\t\t\tconst sample = new Float64Array([data[0].toNumber(), ...data.slice(1)] as AccelSampleMs);\n\t\t\t\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\t\t\t\ttype: WorkResult.SIGNAL,\n\t\t\t\t\t\t\t\t\t\t\t\tpayload: sample.buffer,\n\t\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\tthis.signalProcessor.sampleRate$.pipe(\n\t\t\t\t\t\t\t\t\t\tmapToWorkerOutput((sampleRate) => ({\n\t\t\t\t\t\t\t\t\t\t\ttype: WorkResult.SAMPLE_RATE,\n\t\t\t\t\t\t\t\t\t\t\tpayload: sampleRate,\n\t\t\t\t\t\t\t\t\t\t})),\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\tthis.signalProcessor.specSampleRate$.pipe(\n\t\t\t\t\t\t\t\t\t\tmapToWorkerOutput((specSampleRate) => ({\n\t\t\t\t\t\t\t\t\t\t\ttype: WorkResult.SPEC_SAMPLE_RATE,\n\t\t\t\t\t\t\t\t\t\t\tpayload: specSampleRate,\n\t\t\t\t\t\t\t\t\t\t})),\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\tthis.psdSubscribed ? EMPTY : psdOutput$,\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\tasyncScheduler,\n\t\t\t\t\t\t\t).pipe(mergeAll());\n\t\t\t\t\t\t\tif (!this.psdSubscribed) {\n\t\t\t\t\t\t\t\tthis.psdSubscribed = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn res;\n\t\t\t\t\t\t};\n\t\t\t\t\t\treturn from(setup()).pipe(mergeAll());\n\t\t\t\t\t}\n\t\t\t\t\tcase WorkCommand.STOP: {\n\t\t\t\t\t\tif (this.stream != null) {\n\t\t\t\t\t\t\tthis.stream.close();\n\t\t\t\t\t\t\tthis.stream = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn of({\n\t\t\t\t\t\t\ttype: WorkResult.STOPPED,\n\t\t\t\t\t\t} as WorkerOutput);\n\t\t\t\t\t}\n\t\t\t\t\tcase WorkCommand.START_ACCUMULATION: {\n\t\t\t\t\t\tif (this.signalProcessor == null) {\n\t\t\t\t\t\t\tthrow Error(`Stream not initialized`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (psdWorker == null) {\n\t\t\t\t\t\t\tthrow Error(`PSD worker not initialized`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tpsdInput$.next({ command: 'accumulate', payload: true });\n\t\t\t\t\t\treturn scheduled(\n\t\t\t\t\t\t\tfrom([\n\t\t\t\t\t\t\t\tof({\n\t\t\t\t\t\t\t\t\ttype: WorkResult.ACCUMULATING,\n\t\t\t\t\t\t\t\t} as WorkerOutput),\n\t\t\t\t\t\t\t\tscheduled(\n\t\t\t\t\t\t\t\t\tfrom(\n\t\t\t\t\t\t\t\t\t\tfirstValueFrom(\n\t\t\t\t\t\t\t\t\t\t\tpsdWorker.pipe(\n\t\t\t\t\t\t\t\t\t\t\t\tfilter(\n\t\t\t\t\t\t\t\t\t\t\t\t\t(output): output is { type: 'accumulation_finished'; psd: PSDResult } =>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\toutput.type === 'accumulation_finished',\n\t\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t).pipe(\n\t\t\t\t\t\t\t\t\t\tmapToWorkerOutput((result) => {\n\t\t\t\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\t\t\t\ttype: WorkResult.ACCUMULATED,\n\t\t\t\t\t\t\t\t\t\t\t\tpayload: result.psd,\n\t\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\tasyncScheduler,\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\tasyncScheduler,\n\t\t\t\t\t\t).pipe(mergeAll());\n\t\t\t\t\t}\n\t\t\t\t\tcase WorkCommand.STOP_ACCUMULATION: {\n\t\t\t\t\t\tif (psdWorker == null) {\n\t\t\t\t\t\t\tthrow Error(`Stream not initialized`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (psdWorker == null) {\n\t\t\t\t\t\t\tthrow Error(`PSD process not initialized`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tpsdInput$.next({ command: 'accumulate', payload: false });\n\t\t\t\t\t\treturn EMPTY;\n\t\t\t\t\t}\n\t\t\t\t\tdefault: {\n\t\t\t\t\t\tthis.stream?.close();\n\t\t\t\t\t\tthis.stream = null;\n\t\t\t\t\t\tthrow new Error(`Invalid command`);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t}\n\tpublic selectTransferables(output: WorkerOutput): Transferable[] {\n\t\tswitch (output.type) {\n\t\t\tcase WorkResult.SIGNAL: {\n\t\t\t\treturn [output.payload];\n\t\t\t}\n\t\t\tcase WorkResult.PSD: {\n\t\t\t\treturn [\n\t\t\t\t\toutput.payload.x.estimates.buffer,\n\t\t\t\t\toutput.payload.x.frequencies.buffer,\n\t\t\t\t\toutput.payload.y.estimates.buffer,\n\t\t\t\t\toutput.payload.y.frequencies.buffer,\n\t\t\t\t\toutput.payload.z.estimates.buffer,\n\t\t\t\t\toutput.payload.z.frequencies.buffer,\n\t\t\t\t\toutput.payload.total.estimates.buffer,\n\t\t\t\t\toutput.payload.total.frequencies.buffer,\n\t\t\t\t];\n\t\t\t}\n\t\t\tcase WorkResult.ACCUMULATED: {\n\t\t\t\treturn [\n\t\t\t\t\toutput.payload.x.estimates.buffer,\n\t\t\t\t\toutput.payload.x.frequencies.buffer,\n\t\t\t\t\toutput.payload.y.estimates.buffer,\n\t\t\t\t\toutput.payload.y.frequencies.buffer,\n\t\t\t\t\toutput.payload.z.estimates.buffer,\n\t\t\t\t\toutput.payload.z.frequencies.buffer,\n\t\t\t\t\toutput.payload.total.estimates.buffer,\n\t\t\t\t\toutput.payload.total.frequencies.buffer,\n\t\t\t\t];\n\t\t\t}\n\t\t\tdefault: {\n\t\t\t\treturn [];\n\t\t\t}\n\t\t}\n\t}\n}\n\nrunWorker(AccelSensorWorker);\n","import { SciChartJSDarkv2Theme } from 'scichart';\n\nexport class ChartTheme extends SciChartJSDarkv2Theme {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.sciChartBackground = 'transparent';\n\t\tthis.loadingAnimationBackground = 'transparent';\n\t\tthis.axisBandsFill = '#20212333';\n\t\tthis.majorGridLineBrush = '#AAAAAA37';\n\t\tthis.minorGridLineBrush = '#77777719';\n\t\tthis.strokePalette = ['#F48420', '#AE408E', '#209FD9', '#264B93'];\n\t\tthis.fillPalette = ['#F4842077', '#AE408E77', '#209FD977', '#264B9377'];\n\t\tthis.isLightBackground = false;\n\t}\n}\n","'use client';\nimport {\n\tXyDataSeries,\n\tSciChartSurface,\n\tThickness,\n\tNumericAxis,\n\tEAutoRange,\n\tNumberRange,\n\tEAxisAlignment,\n\tFastLineRenderableSeries,\n\tENumericFormat,\n\teasing,\n\tFastMountainRenderableSeries,\n\tISciChart2DDefinition,\n\tEAxisType,\n\tESeriesType,\n\tWaveAnimation,\n\tGlowEffect,\n\tSeriesInfo,\n\tCursorModifier,\n\tTRolloverTooltipSvgTemplate,\n\tparseColorToTArgb,\n\tparseTArgbToHtmlColor,\n\tCursorTooltipSvgAnnotation,\n\tEDataSeriesType,\n\tXyySeriesInfo,\n\tXyyDataSeries,\n\tIDataSeries,\n} from 'scichart';\nimport { useChart } from '@/app/analysis/hooks';\nimport { ChartTheme } from '@/app/analysis/chart-theme';\n\nimport { inter } from '@/app/fonts';\nimport { TWShadeableColorName, shadableTWColors, twColors } from '@/app/_helpers/colors';\nimport { useCallback } from 'react';\n\nexport const ADXL_STREAM_BUFFER_SIZE = 128;\nconst historyCount = 200;\n\nSciChartSurface.configure({\n\twasmUrl: '/configure/scichart2d.wasm',\n\tdataUrl: '/configure/scichart2d.data',\n});\nSciChartSurface.UseCommunityLicense();\nconst theme = new ChartTheme();\n\nexport const SIGNAL_CHART_AXIS_SIGNAL_ID = 'signal';\nexport const SIGNAL_CHART_AXIS_HISTORY_ID = 'history';\nexport const SIGNAL_CHART_SERIES_SIGNAL_ID = 'signal-series';\nexport const SIGNAL_CHART_SERIES_HISTORY_ID = 'history-series';\nexport const SIGNAL_CHART_AXIS_AMPLITUDE_ID = 'amplitude';\n\ntype ADXLAxes = 'x' | 'y' | 'z';\n\nexport const isXyyDataSeries = (ds: IDataSeries): ds is XyyDataSeries => {\n\treturn ds.type === EDataSeriesType.Xyy;\n};\n\nexport const isXyDataSeries = (ds: IDataSeries): ds is XyDataSeries => {\n\treturn ds.type === EDataSeriesType.Xy;\n};\n\nexport const isXyySeriesInfo = (si: SeriesInfo): si is XyySeriesInfo => {\n\treturn si.dataSeriesType === EDataSeriesType.Xyy;\n};\n\nexport const isXySeriesInfo = (si: SeriesInfo): si is SeriesInfo => {\n\treturn si.dataSeriesType === EDataSeriesType.Xy;\n};\n\nexport const getAxisColorName = (axis: ADXLAxes): TWShadeableColorName => {\n\tswitch (axis) {\n\t\tcase 'x':\n\t\t\treturn `yellow`;\n\t\tcase 'y':\n\t\t\treturn `sky`;\n\t\tcase 'z':\n\t\t\treturn `rose`;\n\t\tdefault:\n\t\t\treturn `brand`;\n\t}\n};\n\nexport const getAxisColor = (axis: ADXLAxes) => {\n\treturn twColors[getAxisColorName(axis)];\n};\n\nexport const SignalChartMinimumRange = new NumberRange(-10000, 10000);\n\nexport const useADXLSignalChart = (axis: ADXLAxes) => {\n\treturn useChart(\n\t\tnull,\n\t\tuseCallback(\n\t\t\t(surface: SciChartSurface) => {\n\t\t\t\tconst color = getAxisColor(axis);\n\t\t\t\t// Category axis as the actual time doesn't matter (samples are evenly spaced).\n\t\t\t\tconst xAxis = new NumericAxis(surface.webAssemblyContext2D, {\n\t\t\t\t\tid: SIGNAL_CHART_AXIS_SIGNAL_ID + axis,\n\t\t\t\t\tautoRange: EAutoRange.Always,\n\t\t\t\t\tmaxAutoTicks: ADXL_STREAM_BUFFER_SIZE,\n\t\t\t\t\tdrawLabels: false,\n\t\t\t\t\tdrawMinorTickLines: false,\n\t\t\t\t\tdrawMajorTickLines: false,\n\t\t\t\t\tdrawMajorBands: false,\n\t\t\t\t\tdrawMinorGridLines: false,\n\t\t\t\t\tdrawMajorGridLines: false,\n\t\t\t\t});\n\t\t\t\tsurface.xAxes.add(xAxis);\n\n\t\t\t\t// Category axis as the actual time doesn't matter (samples are evenly spaced).\n\t\t\t\tconst xHistoryAxis = new NumericAxis(surface.webAssemblyContext2D, {\n\t\t\t\t\tid: SIGNAL_CHART_AXIS_HISTORY_ID + axis,\n\t\t\t\t\tautoRange: EAutoRange.Always,\n\t\t\t\t\tdrawLabels: false,\n\t\t\t\t\tdrawMinorGridLines: false,\n\t\t\t\t\tdrawMajorTickLines: false,\n\t\t\t\t});\n\t\t\t\tsurface.xAxes.add(xHistoryAxis);\n\n\t\t\t\tconst yAxis = new NumericAxis(surface.webAssemblyContext2D, {\n\t\t\t\t\tautoRange: EAutoRange.Never,\n\t\t\t\t\tvisibleRange: new NumberRange(-5000, 5000),\n\t\t\t\t\tdrawLabels: false,\n\t\t\t\t\tid: SIGNAL_CHART_AXIS_AMPLITUDE_ID + axis,\n\t\t\t\t\tdrawMinorTickLines: false,\n\t\t\t\t\tdrawMajorTickLines: false,\n\t\t\t\t\tdrawMajorBands: false,\n\t\t\t\t\tdrawMinorGridLines: false,\n\t\t\t\t\tdrawMajorGridLines: false,\n\t\t\t\t\taxisAlignment: EAxisAlignment.Left,\n\t\t\t\t});\n\t\t\t\tsurface.yAxes.add(yAxis);\n\n\t\t\t\tconst signalData = new XyDataSeries(surface.webAssemblyContext2D, {\n\t\t\t\t\tfifoCapacity: ADXL_STREAM_BUFFER_SIZE,\n\t\t\t\t\tcontainsNaN: false,\n\t\t\t\t\tisSorted: true,\n\t\t\t\t\tdataSeriesName: axis.toLocaleUpperCase(),\n\t\t\t\t\tdataIsSortedInX: true,\n\t\t\t\t\txValues: Array(ADXL_STREAM_BUFFER_SIZE)\n\t\t\t\t\t\t.fill(0)\n\t\t\t\t\t\t.map((_, i) => i),\n\t\t\t\t\tyValues: Array(ADXL_STREAM_BUFFER_SIZE).fill(0),\n\t\t\t\t});\n\n\t\t\t\t// Line series to render the live signal data.\n\t\t\t\tconst signalSeries = new FastLineRenderableSeries(surface.webAssemblyContext2D, {\n\t\t\t\t\txAxisId: SIGNAL_CHART_AXIS_SIGNAL_ID + axis,\n\t\t\t\t\tyAxisId: SIGNAL_CHART_AXIS_AMPLITUDE_ID + axis,\n\t\t\t\t\tstroke: color[400],\n\t\t\t\t\tstrokeThickness: 2,\n\t\t\t\t\tdataSeries: signalData,\n\t\t\t\t\teffect: new GlowEffect(surface.webAssemblyContext2D, {\n\t\t\t\t\t\tintensity: 1,\n\t\t\t\t\t\trange: 1,\n\t\t\t\t\t}),\n\t\t\t\t});\n\n\t\t\t\tsurface.renderableSeries.add(signalSeries);\n\n\t\t\t\tconst historyData = new XyDataSeries(surface.webAssemblyContext2D, {\n\t\t\t\t\tfifoCapacity: ADXL_STREAM_BUFFER_SIZE * historyCount,\n\t\t\t\t\tcontainsNaN: false,\n\t\t\t\t\tisSorted: true,\n\t\t\t\t\tdataSeriesName: axis.toLocaleUpperCase() + ' History',\n\t\t\t\t\tdataIsSortedInX: true,\n\t\t\t\t});\n\n\t\t\t\t// Line series to render the historical signal data (last 200 buffers)\n\t\t\t\tconst historySeries = new FastLineRenderableSeries(surface.webAssemblyContext2D, {\n\t\t\t\t\tstroke: color[500] + '22',\n\t\t\t\t\tstrokeThickness: 1,\n\t\t\t\t\topacity: 0.6,\n\t\t\t\t\tyAxisId: SIGNAL_CHART_AXIS_AMPLITUDE_ID + axis,\n\t\t\t\t\txAxisId: SIGNAL_CHART_AXIS_HISTORY_ID + axis,\n\t\t\t\t\tdataSeries: historyData,\n\t\t\t\t});\n\t\t\t\tsurface.renderableSeries.add(historySeries);\n\n\t\t\t\tsignalSeries.animation = new WaveAnimation({\n\t\t\t\t\tduration: 500,\n\t\t\t\t});\n\t\t\t\thistorySeries.animation = new WaveAnimation({\n\t\t\t\t\tduration: 500,\n\t\t\t\t});\n\n\t\t\t\treturn {\n\t\t\t\t\tsignalData: signalData,\n\t\t\t\t\tsignalSeries: signalSeries,\n\t\t\t\t\thistoryData: historyData,\n\t\t\t\t\thistorySeries: historySeries,\n\t\t\t\t\txAxis,\n\t\t\t\t\txHistoryAxis,\n\t\t\t\t\tyAxis,\n\t\t\t\t};\n\t\t\t},\n\t\t\t[axis],\n\t\t),\n\t);\n};\n\nexport const PSD_CHART_AXIS_AMPLITUDE_ID = 'amplitude';\nexport const PSDChartMinimumYVisibleRange = new NumberRange(0, 1500);\nexport const PSDChartNoSeriesDefinition: ISciChart2DDefinition = {\n\tsurface: {\n\t\ttheme: theme,\n\t\tpadding: Thickness.fromNumber(0),\n\t},\n\txAxes: [\n\t\t{\n\t\t\ttype: EAxisType.NumericAxis,\n\t\t\toptions: {\n\t\t\t\tvisibleRange: new NumberRange(0, 200),\n\t\t\t\tlabelStyle: {\n\t\t\t\t\t...inter.style,\n\t\t\t\t\tfontSize: 13,\n\t\t\t\t\tfontWeight: '600',\n\t\t\t\t\tpadding: new Thickness(15, 15, 15, 15),\n\t\t\t\t},\n\t\t\t\tlabelPostfix: 'Hz',\n\t\t\t\tdrawMinorGridLines: true,\n\t\t\t\tminorsPerMajor: 10,\n\t\t\t\tdrawMinorTickLines: false,\n\t\t\t\tdrawMajorTickLines: false,\n\t\t\t\tdrawMajorBands: false,\n\t\t\t},\n\t\t},\n\t],\n\tyAxes: [\n\t\t{\n\t\t\ttype: EAxisType.NumericAxis,\n\t\t\toptions: {\n\t\t\t\tid: PSD_CHART_AXIS_AMPLITUDE_ID,\n\t\t\t\taxisAlignment: EAxisAlignment.Left,\n\t\t\t\tgrowBy: new NumberRange(0, 0.1),\n\t\t\t\tvisibleRange: PSDChartMinimumYVisibleRange,\n\t\t\t\tlabelFormat: ENumericFormat.Exponential,\n\t\t\t\tlabelStyle: {\n\t\t\t\t\t...inter.style,\n\t\t\t\t\tfontSize: 13,\n\t\t\t\t\tfontWeight: '600',\n\t\t\t\t\tpadding: new Thickness(15, 15, 15, 15),\n\t\t\t\t},\n\t\t\t\tautoRangeAnimation: {\n\t\t\t\t\tduration: 140,\n\t\t\t\t\tanimateInitialRanging: false,\n\t\t\t\t\tanimateSubsequentRanging: true,\n\t\t\t\t\teasing: easing.inOutCubic,\n\t\t\t\t},\n\t\t\t\tdrawMinorGridLines: true,\n\t\t\t\tdrawMinorTickLines: false,\n\t\t\t\tdrawMajorTickLines: false,\n\t\t\t\tdrawMajorBands: false,\n\t\t\t\taxisTitleStyle: { fontSize: 10 },\n\t\t\t},\n\t\t},\n\t],\n};\nexport const PSDChartDefinition: ISciChart2DDefinition = {\n\t...PSDChartNoSeriesDefinition,\n\tseries: [\n\t\t{\n\t\t\ttype: ESeriesType.MountainSeries,\n\t\t\toptions: {\n\t\t\t\tid: 'total',\n\t\t\t\tyAxisId: PSD_CHART_AXIS_AMPLITUDE_ID,\n\t\t\t\tstrokeThickness: 3,\n\t\t\t\tfill: twColors.brand[500] + '22',\n\t\t\t\tstroke: twColors.brand[400],\n\t\t\t},\n\t\t\txyData: {\n\t\t\t\tcontainsNaN: false,\n\t\t\t\tisSorted: true,\n\t\t\t\txValues: Array(ADXL_STREAM_BUFFER_SIZE)\n\t\t\t\t\t.fill(0)\n\t\t\t\t\t.map((_, i) => Math.floor((i / ADXL_STREAM_BUFFER_SIZE) * 200)),\n\t\t\t\tyValues: Array(ADXL_STREAM_BUFFER_SIZE)\n\t\t\t\t\t.fill(0)\n\t\t\t\t\t.map((_, i) => 0),\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\ttype: ESeriesType.LineSeries,\n\t\t\toptions: {\n\t\t\t\tid: 'z',\n\t\t\t\tyAxisId: PSD_CHART_AXIS_AMPLITUDE_ID,\n\t\t\t\tstrokeThickness: 3,\n\t\t\t\tstroke: getAxisColor('z')[400],\n\t\t\t},\n\t\t\txyData: {\n\t\t\t\tcontainsNaN: false,\n\t\t\t\tisSorted: true,\n\t\t\t\txValues: Array(ADXL_STREAM_BUFFER_SIZE)\n\t\t\t\t\t.fill(0)\n\t\t\t\t\t.map((_, i) => Math.floor((i / ADXL_STREAM_BUFFER_SIZE) * 200)),\n\t\t\t\tyValues: Array(ADXL_STREAM_BUFFER_SIZE)\n\t\t\t\t\t.fill(0)\n\t\t\t\t\t.map((_, i) => 0),\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\ttype: ESeriesType.LineSeries,\n\t\t\toptions: {\n\t\t\t\tid: 'y',\n\t\t\t\tyAxisId: PSD_CHART_AXIS_AMPLITUDE_ID,\n\t\t\t\tstrokeThickness: 3,\n\t\t\t\tstroke: getAxisColor('y')[400],\n\t\t\t},\n\t\t\txyData: {\n\t\t\t\tcontainsNaN: false,\n\t\t\t\tisSorted: true,\n\t\t\t\txValues: Array(ADXL_STREAM_BUFFER_SIZE)\n\t\t\t\t\t.fill(0)\n\t\t\t\t\t.map((_, i) => Math.floor((i / ADXL_STREAM_BUFFER_SIZE) * 200)),\n\t\t\t\tyValues: Array(ADXL_STREAM_BUFFER_SIZE)\n\t\t\t\t\t.fill(0)\n\t\t\t\t\t.map((_, i) => 0),\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\ttype: ESeriesType.LineSeries,\n\t\t\toptions: {\n\t\t\t\tid: 'x',\n\t\t\t\tyAxisId: PSD_CHART_AXIS_AMPLITUDE_ID,\n\t\t\t\tstrokeThickness: 3,\n\t\t\t\tstroke: getAxisColor('x')[400],\n\t\t\t},\n\t\t\txyData: {\n\t\t\t\tcontainsNaN: false,\n\t\t\t\tisSorted: true,\n\t\t\t\txValues: Array(ADXL_STREAM_BUFFER_SIZE)\n\t\t\t\t\t.fill(0)\n\t\t\t\t\t.map((_, i) => Math.floor((i / ADXL_STREAM_BUFFER_SIZE) * 200)),\n\t\t\t\tyValues: Array(ADXL_STREAM_BUFFER_SIZE)\n\t\t\t\t\t.fill(0)\n\t\t\t\t\t.map((_, i) => 0),\n\t\t\t},\n\t\t},\n\t],\n};\n\n// Override the standard tooltip displayed by CursorModifier\nexport const getPSDTooltipLegendTemplate = (seriesInfos: SeriesInfo[], svgAnnotation: CursorTooltipSvgAnnotation) => {\n\tlet outputSvgString = '';\n\n\t// Foreach series there will be a seriesInfo supplied by SciChart. This contains info about the series under the house\n\tconst padding = 16;\n\tlet y = padding * 2;\n\tconst valuesWithLabels: string[] = [];\n\tseriesInfos.forEach((seriesInfo, index) => {\n\t\tlet separator = ':';\n\t\tlet textColor = seriesInfo.renderableSeries.rolloverModifierProps.tooltipColor as TWShadeableColorName;\n\t\tvaluesWithLabels.push(\n\t\t\t`${seriesInfo.renderableSeries.rolloverModifierProps.tooltipTitle}${separator} ${(seriesInfo.yValue / 1000).toFixed(2)} g^2/Hz @ ${seriesInfo.formattedXValue}`,\n\t\t);\n\t\toutputSvgString += `<text x=\"${padding}\" y=\"${y}\" class=\"text-sm text-medium font-sans\" fill=\"${shadableTWColors[textColor][400]}\">\n\t\t<tspan class=\"font-bold\">${seriesInfo.renderableSeries.rolloverModifierProps.tooltipTitle}</tspan>${separator} ${(seriesInfo.yValue / 1000).toFixed(2)} g<tspan y=\"${y - 4}\" class=\"sup\">2</tspan><tspan y=${y}>/Hz</tspan> @ ${seriesInfo.formattedXValue}\n\t\t</text>`;\n\t\ty += 20;\n\t\tif (seriesInfo.dataSeriesType === EDataSeriesType.Xyy) {\n\t\t\tconst si = seriesInfo as XyySeriesInfo;\n\t\t\tlet textColor = seriesInfo.renderableSeries.rolloverModifierProps1.tooltipColor as TWShadeableColorName;\n\t\t\tvaluesWithLabels.push(\n\t\t\t\t`${si.renderableSeries.rolloverModifierProps1.tooltipTitle}${separator} ${(si.y1Value / 1000).toFixed(2)} g^2/Hz @ ${si.formattedXValue}`,\n\t\t\t);\n\t\t\toutputSvgString += `<text x=\"${padding}\" y=\"${y}\" class=\"text-sm text-medium font-sans\" fill=\"${shadableTWColors[textColor][400]}\">\n\t\t\t\t<tspan class=\"font-bold\">${si.renderableSeries.rolloverModifierProps1.tooltipTitle}</tspan>${separator} ${(si.y1Value / 1000).toFixed(2)} g<tspan y=\"${y - 4}\" class=\"sup\">2</tspan><tspan y=${y}>/Hz</tspan> @ ${si.formattedXValue}\n\t\t\t</text>`;\n\t\t\ty += 20;\n\n\t\t\toutputSvgString += `<text x=\"${padding}\" y=\"${y}\" class=\"text-sm text-medium font-sans\" fill=\"${shadableTWColors['zinc'][400]}\">\n\t\t\t\t<tspan class=\"font-bold\">Amplitude Difference</tspan>${separator} ${Math.abs((si.y1Value - si.yValue) / 1000).toFixed(2)} g<tspan y=\"${y - 4}\" class=\"sup\">2</tspan><tspan y=${y}>/Hz</tspan>\n\t\t\t</text>`;\n\t\t\ty += 20;\n\t\t}\n\t});\n\tconst width =\n\t\tseriesInfos.length === 0\n\t\t\t? 0\n\t\t\t: padding +\n\t\t\t\tcalcTooltipWidth(\n\t\t\t\t\tvaluesWithLabels.reduce(function (prev, cur) {\n\t\t\t\t\t\treturn cur.length > prev ? cur.length : prev;\n\t\t\t\t\t}, 0),\n\t\t\t\t) *\n\t\t\t\t\t1.7;\n\t// tooltip height\n\tconst height = seriesInfos.length === 0 ? 0 : y;\n\n\treturn `<svg width=\"${width}\" height=\"${height}\">\n\t\t\t\t<rect rx=\"8\" ry=\"8\" width=\"100%\" height=\"100%\" class=\"stroke-zinc-400/10 fill-zinc-900/70 stroke-1\" />\n                ${outputSvgString}\n            </svg>`;\n};\n\n// Override the standard tooltip displayed by CursorModifier\nexport const psdRolloverTooltipTemplate: TRolloverTooltipSvgTemplate = (id, seriesInfo, rolloverTooltip) => {\n\tlet valuesBlock = '';\n\tconst tooltipProps = rolloverTooltip.tooltipProps;\n\tconst tooltipTitle = tooltipProps.tooltipTitle,\n\t\ttooltipColor = tooltipProps.tooltipColor as TWShadeableColorName,\n\t\ttooltipTextColor = twColors[tooltipColor][100],\n\t\ttooltipBorderColor = parseColorToTArgb(twColors[tooltipColor][400]),\n\t\ttooltipBGColor = parseColorToTArgb(twColors[tooltipColor][600]),\n\t\ttooltipLabelX = tooltipProps.tooltipLabelX,\n\t\ttooltipLabelY = tooltipProps.tooltipLabelY,\n\t\tshadowColor = twColors[tooltipColor][900];\n\n\ttooltipBorderColor.opacity = Math.round(255 * 0.8);\n\ttooltipBGColor.opacity = Math.round(255 * 0.2);\n\tconst tooltipDataTemplate =\n\t\trolloverTooltip.tooltipProps.tooltipDataTemplate ??\n\t\trolloverTooltip.tooltipProps.rolloverModifier.tooltipDataTemplate;\n\tconst valuesWithLabels = tooltipDataTemplate(seriesInfo, tooltipTitle, tooltipLabelX, tooltipLabelY);\n\t// tooltip width\n\tconst width =\n\t\ttooltipProps.width ??\n\t\tcalcTooltipWidth(\n\t\t\tvaluesWithLabels.reduce(function (prev, cur) {\n\t\t\t\treturn cur.length > prev ? cur.length : prev;\n\t\t\t}, 0),\n\t\t);\n\t// tooltip height\n\tconst height = tooltipProps.height ?? calcTooltipHeight(valuesWithLabels.length);\n\trolloverTooltip.updateSize(width, height);\n\tvaluesWithLabels.forEach(function (val, index) {\n\t\tvaluesBlock += `<tspan x=\"8\" dy=\"1.2em\">${val}</tspan>`;\n\t});\n\tlet blur = `<feGaussianBlur result=\"blurOut\" in=\"offOut\" stdDeviation=\"3\" />`;\n\tif (shadowColor !== undefined) {\n\t\tvar shadowRGBA = parseColorToTArgb(shadowColor);\n\t\tblur = `\n\t\t\t<feColorMatrix result=\"matrixOut\" in=\"offOut\" type=\"matrix\"\n\t\t\t\tvalues=\"0 0 0 0 \n\t\t\t\t${shadowRGBA.red / 255}\n\t\t\t\t0 0 0 0\n\t\t\t\t${shadowRGBA.green / 255}\n\t\t\t\t0 0 0 0\n\t\t\t\t${shadowRGBA.blue / 255}\n\t\t\t\t0 0 0 \n\t\t\t\t${shadowRGBA.opacity / 255}\n\t\t\t\t0 0\" \n\t\t\t/>\n\t\t\t<feGaussianBlur result=\"blurOut\" in=\"matrixOut\" stdDeviation=\"3\" />`;\n\t}\n\treturn `\n\t\t<svg class=\"scichart__rollover-tooltip transition-all\" width=\"${width}\" height=\"${height}\">\n\t\t\t<defs>\n\t\t\t\t<filter id=\"${id}\" x=\"0\" y=\"0\" width=\"200%\" height=\"200%\">\n\t\t\t\t\t<feOffset result=\"offOut\" in=\"SourceAlpha\" dx=\"3\" dy=\"3\" />\n\t\t\t\t\t\t\n\t\t\t\t\t\t${blur}\n\t\t\t\t\t<feBlend in=\"SourceGraphic\" in2=\"blurOut\" mode=\"normal\" />\n\t\t\t\t</filter>\n\t\t\t</defs>\n\t\t\t<rect rx=\"8\" ry=\"8\" width=\"100%\" height=\"100%\" fill=\"${parseTArgbToHtmlColor(tooltipBGColor)}\" stroke=\"${parseTArgbToHtmlColor(tooltipBorderColor)}\" stroke-width=\"2\"  filter=\"url(#${id}\" />\n\t\t\t<svg width=\"100%\">\n\t\t\t\t<text x=\"8\" y=\"3\" class=\"text-sm font-sans font-semibold\" dy=\"0\" fill=\"${tooltipTextColor}\">\n\t\t\t\t${valuesBlock}\n\t\t\t\t</text>\n\t\t\t</svg>\n\t\t</svg>`;\n};\n\nexport const usePSDChart = () => {\n\treturn useChart(\n\t\tPSDChartDefinition,\n\t\tuseCallback((surface: SciChartSurface) => {\n\t\t\tconst xAnimationSeries = new XyDataSeries(surface.webAssemblyContext2D, {\n\t\t\t\tid: 'xAnimationSeries',\n\t\t\t\tcontainsNaN: false,\n\t\t\t\tisSorted: true,\n\t\t\t\tdataIsSortedInX: true,\n\t\t\t});\n\t\t\tsurface.addDeletable(xAnimationSeries);\n\t\t\tconst yAnimationSeries = new XyDataSeries(surface.webAssemblyContext2D, {\n\t\t\t\tid: 'yAnimationSeries',\n\t\t\t\tcontainsNaN: false,\n\t\t\t\tisSorted: true,\n\t\t\t\tdataIsSortedInX: true,\n\t\t\t});\n\t\t\tsurface.addDeletable(yAnimationSeries);\n\t\t\tconst zAnimationSeries = new XyDataSeries(surface.webAssemblyContext2D, {\n\t\t\t\tid: 'zAnimationSeries',\n\t\t\t\tcontainsNaN: false,\n\t\t\t\tisSorted: true,\n\t\t\t\tdataIsSortedInX: true,\n\t\t\t});\n\t\t\tsurface.addDeletable(zAnimationSeries);\n\t\t\tconst totalAnimationSeries = new XyDataSeries(surface.webAssemblyContext2D, {\n\t\t\t\tid: 'totalAnimationSeries',\n\t\t\t\tcontainsNaN: false,\n\t\t\t\tisSorted: true,\n\t\t\t\tdataIsSortedInX: true,\n\t\t\t});\n\t\t\tsurface.addDeletable(totalAnimationSeries);\n\t\t\t(surface.renderableSeries.asArray() as FastMountainRenderableSeries[]).forEach((rs) => {\n\t\t\t\trs.rolloverModifierProps.tooltipColor = getAxisColorName(rs.id as ADXLAxes);\n\t\t\t\trs.rolloverModifierProps.tooltipTemplate = psdRolloverTooltipTemplate;\n\t\t\t\trs.rolloverModifierProps.tooltipTitle =\n\t\t\t\t\trs.id.substring(0, 1).toUpperCase() + rs.id.substring(1) + ' Power Spectral Density';\n\t\t\t\trs.animation = new WaveAnimation({\n\t\t\t\t\tduration: 500,\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tsurface.chartModifiers.add(\n\t\t\t\tnew CursorModifier({\n\t\t\t\t\t// Defines if crosshair is shown\n\t\t\t\t\tcrosshairStroke: twColors.sky[400],\n\t\t\t\t\tcrosshairStrokeThickness: 1,\n\t\t\t\t\tshowXLine: true,\n\t\t\t\t\tshowYLine: true,\n\t\t\t\t\t// Shows the default tooltip\n\t\t\t\t\tshowTooltip: false,\n\t\t\t\t\ttooltipLegendTemplate: getPSDTooltipLegendTemplate,\n\t\t\t\t\ttooltipLegendOffsetX: 16,\n\t\t\t\t\ttooltipLegendOffsetY: 16,\n\t\t\t\t\tyAxisId: PSD_CHART_AXIS_AMPLITUDE_ID,\n\t\t\t\t\taxisLabelFill: twColors.zinc[900],\n\t\t\t\t\taxisLabelStroke: twColors.zinc[100],\n\t\t\t\t}),\n\t\t\t);\n\n\t\t\treturn {\n\t\t\t\tanimationSeries: {\n\t\t\t\t\tx: xAnimationSeries,\n\t\t\t\t\ty: yAnimationSeries,\n\t\t\t\t\tz: zAnimationSeries,\n\t\t\t\t\ttotal: totalAnimationSeries,\n\t\t\t\t},\n\t\t\t};\n\t\t}, []),\n\t);\n};\nvar calcTooltipWidth = function (textLength: number = 20, charWidth = 4) {\n\treturn textLength * charWidth + 20;\n};\n/** @ignore */\nvar calcTooltipHeight = function (lines: number = 2, lineHeight = 15) {\n\treturn lineHeight * lines + 16;\n};\n","'use client';\nimport { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport {\n\tAxisBase2D,\n\tEWatermarkPosition,\n\tISciChart2DDefinition,\n\tNumberRange,\n\tSciChartSurface,\n\tTSciChart,\n\tThickness,\n\tbuild2DChart,\n\teasing,\n} from 'scichart';\nimport { TChartComponentProps } from 'scichart-react/types';\nimport { ChartTheme } from '@/app/analysis/chart-theme';\nimport { twJoin } from 'tailwind-merge';\nimport { FullLoadScreen } from '@/components/common/full-load-screen';\nimport {\n\tAccelerometerType,\n\tKlipperAccelSensorName,\n\tKlipperAccelSensorSchema,\n\tklipperAccelSensorSchema,\n} from '@/zods/hardware';\nimport { z } from 'zod';\nimport { useRecoilValue } from 'recoil';\nimport { ControlboardState } from '@/recoil/printer';\nimport { useToolheads } from '@/hooks/useToolheadConfiguration';\nimport {\n\tWorkerInput,\n\tWorkerOutput,\n\tWorkCommand,\n\tWorkResult,\n\tWorkerSignalOutput,\n\tWorkerPSDOutput,\n\tWorkerAccumulationResultOuput,\n\tWorkerAccumulationStarted,\n} from '@/app/analysis/_worker';\nimport { fromWorker } from 'observable-webworker';\nimport { Subject, bufferTime, filter, firstValueFrom, map, share, timeout } from 'rxjs';\nimport { getHost } from '@/helpers/util';\nimport { PSDResult } from '@/app/analysis/_worker/psd';\nimport { TypedArrayPSD } from '@/app/analysis/periodogram';\nimport { PSD } from '@/zods/analysis';\n\nfunction transformPSD(psd: TypedArrayPSD): PSD {\n\tconst transformed = {\n\t\tfrequencies: Array.from(psd.frequencies),\n\t\testimates: Array.from(psd.estimates),\n\t\tpowerRange: psd.powerRange,\n\t};\n\treturn transformed;\n}\n\nconst getWsURL = () => {\n\tconst host = getHost();\n\tif (host == null || host.trim() == '') {\n\t\treturn null;\n\t}\n\tif (typeof window == 'undefined') {\n\t\treturn null;\n\t}\n\treturn `ws://${host}:7125/klippysocket`;\n};\n\nconst input$ = new Subject<WorkerInput>();\nconst worker = fromWorker<WorkerInput, WorkerOutput>(\n\t() => new Worker(new URL('@/app/analysis/_worker/index', import.meta.url)),\n\tinput$,\n).pipe(share());\nconst signal$ = worker.pipe(\n\tfilter((output): output is WorkerSignalOutput => output.type === WorkResult.SIGNAL),\n\tmap((output) => new Float64Array(output.payload)),\n\tbufferTime(1000 / 60),\n\tfilter((signals) => signals.length > 0),\n\tmap((signals) => {\n\t\tconst time = new Float64Array(signals.length);\n\t\tconst x = new Float64Array(signals.length);\n\t\tconst y = new Float64Array(signals.length);\n\t\tconst z = new Float64Array(signals.length);\n\t\tsignals.forEach((signal, i) => {\n\t\t\ttime[i] = signal[0];\n\t\t\tx[i] = signal[1];\n\t\t\ty[i] = signal[2];\n\t\t\tz[i] = signal[3];\n\t\t});\n\t\treturn [time, x, y, z] as [Float64Array, Float64Array, Float64Array, Float64Array];\n\t}),\n\tshare(),\n);\nconst psd$ = worker.pipe(\n\tfilter((output): output is WorkerPSDOutput => output.type === WorkResult.PSD),\n\tmap((output) => output.payload),\n\tshare(),\n);\nexport const useWorker = (\n\tenabled: boolean,\n\tsensor: KlipperAccelSensorName,\n\tonResult: ReactCallback<(signal: [Float64Array, Float64Array, Float64Array, Float64Array]) => void>,\n\tonPSDResult: ReactCallback<(psd: Omit<PSDResult, 'source'>) => void>,\n\tonError: ReactCallback<(err: Error) => void>,\n) => {\n\tconst parsedSensor = useAccelerometerWithType(sensor);\n\tconst [wsUrl, setWsUrl] = useState(getWsURL());\n\tconst isRunningRef = useRef(false);\n\tconst isAccumulatingRef = useRef(false);\n\tconst onResultRef = useRef(onResult);\n\tonResultRef.current = onResult;\n\tconst onPSDResultRef = useRef(onPSDResult);\n\tonPSDResultRef.current = onPSDResult;\n\n\tconst startAccumulation = useCallback(async () => {\n\t\tif (isAccumulatingRef.current) {\n\t\t\tthrow new Error('Already accumulating');\n\t\t}\n\t\tconst psdRes = firstValueFrom(\n\t\t\tworker.pipe(\n\t\t\t\tfilter((output) => output.type === WorkResult.PSD),\n\t\t\t\ttimeout(5000),\n\t\t\t),\n\t\t);\n\t\tconst res = firstValueFrom(\n\t\t\tworker.pipe(\n\t\t\t\tfilter((output): output is WorkerAccumulationStarted => output.type === WorkResult.ACCUMULATING),\n\t\t\t\tmap(() => true),\n\t\t\t\ttimeout(5000),\n\t\t\t),\n\t\t);\n\t\tawait psdRes;\n\t\tinput$.next({ type: WorkCommand.START_ACCUMULATION });\n\t\tawait res;\n\t}, []);\n\tconst stopAccumulation = useCallback(async () => {\n\t\tif (!isAccumulatingRef.current) {\n\t\t\tthrow new Error('Not accumulating, cannot stop');\n\t\t}\n\t\tconst res = firstValueFrom(\n\t\t\tworker.pipe(\n\t\t\t\tfilter((output): output is WorkerAccumulationResultOuput => output.type === WorkResult.ACCUMULATED),\n\t\t\t\tmap((output) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tx: transformPSD(output.payload.x),\n\t\t\t\t\t\ty: transformPSD(output.payload.y),\n\t\t\t\t\t\tz: transformPSD(output.payload.z),\n\t\t\t\t\t\ttotal: transformPSD(output.payload.total),\n\t\t\t\t\t};\n\t\t\t\t}),\n\t\t\t\ttimeout(1000 * 60), // 1 minute timeout\n\t\t\t),\n\t\t);\n\t\tinput$.next({ type: WorkCommand.STOP_ACCUMULATION });\n\t\treturn await res;\n\t}, []);\n\tconst streamStarted = useCallback(async () => {\n\t\tawait new Promise((resolve) => setTimeout(resolve, 10));\n\t\tif (isRunningRef.current) {\n\t\t\treturn;\n\t\t}\n\t\tconst res = firstValueFrom(\n\t\t\tworker.pipe(\n\t\t\t\tfilter((output): output is WorkerAccumulationResultOuput => output.type === WorkResult.STARTED),\n\t\t\t\ttimeout(5000),\n\t\t\t),\n\t\t);\n\t\tawait res;\n\t\treturn;\n\t}, []);\n\tuseEffect(() => {\n\t\tsetWsUrl(getWsURL());\n\t}, []);\n\tuseEffect(() => {\n\t\tconst subscriber = (signal: [Float64Array, Float64Array, Float64Array, Float64Array]) => {\n\t\t\tonResultRef.current(signal);\n\t\t};\n\t\tconst signalSub = signal$.subscribe(subscriber);\n\t\tconst psdSubscriber = (psd: Omit<PSDResult, 'source'>) => {\n\t\t\tonPSDResultRef.current(psd);\n\t\t};\n\t\tconst psdSub = psd$.subscribe(psdSubscriber);\n\t\treturn () => {\n\t\t\tsignalSub.unsubscribe();\n\t\t\tpsdSub.unsubscribe();\n\t\t};\n\t}, []);\n\tuseEffect(() => {\n\t\tif (enabled && wsUrl != null) {\n\t\t\tconst sub = worker.subscribe({\n\t\t\t\tnext: (output) => {\n\t\t\t\t\tswitch (output.type) {\n\t\t\t\t\t\tcase WorkResult.STARTED:\n\t\t\t\t\t\t\tisRunningRef.current = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase WorkResult.STOPPED:\n\t\t\t\t\t\t\tisRunningRef.current = false;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase WorkResult.ACCUMULATING:\n\t\t\t\t\t\t\tisAccumulatingRef.current = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase WorkResult.ACCUMULATED:\n\t\t\t\t\t\t\tisAccumulatingRef.current = false;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase WorkResult.SAMPLE_RATE:\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase WorkResult.SPEC_SAMPLE_RATE:\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\terror: onError,\n\t\t\t});\n\t\t\tinput$.next({ type: WorkCommand.START, payload: { url: wsUrl, sensor: parsedSensor } });\n\t\t\treturn () => {\n\t\t\t\tisRunningRef.current = false;\n\t\t\t\tinput$.next({ type: WorkCommand.STOP });\n\t\t\t\tsub.unsubscribe();\n\t\t\t};\n\t\t}\n\t}, [enabled, onError, parsedSensor, sensor, wsUrl]);\n\treturn {\n\t\tstreamStarted,\n\t\tstartAccumulation,\n\t\tstopAccumulation,\n\t};\n};\nexport const useAccelerometerWithType = (accelerometerName: KlipperAccelSensorName): KlipperAccelSensorSchema => {\n\tconst controlBoard = useRecoilValue(ControlboardState);\n\tconst toolheads = useToolheads();\n\tlet accelType: z.infer<typeof AccelerometerType> = 'adxl345';\n\n\tif (accelerometerName === 'controlboard') {\n\t\tif (controlBoard?.ADXL345SPI != null) {\n\t\t\taccelType = 'adxl345';\n\t\t}\n\t\tif (controlBoard?.LIS2DW != null) {\n\t\t\taccelType = 'lis2dw';\n\t\t}\n\t}\n\tif (accelerometerName === 'toolboard_t0' || accelerometerName === 'toolboard_t1') {\n\t\tconst toolboard = toolheads.find((t) => t.getToolboardName() === accelerometerName)?.getToolboard();\n\t\tif (toolboard == null) {\n\t\t\tthrow new Error(`No toolboard found for T0`);\n\t\t}\n\t\tif (toolboard.ADXL345SPI != null) {\n\t\t\taccelType = 'adxl345';\n\t\t}\n\t\tif (toolboard.LIS2DW != null) {\n\t\t\taccelType = 'lis2dw';\n\t\t}\n\t}\n\tif (accelerometerName === 'beacon') {\n\t\taccelType = 'beacon';\n\t}\n\treturn useMemo(\n\t\t() =>\n\t\t\tklipperAccelSensorSchema.parse({\n\t\t\t\tname: accelerometerName,\n\t\t\t\ttype: accelType,\n\t\t\t}),\n\t\t[accelerometerName, accelType],\n\t);\n};\n\nconst theme = new ChartTheme();\nexport const useChart = <T,>(\n\tdefinition: ISciChart2DDefinition | null,\n\tinitializer?: ReactCallback<(surface: SciChartSurface) => T>,\n\tindent = true,\n) => {\n\tconst surface = useRef<SciChartSurface | null>(null);\n\tconst [isInitialized, setIsInitialized] = useState(false);\n\tconst data = useRef<T | null>(null);\n\treturn useMemo(\n\t\t() => ({\n\t\t\tforwardProps: {\n\t\t\t\tinitChart: async (rootElement: string | HTMLDivElement) => {\n\t\t\t\t\tlet chart: null | { wasmContext: TSciChart; sciChartSurface: SciChartSurface } = null;\n\t\t\t\t\tif (definition != null) {\n\t\t\t\t\t\tconst orgPadding = definition.surface?.padding;\n\t\t\t\t\t\tconst def = {\n\t\t\t\t\t\t\t...definition,\n\t\t\t\t\t\t\tsurface: {\n\t\t\t\t\t\t\t\t...definition.surface,\n\t\t\t\t\t\t\t\tpadding: new Thickness(\n\t\t\t\t\t\t\t\t\torgPadding?.top ?? 0,\n\t\t\t\t\t\t\t\t\torgPadding?.right ?? 0,\n\t\t\t\t\t\t\t\t\torgPadding?.bottom ?? 0,\n\t\t\t\t\t\t\t\t\t(orgPadding?.left ?? 0) + (indent ? 300 : 0),\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t};\n\t\t\t\t\t\tchart = await build2DChart(rootElement, def);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tchart = await SciChartSurface.create(rootElement, {\n\t\t\t\t\t\t\ttheme: theme,\n\t\t\t\t\t\t\tpadding: new Thickness(0, 0, 0, indent ? 300 : 0),\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tchart.sciChartSurface.watermarkPosition = EWatermarkPosition.BottomLeft;\n\t\t\t\t\tchart.sciChartSurface.watermarkRelativeToCanvas = true;\n\t\t\t\t\tsurface.current = chart.sciChartSurface;\n\t\t\t\t\tif (initializer) {\n\t\t\t\t\t\tdata.current = initializer(chart.sciChartSurface);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn { sciChartSurface: chart.sciChartSurface };\n\t\t\t\t},\n\t\t\t\tonInit: () => setIsInitialized(true),\n\t\t\t\tstyle: {\n\t\t\t\t\tmarginLeft: indent ? -300 : 0,\n\t\t\t\t},\n\n\t\t\t\tfallback: <FullLoadScreen className={twJoin(indent && 'ml-[150px]', 'bg-zinc-900')} />,\n\t\t\t} satisfies TChartComponentProps,\n\t\t\tsurface,\n\t\t\tisInitialized,\n\t\t\tdata,\n\t\t}),\n\t\t[indent, isInitialized, definition, initializer],\n\t);\n};\n\nconst maximumRangeUnion = (axis: AxisBase2D | (AxisBase2D | null)[]) => {\n\tif (Array.isArray(axis)) {\n\t\treturn axis.reduce((prev, cur) => {\n\t\t\tif (cur == null) {\n\t\t\t\treturn prev;\n\t\t\t}\n\t\t\tconst max = cur.getMaximumRange();\n\t\t\treturn prev.union(max);\n\t\t}, new NumberRange());\n\t}\n\treturn axis.getMaximumRange();\n};\nconst visibleRangeUnion = (axis: AxisBase2D | (AxisBase2D | null)[]) => {\n\tif (Array.isArray(axis)) {\n\t\treturn axis.reduce((prev, cur) => {\n\t\t\tif (cur == null) {\n\t\t\t\treturn prev;\n\t\t\t}\n\t\t\tconst max = cur.visibleRange;\n\t\t\treturn prev.union(max);\n\t\t}, new NumberRange());\n\t}\n\treturn axis.visibleRange;\n};\nconst growByUnion = (axis: AxisBase2D | (AxisBase2D | null)[]) => {\n\tif (Array.isArray(axis)) {\n\t\treturn axis.reduce((prev, cur) => {\n\t\t\tif (cur == null) {\n\t\t\t\treturn prev;\n\t\t\t}\n\t\t\tconst max = cur.growBy ?? new NumberRange();\n\t\t\treturn prev.union(max);\n\t\t}, new NumberRange());\n\t}\n\treturn axis.growBy;\n};\n\nexport function useDynamicAxisRange(\n\taxis: AxisBase2D | (AxisBase2D | null)[] | null,\n\tminimum: NumberRange = new NumberRange(0, 0),\n\tanimationDuration?: number,\n) {\n\tconst maxRef = useRef<NumberRange | null>(axis ? maximumRangeUnion(axis) : null);\n\tconst lastUpdate = useRef<number>(new Date().getTime());\n\tconst lastChange = useRef<number>(new Date().getTime());\n\n\tconst update = useCallback(\n\t\t(dataRange: NumberRange = minimum) => {\n\t\t\tif (axis == null) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst axes = Array.isArray(axis) ? axis : [axis];\n\t\t\tif (maxRef.current == null) {\n\t\t\t\tmaxRef.current = visibleRangeUnion(axis);\n\t\t\t}\n\t\t\tconst sinceLastUpdate = new Date().getTime() - lastUpdate.current;\n\t\t\tconst sinceLastChange = new Date().getTime() - lastChange.current;\n\t\t\tlastUpdate.current = new Date().getTime();\n\t\t\tlet max = maximumRangeUnion(axis);\n\t\t\tif (dataRange) {\n\t\t\t\tmax = max.union(dataRange);\n\t\t\t}\n\t\t\tconst growBy = growByUnion(axis);\n\t\t\tif (growBy) {\n\t\t\t\tmax.growBy(growBy);\n\t\t\t}\n\t\t\tlet newMax: null | number = null;\n\t\t\tlet newMin: null | number = null;\n\t\t\tif (max.max > maxRef.current.max) {\n\t\t\t\tnewMax = max.max;\n\t\t\t}\n\t\t\tif (max.min < maxRef.current.min) {\n\t\t\t\tnewMin = max.min;\n\t\t\t}\n\t\t\tif ((newMax != null || newMin != null) && sinceLastChange > sinceLastUpdate) {\n\t\t\t\tconst bestMin = Math.min(newMin ?? maxRef.current.min, minimum.min);\n\t\t\t\tconst bestMax = Math.max(newMax ?? maxRef.current.max, minimum.max);\n\t\t\t\tif (bestMin !== maxRef.current.min || bestMax !== maxRef.current.max) {\n\t\t\t\t\tmaxRef.current = new NumberRange(bestMin, bestMax);\n\t\t\t\t\taxes.forEach((a) => {\n\t\t\t\t\t\tif (maxRef.current == null || a == null) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst newRange = new NumberRange(bestMin, bestMax);\n\t\t\t\t\t\ta.animateVisibleRange(newRange, animationDuration ?? sinceLastUpdate, easing.inOutQuad);\n\t\t\t\t\t});\n\t\t\t\t\tlastChange.current = new Date().getTime();\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (sinceLastChange > 3000) {\n\t\t\t\tif (max.max < maxRef.current.max) {\n\t\t\t\t\tnewMax = maxRef.current.max - (maxRef.current.max - max.max);\n\t\t\t\t}\n\t\t\t\tif (max.min > maxRef.current.min) {\n\t\t\t\t\tnewMin = maxRef.current.min + (max.min - maxRef.current.min);\n\t\t\t\t}\n\t\t\t\tconst lowestMin = Math.min(newMin ?? maxRef.current.min, minimum.min);\n\t\t\t\tconst lowestMax = Math.max(newMax ?? maxRef.current.max, minimum.max);\n\t\t\t\tif (lowestMax != maxRef.current.max || lowestMin != maxRef.current.min) {\n\t\t\t\t\taxes.forEach((a) => {\n\t\t\t\t\t\tif (maxRef.current == null || a == null) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst newRange = new NumberRange(lowestMin, lowestMax);\n\t\t\t\t\t\ta.animateVisibleRange(newRange, sinceLastChange / 2, easing.inOutQuad);\n\t\t\t\t\t});\n\t\t\t\t\tmaxRef.current = new NumberRange(lowestMin, lowestMax);\n\t\t\t\t\tlastChange.current = new Date().getTime();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t[animationDuration, axis, minimum],\n\t);\n\n\treturn update;\n}\n","import { Spinner } from '@/components/common/spinner';\nimport { twJoin } from 'tailwind-merge';\n\nexport const FullLoadScreen = (props: { className?: string }) => {\n\treturn (\n\t\t<div className={twJoin('flex h-full w-full flex-1 items-center justify-center', props.className)}>\n\t\t\t<Spinner className=\"h-8 w-8\" />\n\t\t</div>\n\t);\n};\n","'use client';\nimport { useIsClient } from '@/hooks/isClient';\nimport dynamic from 'next/dynamic';\nimport React, { lazy } from 'react';\nimport { FullLoadScreen } from '@/components/common/full-load-screen';\nexport const NoSSR = (props: React.PropsWithChildren<{ fallback?: React.ReactNode }>) => {\n\tconst isClient = useIsClient();\n\treturn isClient ? <DynamicImport>{props.children}</DynamicImport> : props.fallback ?? <FullLoadScreen />;\n};\nconst DynamicImport = lazy(() =>\n\tPromise.resolve({ default: (props: React.PropsWithChildren) => <>{props.children}</> }),\n);\n","import { z } from 'zod';\nimport { Endstop } from '@/zods/hardware';\nimport { PrinterAxis } from '@/zods/motion';\nimport { PartialToolheadConfiguration } from '@/zods/toolhead';\nimport { PartialPrinterConfiguration } from '@/zods/printer-configuration';\n\nexport const xEndstopOptions = (\n\tconfig?: PartialPrinterConfiguration | null,\n\ttoolheadConfig?: (PartialToolheadConfiguration & { axis: null | PrinterAxis }) | null,\n): z.infer<typeof Endstop>[] => {\n\tconst endstops: z.infer<typeof Endstop>[] = [];\n\tif (toolheadConfig?.toolboard != null) {\n\t\tendstops.push({\n\t\t\tid: 'endstop-toolboard' as const,\n\t\t\ttitle: 'Physical Endstop',\n\t\t\tbadge: [\n\t\t\t\t{\n\t\t\t\t\tcolor: 'sky',\n\t\t\t\t\tchildren: `${toolheadConfig.toolboard.name}${toolheadConfig.toolNumber != null && ` T${toolheadConfig.toolNumber}`}`,\n\t\t\t\t},\n\t\t\t],\n\t\t});\n\t}\n\tif (toolheadConfig?.axis === PrinterAxis.x) {\n\t\tendstops.push({\n\t\t\tid: 'endstop' as const,\n\t\t\ttitle: 'Physical Endstop',\n\t\t\tbadge: [{ color: 'purple', children: config?.controlboard?.name ?? 'Control Board' }],\n\t\t});\n\t\tendstops.push({\n\t\t\tid: 'sensorless' as const,\n\t\t\ttitle: 'Sensorless Homing',\n\t\t\tbadge: [{ color: 'purple', children: config?.controlboard?.name ?? 'Control Board' }],\n\t\t});\n\t}\n\treturn endstops;\n};\n\nexport const defaultXEndstop = {\n\tid: 'endstop' as const,\n\ttitle: 'Physical Endstop',\n\tbadge: [{ color: 'purple' as const, children: 'Control Board' }],\n};\n\nexport const yEndstopOptions = (\n\tconfig?: PartialPrinterConfiguration | null,\n\ttoolheadConfig?: (PartialToolheadConfiguration & { axis: null | PrinterAxis }) | null,\n): z.infer<typeof Endstop>[] => [\n\t{\n\t\tid: 'endstop' as const,\n\t\ttitle: 'Physical Endstop',\n\t\tbadge: [{ color: 'purple', children: config?.controlboard?.name ?? 'Control Board' }],\n\t},\n\t{\n\t\tid: 'sensorless' as const,\n\t\ttitle: 'Sensorless Homing',\n\t\tbadge: [{ color: 'purple', children: config?.controlboard?.name ?? 'Control Board' }],\n\t},\n];\n","'use client';\nimport { useEffect, useState } from 'react';\n\nexport const useIsClient = () => {\n\tconst [isClient, setIsClient] = useState(false);\n\tuseEffect(() => {\n\t\tif (typeof window !== 'undefined') {\n\t\t\tsetIsClient(true);\n\t\t}\n\t}, []);\n\treturn isClient;\n};\n","import { ToolheadHelper } from '@/helpers/toolhead';\nimport { deserializeStepper } from '@/utils/serialization';\nimport { useRecoilCallback, useRecoilValue } from 'recoil';\nimport { useMemo, useRef, useState } from 'react';\nimport { PrinterRailState } from '@/recoil/printer';\nimport { PrinterAxis } from '@/zods/motion';\nimport { LoadablePrinterToolheadsState, PrinterToolheadState, PrinterToolheadsState } from '@/recoil/toolhead';\nimport { BaseToolheadConfiguration, ToolheadConfiguration, ToolNumber, ToolOrAxis } from '@/zods/toolhead';\nimport { defaultXEndstop } from '@/data/endstops';\nimport { hotendFanOptions, partFanOptions } from '@/data/fans';\n\nexport const useToolhead = (toolOrAxis: ToolOrAxis | PrinterAxis | undefined) => {\n\tconst toolheadConfigs = useRecoilValue(PrinterToolheadsState);\n\tconst toolhead = useMemo(() => {\n\t\tif (toolOrAxis == null) {\n\t\t\treturn null;\n\t\t}\n\t\tconst toolheads = toolheadConfigs?.filter(Boolean).map((th) => new ToolheadHelper(th));\n\t\tconst th = toolheads?.find(\n\t\t\t(th) => th.getTool() === toolOrAxis || th.getMotionAxis() === toolOrAxis || th.getExtruderAxis() === toolOrAxis,\n\t\t);\n\t\treturn th;\n\t}, [toolOrAxis, toolheadConfigs]);\n\treturn toolhead;\n};\n\nexport const useToolheads = () => {\n\tconst toolheadConfigs = useRecoilValue(PrinterToolheadsState);\n\tconst toolheads = useMemo(() => {\n\t\treturn toolheadConfigs?.filter(Boolean).map((th) => new ToolheadHelper(th));\n\t}, [toolheadConfigs]);\n\treturn toolheads;\n};\n\ntype MaybeToolhead<T extends boolean> = T extends true ? ToolheadHelper<any> : ToolheadHelper<any> | null;\n\nexport const useToolheadConfiguration = <T extends boolean = true>(\n\ttoolOrAxis: ToolOrAxis | PrinterAxis | undefined,\n\terrorIfNotExist: T = true as T,\n) => {\n\tconst toolheadConfigs = useRecoilValue(LoadablePrinterToolheadsState);\n\tconst toolheadConfigsRef = useRef(toolheadConfigs);\n\tif (toolheadConfigsRef.current !== toolheadConfigs && toolheadConfigs.length > 0) {\n\t\ttoolheadConfigsRef.current = toolheadConfigs.slice();\n\t}\n\tconst toolhead = useMemo(() => {\n\t\tconst toolheads = toolheadConfigsRef.current?.filter(Boolean).map((th) => new ToolheadHelper(th));\n\t\tconst th = toolheads?.find(\n\t\t\t(th) => th.getTool() === toolOrAxis || th.getMotionAxis() === toolOrAxis || th.getExtruderAxis() === toolOrAxis,\n\t\t);\n\t\tif (th == null && errorIfNotExist) {\n\t\t\tthrow new Error(`Toolhead with number or axis ${toolOrAxis} not found`);\n\t\t}\n\t\treturn th ?? null;\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [errorIfNotExist, toolOrAxis, toolheadConfigsRef.current]);\n\tconst [hasManuallySelectedThermistor, setHasManuallySelectedThermistor] = useState(false);\n\n\tconst setToolhead = useRecoilCallback(\n\t\t({ set, snapshot }) =>\n\t\t\tasync (th: ToolheadConfiguration<any>) => {\n\t\t\t\tconst helper = new ToolheadHelper(th);\n\t\t\t\tconst currentConfig = await snapshot.getPromise(PrinterToolheadState(helper.getTool()));\n\t\t\t\tif (currentConfig == null) {\n\t\t\t\t\tthrow new Error(`Toolhead ${helper.getToolCommand()} not found`);\n\t\t\t\t}\n\t\t\t\tconst current = new ToolheadHelper(currentConfig);\n\t\t\t\tif (th.extruder.id != current.getExtruder().id) {\n\t\t\t\t\tif (th.extruder.stepper != null) {\n\t\t\t\t\t\tconst stepper = deserializeStepper(th.extruder.stepper);\n\t\t\t\t\t\tif (stepper != null) {\n\t\t\t\t\t\t\tset(PrinterRailState(helper.getExtruderAxis()), (rail) => {\n\t\t\t\t\t\t\t\treturn rail == null\n\t\t\t\t\t\t\t\t\t? null\n\t\t\t\t\t\t\t\t\t: {\n\t\t\t\t\t\t\t\t\t\t\t...rail,\n\t\t\t\t\t\t\t\t\t\t\tstepper: stepper.id,\n\t\t\t\t\t\t\t\t\t\t\tcurrent: th.extruder.current ?? stepper.maxPeakCurrent * 0.71,\n\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (th.toolboard?.id !== current.getToolboard()?.id) {\n\t\t\t\t\t// Reset toolboard dependent options\n\t\t\t\t\tif (th.toolboard == null && th.xEndstop.id === 'endstop-toolboard') {\n\t\t\t\t\t\tth.xEndstop = defaultXEndstop;\n\t\t\t\t\t}\n\t\t\t\t\tif (th.partFan?.id.endsWith('-toolboard')) {\n\t\t\t\t\t\tconst newFan = partFanOptions(null, th).shift();\n\t\t\t\t\t\tif (newFan == null) {\n\t\t\t\t\t\t\tthrow new Error(`No part fan options available for current T${th.toolNumber} configuration`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tth.partFan = newFan;\n\t\t\t\t\t}\n\t\t\t\t\tif (th.hotendFan?.id.endsWith('-toolboard')) {\n\t\t\t\t\t\tconst newFan = hotendFanOptions(null, th).shift();\n\t\t\t\t\t\tif (newFan == null) {\n\t\t\t\t\t\t\tthrow new Error(`No hotend fan options available for current T${th.toolNumber} configuration`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tth.hotendFan = newFan;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (th.thermistor !== current.getThermistor() && th.thermistor !== th.hotend.thermistor) {\n\t\t\t\t\tsetHasManuallySelectedThermistor(true);\n\t\t\t\t} else if (th.hotend.id != current.getHotend().id && !hasManuallySelectedThermistor) {\n\t\t\t\t\tth.thermistor = th.hotend.thermistor;\n\t\t\t\t}\n\t\t\t\tconst val = BaseToolheadConfiguration.extend({ toolNumber: ToolNumber })\n\t\t\t\t\t.nullable()\n\t\t\t\t\t.safeParse({ ...th, toolNumber: current.getTool() });\n\t\t\t\tif (val.success) {\n\t\t\t\t\tset(PrinterToolheadState(current.getTool()), val.data);\n\t\t\t\t}\n\t\t\t\treturn val;\n\t\t\t},\n\t\t[hasManuallySelectedThermistor],\n\t);\n\treturn {\n\t\ttoolhead: toolhead as MaybeToolhead<T>,\n\t\tsetToolhead,\n\t};\n};\n","import { z } from 'zod';\nimport { KlipperAccelSensorNameSchame } from '@/zods/hardware';\n\nexport const aDXL345ResponseHeaderSchema = z.union([\n\tz.literal('time'),\n\tz.literal('x_acceleration'),\n\tz.literal('y_acceleration'),\n\tz.literal('z_acceleration'),\n]);\n\nexport const klipperADXL345SubscriptionResponseSchema = z.object({\n\theader: z.tuple([\n\t\taDXL345ResponseHeaderSchema,\n\t\taDXL345ResponseHeaderSchema,\n\t\taDXL345ResponseHeaderSchema,\n\t\taDXL345ResponseHeaderSchema,\n\t]),\n});\n\nexport const klipperADXL345SubscriptionDataSchema = z.object({\n\tdata: z.array(z.tuple([z.number(), z.number(), z.number(), z.number()])),\n\toverflows: z.number().optional(),\n\terrors: z.number().optional(),\n});\n\nexport const psdSchema = z.object({\n\tfrequencies: z.array(z.number()),\n\testimates: z.array(z.number()),\n\tpowerRange: z.object({\n\t\tmax: z.number(),\n\t\tmin: z.number(),\n\t}),\n});\n\nexport const accumulatedPSDSchema = z.object({\n\tx: psdSchema,\n\ty: psdSchema,\n\tz: psdSchema,\n\ttotal: psdSchema,\n});\n\n// Macro data structure\nexport const macroIDSchema = z.string().brand('MacroID');\n\nexport const macroSequenceIDSchema = z.string().brand('MacroSequenceID');\n\nexport const macroRecordingIdSchema = z.string().brand('MacroRecordingID');\n\nexport const macroRecordingRunIdSchema = z.string().brand('MacroRecordingRunID');\n\nexport const macroRecordingSettingsSchema = z\n\t.object({\n\t\tcapturePSD: z.boolean().default(false),\n\t\taccelerometer: KlipperAccelSensorNameSchame.optional(),\n\t\tcolor: z.string().optional(),\n\t})\n\t.superRefine((val, ctx) => {\n\t\tif (val.capturePSD && val.accelerometer == null) {\n\t\t\tctx.addIssue({\n\t\t\t\tcode: z.ZodIssueCode.custom,\n\t\t\t\tmessage: 'Required when recording resonance data',\n\t\t\t\tpath: ['accelerometer'],\n\t\t\t});\n\t\t}\n\t\treturn val;\n\t});\n\nexport const macroRecordingSchema = z.object({\n\tid: macroRecordingIdSchema,\n\tmacroRecordingRunId: macroRecordingRunIdSchema,\n\tmacroId: macroIDSchema,\n\tsequenceId: macroSequenceIDSchema,\n\tstartTimeStamp: z.number(),\n\tendTimeStamp: z.number(),\n\taccelerometer: KlipperAccelSensorNameSchame,\n\trecordingHardwareName: z.string(),\n\tpsd: accumulatedPSDSchema,\n\tname: z.string(),\n});\n\nexport const macroRecordingSchemaWithoutSourcePSDs = macroRecordingSchema;\n\nexport const macroSequenceSchema = z.object({\n\tid: macroSequenceIDSchema,\n\tname: z.string(),\n\trecording: macroRecordingSettingsSchema.nullable(),\n\tgcode: z.string().min(2),\n});\n\nexport const macroSchema = z.object({\n\tid: macroIDSchema,\n\tname: z.string(),\n\tdescription: z.string(),\n\tcreatedAtTimeStamp: z.number(),\n\tupdatedAtTimeStamp: z.number().nullable(),\n\trecordingCount: z.record(macroSequenceIDSchema, z.number()),\n\tsequences: z.array(macroSequenceSchema),\n});\n\nexport const createMacroSchema = macroSchema.omit({\n\trecordingCount: true,\n\tcreatedAtTimeStamp: true,\n\tupdatedAtTimeStamp: true,\n});\n\n// inferred types:\n\nexport type KlipperAccelResponseHeader = z.infer<typeof aDXL345ResponseHeaderSchema>;\n\nexport type KlipperAccelSubscriptionResponse = z.infer<typeof klipperADXL345SubscriptionResponseSchema>;\n\nexport type KlipperAccelSubscriptionData = z.infer<typeof klipperADXL345SubscriptionDataSchema>;\n\nexport type PSD = z.infer<typeof psdSchema>;\n\nexport type AccumulatedPSD = z.infer<typeof accumulatedPSDSchema>;\n\nexport type MacroID = z.infer<typeof macroIDSchema>;\n\nexport type MacroRecordingSettings = z.infer<typeof macroRecordingSettingsSchema>;\n\nexport type MacroRecording = z.infer<typeof macroRecordingSchema>;\n\nexport type MacroRecordingWithoutSourcePSDs = z.infer<typeof macroRecordingSchemaWithoutSourcePSDs>;\n\nexport type MacroSequence = z.infer<typeof macroSequenceSchema>;\n\nexport type Macro = z.infer<typeof macroSchema>;\n"],"names":["tailwind_config","darkMode","content","theme","container","center","padding","screens","extend","fontFamily","sans","defaultTheme","keyframes","ping","opacity","transform","from","height","to","animation","colors","brand","border","input","ring","background","foreground","primary","DEFAULT","secondary","destructive","muted","accent","popover","card","borderRadius","lg","md","sm","fontSize","s","containers","plugins","require","nocompatible","param","addBase","Object","fromEntries","entries","flattenColorPalette","map","key","val","parsed","convert","hsl","concat","startsWith","matchUtilities","backgroundImage","svgToDataUri","value","values","type","fullConfig","resolveConfig","tailwindConfig","twColors","shadableTWColors","keys","filter","twColor","color","c","WorkCommand","WorkResult","expectedSampleRates","createSignalBuffers","dataStream$","timeStamp","firstValueFrom","pipe","first","BigNumber","data","decimalPlaces","ROUND_FLOOR","toNumber","subtractTimeStamp","time","x","y","z","minus","shiftedBy","signal$","scheduled","asyncScheduler","concatMap","share","sampleRate$","bufferTime","samples","length","Math","floor","distinctUntilChanged","timeMappedSignal$","startTime","mergeMap","d","sample","of","delay","specSampleRate$","reduce","prev","cur","abs","sr","id","getSensorEndpoint","sensor","isSuccessResponse","res","isKlipperAccelSubscriptionResponse","klipperADXL345SubscriptionResponseSchema","safeParse","msg","success","isKlipperAccelSubscriptionData","params","Array","isArray","detrendFloatSignal","mean","signal","acc","i","detrendBatch","createADXL345Stream","url","subject","webSocket","deserializer","JSON","parse","e","context","source","getLogger","error","multiplex","jsonrpc","method","name","response_template","result","header","message","subscribe","close","complete","bind","mapToWorkerOutput","mapFn","psdInput$","Subject","psdWorker","fromWorker","Worker","__webpack_require__","tu","URL","p","u","b","psdOutput$","output","payload","psd","runWorker","work","input$","stream","Error","setup","signalProcessor","next","command","Float64Array","slice","buffer","sampleRate","specSampleRate","psdSubscribed","EMPTY","mergeAll","_this_stream","selectTransferables","estimates","frequencies","total","ChartTheme","SciChartJSDarkv2Theme","constructor","sciChartBackground","loadingAnimationBackground","axisBandsFill","majorGridLineBrush","minorGridLineBrush","strokePalette","fillPalette","isLightBackground","SciChartSurface","configure","wasmUrl","dataUrl","UseCommunityLicense","SIGNAL_CHART_AXIS_SIGNAL_ID","SIGNAL_CHART_AXIS_HISTORY_ID","SIGNAL_CHART_AXIS_AMPLITUDE_ID","isXyyDataSeries","ds","EDataSeriesType","Xyy","isXyDataSeries","Xy","getAxisColorName","axis","getAxisColor","NumberRange","useADXLSignalChart","useChart","useCallback","xAxis","NumericAxis","surface","webAssemblyContext2D","autoRange","EAutoRange","Always","maxAutoTicks","drawLabels","drawMinorTickLines","drawMajorTickLines","drawMajorBands","drawMinorGridLines","drawMajorGridLines","xAxes","add","xHistoryAxis","yAxis","Never","visibleRange","axisAlignment","EAxisAlignment","Left","yAxes","signalData","XyDataSeries","fifoCapacity","containsNaN","isSorted","dataSeriesName","toLocaleUpperCase","dataIsSortedInX","xValues","fill","_","yValues","signalSeries","FastLineRenderableSeries","xAxisId","yAxisId","stroke","strokeThickness","dataSeries","effect","GlowEffect","intensity","range","renderableSeries","historyData","ADXL_STREAM_BUFFER_SIZE","historySeries","WaveAnimation","duration","PSD_CHART_AXIS_AMPLITUDE_ID","PSDChartMinimumYVisibleRange","PSDChartNoSeriesDefinition","Thickness","fromNumber","EAxisType","options","labelStyle","inter","fontWeight","labelPostfix","minorsPerMajor","growBy","labelFormat","ENumericFormat","Exponential","autoRangeAnimation","animateInitialRanging","animateSubsequentRanging","easing","inOutCubic","axisTitleStyle","PSDChartDefinition","series","ESeriesType","MountainSeries","xyData","LineSeries","getPSDTooltipLegendTemplate","seriesInfos","svgAnnotation","outputSvgString","valuesWithLabels","forEach","seriesInfo","index","textColor","rolloverModifierProps","tooltipColor","push","separator","tooltipTitle","yValue","toFixed","formattedXValue","dataSeriesType","rolloverModifierProps1","si","y1Value","width","calcTooltipWidth","psdRolloverTooltipTemplate","rolloverTooltip","valuesBlock","tooltipProps","tooltipTextColor","tooltipBorderColor","parseColorToTArgb","tooltipBGColor","tooltipLabelX","tooltipLabelY","shadowColor","round","tooltipDataTemplate","rolloverModifier","calcTooltipHeight","updateSize","blur","undefined","shadowRGBA","red","green","blue","parseTArgbToHtmlColor","usePSDChart","xAnimationSeries","addDeletable","yAnimationSeries","zAnimationSeries","totalAnimationSeries","asArray","rs","tooltipTemplate","substring","toUpperCase","chartModifiers","CursorModifier","crosshairStroke","sky","crosshairStrokeThickness","showXLine","showYLine","showTooltip","tooltipLegendTemplate","tooltipLegendOffsetX","tooltipLegendOffsetY","axisLabelFill","zinc","axisLabelStroke","animationSeries","textLength","charWidth","lines","lineHeight","transformPSD","transformed","powerRange","getWsURL","host","getHost","trim","worker","SIGNAL","signals","psd$","PSD","useWorker","enabled","onResult","onPSDResult","onError","parsedSensor","useAccelerometerWithType","wsUrl","setWsUrl","useState","isRunningRef","useRef","isAccumulatingRef","onResultRef","current","onPSDResultRef","startAccumulation","psdRes","timeout","ACCUMULATING","START_ACCUMULATION","stopAccumulation","ACCUMULATED","STOP_ACCUMULATION","streamStarted","Promise","setTimeout","resolve","STARTED","useEffect","signalSub","psdSub","unsubscribe","sub","STOPPED","SAMPLE_RATE","SPEC_SAMPLE_RATE","START","STOP","controlBoard","useRecoilValue","ControlboardState","toolheads","useToolheads","accelType","accelerometerName","ADXL345SPI","LIS2DW","toolboard","find","t","getToolboardName","getToolboard","useMemo","klipperAccelSensorSchema","definition","initializer","indent","isInitialized","setIsInitialized","forwardProps","initChart","rootElement","chart","orgPadding","def","top","right","bottom","left","build2DChart","create","sciChartSurface","watermarkPosition","EWatermarkPosition","BottomLeft","watermarkRelativeToCanvas","onInit","style","marginLeft","fallback","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsx","FullLoadScreen","className","twJoin","maximumRangeUnion","max","getMaximumRange","union","visibleRangeUnion","growByUnion","useDynamicAxisRange","minimum","animationDuration","maxRef","lastUpdate","Date","getTime","lastChange","update","dataRange","axes","sinceLastUpdate","sinceLastChange","newMax","newMin","min","bestMin","bestMax","a","newRange","animateVisibleRange","inOutQuad","lowestMin","lowestMax","div","props","Spinner","NoSSR","isClient","useIsClient","DynamicImport","children","lazy","default","Fragment","xEndstopOptions","config","toolheadConfig","endstops","title","badge","toolNumber","PrinterAxis","controlboard","defaultXEndstop","setIsClient","toolheadConfigs","PrinterToolheadsState","Boolean","ToolheadHelper","th","useToolheadConfiguration","toolOrAxis","errorIfNotExist","LoadablePrinterToolheadsState","toolheadConfigsRef","toolhead","getTool","getMotionAxis","getExtruderAxis","hasManuallySelectedThermistor","setHasManuallySelectedThermistor","setToolhead","useRecoilCallback","set","snapshot","helper","currentConfig","getPromise","PrinterToolheadState","getToolCommand","extruder","getExtruder","stepper","deserializeStepper","PrinterRailState","rail","maxPeakCurrent","xEndstop","partFan","endsWith","newFan","partFanOptions","shift","hotendFan","hotendFanOptions","thermistor","getThermistor","hotend","getHotend","BaseToolheadConfiguration","ToolNumber","nullable","aDXL345ResponseHeaderSchema","literal","object","tuple","array","number","overflows","optional","errors","psdSchema","accumulatedPSDSchema","macroIDSchema","string","macroSequenceIDSchema","macroRecordingIdSchema","macroRecordingRunIdSchema","macroRecordingSettingsSchema","capturePSD","boolean","accelerometer","KlipperAccelSensorNameSchame","superRefine","ctx","addIssue","code","ZodIssueCode","custom","path","macroRecordingRunId","macroId","sequenceId","startTimeStamp","endTimeStamp","recordingHardwareName","macroSequenceSchema","recording","gcode","macroSchema","description","createdAtTimeStamp","updatedAtTimeStamp","recordingCount","record","sequences","createMacroSchema","omit"],"sourceRoot":""}