{"version":3,"file":"static/chunks/9231-e9c8842a74ace45b.js","mappings":"sLCEO,IAAMA,EAAgC,CAC5CC,UAAW,EACZ,4BCFO,IAAMC,EAAeC,EAAAA,CAACA,CAACC,IAAI,CAAC,CAAC,QAAS,QAAS,OAAQ,OAAQ,QAAS,QAAQ,EAE1EC,EAAeF,EAAAA,CAACA,CAACG,MAAM,CAAC,CACpCC,GAAIJ,EAAAA,CAACA,CAACK,MAAM,GACZC,SAAUN,EAAAA,CAACA,CAACO,KAAK,CAACP,EAAAA,CAACA,CAACQ,GAAG,IACvBC,SAAUT,EAAAA,CAACA,CAACO,KAAK,CAACP,EAAAA,CAACA,CAACU,MAAM,CAACV,EAAAA,CAACA,CAACW,MAAM,GAAIX,EAAAA,CAACA,CAACQ,GAAG,KAC5CI,MAAOZ,EAAAA,CAACA,CAACG,MAAM,CAAC,CACfU,MAAOd,EACPe,MAAOd,EAAAA,CAACA,CAACK,MAAM,EAChB,EACD,kBCNA,IAAMU,KAAO,eAAgBH,CAAiB,CAAEI,CAAuB,EACtEC,EAAAA,CAAUA,CAACC,SAAS,CAACC,MAAM,CAAC,CAAEP,MAAAA,EAAOI,SAAUd,EAAakB,KAAK,CAACJ,EAAU,EAC7E,EAEIK,EAA6B,KACpBC,UAAY,IACxB,MAAID,EACIA,EAERA,EAASE,IAAK,CACb,GAAG1B,CAAc,CACjB2B,QAAS,CACRC,SAAU,GACVC,UAAW,GACXC,SAAU,CACTZ,IACD,EACAa,MAAOA,EAAAA,KAAKA,CAEd,yMCjBD,IAAMC,EAA4B,IAAIC,YAEzBC,sBAAwB,CAACC,EAAiBlB,KACtDe,EAA0BI,aAAa,CACtC,IAAIC,YAAY,WAAY,CAC3BC,OAAQ,CACPH,QAAAA,EACAlB,MAAAA,CACD,CACD,GAEF,EAEasB,qBAAuB,IAC5B,IACNC,EAAOC,KAAK,CAAC,IACZhB,CAAAA,EAAAA,EAAAA,CAAAA,IAAYiB,KAAK,CAChB,CACCC,IAAKH,EAAOI,IAAI,CAACD,GAAG,CACpB1B,MAAO4B,CACR,EACA,6DAA4EC,MAAA,CAAfN,EAAOO,OAAO,CAAC,MAE7Eb,sBAAsBM,EAAOI,IAAI,CAACD,GAAG,CAAEE,MAAAA,EAAmB,OAASA,EACpE,EACD,EAKYG,kBAAuD,OAAC,CAAEC,SAAAA,CAAQ,CAAE,CAAAC,EAC1EC,EAAYC,CAAAA,EAAAA,EAAAA,EAAAA,IACZC,EAAiBC,CAAAA,EAAAA,EAAAA,WAAAA,EACtB,MAAOnB,IACN,IAAMlB,EAAQ,MAAMkC,EAAUI,OAAO,CAAC,QAASpB,GAC/C,OAAOlB,MAAAA,GAAiBA,QAAAA,EAAkBA,EAAQ,IAAIuC,EAAAA,EAAYA,EAEnE,CAACL,EAAU,EAGNM,EAAWH,CAAAA,EAAAA,EAAAA,WAAAA,EAChB,MAAOI,IACN,GAAM,CAAEvB,QAAAA,CAAO,CAAElB,MAAAA,CAAK,CAAE,CAAGyC,EAAyBpB,MAAM,OACpDa,EAAUQ,QAAQ,CAAC,QAASxB,EAAuBlB,EAC1D,EACA,CAACkC,EAAU,EASZ,MANAS,CAAAA,EAAAA,EAAAA,SAAAA,EAAU,KACT5B,EAA0B6B,gBAAgB,CAAC,WAAYJ,GAChD,KACNzB,EAA0B8B,mBAAmB,CAAC,WAAYL,EAC3D,GACE,CAACA,EAAS,EACN,GAAAM,EAAAC,GAAA,EAACC,EAAAA,EAAUA,CAAAA,CAACZ,KAAMA,WAAOJ,GACjC,gGC5DO,IAAMiB,EAAU/D,EAAAA,CAACA,CAACO,KAAK,CAACyD,EAAAA,EAAMA,EAAE5C,KAAK,CAAC,CAC5C,CACC6C,GAAI,cACJC,MAAO,UACPC,KAAM,UACNC,SAAU,OACVC,cAAe,IACfC,wBAAyB,IACzBC,SAAU,CAAC,GAAG,CACdC,WAAY,CACb,EACA,CACCP,GAAI,iBACJC,MAAO,mBACPC,KAAM,UACNC,SAAU,OACVC,cAAe,IACfC,wBAAyB,IACzBC,SAAU,CAAC,GAAG,CACdC,WAAY,CACb,EACA,CACCP,GAAI,iBACJC,MAAO,mBACPC,KAAM,UACNC,SAAU,OACVC,cAAe,IACfC,wBAAyB,IACzBC,SAAU,CAAC,GAAG,CACdC,WAAY,CACb,EACA,CACCP,GAAI,qBACJC,MAAO,0BACPC,KAAM,UACNC,SAAU,MACVC,cAAe,KACfE,SAAU,CAAC,GAAI,GAAI,GAAI,GAAG,CAC1BC,WAAY,EACZF,wBAAyB,GAC1B,EACA,CACCL,GAAI,uBACJC,MAAO,yBACPC,KAAM,UACNC,SAAU,MACVC,cAAe,KACfE,SAAU,CAAC,GAAI,GAAI,GAAI,GAAI,GAAG,CAC9BC,WAAY,KACZF,wBAAyB,EACzBG,SAAU,EACX,EACA,CACCR,GAAI,aACJC,MAAO,aACPC,KAAM,UACNC,SAAU,OACVC,cAAe,IACfC,wBAAyB,IACzBC,SAAU,CAAC,GAAG,CACdC,WAAY,CACb,EACA,CACCP,GAAI,aACJC,MAAO,aACPC,KAAM,UACNC,SAAU,OACVC,cAAe,IACfC,wBAAyB,IACzBC,SAAU,CAAC,GAAG,CACdC,WAAY,CACb,EACA,CACCP,GAAI,aACJC,MAAO,aACPC,KAAM,UACNC,SAAU,MACVC,cAAe,IACfC,wBAAyB,GACzBC,SAAU,CAAC,GAAG,CACdC,WAAY,CACb,EACA,CACCP,GAAI,iBACJC,MAAO,iBACPC,KAAM,UACNC,SAAU,MACVC,cAAe,KACfC,wBAAyB,IACzBC,SAAU,CAAC,GAAI,GAAI,GAAG,CACtBC,WAAY,GACb,EACA,CACCP,GAAI,iBACJC,MAAO,iBACPC,KAAM,UACNC,SAAU,MACVC,cAAe,IACfC,wBAAyB,EACzBC,SAAU,CAAC,GAAI,GAAI,GAAI,GAAG,CAC1BC,WAAY,GACb,EACA,CACCP,GAAI,+BACJC,MAAO,iCACPC,KAAM,UACNC,SAAU,MACVC,cAAe,KACfC,wBAAyB,EACzBC,SAAU,CAAC,GAAI,GAAI,GAAG,CACtBC,WAAY,KACZC,SAAU,EACX,EACA,CACCR,GAAI,qBACJC,MAAO,qBACPC,KAAM,UACNC,SAAU,OACVC,cAAe,IACfC,wBAAyB,IACzBC,SAAU,CAAC,GAAG,CACdC,WAAY,CACb,EACA,CACCP,GAAI,4BACJC,MAAO,4BACPC,KAAM,UACNC,SAAU,MACVC,cAAe,IACfC,wBAAyB,GACzBC,SAAU,CAAC,GAAG,CACdC,WAAY,CACb,EACA,CACCP,GAAI,sBACJC,MAAO,sBACPC,KAAM,UACNC,SAAU,OACVC,cAAe,IACfC,wBAAyB,IACzBC,SAAU,CAAC,GAAG,CACdC,WAAY,CACb,EACA,kKC5IM,IAAME,eAAiB,CAC7BC,EACAC,SAOID,EALJ,IAAME,EAA8B,EAAE,CAkBtC,MAjBID,CAAAA,MAAAA,GAA0BA,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAgBE,IAAI,IAAKC,EAAAA,EAAWA,CAACC,CAAC,EAAIJ,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAgBE,IAAI,IAAK,QAChGD,EAAKI,IAAI,CAAC,CAAEhB,GAAI,OAAiBC,MAAO,WAAY,GACpDW,EAAKI,IAAI,CAAC,CAAEhB,GAAI,OAAiBC,MAAO,WAAY,IAEjDS,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,OAAAA,CAAAA,EAAAA,EAAQO,YAAY,GAApBP,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAsBQ,wBAAwB,GAAI,MAAQR,EAAOO,YAAY,CAACC,wBAAwB,CAAG,GAC5GN,EAAKI,IAAI,CAAC,CAAEhB,GAAI,iBAA2BC,MAAO,oCAAqC,GAEpFU,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAgBQ,SAAS,GAAI,OAChCP,EAAKI,IAAI,CAAC,CAAEhB,GAAI,iBAA2BC,MAAO,qBAAsB,GACxEW,EAAKI,IAAI,CAAC,CAAEhB,GAAI,iBAA2BC,MAAO,qBAAsB,GAEvEU,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAgBQ,SAAS,CAACD,wBAAwB,GAAI,MACtDP,EAAeQ,SAAS,CAACD,wBAAwB,CAAG,GAEpDN,EAAKI,IAAI,CAAC,CAAEhB,GAAI,2BAAqCC,MAAO,iDAAkD,IAGzGW,CACR,EAEaQ,iBAAmB,CAC/BV,EACAC,SAQED,EACAA,EAEAA,EATF,IAAME,EAA8B,EAAE,CAuBtC,MAtBID,CAAAA,MAAAA,GAA0BA,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAgBE,IAAI,IAAKC,EAAAA,EAAWA,CAACC,CAAC,IACnEH,EAAKI,IAAI,CAAC,CAAEhB,GAAI,OAAiBC,MAAO,WAAY,GACpDW,EAAKI,IAAI,CAAC,CAAEhB,GAAI,OAAiBC,MAAO,WAAY,IAGpD,EAACS,MAAAA,EAAAA,KAAAA,EAAAA,OAAAA,CAAAA,EAAAA,EAAQO,YAAY,GAApBP,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAsBQ,wBAAwB,GAAI,MAAQR,EAAOO,YAAY,CAACC,wBAAwB,CAAG,GACzGR,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,OAAAA,CAAAA,EAAAA,EAAQO,YAAY,GAApBP,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAsBQ,wBAAwB,GAAI,MAClDR,EAAOO,YAAY,CAACC,wBAAwB,CAAG,GAC/CR,CAAAA,OAAAA,CAAAA,EAAAA,EAAOW,aAAa,GAApBX,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAsBV,EAAE,IAAK,mBAE9BY,EAAKI,IAAI,CAAC,CAAEhB,GAAI,iBAA2BC,MAAO,oCAAqC,GAEpFU,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAgBQ,SAAS,GAAI,OAChCP,EAAKI,IAAI,CAAC,CAAEhB,GAAI,iBAA2BC,MAAO,qBAAsB,GACxEW,EAAKI,IAAI,CAAC,CAAEhB,GAAI,iBAA2BC,MAAO,qBAAsB,GAEvEU,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAgBQ,SAAS,CAACD,wBAAwB,GAAI,MACtDP,EAAeQ,SAAS,CAACD,wBAAwB,CAAG,GAEpDN,EAAKI,IAAI,CAAC,CAAEhB,GAAI,2BAAqCC,MAAO,iDAAkD,IAGzGW,CACR,EAsBaU,EAAuB,CAAEtB,GAAI,OAAiBC,MAAO,WAAY,qFC9EvE,IAAMsB,iBAAmB,IACxB,EAAEC,SAAU,GAAKtB,KAAM,SAAU,iICAlC,IAAMuB,WAAa,CACzBC,EACAC,EACAC,EACAC,EACAC,SAEOJ,EAAP,cAAOA,CAAAA,EAAAA,EAAQK,OAAO,GAAfL,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EACJM,KAAK,GACNC,IAAI,CAAC,CAACC,EAAGC,IAAOL,EAAkBK,EAAEC,WAAW,CAAGF,EAAEE,WAAW,CAAGF,EAAEE,WAAW,CAAGD,EAAEC,WAAW,EAC/FC,IAAI,CACJ,GACCC,EAAEX,MAAM,GAAKA,EAAOzB,IAAI,EACxBoC,EAAEV,OAAO,GAAKA,GACdU,EAAEC,cAAc,GAAKZ,EAAOvB,aAAa,EACxCyB,CAAAA,MAAAA,GAAmBS,EAAEF,WAAW,GAAKP,CAAAA,EAE1C,EAEaW,EAAWzG,EAAAA,CAACA,CAACO,KAAK,CAACmG,EAAAA,EAAOA,EAAEtF,KAAK,CAAC,CAC9C,CACC6C,GAAI,UACJC,MAAO,kBACPyC,eAAgB,GACjB,EACA,CACC1C,GAAI,4BACJC,MAAO,uBACPyC,eAAgB,EACjB,EACA,CACC1C,GAAI,qBACJC,MAAO,qBACPyC,eAAgB,IAChBX,QAAS,CACR,CACCK,YAAa,IACbR,QAAS,GACTD,OAAQ,UACRY,eAAgB,IAChBI,WAAY,EACZC,YAAa,EACbC,YAAa,EACbC,aAAc,CACf,EACA,CACCV,YAAa,IACbR,QAAS,GACTD,OAAQ,UACRY,eAAgB,IAChBI,WAAY,EACZC,YAAa,EACbC,YAAa,EACbC,aAAc,CACf,EACA,CACCV,YAAa,IACbR,QAAS,GACTD,OAAQ,UACRY,eAAgB,KAChBI,WAAY,EACZC,YAAa,EACbC,YAAa,EACbC,aAAc,CACf,EACA,CACCV,YAAa,MACbR,QAAS,GACTD,OAAQ,UACRY,eAAgB,KAChBI,WAAY,EACZC,YAAa,EACbC,YAAa,EACbC,aAAc,CACf,EACA,EAEF,CACC9C,GAAI,qBACJC,MAAO,qBACPyC,eAAgB,KAChBX,QAAS,CACR,CACCK,YAAa,GACbR,QAAS,GACTD,OAAQ,UACRY,eAAgB,IAChBQ,kBAAmB,EACnBC,kBAAmB,EACnBL,WAAY,EACZC,YAAa,EACbC,YAAa,EACbC,aAAc,EACdG,gBAAiB,EACjBC,gBAAiB,EACjBC,gBAAiB,IACjBC,qBAAsB,GACtBC,WAAY,CACb,EACA,CACCjB,YAAa,IACbR,QAAS,GACTD,OAAQ,UACRY,eAAgB,IAChBQ,kBAAmB,EACnBC,kBAAmB,EACnBL,WAAY,EACZC,YAAa,EACbC,YAAa,EACbC,aAAc,EACdG,gBAAiB,EACjBC,gBAAiB,EACjBC,gBAAiB,IACjBC,qBAAsB,GACtBC,WAAY,CACb,EACA,CACCjB,YAAa,GACbR,QAAS,GACTD,OAAQ,UACRY,eAAgB,IAChBI,WAAY,EACZC,YAAa,EACbC,YAAa,EACbC,aAAc,CACf,EACA,CACCV,YAAa,MACbR,QAAS,GACTD,OAAQ,UACRY,eAAgB,IAChBI,WAAY,EACZC,YAAa,EACbC,YAAa,EACbC,aAAc,CACf,EACA,EAEF,CACC9C,GAAI,sBACJC,MAAO,sBACPyC,eAAgB,EAChBY,qBAAsB,GACvB,EACA,CACCtD,GAAI,qBACJC,MAAO,qBACPyC,eAAgB,CACjB,EACA,CACC1C,GAAI,sBACJC,MAAO,sBACPyC,eAAgB,IAChBY,qBAAsB,IACtBvB,QAAS,CACR,CACCH,QAAS,GACTD,OAAQ,UACRY,eAAgB,IAChBH,YAAa,IACbO,WAAY,EACZC,YAAa,EACbC,YAAa,EACbC,aAAc,CACf,EACA,EAEF,CACC9C,GAAI,yBACJC,MAAO,yBACPyC,eAAgB,CACjB,EACA,CACC1C,GAAI,sBACJC,MAAO,sBACPyC,eAAgB,EAChBX,QAAS,CACR,CACCH,QAAS,GACTD,OAAQ,UACRY,eAAgB,IAChBH,YAAa,KACbO,WAAY,EACZE,YAAa,EACbC,aAAc,EACdF,YAAa,CACd,EAWA,EAEF,CACC5C,GAAI,sBACJC,MAAO,sBACPyC,eAAgB,CACjB,EACA,CACC1C,GAAI,qBACJC,MAAO,qBACPyC,eAAgB,IACjB,EACA,uJCpMM,yBAAMa,eAKLC,cAAwB,CAC9B,OAAO,UAAI,CAAC9C,MAAM,CAACS,SAAS,CAEtBsC,cAAe,CACrB,OAAO,IAAI,CAAC/C,MAAM,CAACS,SAAS,CAEtBuC,sBAAuB,QAC7B,IAAQ,CAAChD,MAAM,CAACG,IAAI,GAAKC,EAAAA,EAAWA,CAAC6C,aAAa,CAC1C,gBAED,WAAgCjF,MAAA,CAArB,IAAI,CAACkF,aAAa,GACrC,CACOC,kBAAsD,CAC5D,GAAI,UAAI,CAACnD,MAAM,CAACS,SAAS,CACxB,MAAM,MAAU,aAA4BzC,MAAA,CAAf,IAAI,CAACoF,OAAO,GAAG,+BAE7C,MAAO,aAAqCpF,MAAA,CAAxB,IAAI,CAACqF,gBAAgB,GAC1C,CACOA,kBAAuC,CAC7C,MAAO,IAAmBrF,MAAA,CAAf,IAAI,CAACoF,OAAO,GACxB,CACOE,gBAAyB,KACxBC,EAAP,OAAO,OAAAA,CAAAA,EAAA,IAAI,CAACvD,MAAM,CAACwD,WAAW,GAAvBD,KAAA,IAAAA,EAAAA,EAA4B,wBACpC,CACOL,eAA2D,QACjE,IAAQ,CAAClD,MAAM,CAACG,IAAI,GAAKC,EAAAA,EAAWA,CAAC6C,aAAa,CAC1C7C,EAAAA,EAAWA,CAAC6C,aAAa,CAE1B7C,EAAAA,EAAWA,CAACC,CAAC,CAEdoD,iBAAgE,QACtE,IAAQ,CAACzD,MAAM,CAACG,IAAI,GAAKC,EAAAA,EAAWA,CAAC6C,aAAa,CAC1C7C,EAAAA,EAAWA,CAACsD,SAAS,CAEtBtD,EAAAA,EAAWA,CAACuD,QAAQ,CAErBC,gBAAkC,CACxC,MAAO,IAAmB5F,MAAA,CAAf,IAAI,CAACoF,OAAO,GACxB,CACOA,SAAsB,QAC5B,IAAQ,CAACpD,MAAM,CAACG,IAAI,GAAKC,EAAAA,EAAWA,CAAC6C,aAAa,CAC1C,EAED,CACR,CACOY,iBAAkC,CACxC,MAAO,IAAmB7F,MAAA,CAAf,IAAI,CAACoF,OAAO,GACxB,CACOU,aAAc,CACpB,OAAO,IAAI,CAAC9D,MAAM,CAAC2D,QAAQ,CAErBI,WAAY,CAClB,OAAO,IAAI,CAAC/D,MAAM,CAACgE,MAAM,CAEnBC,WAAY,KACXC,EAAP,OAAO,OAAAA,CAAAA,EAAA,IAAI,CAAClE,MAAM,CAACmE,MAAM,GAAlBD,KAAA,IAAAA,EAAAA,EAAsBrD,CAAAA,EAAAA,EAAAA,CAAAA,GAC9B,CACOuD,eAAgB,CACtB,OAAO,IAAI,CAACpE,MAAM,CAACqE,UAAU,CAEvBC,aAAc,CACpB,OAAO,IAAI,CAACtE,MAAM,CAACuE,QAAQ,CAErBC,aAAc,CACpB,OAAO,IAAI,CAACxE,MAAM,CAACyE,QAAQ,CAErBC,mBAAoB,CAC1B,OAAO,IAAI,CAAC1E,MAAM,CAAC2E,cAAc,CAE3BC,mBAAoB,CAC1B,OAAO,IAAI,CAAC5E,MAAM,CAAC6E,cAAc,CAE3BC,uBAA2C,KACzCC,EAAR,cAAQA,CAAAA,EAAA,IAAI,CAACL,iBAAiB,KAAtBK,KAAA,IAAAA,EAAA,OAAAA,EAA0BzF,EAAE,EACnC,IAAK,eACJ,MAAO,cACR,KAAK,YACJ,GAAI,IAAI,CAACwD,YAAY,GACpB,OAAO,IAAI,CAACK,gBAAgB,EAE9B,KAAK,MACJ,MAAO,KACR,SACC,MAAO,cACT,CACD,CACO6B,uBAA2C,KACzCC,EAAR,cAAQA,CAAAA,EAAA,IAAI,CAACL,iBAAiB,KAAtBK,KAAA,IAAAA,EAAA,OAAAA,EAA0B3F,EAAE,EACnC,IAAK,eACJ,MAAO,cACR,KAAK,YACJ,GAAI,IAAI,CAACwD,YAAY,GACpB,OAAO,IAAI,CAACK,gBAAgB,EAE9B,KAAK,MACJ,MAAO,KACR,SACC,MAAO,cACT,CACD,CACO+B,aAAaC,CAAqC,CAAE,CAC1D,GAAIA,MAAAA,EACH,OAAO,KAER,IAAMC,EAAiB,CAAC,EACxBC,OAAOC,IAAI,CAACH,GAASI,OAAO,CAAC,IAC5B,IAAMpE,EAAU,IAAI,CAACqE,SAAS,EAAE,CAAC3H,EAAgD,CAC3E4H,EAASN,CAAO,CAACtH,EAAgD,CACvE,GAAIsD,MAAAA,GAAoBsE,MAAAA,GAAoBtE,MAAAA,GAAmBsE,MAAAA,EAAiB,CAC/EL,CAAS,CAACvH,EAAI,CAAG4H,EACjB,MACD,CACItE,GAAWsE,IACV,iBAAOtE,GAAwB,OAAQA,GAAW,iBAAOsE,GAAuB,OAAQA,EACvFtE,EAAQ7B,EAAE,GAAKmG,EAAOnG,EAAE,EAC3B8F,CAAAA,CAAS,CAACvH,EAAI,CAAG4H,CAAAA,EAEPC,IAAUvE,EAASsE,IAC9BL,CAAAA,CAAS,CAACvH,EAAI,CAAG4H,CAAAA,EAGpB,GACA,IAAME,EAASC,EAAAA,EAA4BA,CAACC,SAAS,CAACT,GACtD,OAAOO,CACR,CACOG,UAAW,CACjB,OAAO,IAAI,CAAC9F,MAAM,CAAC+F,KAAK,CAElBC,YAAa,CACnB,OAAO,IAAI,CAAChG,MAAM,CAACiG,OAAO,CAEpBC,cAAe,CACrB,OAAO,IAAI,CAAClG,MAAM,CAACmG,SAAS,CAEtBpJ,WAA6C,CACnD,MAAOqJ,CAAAA,EAAAA,EAAAA,EAAAA,EAA+B,IAAI,CAACpG,MAAM,CAClD,CACOwF,WAAgD,CACtD,MAAO,CAAE,GAAG,IAAI,CAACxF,MAAM,CACxB,CA9IAqG,YAAYC,CAA4C,CAAE,CACzD,IAAI,CAACtG,MAAM,CAAGsG,CACf,CA6ID,2aEtJA,IAAIC,EAA2F,CAAC,EAGnFC,gBAAkB,MAAApI,OAAO,CACrCG,KAAAA,CAAI,CACe,CAAAH,EACbqI,EAAU,MAAMlI,EAAKmI,EAAa7I,GAAG,EAC3C,GAAI4I,MAAAA,EAAiB,CACpB,IAAME,EAAYtL,EAAAA,CAACA,CAACG,MAAM,CAAC,CAAE8D,GAAIsH,EAAAA,EAAsCA,CAACC,KAAK,CAACvH,EAAE,GAAIuG,SAAS,CAACY,GAC9F,GAAIE,EAAUG,OAAO,CAAE,CACtB,IAAIC,EAA4DR,CAAc,CAACI,EAAUK,IAAI,CAAC1H,EAAE,CAAC,CAOjG,OANkB,MAAdyH,GACHA,CAAAA,EAAa,MAAMzK,EAAAA,CAAUA,CAACmK,OAAO,CAACA,OAAO,CAACQ,KAAK,CAACN,EAAUK,IAAI,CAAC1H,EAAE,CAAE,CAAC,KAEvEiH,CAAAA,CAAc,CAACI,EAAUK,IAAI,CAAC1H,EAAE,CAAC,CAAGyH,CAAAA,EAG/BA,MAAAA,EAAAA,EAAc,IACtB,CACD,CACA,OAAO,IACR,EAEaG,oBACZ,GACA,MAAAC,OAAO,CAAE5I,KAAAA,CAAI,CAAqB,CAAA4I,EAC3BC,EAAmB,MAAM7I,EAAK8I,EAAiBjJ,GAAOP,GAAG,EAC/D,GAAIuJ,MAAAA,EAA0B,CAC7B,IAAME,EAAaC,EAAAA,EAAqBA,CAAC1B,SAAS,CAACuB,GACnD,GAAIE,EAAWR,OAAO,CACrB,OAAOQ,EAAWN,IAAI,CAEvB,IAAMP,EAAU,MAAMD,gBAAgB,CAAEjI,KAAAA,CAAK,GACvCiJ,EAAqBf,MAAAA,EAAAA,KAAAA,EAAAA,EAASgB,QAAQ,CAACC,KAAK,CAAC/F,IAAI,CAAC,GAAOgG,EAAExH,IAAI,GAAK/B,GAC1E,GAAIoJ,MAAAA,EAA4B,CAC/B,IAAMI,EAAqBL,EAAAA,EAAqBA,CAAC1B,SAAS,CAAC,CAAE,GAAG2B,CAAkB,CAAE,GAAGJ,CAAgB,GACvG,GAAIQ,EAAmBd,OAAO,CAC7B,OAAOc,EAAmBZ,IAAI,CAGjC,CACA,OAAO,IACR,EAEYN,EAAemB,CAAAA,EAAAA,EAAAA,EAAAA,EAAoE,CAC/FhK,IAAK,UACLiK,QAAS,KACTC,QAAS,CACRtK,CAAAA,EAAAA,EAAAA,EAAAA,IACAuK,CAAAA,EAAAA,EAAAA,EAAAA,EAAW,CACVzJ,KAAMiI,gBACNvJ,MAAO,MAAAmB,EAAkBL,QAAX,CAAEd,MAAAA,CAAK,CAAE,CAAAmB,CACtB,OAAM,IAAI6J,QAAQ,IACblK,aAAoBW,EAAAA,EAAYA,CACnCzB,EAAMyJ,EAAa7I,GAAG,CAAE,MAExBZ,EAAMyJ,EAAa7I,GAAG,CAAEE,MAAAA,EAAAA,EAAY,MAErCmK,WAAW,KAAO,EAAG,IACtB,EACD,EACAC,OAAQC,CAAAA,EAAAA,EAAAA,4BAAAA,EAA6BxB,EAAAA,EAAsCA,CAACyB,QAAQ,GACrF,GACA,GAGWC,EAAuBC,CAAAA,EAAAA,EAAAA,EAAAA,EAAwE,CAC3G1K,IAAK,uBACL2K,IAAK,MAAApK,OAAO,CAAEoK,IAAAA,CAAG,CAAE,CAAApK,EACZqK,EAAWD,EAAIE,CAAAA,EAAAA,EAAAA,EAAAA,EAAOhC,IAC5B,MAAO,EACNiC,SAAU,IAAMF,EAASG,QAAQ,CACjCC,SAAU,IAAM,EAAE,CAClBC,QAAS,IAAM,EAAE,CAClB,CAAC,CAACL,EAASM,KAAK,CAAC,EAClB,CACD,GAEaC,EAAmBnB,CAAAA,EAAAA,EAAAA,EAAAA,EAA0C,CACzEhK,IAAK,gBACLiK,QAAS,KACTC,QAAS,CACRtK,CAAAA,EAAAA,EAAAA,EAAAA,IACAuK,CAAAA,EAAAA,EAAAA,EAAAA,EAAW,CACVG,OAAQC,CAAAA,EAAAA,EAAAA,4BAAAA,EAA6Ba,EAAAA,EAAWA,CAACZ,QAAQ,GAC1D,GACA,GAGWa,EAAoBrB,CAAAA,EAAAA,EAAAA,EAAAA,EAAmB,CACnDhK,IAAK,eACLiK,QAAS,KACTC,QAAS,CACRtK,CAAAA,EAAAA,EAAAA,EAAAA,IACAuK,CAAAA,EAAAA,EAAAA,EAAAA,EAAW,CACVzJ,KAAM,MAAAH,OAAO,CAAEG,KAAAA,CAAI,CAAE,CAAAH,EACd+K,EAAQ,MAAM5K,EAAK2K,EAAkBrL,GAAG,EAC9C,GAAIsL,MAAAA,EAAe,CAClB,IAAMC,EAAU/N,EAAAA,CAACA,CAACG,MAAM,CAAC,CAAE6N,KAAMC,EAAAA,EAASA,GAAIzD,SAAS,CAACsD,GACxD,GAAIC,EAAQtC,OAAO,CAAE,CACpB,IAAMyC,EAAW,MAAMjN,EAAAA,CAAUA,CAACkN,GAAG,CAACC,MAAM,CAACxC,KAAK,CAAC,CAAEyC,aAAc,CAAEjJ,UAAW,EAAM,CAAE,GAClFkJ,EAAWJ,EAAS5H,IAAI,CAAC,GAAOF,EAAE4H,IAAI,GAAKD,EAAQpC,IAAI,CAACqC,IAAI,EAClE,OAAOM,MAAAA,EAAAA,EAAY,IACpB,CACD,CACA,OAAO,IACR,EACAxB,OAAQC,CAAAA,EAAAA,EAAAA,4BAAAA,EAA6BwB,EAAAA,EAAKA,CAACvB,QAAQ,GACpD,GACA,GAGWhB,EAAmBwC,CAAAA,EAAAA,EAAAA,EAAAA,EAAsE,CACrGhM,IAAK,cACLiK,QAAS,KACTC,QAAS,GAAW,CACnBtK,CAAAA,EAAAA,EAAAA,EAAAA,IACAuK,CAAAA,EAAAA,EAAAA,EAAAA,EAAW,CACVzJ,KAAM2I,oBAAoB9I,GAC1B+J,OAAQC,CAAAA,EAAAA,EAAAA,4BAAAA,EAA6Bb,EAAAA,EAAqBA,CAACc,QAAQ,GACpE,GACA,GAGWyB,EAAoBvB,CAAAA,EAAAA,EAAAA,EAAAA,EAAwC,CACxE1K,IAAK,eACL2K,IAAK,OAAC,CAAEA,IAAAA,CAAG,CAAE,CAAApK,EACNqI,EAAU+B,EAAI9B,GACdgB,EAAQjB,MAAAA,EAAAA,KAAAA,EAAAA,EAASgB,QAAQ,CAACC,KAAK,CAACqC,GAAG,CAAC,IACzC,IAAMC,EAAYxB,EAAInB,EAAiB4C,EAAK9J,IAAI,GAChD,MAAO+J,CAAAA,EAAAA,EAAAA,EAAAA,EAAuBF,MAAAA,EAAAA,EAAaC,EAC5C,GACA,OAAOvC,MAAAA,EAAAA,EAAS,EAAE,EAEnByC,IAAK,CAAA/L,EAAUL,QAAT,CAAEoM,IAAAA,CAAG,CAAE,CAAA/L,EACZ,GAAIL,aAAoBW,EAAAA,EAAYA,CAAE,CACrC2G,OAAO+E,MAAM,CAAChK,EAAAA,EAAWA,EAAEmF,OAAO,CAAC,IAClC4E,EAAI9C,EAAiBlH,GAAO,KAC7B,GACA,MACD,CACApC,EAASwH,OAAO,CAAC,IAChB4E,EAAI9C,EAAiB4C,EAAK9J,IAAI,EAAGkK,CAAAA,EAAAA,EAAAA,EAAAA,EAAqBJ,GACvD,EACD,CACD,GAEyC1B,CAAAA,EAAAA,EAAAA,EAAAA,EAAwC,CAChF1K,IAAK,4BACL2K,IAAK,MAAApK,OAAO,CAAEoK,IAAAA,CAAG,CAAE,CAAApK,EACZqK,EAAWD,EAAIE,CAAAA,EAAAA,EAAAA,EAAAA,EAAOoB,IAC5B,MAAO,EACNnB,SAAU,IAAMF,EAASG,QAAQ,CACjCC,SAAU,IAAM,EAAE,CAClBC,QAAS,IAAM,EAAE,CAClB,CAAC,CAACL,EAASM,KAAK,CAAC,EAClB,CACD,uPC9IO,IAAMuB,EAAuBT,CAAAA,EAAAA,EAAAA,EAAAA,EAGlC,CACDhM,IAAK,kBACLiK,QAAS,KACTC,QAAS,GAAW,CACnBtK,CAAAA,EAAAA,EAAAA,EAAAA,IACAuK,CAAAA,EAAAA,EAAAA,EAAAA,EAAW,CACVzJ,KAAM,MAAA4I,OAAO,CACZ5I,KAAAA,CAAI,CACe,CAAA4I,EACb4B,EAAQ,MAAMxK,EAAK+L,EAAqBlM,GAAOP,GAAG,EACxD,GAAqB,UAAjB,OAAOkL,GAGPA,MAAAA,EAFH,OAAO,KAKR,GAAM,CAAEwB,WAAYC,CAAI,CAAE,GAAGC,EAAsB,CAAG1B,EAGtD,GAAI0B,MAAAA,EAA8B,CACjC,IAAMC,EAAiBC,EAAAA,EAAqBA,CAAC9E,SAAS,CAAC4E,GACvD,GAAIC,EAAe5D,OAAO,CAAE,CAC3B,IAAI8D,EAAiBF,EAAe1D,IAAI,CAACvG,SAAS,CAClD,GAAImK,GACCA,MAAAA,EAAwB,CAC3B,IAAMC,EAAgBxP,EAAAA,CAACA,CAACG,MAAM,CAAC,CAAE6N,KAAMC,EAAAA,EAASA,GAAIzD,SAAS,CAAC+E,GAC9D,GAAIC,EAAc/D,OAAO,CAAE,CAC1B,IAAMyC,EAAW,MAAMjN,EAAAA,CAAUA,CAACkN,GAAG,CAACC,MAAM,CAACxC,KAAK,CAAC,CAAEyC,aAAc,CAAEjJ,UAAW,EAAK,CAAE,GACjFqK,EAAiBvB,EAAS5H,IAAI,CAAC,GAAOF,EAAE4H,IAAI,GAAKwB,EAAc7D,IAAI,CAACqC,IAAI,EAC1EyB,GACHF,CAAAA,EAAiBG,EAAAA,EAASA,CAACtO,KAAK,CAACqO,EAAAA,CAEnC,CACD,CAED,MAAO,CAAE,GAAGJ,EAAe1D,IAAI,CAAEvG,UAAWmK,EAAgBL,WAAYnM,CAAM,CAC/E,CACA4M,QAAQpN,KAAK,CACZ,uCACA0M,EAAqBlM,GAAOP,GAAG,CAC/B6M,EAAeO,KAAK,CACpBR,EAGF,CACA,OAAO,IACR,EACAtC,OAAQC,CAAAA,EAAAA,EAAAA,4BAAAA,EAA6B8C,EAAAA,EAAyBA,CAACC,MAAM,CAAC,CAAEZ,WAAYa,EAAAA,EAAUA,GAAI/C,QAAQ,GAC3G,GACA,GAGsCgD,CAAAA,EAAAA,EAAAA,EAAAA,EAGtC,CACDxN,IAAK,2BACL2K,IACC,GACA,MAAArB,OAAO,CAAEqB,IAAAA,CAAG,CAAE,CAAArB,EACPuD,EAAiBC,EAAAA,EAAqBA,CAAC9E,SAAS,CACrD,MAAMvJ,EAAAA,CAAUA,CAACmK,OAAO,CAAC6E,gCAAgC,CAACrE,KAAK,CAAC,CAC/DjH,OAAQ5B,EAAMmN,EAAE,CAChBC,cAAe,CAAEjL,aAAcnC,EAAMgL,OAAO,CAC7C,WAED,EAAoBtC,OAAO,CAGpB,CAAE,GAAG4D,EAAe1D,IAAI,CAAEuD,WAAYnM,EAAMmM,UAAU,EAFrD,IAGT,CACF,GAEO,IAAMkB,EAAwBlD,CAAAA,EAAAA,EAAAA,EAAAA,EAAsE,CAC1G1K,IAAK,wBACL2K,IAAK,OAAC,CAAEA,IAAAA,CAAG,CAAE,CAAApK,EACNqI,EAAU+B,EAAI9B,EAAAA,EAAYA,SAChC,MAAID,EACI,EAAE,CAEH+B,EAAIkD,CAAAA,EAAAA,EAAAA,EAAAA,EAAWjF,EAAQgB,QAAQ,CAACkE,SAAS,CAAC5B,GAAG,CAAC,CAACwB,EAAIK,IAAMtB,EAAqBsB,MAAoBC,MAAM,CAC9GC,QAEF,EACA3B,IAAK,CAAA/L,EAAiBL,QAAhB,CAAEoM,IAAAA,CAAG,CAAE4B,MAAAA,CAAK,CAAE,CAAA3N,EACnB,GAAIL,aAAoBW,EAAAA,EAAYA,CACnC,MAAM,MAAU,qFAEjBX,EAASwH,OAAO,CAAC,IAChB4E,EAAIG,EAAqBiB,EAAGhB,UAAU,EAAG,CAAE,GAAGgB,CAAE,CAAEhB,WAAYgB,EAAGhB,UAAU,EAC5E,EACD,CACD,GAEayB,EAAgCzD,CAAAA,EAAAA,EAAAA,EAAAA,EAAsE,CAClH1K,IAAK,gCACL2K,IAAK,MAAApK,OAAO,CAAEoK,IAAAA,CAAG,CAAE,CAAApK,EACZqK,EAAWD,EAAIE,CAAAA,EAAAA,EAAAA,EAAAA,EAAO+C,IAE5B,MADA9O,CAAAA,EAAAA,EAAAA,CAAAA,IAAYiB,KAAK,CAAC,wBAAyB6K,GACpC,EACNE,SAAU,IAAMF,EAASG,QAAQ,CACjCC,SAAU,IAAM,EAAE,CAClBC,QAAS,IAAM,EAAE,CAClB,CAAC,CAACL,EAASM,KAAK,CAAC,EAClB,CACD,keChHO,IAAMkD,kBAAoB,QACzB7M,EAAP,OAAOA,OAAAA,CAAAA,EAAAA,EAAAA,CAAOA,CAACuC,IAAI,CAAC,GAAOuK,EAAE5M,EAAE,GAAK6M,EAAAA,GAA7B/M,KAAAA,IAAAA,EAAAA,EAA0C,IAClD,EAEagN,mBAAqB,QAC1BtK,EAAP,OAAOA,OAAAA,CAAAA,EAAAA,EAAAA,CAAQA,CAACH,IAAI,CAAC,GAAOuK,EAAE5M,EAAE,GAAK+M,EAAAA,GAA9BvK,KAAAA,IAAAA,EAAAA,EAA4C,IACpD,EAEaoI,uBAAyB,IACrC,IAAMlJ,EAAUoL,mBAAmBnC,EAAKjJ,OAAO,EACzCC,EAASgL,kBAAkBhC,EAAKhJ,MAAM,EAC5C,GAAID,MAAAA,EACH,MAAM,MAAU,WAAwBhD,MAAA,CAAbiM,EAAKjJ,OAAO,CAAC,2BAEzC,GAAIC,MAAAA,EACH,MAAM,MAAU,UAAsBjD,MAAA,CAAZiM,EAAKhJ,MAAM,CAAC,2BAEvC,OAAOqL,EAAAA,EAAeA,CAAC7P,KAAK,CAAC,CAC5B,GAAGwN,CAAI,CACPjJ,QAAAA,EACAC,OAAAA,CACD,EACD,EAEasL,iCAAmC,IAG/C,IAAMvL,EAAUoL,mBAAmBnC,EAAKjJ,OAAO,EACzCC,EAASgL,kBAAkBhC,EAAKhJ,MAAM,EAC5C,GAAID,MAAAA,EACH,MAAM,MAAU,WAAwBhD,MAAA,CAAbiM,EAAKjJ,OAAO,CAAC,2BAEzC,GAAIC,MAAAA,EACH,MAAM,MAAU,UAAsBjD,MAAA,CAAZiM,EAAKhJ,MAAM,CAAC,2BAEvC,OAAOuL,EAAAA,EAAqBA,CAAC/P,KAAK,CAAC,CAClC,GAAGwN,CAAI,CACPjJ,QAAAA,EACAC,OAAAA,CACD,EACD,EAEawL,oBAAsB,GAC3B,EAAEnN,GAAI0H,EAAMzH,MAAOyH,CAAK,GAGnBqD,qBAAuB,GAC5B9C,EAAAA,EAAqBA,CAAC9K,KAAK,CAAC,CAClC,GAAGwN,CAAI,CACPhJ,OAAQgJ,EAAKhJ,MAAM,CAAC3B,EAAE,CACtB0B,QAASiJ,EAAKjJ,OAAO,CAAC1B,EAAE,GAIb8G,+BAAiC,QAGjCmF,EAIJA,EAKSA,EACAA,EAZjB,MAAO,CACN,GAAGA,CAAE,CACL9K,UAAS,OAAE8K,CAAAA,EAAAA,EAAG9K,SAAS,GAAZ8K,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAcjM,EAAE,CAC3B0E,OAAQuH,EAAGvH,MAAM,CAAC1E,EAAE,CACpB+E,WAAYkH,EAAGlH,UAAU,CACzBV,SAAU4H,EAAG5H,QAAQ,CAACrE,EAAE,CACxByG,MAAK,OAAEwF,CAAAA,EAAAA,EAAGxF,KAAK,GAARwF,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAUjM,EAAE,CACnBiF,SAAUgH,EAAGhH,QAAQ,CAACjF,EAAE,CACxBmF,SAAU8G,EAAG9G,QAAQ,CAACnF,EAAE,CACxB2G,QAASsF,EAAGtF,OAAO,CAAC3G,EAAE,CACtB6G,UAAWoF,EAAGpF,SAAS,CAAC7G,EAAE,CAC1BqF,eAAc,OAAE4G,CAAAA,EAAAA,EAAG5G,cAAc,GAAjB4G,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAmBjM,EAAE,CACrCuF,eAAc,OAAE0G,CAAAA,EAAAA,EAAG1G,cAAc,GAAjB0G,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAmBjM,EAAE,CAEvC,EAEaoN,sCAAwC,QAOtCnB,EACHA,EAEEA,EACHA,EACGA,EACAA,EACDA,EACEA,EACKA,EACAA,EAdnB,OAAOA,MAAAA,EACJoB,KAAAA,EACA,CACA,GAAGpB,CAAE,CACL9K,UAAS,OAAE8K,CAAAA,EAAAA,EAAG9K,SAAS,GAAZ8K,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAcjM,EAAE,CAC3B0E,OAAM,OAAEuH,CAAAA,EAAAA,EAAGvH,MAAM,GAATuH,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAWjM,EAAE,CACrB+E,WAAYkH,EAAGlH,UAAU,CACzBV,SAAQ,OAAE4H,CAAAA,EAAAA,EAAG5H,QAAQ,GAAX4H,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAajM,EAAE,CACzByG,MAAK,OAAEwF,CAAAA,EAAAA,EAAGxF,KAAK,GAARwF,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAUjM,EAAE,CACnBiF,SAAQ,OAAEgH,CAAAA,EAAAA,EAAGhH,QAAQ,GAAXgH,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAajM,EAAE,CACzBmF,SAAQ,OAAE8G,CAAAA,EAAAA,EAAG9G,QAAQ,GAAX8G,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAajM,EAAE,CACzB2G,QAAO,OAAEsF,CAAAA,EAAAA,EAAGtF,OAAO,GAAVsF,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAYjM,EAAE,CACvB6G,UAAS,OAAEoF,CAAAA,EAAAA,EAAGpF,SAAS,GAAZoF,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAcjM,EAAE,CAC3BqF,eAAc,OAAE4G,CAAAA,EAAAA,EAAG5G,cAAc,GAAjB4G,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAmBjM,EAAE,CACrCuF,eAAc,OAAE0G,CAAAA,EAAAA,EAAG1G,cAAc,GAAjB0G,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAmBjM,EAAE,CAEzC,mJCxBYsN,0BArFL,IAAMC,EAAU,CACtBC,WAAYzR,EAAAA,CAACA,CAACW,MAAM,GAAG+Q,QAAQ,GAC/BC,UAAW3R,EAAAA,CAACA,CAACW,MAAM,GAAG+Q,QAAQ,GAC9BE,aAAc5R,EAAAA,CAACA,CAACW,MAAM,GAAG+Q,QAAQ,GACjCG,WAAY7R,EAAAA,CAACA,CAACW,MAAM,GAAG+Q,QAAQ,GAC/BI,WAAY9R,EAAAA,CAACA,CAACW,MAAM,GAAG+Q,QAAQ,GAC/BK,cAAe/R,EAAAA,CAACA,CAACW,MAAM,GAAG+Q,QAAQ,GAClCM,YAAahS,EAAAA,CAACA,CAACW,MAAM,GAAG+Q,QAAQ,GAChCO,WAAYjS,EAAAA,CAACA,CAACW,MAAM,GAAG+Q,QAAQ,GAC/BQ,cAAelS,EAAAA,CAACA,CAACW,MAAM,GAAG+Q,QAAQ,GAClCS,YAAanS,EAAAA,CAACA,CAACW,MAAM,GAAG+Q,QAAQ,GAChCU,YAAapS,EAAAA,CAACA,CAACW,MAAM,GAAG+Q,QAAQ,GAChCW,eAAgBrS,EAAAA,CAACA,CAACW,MAAM,GAAG+Q,QAAQ,GACnCY,uBAAwBtS,EAAAA,CAACA,CAACW,MAAM,GAAG+Q,QAAQ,GAC3Ca,sBAAuBvS,EAAAA,CAACA,CAACW,MAAM,GAAG+Q,QAAQ,GAC1Cc,yBAA0BxS,EAAAA,CAACA,CAACW,MAAM,GAAG+Q,QAAQ,GAC7Ce,uBAAwBzS,EAAAA,CAACA,CAACW,MAAM,GAAG+Q,QAAQ,GAC3CgB,uBAAwB1S,EAAAA,CAACA,CAACW,MAAM,GAAG+Q,QAAQ,GAC3CiB,0BAA2B3S,EAAAA,CAACA,CAACW,MAAM,GAAG+Q,QAAQ,GAC9CkB,WAAY5S,EAAAA,CAACA,CAACW,MAAM,GAAG+Q,QAAQ,GAC/BmB,UAAW7S,EAAAA,CAACA,CAACW,MAAM,GAAG+Q,QAAQ,GAC9BoB,aAAc9S,EAAAA,CAACA,CAACW,MAAM,GAAG+Q,QAAQ,GACjCqB,WAAY/S,EAAAA,CAACA,CAACW,MAAM,GAAG+Q,QAAQ,GAC/BsB,WAAYhT,EAAAA,CAACA,CAACW,MAAM,GAAG+Q,QAAQ,GAC/BuB,cAAejT,EAAAA,CAACA,CAACW,MAAM,GAAG+Q,QAAQ,GAClCwB,YAAalT,EAAAA,CAACA,CAACW,MAAM,GAAG+Q,QAAQ,GAChCyB,WAAYnT,EAAAA,CAACA,CAACW,MAAM,GAAG+Q,QAAQ,GAC/B0B,cAAepT,EAAAA,CAACA,CAACW,MAAM,GAAG+Q,QAAQ,GAClC2B,YAAarT,EAAAA,CAACA,CAACW,MAAM,GAAG+Q,QAAQ,GAChC4B,YAAatT,EAAAA,CAACA,CAACW,MAAM,GAAG+Q,QAAQ,GAChC6B,eAAgBvT,EAAAA,CAACA,CAACW,MAAM,GAAG+Q,QAAQ,GACnC8B,YAAaxT,EAAAA,CAACA,CAACW,MAAM,GAAG+Q,QAAQ,GAChC+B,WAAYzT,EAAAA,CAACA,CAACW,MAAM,GAAG+Q,QAAQ,GAC/BgC,cAAe1T,EAAAA,CAACA,CAACW,MAAM,GAAG+Q,QAAQ,GAClCiC,YAAa3T,EAAAA,CAACA,CAACW,MAAM,GAAG+Q,QAAQ,GAChCkC,YAAa5T,EAAAA,CAACA,CAACW,MAAM,GAAG+Q,QAAQ,GAChCmC,eAAgB7T,EAAAA,CAACA,CAACW,MAAM,GAAG+Q,QAAQ,GACnCoC,YAAa9T,EAAAA,CAACA,CAACW,MAAM,GAAG+Q,QAAQ,GAChCqC,WAAY/T,EAAAA,CAACA,CAACW,MAAM,GAAG+Q,QAAQ,GAC/BsC,cAAehU,EAAAA,CAACA,CAACW,MAAM,GAAG+Q,QAAQ,GAClCuC,YAAajU,EAAAA,CAACA,CAACW,MAAM,GAAG+Q,QAAQ,GAChCwC,YAAalU,EAAAA,CAACA,CAACW,MAAM,GAAG+Q,QAAQ,GAChCyC,YAAanU,EAAAA,CAACA,CAACW,MAAM,GAAG+Q,QAAQ,GAChC0C,WAAYpU,EAAAA,CAACA,CAACW,MAAM,GAAG+Q,QAAQ,GAC/B2C,cAAerU,EAAAA,CAACA,CAACW,MAAM,GAAG+Q,QAAQ,GAClC4C,YAAatU,EAAAA,CAACA,CAACW,MAAM,GAAG+Q,QAAQ,GAChC6C,YAAavU,EAAAA,CAACA,CAACW,MAAM,GAAG+Q,QAAQ,GAChC8C,YAAaxU,EAAAA,CAACA,CAACW,MAAM,GAAG+Q,QAAQ,GAChC+C,WAAYzU,EAAAA,CAACA,CAACW,MAAM,GAAG+Q,QAAQ,GAC/BgD,cAAe1U,EAAAA,CAACA,CAACW,MAAM,GAAG+Q,QAAQ,GAClCiD,YAAa3U,EAAAA,CAACA,CAACW,MAAM,GAAG+Q,QAAQ,GAChCkD,YAAa5U,EAAAA,CAACA,CAACW,MAAM,GAAG+Q,QAAQ,GAChCmD,YAAa7U,EAAAA,CAACA,CAACW,MAAM,GAAG+Q,QAAQ,GAChCoD,WAAY9U,EAAAA,CAACA,CAACW,MAAM,GAAG+Q,QAAQ,GAC/BqD,cAAe/U,EAAAA,CAACA,CAACW,MAAM,GAAG+Q,QAAQ,GAClCsD,YAAahV,EAAAA,CAACA,CAACW,MAAM,GAAG+Q,QAAQ,GAChCuD,YAAajV,EAAAA,CAACA,CAACW,MAAM,GAAG+Q,QAAQ,GAChCwD,WAAYlV,EAAAA,CAACA,CAACW,MAAM,GAAG+Q,QAAQ,GAC/ByD,UAAWnV,EAAAA,CAACA,CAACW,MAAM,GAAG+Q,QAAQ,GAC9B0D,aAAcpV,EAAAA,CAACA,CAACW,MAAM,GAAG+Q,QAAQ,GACjC2D,WAAYrV,EAAAA,CAACA,CAACW,MAAM,GAAG+Q,QAAQ,GAC/B4D,WAAYtV,EAAAA,CAACA,CAACW,MAAM,GAAG+Q,QAAQ,GAC/B6D,aAAcvV,EAAAA,CAACA,CAACW,MAAM,GAAG+Q,QAAQ,GACjC8D,aAAcxV,EAAAA,CAACA,CAACW,MAAM,GAAG+Q,QAAQ,GACjC+D,qBAAsBzV,EAAAA,CAACA,CAACW,MAAM,GAAG+Q,QAAQ,GACzCgE,qBAAsB1V,EAAAA,CAACA,CAACW,MAAM,GAAG+Q,QAAQ,GACzCiE,qBAAsB3V,EAAAA,CAACA,CAACW,MAAM,GAAG+Q,QAAQ,GACzCkE,eAAgB5V,EAAAA,CAACA,CAACW,MAAM,GAAG+Q,QAAQ,GACnCmE,mBAAoB7V,EAAAA,CAACA,CAACW,MAAM,GAAG+Q,QAAQ,GACvCoE,oBAAqB9V,EAAAA,CAACA,CAACW,MAAM,GAAG+Q,QAAQ,GACxCqE,UAAW/V,EAAAA,CAACA,CAACW,MAAM,GAAG+Q,QAAQ,GAC9BsE,qBAAsBhW,EAAAA,CAACA,CAACW,MAAM,GAAG+Q,QAAQ,GACzCuE,yBAA0BjW,EAAAA,CAACA,CAACW,MAAM,GAAG+Q,QAAQ,GAC7CwE,yBAA0BlW,EAAAA,CAACA,CAACW,MAAM,GAAG+Q,QAAQ,GAC7CyE,uBAAwBnW,EAAAA,CAACA,CAACW,MAAM,GAAG+Q,QAAQ,GAC3C0E,sBAAuBpW,EAAAA,CAACA,CAACW,MAAM,GAAG+Q,QAAQ,GAC1C,0BAA2B1R,EAAAA,CAACA,CAACW,MAAM,GAAG+Q,QAAQ,GAC9C,+BAAgC1R,EAAAA,CAACA,CAACW,MAAM,GAAG+Q,QAAQ,GACnD,0BAA2B1R,EAAAA,CAACA,CAACW,MAAM,GAAG+Q,QAAQ,GAC9C,+BAAgC1R,EAAAA,CAACA,CAACW,MAAM,GAAG+Q,QAAQ,GACnD,0BAA2B1R,EAAAA,CAACA,CAACW,MAAM,GAAG+Q,QAAQ,GAC9C,+BAAgC1R,EAAAA,CAACA,CAACW,MAAM,GAAG+Q,QAAQ,EACpD,EACa2E,EAASrW,EAAAA,CAACA,CAACG,MAAM,CAACqR,IAEnBD,EAAAA,GAAAA,CAAAA,EAAAA,CAAAA,CAAAA,yIAeL,IAAM+E,EAAuE,CACnFtR,EAAGD,EAAAA,EAAW,CAAC,CAAI,CACnBwR,GAAIxR,EAAAA,EAAW,CAAC,EAAK,CACrByR,EAAGzR,EAAAA,EAAW,CAAC,CAAI,CACnB0R,GAAI1R,EAAAA,EAAW,CAAC,EAAK,CACrB2R,GAAI3R,EAAAA,EAAW,CAAC,EAAK,CACrB4R,GAAI5R,EAAAA,EAAW,CAAC,CAAI,CACpB6R,GAAI7R,EAAAA,EAAW,CAAC,EAAK,CACrB8R,GAAI9R,EAAAA,EAAW,CAAC,EAAK,CACrB+R,GAAI/R,EAAAA,EAAW,CAAC,EAAK,CACrBgS,EAAGhS,EAAAA,EAAW,CAAC,QAAW,CAC1BiS,GAAIjS,EAAAA,EAAW,CAAC,SAAY,CAC5B6C,cAAe7C,EAAAA,EAAW,CAAC,aAAgB,EAGb/E,EAAAA,CAACA,CAACiX,UAAU,CAAC1F,GAAe2F,SAAS,CAAC,QAAOZ,SAAAA,OAAAA,CAAAA,EAAAA,CAA2B,CAACa,EAAE,GAA9Bb,KAAAA,IAAAA,EAAAA,EAAkC,IAAG,GAClFtW,EAAAA,CAACA,CAC9BiX,UAAU,CAAClS,EAAAA,EAAWA,EACtBmS,SAAS,CACT,QACCE,SAAA,OAAAA,CAAAA,EAAApN,OAAQC,IAAI,CAACqM,GAAiDhQ,IAAI,CACjE,GAAOgQ,CAA2B,CAAC/P,EAAE,GAAK8Q,EAAAA,GAD3CD,KAAA,IAAAA,EAAAA,EAEK,IAAG,GAGuBf,EAAOvG,MAAM,CAAC,CAC/C2B,WAAYzR,EAAAA,CAACA,CAACW,MAAM,GACpBgR,UAAW3R,EAAAA,CAACA,CAACW,MAAM,GACnBiR,aAAc5R,EAAAA,CAACA,CAACW,MAAM,GACtBkR,WAAY7R,EAAAA,CAACA,CAACW,MAAM,GACpBoR,cAAe/R,EAAAA,CAACA,CAACW,MAAM,GACvBiS,WAAY5S,EAAAA,CAACA,CAACW,MAAM,GACpBkS,UAAW7S,EAAAA,CAACA,CAACW,MAAM,GACnBmS,aAAc9S,EAAAA,CAACA,CAACW,MAAM,GACtBoS,WAAY/S,EAAAA,CAACA,CAACW,MAAM,GACpBsS,cAAejT,EAAAA,CAACA,CAACW,MAAM,GACvBmT,YAAa9T,EAAAA,CAACA,CAACW,MAAM,GACrBoT,WAAY/T,EAAAA,CAACA,CAACW,MAAM,GACpBqT,cAAehU,EAAAA,CAACA,CAACW,MAAM,GACvBsT,YAAajU,EAAAA,CAACA,CAACW,MAAM,GACrBuU,WAAYlV,EAAAA,CAACA,CAACW,MAAM,GACpBwU,UAAWnV,EAAAA,CAACA,CAACW,MAAM,GACnByU,aAAcpV,EAAAA,CAACA,CAACW,MAAM,GACtB0U,WAAYrV,EAAAA,CAACA,CAACW,MAAM,GACpB4U,aAAcvV,EAAAA,CAACA,CAACW,MAAM,GACtB6U,aAAcxV,EAAAA,CAACA,CAACW,MAAM,GACtBoV,UAAW/V,EAAAA,CAACA,CAACW,MAAM,GACnBwV,uBAAwBnW,EAAAA,CAACA,CAACW,MAAM,GAChCyV,sBAAuBpW,EAAAA,CAACA,CAACW,MAAM,EAChC,GAAG2W,GAAG,CACLtX,EAAAA,CAACA,CACCG,MAAM,CAAC,CACP6V,qBAAsBhW,EAAAA,CAACA,CAACW,MAAM,GAC9BsV,yBAA0BjW,EAAAA,CAACA,CAACW,MAAM,EACnC,GACC4W,EAAE,CACFvX,EAAAA,CAACA,CAACG,MAAM,CAAC,CACR,0BAA2BH,EAAAA,CAACA,CAACW,MAAM,GACnC,+BAAgCX,EAAAA,CAACA,CAACW,MAAM,GACxC,0BAA2BX,EAAAA,CAACA,CAACW,MAAM,GACnC,+BAAgCX,EAAAA,CAACA,CAACW,MAAM,EACzC,KAI2C0V,EAAOvG,MAAM,CAAC,CAC3D2B,WAAYzR,EAAAA,CAACA,CAACW,MAAM,GACpBgR,UAAW3R,EAAAA,CAACA,CAACW,MAAM,GACnBiR,aAAc5R,EAAAA,CAACA,CAACW,MAAM,GACtBkR,WAAY7R,EAAAA,CAACA,CAACW,MAAM,GACpBoR,cAAe/R,EAAAA,CAACA,CAACW,MAAM,GACvBiS,WAAY5S,EAAAA,CAACA,CAACW,MAAM,GACpBkS,UAAW7S,EAAAA,CAACA,CAACW,MAAM,GACnBmS,aAAc9S,EAAAA,CAACA,CAACW,MAAM,GACtBoS,WAAY/S,EAAAA,CAACA,CAACW,MAAM,GACpBsS,cAAejT,EAAAA,CAACA,CAACW,MAAM,GACvBmT,YAAa9T,EAAAA,CAACA,CAACW,MAAM,GACrBoT,WAAY/T,EAAAA,CAACA,CAACW,MAAM,GACpBqT,cAAehU,EAAAA,CAACA,CAACW,MAAM,GACvBsT,YAAajU,EAAAA,CAACA,CAACW,MAAM,GACrBwT,YAAanU,EAAAA,CAACA,CAACW,MAAM,GACrByT,WAAYpU,EAAAA,CAACA,CAACW,MAAM,GACpB0T,cAAerU,EAAAA,CAACA,CAACW,MAAM,GACvB2T,YAAatU,EAAAA,CAACA,CAACW,MAAM,GACrB6T,YAAaxU,EAAAA,CAACA,CAACW,MAAM,GACrB8T,WAAYzU,EAAAA,CAACA,CAACW,MAAM,GACpB+T,cAAe1U,EAAAA,CAACA,CAACW,MAAM,GACvBgU,YAAa3U,EAAAA,CAACA,CAACW,MAAM,GACrBoV,UAAW/V,EAAAA,CAACA,CAACW,MAAM,GACnBwV,uBAAwBnW,EAAAA,CAACA,CAACW,MAAM,GAChCyV,sBAAuBpW,EAAAA,CAACA,CAACW,MAAM,EAChC,GAAG2W,GAAG,CACLtX,EAAAA,CAACA,CACCG,MAAM,CAAC,CACP6V,qBAAsBhW,EAAAA,CAACA,CAACW,MAAM,GAC9BsV,yBAA0BjW,EAAAA,CAACA,CAACW,MAAM,EACnC,GACC4W,EAAE,CACFvX,EAAAA,CAACA,CAACG,MAAM,CAAC,CACR,0BAA2BH,EAAAA,CAACA,CAACW,MAAM,GACnC,+BAAgCX,EAAAA,CAACA,CAACW,MAAM,GACxC,0BAA2BX,EAAAA,CAACA,CAACW,MAAM,GACnC,+BAAgCX,EAAAA,CAACA,CAACW,MAAM,EACzC,KAG4B0V,EAAOvG,MAAM,CAAC,CAC5CoF,WAAYlV,EAAAA,CAACA,CAACW,MAAM,GACpBwU,UAAWnV,EAAAA,CAACA,CAACW,MAAM,GACnByU,aAAcpV,EAAAA,CAACA,CAACW,MAAM,GACtB0U,WAAYrV,EAAAA,CAACA,CAACW,MAAM,GACpB4U,aAAcvV,EAAAA,CAACA,CAACW,MAAM,GACtB6U,aAAcxV,EAAAA,CAACA,CAACW,MAAM,GACtBiV,eAAgB5V,EAAAA,CAACA,CAACW,MAAM,GACxBoV,UAAW/V,EAAAA,CAACA,CAACW,MAAM,EACpB,GAAG2W,GAAG,CACLtX,EAAAA,CAACA,CACCG,MAAM,CAAC,CACP6V,qBAAsBhW,EAAAA,CAACA,CAACW,MAAM,GAC9BsV,yBAA0BjW,EAAAA,CAACA,CAACW,MAAM,EACnC,GACC4W,EAAE,CACFvX,EAAAA,CAACA,CAACG,MAAM,CAAC,CACR,0BAA2BH,EAAAA,CAACA,CAACW,MAAM,GACnC,+BAAgCX,EAAAA,CAACA,CAACW,MAAM,GACxC,0BAA2BX,EAAAA,CAACA,CAACW,MAAM,GACnC,+BAAgCX,EAAAA,CAACA,CAACW,MAAM,EACzC,KAII,IAAM6W,EAAWxX,EAAAA,CAACA,CAACG,MAAM,CAAC,CAChCsX,SAAUzX,EAAAA,CAACA,CAACW,MAAM,GAClB+W,aAAc1X,EAAAA,CAACA,CAACW,MAAM,GAAG+Q,QAAQ,GACjCiG,OAAQ3X,EAAAA,CAACA,CAACW,MAAM,GAAG+Q,QAAQ,GAC3BkG,OAAQ5X,EAAAA,CAACA,CAACW,MAAM,GAAG+Q,QAAQ,EAC5B,GAEamG,EAAU7X,EAAAA,CAACA,CACtBG,MAAM,CAAC,CACP2X,OAAQ9X,EAAAA,CAACA,CAACW,MAAM,EACjB,GACC2W,GAAG,CACHtX,EAAAA,CAACA,CAACG,MAAM,CAAC,CAAE4X,QAAS/X,EAAAA,CAACA,CAACW,MAAM,EAAG,GAAG4W,EAAE,CACnCvX,EAAAA,CAACA,CAACG,MAAM,CAAC,CACR6X,sBAAuBhY,EAAAA,CAACA,CAACW,MAAM,GAAG+Q,QAAQ,GAC1CuG,sBAAuBjY,EAAAA,CAACA,CAACW,MAAM,GAAG+Q,QAAQ,GAC1CwG,sBAAuBlY,EAAAA,CAACA,CAACW,MAAM,GAAG+Q,QAAQ,EAC3C,KAIUyG,OAAS,GACdN,EAAQrN,SAAS,CAAC4N,GAAM3M,OAAO,CAG1B4M,QAAU,GACfb,EAAShN,SAAS,CAAC4N,GAAM3M,OAAO,CAG3B6M,EAAgBtY,EAAAA,CAACA,CAACG,MAAM,CAAC,CACrCoY,SAAUvY,EAAAA,CAACA,CAACW,MAAM,GAClB6X,QAASxY,EAAAA,CAACA,CAACW,MAAM,GACjB8X,WAAYzY,EAAAA,CAACA,CAACW,MAAM,GACpB+X,SAAU1Y,EAAAA,CAACA,CAACW,MAAM,GAAG+Q,QAAQ,GAC7BiH,YAAa3Y,EAAAA,CAACA,CAACW,MAAM,GAAG+Q,QAAQ,GAEhC+F,SAAUzX,EAAAA,CAACA,CAACW,MAAM,GAAG+Q,QAAQ,GAC7BiG,OAAQ3X,EAAAA,CAACA,CAACW,MAAM,GAAG+Q,QAAQ,GAC3BkG,OAAQ5X,EAAAA,CAACA,CAACW,MAAM,GAAG+Q,QAAQ,GAE3BoG,OAAQ9X,EAAAA,CAACA,CAACW,MAAM,GAAG+Q,QAAQ,EAC5B,GAEakH,EAAYN,EAAcxI,MAAM,CAAC,CAC7C5L,MAAOlE,EAAAA,CAACA,CAACW,MAAM,GAEf+W,aAAc1X,EAAAA,CAACA,CAACW,MAAM,GAAG+Q,QAAQ,GAEjCqG,QAAS/X,EAAAA,CAACA,CAACW,MAAM,GAAG+Q,QAAQ,GAC5BsG,sBAAuBhY,EAAAA,CAACA,CAACW,MAAM,GAAG+Q,QAAQ,GAC1CuG,sBAAuBjY,EAAAA,CAACA,CAACW,MAAM,GAAG+Q,QAAQ,GAC1CwG,sBAAuBlY,EAAAA,CAACA,CAACW,MAAM,GAAG+Q,QAAQ,EAC3C,GAAG5E,MAAM,CACR,GACQqL,OAAOC,IAASC,QAAQD,GAEhC,CAAES,QAAS,8CAA+C,GAKxCD,EAAUE,SAAS,GAAGC,IAAI,CAAC,CAAE7U,MAAO,EAAK,GAAG8U,OAAO,GAG/D,IAAMC,EAAejZ,EAAAA,CAACA,CAACW,MAAM,GAevBuY,EAAUlZ,EAAAA,CAACA,CAACW,MAAM,GAAGwY,KAAK,CAAC,WAC3BlL,EAAYjO,EAAAA,CAACA,CAACW,MAAM,GAAGwY,KAAK,CAAC,aAC7BC,EAAkBpZ,EAAAA,CAACA,CAACW,MAAM,GAAGwY,KAAK,CAAC,mBAE1CE,EAAoBrZ,EAAAA,CAACA,CAACU,MAAM,CAACV,EAAAA,CAACA,CAACiX,UAAU,CAAClS,EAAAA,EAAWA,EAAG/E,EAAAA,CAACA,CAACW,MAAM,IAChE2Y,EAAatZ,EAAAA,CAACA,CAACU,MAAM,CAACuY,EAAcL,GAE7BrK,EAAQvO,EAAAA,CAACA,CACpBG,MAAM,CAAC,CACP8D,GAAIiV,EACJK,YAAavZ,EAAAA,CAACA,CAACwZ,OAAO,GAAG9H,QAAQ,GACjC+H,OAAQzZ,EAAAA,CAACA,CAACwZ,OAAO,GAAG9H,QAAQ,GAC5BgI,WAAYN,EAAgB1H,QAAQ,GACpCiI,KAAM3Z,EAAAA,CAACA,CAACW,MAAM,GACdiZ,aAAc5Z,EAAAA,CAACA,CAACW,MAAM,GACtBkZ,mBAAoB7Z,EAAAA,CAACA,CAACW,MAAM,GAC5BmZ,cAAe9Z,EAAAA,CAACA,CAACW,MAAM,GACvBoZ,YAAa/Z,EAAAA,CAACA,CAACW,MAAM,GAAG+Q,QAAQ,GAChCsI,kBAAmBha,EAAAA,CAACA,CAACW,MAAM,GAAG+Q,QAAQ,GACtCuI,iBAAkBja,EAAAA,CAACA,CAACwZ,OAAO,GAAG9H,QAAQ,GACtCwI,kBAAmBla,EAAAA,CAACA,CAACW,MAAM,GAAG+Q,QAAQ,GACtCyI,eAAgBna,EAAAA,CAACA,CAACwZ,OAAO,GAAG9H,QAAQ,GACpC0I,YAAapa,EAAAA,CAACA,CAACK,MAAM,GACrBgZ,kBAAmBA,EAAkB3H,QAAQ,GAC7C2I,mBAAoBra,EAAAA,CAACA,CAACW,MAAM,GAAG+Q,QAAQ,GACvCvM,yBAA0BnF,EAAAA,CAACA,CAACK,MAAM,GAAGqR,QAAQ,GAC7C4I,eAAgBC,EAAAA,EAAOA,CAACha,KAAK,GAAGkM,OAAO,CAAC,CAAC,GAAG,EAC5C+N,iBAAkBxa,EAAAA,CAACA,CAACwZ,OAAO,GAAG/M,OAAO,CAAC,IACtCgO,0BAA2Bza,EAAAA,CAACA,CAACK,MAAM,GAAGqR,QAAQ,GAC9C4H,WAAYtZ,EAAAA,CAACA,CAACU,MAAM,CAACuY,EAAcL,GAAWlH,QAAQ,GACtDgJ,WAAY1a,EAAAA,CAACA,CACXO,KAAK,CACLP,EAAAA,CAACA,CAACG,MAAM,CAAC,CACRwa,IAAK3a,EAAAA,CAACA,CAACW,MAAM,GACbgZ,KAAM3Z,EAAAA,CAACA,CAACW,MAAM,GACdG,MAAOd,EAAAA,CAACA,CAACK,MAAM,GAAGua,GAAG,CAAC,GAAGC,GAAG,CAAC,EAC9B,IAEAnJ,QAAQ,GACVoJ,IAAK9a,EAAAA,CAACA,CACJG,MAAM,CAAC,CACP4a,aAAc/a,EAAAA,CAACA,CAACW,MAAM,GACtBqa,YAAahb,EAAAA,CAACA,CAACW,MAAM,GACrBsa,aAAcjb,EAAAA,CAACA,CAACO,KAAK,CAACP,EAAAA,CAACA,CAACW,MAAM,IAC9Bua,SAAUlb,EAAAA,CAACA,CAACW,MAAM,GAAG+Q,QAAQ,GAC7ByJ,eAAgBnb,EAAAA,CAACA,CAACwZ,OAAO,EAC1B,GACC9H,QAAQ,GACV0J,WAAYpb,EAAAA,CAACA,CACXG,MAAM,CAAC,CACPkb,SAAUrb,EAAAA,CAACA,CAACG,MAAM,CAAC,CAClBmb,KAAMtb,EAAAA,CAACA,CAACW,MAAM,GACd4a,KAAMvb,EAAAA,CAACA,CAACW,MAAM,GACd6a,KAAMxb,EAAAA,CAACA,CAACW,MAAM,EACf,EACD,GACC4W,EAAE,CACFvX,EAAAA,CAACA,CAACG,MAAM,CAAC,CACRsb,SAAUzb,EAAAA,CAACA,CAACG,MAAM,CAAC,CAClBub,IAAK1b,EAAAA,CAACA,CAACW,MAAM,EACd,EACD,IAEA+Q,QAAQ,GACViK,WAAY3b,EAAAA,CAACA,CACXG,MAAM,CAAC,CACP2X,OAAQ9X,EAAAA,CAACA,CAACW,MAAM,EACjB,GACC2W,GAAG,CACHtX,EAAAA,CAACA,CACCG,MAAM,CAAC,CACPkb,SAAUrb,EAAAA,CAACA,CAACG,MAAM,CAAC,CAClBmb,KAAMtb,EAAAA,CAACA,CAACW,MAAM,GACd4a,KAAMvb,EAAAA,CAACA,CAACW,MAAM,GACd6a,KAAMxb,EAAAA,CAACA,CAACW,MAAM,EACf,EACD,GACC4W,EAAE,CACFvX,EAAAA,CAACA,CAACG,MAAM,CAAC,CACRsb,SAAUzb,EAAAA,CAACA,CAACG,MAAM,CAAC,CAClBub,IAAK1b,EAAAA,CAACA,CAACW,MAAM,EACd,EACD,KAGF+Q,QAAQ,GACVkK,OAAQ5b,EAAAA,CAACA,CACPG,MAAM,CAAC,CACP2X,OAAQ9X,EAAAA,CAACA,CAACW,MAAM,EACjB,GACC2W,GAAG,CACHtX,EAAAA,CAACA,CACCG,MAAM,CAAC,CACPkb,SAAUrb,EAAAA,CAACA,CAACG,MAAM,CAAC,CAClBmb,KAAMtb,EAAAA,CAACA,CAACW,MAAM,GACd4a,KAAMvb,EAAAA,CAACA,CAACW,MAAM,GACd6a,KAAMxb,EAAAA,CAACA,CAACW,MAAM,EACf,EACD,GACC4W,EAAE,CACFvX,EAAAA,CAACA,CAACG,MAAM,CAAC,CACRsb,SAAUzb,EAAAA,CAACA,CAACG,MAAM,CAAC,CAClBub,IAAK1b,EAAAA,CAACA,CAACW,MAAM,EACd,EACD,KAGF+Q,QAAQ,GACV1D,KAAMC,CACP,GACCqJ,GAAG,CACHtX,EAAAA,CAACA,CACCG,MAAM,CAAC,CAAEoZ,YAAavZ,EAAAA,CAACA,CAAC6b,OAAO,CAAC,IAAOvC,WAAYtZ,EAAAA,CAACA,CAACsR,SAAS,EAAG,GACjEiG,EAAE,CAACvX,EAAAA,CAACA,CAACG,MAAM,CAAC,CAAEmZ,WAAYA,CAAW,IACrC/B,EAAE,CAACvX,EAAAA,CAACA,CAACG,MAAM,CAAC,CAAEsZ,OAAQzZ,EAAAA,CAACA,CAAC6b,OAAO,CAAC,IAAOvC,WAAYtZ,EAAAA,CAACA,CAACsR,SAAS,EAAG,KAG7B/C,EAAM+I,GAAG,CAChDtX,EAAAA,CAACA,CAACG,MAAM,CAAC,CACR2b,SAAU9b,EAAAA,CAACA,CAACwZ,OAAO,EACpB,IAGiCxZ,EAAAA,CAACA,CAACG,MAAM,CAAC,CAC1C8D,GAAIjE,EAAAA,CAACA,CAACW,MAAM,GACZsZ,iBAAkBja,EAAAA,CAACA,CAAC6b,OAAO,CAAC,IAAOnK,QAAQ,GAC3C6H,YAAavZ,EAAAA,CAACA,CAACwZ,OAAO,GAAG9H,QAAQ,GACjCoI,cAAe9Z,EAAAA,CAACA,CAACW,MAAM,GACvBoZ,YAAa/Z,EAAAA,CAACA,CAACW,MAAM,GACrBqN,KAAMC,CACP,GAEO,IAAMyB,EAAYnB,EAAM+I,GAAG,CACjCtX,EAAAA,CAACA,CAACG,MAAM,CAAC,CACRoZ,YAAavZ,EAAAA,CAACA,CAAC6b,OAAO,CAAC,IACvBpC,OAAQzZ,EAAAA,CAACA,CAAC6b,OAAO,CAAC,IAAOnK,QAAQ,GACjC2H,kBAAmBA,EAAkB/B,GAAG,CACvCtX,EAAAA,CAACA,CAACG,MAAM,CAAC,CACR,CAAC4E,EAAAA,EAAWA,CAACuD,QAAQ,CAAC,CAAEtI,EAAAA,CAACA,CAACW,MAAM,EACjC,GAEF,IAG2C+O,EAAU4H,GAAG,CACxDtX,EAAAA,CAACA,CAACG,MAAM,CAAC,CACR2b,SAAU9b,EAAAA,CAACA,CAACwZ,OAAO,EACpB,iSCzcM,IAAMuC,EAAc,CAC1B,yBACA,sBACA,+BACA,eACA,gCACA,8BACA,uBACA,sBACA,SACA,CAEGC,EAA6B,GACjC,GAAIC,EAAQC,GAAG,CAACC,wBAAwB,CAAE,CACzC,IAAMC,EAAcC,EAAAA,EAAYA,CAACjb,KAAK,CAAC6a,EAAQC,GAAG,EAClDF,EAA6BI,EAAYD,wBAAwB,CAElE,IAAMG,EAAetc,EAAAA,CAACA,CAACG,MAAM,CAAC,CAC7B6N,KAAMhO,EAAAA,CAACA,CAACW,MAAM,GAAG4b,UAAU,CAACP,GAA4BQ,QAAQ,CAAC,QACjEvY,GAAIjE,EAAAA,CAACA,CAACW,MAAM,EACb,GAEa8b,EAAazc,EAAAA,CAACA,CAACC,IAAI,CAAC8b,GAEpBW,EAASJ,EAAaxM,MAAM,CAAC,CACzC3L,KAAMnE,EAAAA,CAACA,CAAC6b,OAAO,CAAC,UAChB3X,MAAOlE,EAAAA,CAACA,CAACW,MAAM,GACfqI,WAAYhJ,EAAAA,CAACA,CAACC,IAAI,CAAC8b,GACnBY,SAAU3c,EAAAA,CAACA,CAAC4c,KAAK,CAAC,CAAC5c,EAAAA,CAACA,CAAC6b,OAAO,CAAC,MAAO7b,EAAAA,CAACA,CAAC6b,OAAO,CAAC,MAAO7b,EAAAA,CAACA,CAAC6b,OAAO,CAAC,OAAO,CACvE,GAEagB,EAAS7c,EAAAA,CAACA,CAACG,MAAM,CAAC,CAC9BgE,KAAMnE,EAAAA,CAACA,CAACC,IAAI,CAAC,CAAC,UAAW,MAAM,EAC/BwF,SAAUzF,EAAAA,CAACA,CAACK,MAAM,GAAGua,GAAG,CAAC,IAAKC,GAAG,CAAC,IACnC,GAEaiC,EAAWR,EAAaxM,MAAM,CAAC,CAC3C3L,KAAMnE,EAAAA,CAACA,CAAC6b,OAAO,CAAC,YAChBlW,QAASe,EAAAA,EAAOA,CAAC8E,KAAK,CAACvH,EAAE,CAACyN,QAAQ,GAClC5L,QAASqL,EAAAA,EAAqBA,CAAC3F,KAAK,CAAC1F,OAAO,CAAC4L,QAAQ,GACrDxN,MAAOlE,EAAAA,CAACA,CAACW,MAAM,EAChB,GAEaoc,EAAQT,EAAaxM,MAAM,CAAC,CACxC3L,KAAMnE,EAAAA,CAACA,CAAC6b,OAAO,CAAC,gBAAgBtE,EAAE,CAACvX,EAAAA,CAACA,CAAC6b,OAAO,CAAC,mBAC7C3X,MAAOlE,EAAAA,CAACA,CAACW,MAAM,EAChB,GAEaqc,EAAUhd,EAAAA,CAACA,CAACG,MAAM,CAAC,CAC/B8D,GAAIjE,EAAAA,CAACA,CAACC,IAAI,CAAC,CAAC,UAAW,oBAAqB,aAAa,EACzDiE,MAAOlE,EAAAA,CAACA,CAACW,MAAM,EAChB,GAEiCX,EAAAA,CAACA,CAAC4c,KAAK,CAAC,CAAC5c,EAAAA,CAACA,CAAC6b,OAAO,CAAC,WAAY7b,EAAAA,CAACA,CAAC6b,OAAO,CAAC,UAAU,EAE7E,IAAMoB,EAAgBjd,EAAAA,CAACA,CAACG,MAAM,CAAC,CACrC8D,GAAIjE,EAAAA,CAACA,CAACC,IAAI,CAAC,CAAC,YAAa,eAAgB,MAAO,OAAO,EACvDiE,MAAOlE,EAAAA,CAACA,CAACW,MAAM,EAChB,GAEauc,EAAMld,EAAAA,CAACA,CAACG,MAAM,CAAC,CAC3B8D,GAAIjE,EAAAA,CAACA,CAACC,IAAI,CAAC,CACV,OACA,OACA,iBACA,iBACA,iBACA,2BACA,OACA,EACDiE,MAAOlE,EAAAA,CAACA,CAACW,MAAM,EAChB,+VCzEYwc,EAsHApY,kBAtHAoY,EAAAA,GAAAA,CAAAA,EAAAA,CAAAA,CAAAA,0GAQL,IAAMC,EAAoD,CAChE,CAAEnZ,GAAE,GAAyBC,MAAO,KAAM,EAC1C,CAAED,GAAE,GAAyBC,MAAO,KAAM,EAC1C,CAAED,GAAE,GAAyBC,MAAO,KAAM,EAC1C,CAAED,GAAE,GAAyBC,MAAO,KAAM,EAC1C,CAAED,GAAE,GAAyBC,MAAO,KAAM,EAC1C,CAEYmZ,qBAAuB,CACnCvP,EACAlI,IAEA,CAAIA,MAAAA,EAAAA,KAAAA,EAAAA,EAAQnB,QAAQ,EACZ2Y,EAAS5M,MAAM,CAAC,QAAO5K,QAAAA,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,OAAAA,CAAAA,EAAAA,EAAQrB,QAAQ,GAAhBqB,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAkB0X,QAAQ,CAACnG,EAAElT,EAAE,IAAKkT,KAAAA,EAAElT,EAAE,GAEhEmZ,EAAS5M,MAAM,CAAC,QAAO1C,QAAAA,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,OAAAA,CAAAA,EAAAA,EAAOwM,cAAc,GAArBxM,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAuBwP,QAAQ,CAACnG,EAAElT,EAAE,IAAKkT,KAAAA,EAAElT,EAAE,GAA4BuM,MAAM,CAC5G,QAAO5K,QAAAA,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,OAAAA,CAAAA,EAAAA,EAAQrB,QAAQ,GAAhBqB,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAkB0X,QAAQ,CAACnG,EAAElT,EAAE,IAAKkT,KAAAA,EAAElT,EAAE,GAIpCsZ,mBAAqB,CACjC3O,EACA4O,EACAzX,SAQmByX,EACAA,EAPnB,OACC5O,EAAK9J,IAAI,GAAK0Y,EAAY1Y,IAAI,EAC9B8J,EAAKhJ,MAAM,CAAC3B,EAAE,GAAKuZ,EAAY5X,MAAM,CAAC3B,EAAE,EACxC2K,EAAKjJ,OAAO,CAAC1B,EAAE,GAAKuZ,EAAY7X,OAAO,CAAC1B,EAAE,EACzC8B,CAAAA,GACAyX,EAAYzX,eAAe,EAC3B6I,EAAK/I,OAAO,WAAK2X,CAAAA,EAAAA,EAAYzX,eAAe,GAA3ByX,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAA6B3X,OAAO,GACrD+I,EAAK9I,OAAO,WAAK0X,CAAAA,EAAAA,EAAYzX,eAAe,GAA3ByX,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAA6B1X,OAAO,GACpD,CAACC,GAAmB6I,EAAK/I,OAAO,GAAK2X,EAAY3X,OAAO,EAAI+I,EAAK9I,OAAO,GAAK0X,EAAY1X,OAAO,CAEpG,EAEayU,EAAUva,EAAAA,EAAY,CAACmd,GAEvBnZ,EAAShE,EAAAA,EAAQ,CAAC,CAC9BiE,GAAIjE,EAAAA,EAAQ,GACZkE,MAAOlE,EAAAA,EAAQ,GACfmE,KAAMnE,EAAAA,EAAM,CAAC,CAAC,UAAW,UAAW,UAAW,UAAW,UAAU,EACpEoE,SAAUpE,EAAAA,EAAM,CAAC,CAAC,MAAO,OAAO,EAChCqE,cAAerE,EAAAA,EAAQ,GAAG4a,GAAG,CAAC,GAC9BtW,wBAAyBtE,EAAAA,EAAQ,GACjCuE,SAAUgW,EAAQha,KAAK,GACvBiE,WAAYxE,EAAAA,EAAQ,GAAG4a,GAAG,CAAC,GAC3BnW,SAAUzE,EAAAA,EAAS,GAAG0R,QAAQ,EAC/B,GAEM+L,EAAoBzd,EAAAA,EAAQ,CAAC,CAClC6F,QAAS0U,EACTlU,YAAarG,EAAAA,EAAQ,GACrB4F,OAAQ5B,EAAOwH,KAAK,CAACvH,EAAE,CACvBuC,eAAgBxG,EAAAA,EAAQ,EACzB,GAEa0G,EAAU1G,EAAAA,EAAQ,CAAC,CAC/BiE,GAAIjE,EAAAA,EAAQ,GACZkE,MAAOlE,EAAAA,EAAQ,GACfuH,qBAAsBvH,EAAAA,EAAQ,GAAGyM,OAAO,CAAC,KACzC9F,eAAgB3G,EAAAA,EAAQ,GAAG4a,GAAG,CAAC,GAC/B5U,QAAShG,EAAAA,EACF,CACLA,EAAAA,EAAoB,CAAC,SAAU,CAC9Byd,EAAkB3N,MAAM,CAAC,CACxBlK,OAAQ5F,EAAAA,EAAM,CAAC,CAAC,UAAW,UAAW,UAAU,EAChD0d,cAAe1d,EAAAA,EAAQ,GAAG0R,QAAQ,GAClCiM,cAAe3d,EAAAA,EAAQ,GAAG0R,QAAQ,GAClCkM,cAAe5d,EAAAA,EAAQ,GAAG0R,QAAQ,GAClCmM,cAAe7d,EAAAA,EAAQ,GAAG0R,QAAQ,GAClCoM,cAAe9d,EAAAA,EAAQ,GAAG0R,QAAQ,GAClCqM,cAAe/d,EAAAA,EAAQ,GAAG0R,QAAQ,GAClCsM,cAAehe,EAAAA,EAAQ,GAAG0R,QAAQ,GAClCuM,cAAeje,EAAAA,EAAQ,GAAG0R,QAAQ,GAClCwM,UAAWle,EAAAA,EAAQ,GAAG0R,QAAQ,GAC9ByM,UAAWne,EAAAA,EAAQ,GAAG0R,QAAQ,GAC9B0M,UAAWpe,EAAAA,EAAQ,GAAG0R,QAAQ,GAC9B2M,UAAWre,EAAAA,EAAQ,GAAG0R,QAAQ,GAC9B4M,UAAWte,EAAAA,EAAQ,GAAG0R,QAAQ,GAC9B6M,UAAWve,EAAAA,EAAQ,GAAG0R,QAAQ,GAC9B8M,UAAWxe,EAAAA,EAAQ,GAAG0R,QAAQ,GAC9B+M,iBAAkBze,EAAAA,EAAQ,GAAG0R,QAAQ,GACrCgN,mBAAoB1e,EAAAA,EAAQ,GAAG0R,QAAQ,GACvC1K,kBAAmBhH,EAAAA,EAAQ,GAAG0R,QAAQ,GACtCzK,kBAAmBjH,EAAAA,EAAQ,GAAG0R,QAAQ,GACtC9K,WAAY5G,EAAAA,EAAQ,GAAG0R,QAAQ,GAC/B7K,YAAa7G,EAAAA,EAAQ,GAAG0R,QAAQ,GAChC5K,YAAa9G,EAAAA,EAAQ,GAAG0R,QAAQ,GAChC3K,aAAc/G,EAAAA,EAAQ,GAAG0R,QAAQ,GACjCrK,qBAAsBrH,EAAAA,EAAS,GAAG0R,QAAQ,GAC1CxK,gBAAiBlH,EAAAA,EAAQ,GAAG0R,QAAQ,GACpCvK,gBAAiBnH,EAAAA,EAAQ,GAAG0R,QAAQ,GACpCtK,gBAAiBpH,EAAAA,EAAQ,GAAG0R,QAAQ,GACpCpK,WAAYtH,EAAAA,EAAQ,GAAG0R,QAAQ,EAChC,GACA+L,EAAkB3N,MAAM,CAAC,CACxBlK,OAAQ5F,EAAAA,EAAM,CAAC,CAAC,UAAU,EAC1B4G,WAAY5G,EAAAA,EAAQ,GAAG0R,QAAQ,GAC/B7K,YAAa7G,EAAAA,EAAQ,GAAG0R,QAAQ,GAChC5K,YAAa9G,EAAAA,EAAQ,GAAG0R,QAAQ,GAChC3K,aAAc/G,EAAAA,EAAQ,GAAG0R,QAAQ,EAClC,GACA,GAEDA,QAAQ,GACRiN,QAAQ,CAAC,wGACZ,IAEY5Z,EAAAA,GAAAA,CAAAA,EAAAA,CAAAA,CAAAA,mKAeL,IAAMkM,EAAkBjR,EAAAA,EAAQ,CAAC,CACvC8E,KAAM9E,EAAAA,EAAY,CAAC+E,GAAa4Z,QAAQ,CAAC,oBACzCC,gBAAiB5e,EAAAA,EAAQ,GAAG0R,QAAQ,GAAGiN,QAAQ,CAAC,2BAChD/Y,OAAQ5B,EAAO2a,QAAQ,CAAC,oCACxB9Y,QAAS0U,EAAQ9N,OAAO,KAAwBkS,QAAQ,CAAC,iCACzDhZ,QAASe,EAAQiY,QAAQ,CAAC,wCAC1BE,UAAW7e,EAAAA,EAAQ,GAAG0R,QAAQ,GAAGiN,QAAQ,CAAC,mDAC1C7Y,QAAS9F,EAAAA,EAAQ,GAAG4a,GAAG,CAAC,GACxBkE,iBAAkB9e,EAAAA,EAAQ,GAAG4a,GAAG,CAAC,GAAG+D,QAAQ,CAAC,wDAC7CI,UAAW/e,EAAAA,EACH,GACNgf,KAAK,CAAC,aACNtN,QAAQ,GACRiN,QAAQ,CAAC,mCACXM,YAAajf,EAAAA,EAAQ,GAAG4a,GAAG,CAAC,GAAGnO,OAAO,CAAC,IAAIkS,QAAQ,CAAC,oCACpDO,cAAelf,EAAAA,EACP,GACN4a,GAAG,CAAC,IACJC,GAAG,CAAC,KACJpO,OAAO,CAAC,IACRkS,QAAQ,CACR,uHAEH,GAEaxN,EAAwBF,EAAgBnB,MAAM,CAAC,CAC3D+O,UAAW7e,EAAAA,EAAW,GACtB+F,gBAAiB/F,EAAAA,EACT,CAAC,CACP8F,QAAS9F,EAAAA,EAAQ,GAAG4a,GAAG,CAAC,GACxB/U,QAAS0U,EAAQ9N,OAAO,KAAwBkS,QAAQ,CAAC,qDACzDM,YAAajf,EAAAA,EAAQ,GAAG4a,GAAG,CAAC,GAAGlJ,QAAQ,GAAGiN,QAAQ,CAAC,uDACpD,GACCjN,QAAQ,EACX,GAEayN,EAAkChO,EAAsBrB,MAAM,CAAC,CAC3ElK,OAAQ5B,EAAOwH,KAAK,CAACvH,EAAE,CACvB0B,QAASe,EAAQ8E,KAAK,CAACvH,EAAE,GAGbmb,EAAcnO,EAMzBnE,MAAM,CAAC,GAAUnB,EAAK7F,OAAO,EAAI6F,EAAK/F,MAAM,CAACpB,UAAU,CAAE,uDAE9C0H,EAAwB+E,EAAgBnB,MAAM,CAAC,CAC3DlK,OAAQ5B,EAAOwH,KAAK,CAACvH,EAAE,CACvB0B,QAASe,EAAQ8E,KAAK,CAACvH,EAAE,GAGJjE,EAAAA,EAAQ,CAAC,CAC9B4a,IAAK5a,EAAAA,EAAQ,GACb6a,IAAK7a,EAAAA,EAAQ,GACbqf,QAASrf,EAAAA,EAAQ,EAClB,wPCpLO,IAAM4N,EAAc5N,EAAAA,CAACA,CAAC4c,KAAK,CAAC,CAAC0C,EAAAA,EAAqBA,CAAEtf,EAAAA,CAACA,CAACK,MAAM,GAAIL,EAAAA,CAACA,CAACW,MAAM,GAAG,EAAEqM,QAAQ,GAAG0E,QAAQ,GAEjG6N,EAA2Bvf,EAAAA,CAACA,CAChCG,MAAM,CAAC,CACPiL,QAASoU,EAAAA,EAAiBA,CAC1Bta,aAAcqJ,EAAAA,EAAKA,CACnB+B,UAAWtQ,EAAAA,CAACA,CAACO,KAAK,CAAC+O,EAAAA,EAAqBA,EAAEsL,GAAG,CAAC,GAAGC,GAAG,CAAC,GACrD4E,KAAM7R,EACNtI,cAAe4X,EAAAA,EAAGA,CAClBnX,gBAAiB/F,EAAAA,CAACA,CAACwZ,OAAO,GAAG/M,OAAO,CAAC,IACrCiT,YAAa1f,EAAAA,CAACA,CAACwZ,OAAO,GAAG/M,OAAO,CAAC,IACjCkT,kBAAmB3f,EAAAA,CAACA,CAACwZ,OAAO,GAAG/M,OAAO,CAAC,IACvCJ,MAAOrM,EAAAA,CAACA,CAACO,KAAK,CAAC6e,EAAAA,EAAWA,CAC3B,GACCQ,MAAM,GACN1I,SAAS,CAAC,CAACvL,EAAMkU,KACjB,GAAIlU,MAAAA,EAAK8T,IAAI,CACZ9T,EAAK8T,IAAI,CAAG9T,EAAKP,OAAO,CAAC0U,KAAK,CAAC9V,OAAOC,IAAI,CAAC0B,EAAKP,OAAO,CAAC0U,KAAK,CAAC,CAAC,EAAE,CAAC,MAC5D,GAAI,iBAAOnU,EAAK8T,IAAI,EAAiB,iBAAO9T,EAAK8T,IAAI,CAAe,CAC1E,IAAMA,EAAO9T,EAAKP,OAAO,CAAC0U,KAAK,CAACnU,EAAK8T,IAAI,CAACM,QAAQ,GAAG,CACrD,GAAIN,MAAAA,EAKH,OAJAI,EAAIG,QAAQ,CAAC,CACZC,KAAMjgB,EAAAA,CAACA,CAACkgB,YAAY,CAACC,MAAM,CAC3BtH,QAAS,QAA+ClN,MAAAA,CAAvCA,EAAK8T,IAAI,CAAC,+BAA+C9c,MAAA,CAAlBgJ,EAAKP,OAAO,CAACuO,IAAI,CAAC,UAC3E,GACO3Z,EAAAA,CAACA,CAACogB,KAAK,CAEfzU,EAAK8T,IAAI,CAAGA,CACb,CACA,OAAO9T,CACR,GAEY0U,EAAuBd,EAAyBe,WAAW,CAAC,CAACC,EAAKV,KAE9E,IAAMW,EAAiBD,EAAIjQ,SAAS,CAAC5B,GAAG,CAAC,GAAO+R,EAAErb,SAAS,EAAEoL,MAAM,CAACC,SAASiQ,MAAM,CAC/EF,EAAiBD,EAAIrb,YAAY,CAACkV,WAAW,CAAGmG,EAAInV,OAAO,CAACuV,mBAAmB,EAClFd,EAAIG,QAAQ,CAAC,CACZC,KAAMjgB,EAAAA,CAACA,CAACkgB,YAAY,CAACU,SAAS,CAC9B/H,QAAS,4FAA6GlW,MAAA,CAAjB4d,EAAInV,OAAO,CAACuO,IAAI,CAAC,WACtHkH,QAASN,EAAInV,OAAO,CAACuV,mBAAmB,CACxCG,UAAW,GACX3c,KAAM,QACP,EAEF,GAAGmc,WAAW,CAAC,CAACC,EAAKV,KAEpB,IAAMvP,EAAYiQ,EAAIjQ,SAAS,CAAC5B,GAAG,CAAC,GAAO,IAAIlH,EAAAA,CAAcA,CAACiZ,IACxDM,EAASR,EAAIlU,KAAK,CACtBqC,GAAG,CAAC,CAACpC,EAAGiE,KACR,IAAMtF,EAAWqF,EAAUhK,IAAI,CAAC,GAAQ4J,EAAG9H,eAAe,KAAOkE,EAAExH,IAAI,EACvE,GAAIwH,MAAAA,EAAEuS,SAAS,CAAU,CACxB,IAAMmC,EAAYT,EAAIlU,KAAK,CAACmE,MAAM,CAAC,IAClC,IAAMyQ,EAAsB3Q,EAAUhK,IAAI,CAAC,GAAQ4J,EAAG9H,eAAe,KAAO8Y,EAAGpc,IAAI,SACnF,EAAOA,IAAI,GAAKwH,EAAExH,IAAI,EAAImG,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAUxD,YAAY,KAAM,MAGlDwZ,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAqBxZ,YAAY,GAAI,MAIlCyZ,EAAGrC,SAAS,GAAKvS,EAAEuS,SAAS,GAE9BsC,SAAW,GAChBrc,aAAAA,EACG,cACAA,IAASC,EAAAA,EAAWA,CAACsD,SAAS,CAC7B,cACA,WAAavD,EAAKsc,iBAAiB,GAiBxC,OAhBIJ,IAAAA,EAAUN,MAAM,CACnBb,EAAIG,QAAQ,CAAC,CACZC,KAAMjgB,EAAAA,CAACA,CAACkgB,YAAY,CAACC,MAAM,CAC3BtH,QAAS,cAAkDsI,MAAAA,CAApC7U,EAAEuS,SAAS,CAAC,0BAAoDlc,MAAA,CAA5Bwe,SAASH,CAAS,CAAC,EAAE,CAAClc,IAAI,GACrFkJ,KAAM,CAAC,QAASuC,EAAG,YAAY,GAEtByQ,EAAUN,MAAM,CAAG,GAC7Bb,EAAIG,QAAQ,CAAC,CACZC,KAAMjgB,EAAAA,CAACA,CAACkgB,YAAY,CAACC,MAAM,CAC3BtH,QAAS,cAAkDmI,MAAAA,CAApC1U,EAAEuS,SAAS,CAAC,0BAGfsC,MAAAA,CAHuCH,EACzD/a,KAAK,CAAC,EAAG,IACTyI,GAAG,CAAC,GAAQyS,SAASE,EAAGvc,IAAI,GAC5Bwc,IAAI,CAAC,MAAM,SAAsD3e,MAAA,CAA/Cwe,SAASH,CAAS,CAACA,EAAUN,MAAM,CAAG,EAAE,CAAC5b,IAAI,GACjEkJ,KAAM,CAAC,QAASuC,EAAG,YAAY,GAG1ByQ,EAAUN,MAAM,CAAG,EAAI,CAAE9R,KAAMtC,EAAG0U,UAAAA,CAAU,EAAI,CACxD,CACA,OAAO,IACR,GACCxQ,MAAM,CAACC,QACLsQ,CAAAA,EAAOL,MAAM,CAAG,GACnBb,EAAIG,QAAQ,CAAC,CACZC,KAAMjgB,EAAAA,CAACA,CAACkgB,YAAY,CAACC,MAAM,CAC3BtH,QAAS,+BACV,EAEF,GAEa0I,EAAiChC,EAAyBzG,SAAS,GAC9EhJ,MAAM,CAAC,CACP1E,QAASoU,EAAAA,EAAiBA,CAAChU,KAAK,CAACvH,EAAE,CACnCiB,aAAcgU,EAAAA,EAAOA,CACrB5I,UAAWtQ,EAAAA,CAACA,CAACO,KAAK,CAACihB,EAAAA,EAA+BA,EAAE5G,GAAG,CAAC,GAAGC,GAAG,CAAC,GAC/DvV,cAAe4X,EAAAA,EAAGA,CAAC1R,KAAK,CAACvH,EAAE,CAC3BoI,MAAOrM,EAAAA,CAACA,CAACO,KAAK,CAAC2L,EAAAA,EAAqBA,CACrC,GACC0T,MAAM,GAEK6B,EAA8BlC,EAAyBzG,SAAS,GAC3EhJ,MAAM,CAAC,CACPQ,UAAWtQ,EAAAA,CAACA,CAACO,KAAK,CAACgK,EAAAA,EAA4BA,EAAEqQ,GAAG,CAAC,GAAGC,GAAG,CAAC,EAC7D,GACC+E,MAAM,GACN5G,OAAO,GACPtH,QAAQ,GAEGgQ,EAAwCH,EAA+BzR,MAAM,CAAC,CAC1FQ,UAAWtQ,EAAAA,CAACA,CAACO,KAAK,CAACohB,EAAAA,EAAsCA,EAAE/G,GAAG,CAAC,GAAGC,GAAG,CAAC,EACvE,GACE+E,MAAM,GACN5G,OAAO,4NC5HT,IAAIgD,EAA6B,GACjC,GAAIC,EAAQC,GAAG,CAACC,wBAAwB,CAAE,CACzC,IAAMC,EAAcC,EAAAA,EAAYA,CAACjb,KAAK,CAAC6a,EAAQC,GAAG,EAClDF,EAA6BhO,IAAAA,IAAS,CAACoO,EAAYD,wBAAwB,CAAE,WAC9E,CAEA,IAAMyF,EAAc5hB,EAAAA,CAACA,CACnBG,MAAM,CAAC,CACP0hB,SAAU7hB,EAAAA,CAACA,CAACK,MAAM,GAAGua,GAAG,CAAC,GAAG+D,QAAQ,CAAC,qCACrCmD,MAAO9hB,EAAAA,CAACA,CAACK,MAAM,GAAGua,GAAG,CAAC,GAAG+D,QAAQ,CAAC,yCAClCoD,WAAY/hB,EAAAA,CAACA,CAACK,MAAM,GAAGua,GAAG,CAAC,GAAG+D,QAAQ,CAAC,uCACvCqD,QAAShiB,EAAAA,CAACA,CAACK,MAAM,GAAGua,GAAG,CAAC,GAAG+D,QAAQ,CAAC,2CACpCsD,uBAAwBjiB,EAAAA,CAACA,CAACK,MAAM,GAAGua,GAAG,CAAC,GAAGnO,OAAO,CAAC,GAAGkS,QAAQ,CAAC,mDAC9DuD,gBAAiBliB,EAAAA,CAACA,CAACK,MAAM,GAAGua,GAAG,CAAC,GAAGnO,OAAO,CAAC,KAAKkS,QAAQ,CAAC,4CACzDwD,aAAcniB,EAAAA,CAACA,CAACK,MAAM,GAAGua,GAAG,CAAC,GAAGnO,OAAO,CAAC,KAAMkS,QAAQ,CAAC,2CACxD,GACCiB,MAAM,GAEKN,EAAwBtf,EAAAA,CAACA,CACpCG,MAAM,CAAC,CACP6E,EAAGhF,EAAAA,CAACA,CAACK,MAAM,GAAGua,GAAG,CAAC,GAAG+D,QAAQ,CAAC,yBAC9BnI,EAAGxW,EAAAA,CAACA,CAACK,MAAM,GAAGua,GAAG,CAAC,GAAG+D,QAAQ,CAAC,yBAC9B3e,EAAGA,EAAAA,CAACA,CAACK,MAAM,GAAGua,GAAG,CAAC,GAAG+D,QAAQ,CAAC,wBAC/B,GACCA,QAAQ,CAAC,iCAEEa,EAAoBxf,EAAAA,CAACA,CAChCG,MAAM,CAAC,CACP8D,GAAIjE,EAAAA,CAACA,CAACW,MAAM,GACZgZ,KAAM3Z,EAAAA,CAACA,CAACW,MAAM,GAAGge,QAAQ,CAAC,2BAC1BxW,YAAanI,EAAAA,CAACA,CAACW,MAAM,GAAGge,QAAQ,CAAC,gCACjC/E,aAAc5Z,EAAAA,CAACA,CAACW,MAAM,GAAGge,QAAQ,CAAC,gDAClCzE,kBAAmBla,EAAAA,CAACA,CAACW,MAAM,GAAGge,QAAQ,CAAC,oDACvCyD,MAAOpiB,EAAAA,CAACA,CAACW,MAAM,GAAGge,QAAQ,CAAC,mCAC3BmB,MAAO9f,EAAAA,CAACA,CAACU,MAAM,CAACV,EAAAA,CAACA,CAACW,MAAM,GAAI2e,GAAuBX,QAAQ,CAAC,iCAC5D0D,SAAUriB,EAAAA,CAACA,CAACW,MAAM,GAAGge,QAAQ,CAAC,yCAC9B3Q,KAAMhO,EAAAA,CAACA,CAACW,MAAM,GAAG4b,UAAU,CAACP,GAC5B2E,oBAAqB3gB,EAAAA,CAACA,CAACK,MAAM,GAAGse,QAAQ,CAAC,+CACzC2D,WAAYtiB,EAAAA,CAACA,CACX4c,KAAK,CAAC,CAAC5c,EAAAA,CAACA,CAAC6b,OAAO,CAAC,aAAc7b,EAAAA,CAACA,CAAC6b,OAAO,CAAC,UAAW7b,EAAAA,CAACA,CAAC6b,OAAO,CAAC,iBAAkB7b,EAAAA,CAACA,CAAC6b,OAAO,CAAC,sBAAsB,EAChHnK,QAAQ,GACV6Q,UAAWviB,EAAAA,CAACA,CACVG,MAAM,CAAC,CACP6E,EAAGhF,EAAAA,CAACA,CAACwiB,KAAK,CAAC,CAACxiB,EAAAA,CAACA,CAACK,MAAM,GAAGoM,OAAO,CAAC,GAAIzM,EAAAA,CAACA,CAACK,MAAM,GAAGoM,OAAO,CAAC,GAAG,EACzD+J,EAAGxW,EAAAA,CAACA,CAACwiB,KAAK,CAAC,CAACxiB,EAAAA,CAACA,CAACK,MAAM,GAAGoM,OAAO,CAAC,GAAIzM,EAAAA,CAACA,CAACK,MAAM,GAAGoM,OAAO,CAAC,GAAG,CAC1D,GACCkS,QAAQ,CAAC,gEACTlS,OAAO,CAAC,CAAEzH,EAAG,CAAC,EAAG,EAAE,CAAEwR,EAAG,CAAC,EAAG,EAAE,GAChCiM,YAAaziB,EAAAA,CAACA,CACZG,MAAM,CAAC,CACPuiB,MAAOd,EACPe,YAAaf,EAAYlQ,QAAQ,EAClC,GACCkO,MAAM,GACNjB,QAAQ,CAAC,iCACXvS,SAAUpM,EAAAA,CAACA,CACTG,MAAM,CAAC,CACPmQ,UAAWtQ,EAAAA,CAACA,CAACO,KAAK,CAACihB,EAAAA,EAA+BA,EAAE7C,QAAQ,CAAC,sCAC7D7Q,MAAOoL,EAAAA,EAAOA,CAACyF,QAAQ,CAAC,8EACxBtS,MAAOrM,EAAAA,CAACA,CAACO,KAAK,CAAC4e,EAAAA,CAA+BA,EAAER,QAAQ,CAAC,kCACzDrZ,cAAe4X,EAAAA,EAAGA,CAAC1R,KAAK,CAACvH,EAAE,CAACyN,QAAQ,GAAGiN,QAAQ,CAAC,0CACjD,GACCiB,MAAM,GACNjB,QAAQ,CAAC,oCACZ,GACCA,QAAQ,CAAC,gCAEEpT,EAAyCiU,EAAkB1P,MAAM,CAAC,CAC9E1D,SAAUoT,EAAkBhU,KAAK,CAACY,QAAQ,CACxC0D,MAAM,CAAC,CACPQ,UAAWtQ,EAAAA,CAACA,CAACO,KAAK,CAAC+O,EAAAA,EAAqBA,CACzC,GACCsQ,MAAM,EACT,2PC3EO,IAAM/P,EAA4B7P,EAAAA,CAACA,CACxCG,MAAM,CAAC,CACPwI,OAAQ+T,EAAAA,EAAMA,CACd1T,WAAYyT,EAAAA,EAAUA,CACtBnU,SAAUwU,EAAAA,EAAQA,CAClB5T,SAAU8T,EAAAA,EAAOA,CACjB5T,SAAU4T,EAAAA,EAAOA,CACjBlS,UAAWoS,EAAAA,EAAGA,CACdtS,QAASsS,EAAAA,EAAGA,CACZpU,OAAQ+T,EAAAA,EAAMA,CAACpQ,OAAO,CAACjH,CAAAA,EAAAA,EAAAA,CAAAA,KACvB8D,eAAgB2T,EAAAA,EAAaA,CAACvL,QAAQ,GAAG1E,QAAQ,GACjDxD,eAAgByT,EAAAA,EAAaA,CAACvL,QAAQ,GAAG1E,QAAQ,GACjD5H,UAAWsK,EAAAA,EAASA,CAAC1C,QAAQ,GAC7BtC,MAAOqS,EAAAA,EAAKA,CAACrL,QAAQ,GACrB5M,KAAM9E,EAAAA,CAACA,CAAC6b,OAAO,CAAC9W,EAAAA,EAAWA,CAACC,CAAC,EAAEuS,EAAE,CAACvX,EAAAA,CAACA,CAAC6b,OAAO,CAAC9W,EAAAA,EAAWA,CAAC6C,aAAa,GACrEO,YAAanI,EAAAA,CAACA,CAACW,MAAM,GAAG+Q,QAAQ,GAChCxC,WAAYlP,EAAAA,CAACA,CAACK,MAAM,GAAGqR,QAAQ,EAChC,GACCkO,MAAM,GAEK7P,EAAa/P,EAAAA,CAACA,CAAC4c,KAAK,CAAC,CAAC5c,EAAAA,CAACA,CAAC6b,OAAO,CAAC,GAAI7b,EAAAA,CAACA,CAAC6b,OAAO,CAAC,GAAG,EACjD+G,EAAW5iB,EAAAA,CAACA,CAAC4c,KAAK,CAAC,CAC/B5c,EAAAA,CAACA,CAAC6b,OAAO,CAAC9W,EAAAA,EAAWA,CAACC,CAAC,EACvBhF,EAAAA,CAACA,CAAC6b,OAAO,CAAC9W,EAAAA,EAAWA,CAAC6C,aAAa,EACnC5H,EAAAA,CAACA,CAAC6b,OAAO,CAAC9W,EAAAA,EAAWA,CAACuD,QAAQ,EAC9BtI,EAAAA,CAACA,CAAC6b,OAAO,CAAC9W,EAAAA,EAAWA,CAACsD,SAAS,EAC/B,EACyBrI,EAAAA,CAACA,CAAC4c,KAAK,CAAC,CAACgG,EAAU7S,EAAW,EAKjD,IAAMT,EAAwBO,EAA0B/C,MAAM,CACpE,GAAUnB,OAAAA,EAAKvG,SAAS,EAAauG,sBAAAA,EAAKzC,QAAQ,CAACjF,EAAE,CACrD,oDAEC6I,MAAM,CACN,GACCnB,OAAAA,EAAKvG,SAAS,EACd,CAAC,CAAC,iBAAkB,iBAAkB,2BAA2B,CAACkY,QAAQ,CAAC3R,EAAKb,SAAS,CAAC7G,EAAE,EAC7F,uDAEA6I,MAAM,CACN,GACCnB,OAAAA,EAAKvG,SAAS,EACd,CAAC,CAAC,iBAAkB,iBAAkB,2BAA2B,CAACkY,QAAQ,CAAC3R,EAAKf,OAAO,CAAC3G,EAAE,EAC3F,6DAGWsG,EAA+BsF,EAA0BmJ,OAAO,GAAGtH,QAAQ,GAC3E8P,EAAkC3R,EAA0BC,MAAM,CAAC,CAC/EnH,OAAQ+T,EAAAA,EAAMA,CAAClR,KAAK,CAACvH,EAAE,CACvBqE,SAAUwU,EAAAA,EAAQA,CAACtR,KAAK,CAACvH,EAAE,CAC3B+E,WAAYyT,EAAAA,EAAUA,CACtBvT,SAAU8T,EAAAA,EAAOA,CAACxR,KAAK,CAACvH,EAAE,CAC1BmF,SAAU4T,EAAAA,EAAOA,CAACxR,KAAK,CAACvH,EAAE,CAC1B6G,UAAWoS,EAAAA,EAAGA,CAAC1R,KAAK,CAACvH,EAAE,CACvB2G,QAASsS,EAAAA,EAAGA,CAAC1R,KAAK,CAACvH,EAAE,CACrBqF,eAAgB2T,EAAAA,EAAaA,CAACzR,KAAK,CAACvH,EAAE,CAACyN,QAAQ,GAAG1E,QAAQ,GAC1DxD,eAAgByT,EAAAA,EAAaA,CAACzR,KAAK,CAACvH,EAAE,CAACyN,QAAQ,GAAG1E,QAAQ,GAC1D5H,UAAW8T,EAAAA,EAAOA,CAACxH,QAAQ,GAAG1E,QAAQ,GACtCtC,MAAOqS,EAAAA,EAAKA,CAACvR,KAAK,CAACvH,EAAE,CAACyN,QAAQ,GAAG1E,QAAQ,EAC1C,GAAG4S,MAAM,GACI+B,EAAyCH,EAAgCxI,OAAO,GAAGtH,QAAQ,uFC9DjG,IAAM2K,EAAerc,EAAAA,CAACA,CAACG,MAAM,CAAC,CACpC0iB,SAAU7iB,EAAAA,CAACA,CAACC,IAAI,CAAC,CAAC,cAAe,OAAQ,aAAa,EACtDkc,yBAA0Bnc,EAAAA,CAACA,CAACW,MAAM,GAClCmiB,iBAAkB9iB,EAAAA,CAACA,CAACW,MAAM,GAC1BoiB,oBAAqB/iB,EAAAA,CAACA,CAACW,MAAM,GAC7BqiB,YAAahjB,EAAAA,CAACA,CAACW,MAAM,GACrBsiB,YAAajjB,EAAAA,CAACA,CAACW,MAAM,GACrBuiB,cAAeljB,EAAAA,CAACA,CAACW,MAAM,GACvBwiB,SAAUnjB,EAAAA,CAACA,CAACW,MAAM,GAClByiB,eAAgBpjB,EAAAA,CAACA,CAACW,MAAM,EACzB,GAO4BX,EAAAA,CAACA,CAACG,MAAM,CAAC,CACpCkjB,6BAA8BrjB,EAAAA,CAACA,CAACW,MAAM,GAAG+Q,QAAQ,EAClD","sources":["webpack://_N_E/ignored|/home/runner/work/RatOS-configurator/RatOS-configurator/src/node_modules/.pnpm/pump@3.0.0/node_modules/pump|fs","webpack://_N_E/./helpers/logger.ts","webpack://_N_E/./zods/util.tsx","webpack://_N_E/./app/_helpers/logger.ts","webpack://_N_E/./components/sync-with-moonraker.tsx","webpack://_N_E/./data/drivers.ts","webpack://_N_E/./data/fans.ts","webpack://_N_E/./data/nozzles.ts","webpack://_N_E/./data/steppers.ts","webpack://_N_E/./helpers/toolhead.ts","webpack://_N_E/./helpers/trpc.ts","webpack://_N_E/./recoil/printer.ts","webpack://_N_E/./recoil/toolhead.ts","webpack://_N_E/./utils/serialization.ts","webpack://_N_E/./zods/boards.tsx","webpack://_N_E/./zods/hardware.tsx","webpack://_N_E/./zods/motion.tsx","webpack://_N_E/./zods/printer-configuration.tsx","webpack://_N_E/./zods/printer.tsx","webpack://_N_E/./zods/toolhead.tsx","webpack://_N_E/./env/schema.mjs","webpack://_N_E/<anon>"],"sourcesContent":["/* (ignored) */","import { LoggerOptions } from 'pino';\n\nexport const globalPinoOpts: LoggerOptions = {\n\ttimestamp: true,\n};\n","import { z } from 'zod';\n\nexport const PinoLogLevel = z.enum(['trace', 'debug', 'info', 'warn', 'error', 'fatal']);\n\nexport const PinoLogEvent = z.object({\n\tts: z.number(),\n\tmessages: z.array(z.any()),\n\tbindings: z.array(z.record(z.string(), z.any())),\n\tlevel: z.object({\n\t\tlabel: PinoLogLevel,\n\t\tvalue: z.number(),\n\t}),\n});\n","import pino from 'pino';\nimport { globalPinoOpts } from '@/helpers/logger';\nimport { trpcClient } from '@/helpers/trpc';\nimport { PinoLogEvent } from '@/zods/util';\nimport { write } from 'pino-pretty-browser';\n\nconst send = async function (level: pino.Level, logEvent: pino.LogEvent) {\n\ttrpcClient.clientLog.mutate({ level, logEvent: PinoLogEvent.parse(logEvent) });\n};\n\nlet logger: pino.Logger | null = null;\nexport const getLogger = () => {\n\tif (logger != null) {\n\t\treturn logger;\n\t}\n\tlogger = pino({\n\t\t...globalPinoOpts,\n\t\tbrowser: {\n\t\t\tasObject: true,\n\t\t\tserialize: true,\n\t\t\ttransmit: {\n\t\t\t\tsend,\n\t\t\t},\n\t\t\twrite: write,\n\t\t},\n\t});\n\treturn logger;\n};\n","'use client';\n\nimport React, { useCallback, useEffect } from 'react';\nimport { useMoonraker } from '@/moonraker/hooks';\nimport { ReadItem, RecoilSync } from 'recoil-sync';\nimport { AtomEffect, DefaultValue } from 'recoil';\nimport { getLogger } from '@/app/_helpers/logger';\n\nconst moonrakerSyncEventEmitter = new EventTarget();\n\nexport const DispatchSaveAtomEvent = (itemKey: string, value: unknown) => {\n\tmoonrakerSyncEventEmitter.dispatchEvent(\n\t\tnew CustomEvent('saveAtom', {\n\t\t\tdetail: {\n\t\t\t\titemKey,\n\t\t\t\tvalue,\n\t\t\t},\n\t\t}) satisfies SaveAtomEvent,\n\t);\n};\n\nexport const moonrakerWriteEffect = <T extends any = unknown>(): AtomEffect<T> => {\n\treturn (params) => {\n\t\tparams.onSet((newValue) => {\n\t\t\tgetLogger().debug(\n\t\t\t\t{\n\t\t\t\t\tkey: params.node.key,\n\t\t\t\t\tvalue: newValue,\n\t\t\t\t},\n\t\t\t\t`RatOS Atom Sync Effect: new value was saved to moonraker \"${params.trigger}\"`,\n\t\t\t);\n\t\t\tDispatchSaveAtomEvent(params.node.key, newValue == null ? 'null' : newValue); // Moonraker doesn't save null values..\n\t\t});\n\t};\n};\n\ntype SaveAtomEvent = CustomEvent<{ itemKey: string; value: unknown }>;\n\nexport const SyncWithMoonraker: React.FC<React.PropsWithChildren> = ({ children }) => {\n\tconst moonraker = useMoonraker();\n\tconst read: ReadItem = useCallback(\n\t\tasync (itemKey) => {\n\t\t\tconst value = await moonraker.getItem('RatOS', itemKey as '__recoil');\n\t\t\treturn value != null && value != 'null' ? value : new DefaultValue();\n\t\t},\n\t\t[moonraker],\n\t);\n\n\tconst saveAtom = useCallback(\n\t\tasync (event: Event) => {\n\t\t\tconst { itemKey, value } = (event as SaveAtomEvent).detail;\n\t\t\tawait moonraker.saveItem('RatOS', itemKey as '__recoil', value);\n\t\t},\n\t\t[moonraker],\n\t);\n\n\tuseEffect(() => {\n\t\tmoonrakerSyncEventEmitter.addEventListener('saveAtom', saveAtom);\n\t\treturn () => {\n\t\t\tmoonrakerSyncEventEmitter.removeEventListener('saveAtom', saveAtom);\n\t\t};\n\t}, [saveAtom]);\n\treturn <RecoilSync read={read}>{children}</RecoilSync>;\n};\n","import { z } from 'zod';\nimport { Driver } from '@/zods/motion';\n\nexport const Drivers = z.array(Driver).parse([\n\t{\n\t\tid: 'LDO-TMC2209',\n\t\ttitle: 'TMC2209',\n\t\ttype: 'TMC2209',\n\t\tprotocol: 'UART',\n\t\tsenseResistor: 0.11,\n\t\tcoolingCurrentThreshold: 1.1,\n\t\tvoltages: [24],\n\t\tmaxCurrent: 2.0,\n\t},\n\t{\n\t\tid: 'BTT-TMC2209-13',\n\t\ttitle: 'BTT TMC2209 v1.3',\n\t\ttype: 'TMC2209',\n\t\tprotocol: 'UART',\n\t\tsenseResistor: 0.11,\n\t\tcoolingCurrentThreshold: 1.1,\n\t\tvoltages: [24],\n\t\tmaxCurrent: 2.0,\n\t},\n\t{\n\t\tid: 'BTT-TMC2226-10',\n\t\ttitle: 'BTT TMC2226 v1.0',\n\t\ttype: 'TMC2209',\n\t\tprotocol: 'UART',\n\t\tsenseResistor: 0.11,\n\t\tcoolingCurrentThreshold: 1.1,\n\t\tvoltages: [24],\n\t\tmaxCurrent: 2.0,\n\t},\n\t{\n\t\tid: 'BTT-TMC5160-PRO-11',\n\t\ttitle: 'BTT TMC5160(T) Pro v1.1',\n\t\ttype: 'TMC5160',\n\t\tprotocol: 'SPI',\n\t\tsenseResistor: 0.075,\n\t\tvoltages: [24, 36, 48, 56],\n\t\tmaxCurrent: 3,\n\t\tcoolingCurrentThreshold: 1.5,\n\t},\n\t{\n\t\tid: 'BTT-TMC5160T-PLUS-10',\n\t\ttitle: 'BTT TMC5160T Plus v1.0',\n\t\ttype: 'TMC5160',\n\t\tprotocol: 'SPI',\n\t\tsenseResistor: 0.022,\n\t\tvoltages: [24, 36, 48, 56, 60],\n\t\tmaxCurrent: 10.6,\n\t\tcoolingCurrentThreshold: 3,\n\t\texternal: true,\n\t},\n\t{\n\t\tid: 'BTT-EZ2209',\n\t\ttitle: 'BTT EZ2209',\n\t\ttype: 'TMC2209',\n\t\tprotocol: 'UART',\n\t\tsenseResistor: 0.11,\n\t\tcoolingCurrentThreshold: 1.3,\n\t\tvoltages: [24],\n\t\tmaxCurrent: 2.0,\n\t},\n\t{\n\t\tid: 'BTT-EZ2226',\n\t\ttitle: 'BTT EZ2226',\n\t\ttype: 'TMC2209',\n\t\tprotocol: 'UART',\n\t\tsenseResistor: 0.11,\n\t\tcoolingCurrentThreshold: 1.3,\n\t\tvoltages: [24],\n\t\tmaxCurrent: 2.0,\n\t},\n\t{\n\t\tid: 'BTT-EZ2130',\n\t\ttitle: 'BTT EZ2130',\n\t\ttype: 'TMC2130',\n\t\tprotocol: 'SPI',\n\t\tsenseResistor: 0.11,\n\t\tcoolingCurrentThreshold: 0.9,\n\t\tvoltages: [24],\n\t\tmaxCurrent: 2.0,\n\t},\n\t{\n\t\tid: 'BTT-EZ5160-PRO',\n\t\ttitle: 'BTT EZ5160 Pro',\n\t\ttype: 'TMC5160',\n\t\tprotocol: 'SPI',\n\t\tsenseResistor: 0.075,\n\t\tcoolingCurrentThreshold: 1.6,\n\t\tvoltages: [24, 36, 48],\n\t\tmaxCurrent: 2.5,\n\t},\n\t{\n\t\tid: 'BTT-EZ5160-RGB',\n\t\ttitle: 'BTT EZ5160 RGB',\n\t\ttype: 'TMC5160',\n\t\tprotocol: 'SPI',\n\t\tsenseResistor: 0.05,\n\t\tcoolingCurrentThreshold: 3,\n\t\tvoltages: [24, 48, 36, 56],\n\t\tmaxCurrent: 4.7,\n\t},\n\t{\n\t\tid: 'MELLOW-FLY-HV-TMC5160-PRO-12',\n\t\ttitle: 'Mellow FLY HV TMC5160 Pro v1.2',\n\t\ttype: 'TMC5160',\n\t\tprotocol: 'SPI',\n\t\tsenseResistor: 0.033,\n\t\tcoolingCurrentThreshold: 3,\n\t\tvoltages: [24, 36, 48],\n\t\tmaxCurrent: 4.25,\n\t\texternal: true,\n\t},\n\t{\n\t\tid: 'MELLOW-FLY-TMC2209',\n\t\ttitle: 'Mellow FLY TMC2209',\n\t\ttype: 'TMC2209',\n\t\tprotocol: 'UART',\n\t\tsenseResistor: 0.11,\n\t\tcoolingCurrentThreshold: 1.1,\n\t\tvoltages: [24],\n\t\tmaxCurrent: 2.0,\n\t},\n\t{\n\t\tid: 'PRUSA-EINSY-RAMBO-TMC2130',\n\t\ttitle: 'Prusa Einsy Rambo TMC2130',\n\t\ttype: 'TMC2130',\n\t\tprotocol: 'SPI',\n\t\tsenseResistor: 0.22,\n\t\tcoolingCurrentThreshold: 0.9,\n\t\tvoltages: [24],\n\t\tmaxCurrent: 2.0,\n\t},\n\t{\n\t\tid: 'PRUSA-BUDDY-TMC2209',\n\t\ttitle: 'Prusa Buddy TMC2209',\n\t\ttype: 'TMC2209',\n\t\tprotocol: 'UART',\n\t\tsenseResistor: 0.11,\n\t\tcoolingCurrentThreshold: 1.1,\n\t\tvoltages: [24],\n\t\tmaxCurrent: 2.0,\n\t},\n] satisfies z.input<typeof Driver>[]);\n","import { z } from 'zod';\nimport { Fan } from '@/zods/hardware';\nimport { PrinterAxis } from '@/zods/motion';\nimport type { PartialPrinterConfiguration } from '@/zods/printer-configuration';\nimport type { PartialToolheadConfiguration } from '@/zods/toolhead';\n\nexport const partFanOptions = (\n\tconfig?: PartialPrinterConfiguration | null,\n\ttoolheadConfig?: (PartialToolheadConfiguration & { axis: null | PrinterAxis }) | null,\n): z.infer<typeof Fan>[] => {\n\tconst fans: z.infer<typeof Fan>[] = [];\n\tif (toolheadConfig == null || toolheadConfig?.axis === PrinterAxis.x || toolheadConfig?.axis === null) {\n\t\tfans.push({ id: '2pin' as const, title: '2-pin fan' });\n\t\tfans.push({ id: '4pin' as const, title: '4-pin fan' });\n\t}\n\tif (config?.controlboard?.fourPinFanConnectorCount != null && config.controlboard.fourPinFanConnectorCount > 0) {\n\t\tfans.push({ id: '4pin-dedicated' as const, title: '4-pin fan (dedicated 4-pin header)' });\n\t}\n\tif (toolheadConfig?.toolboard != null) {\n\t\tfans.push({ id: '2pin-toolboard' as const, title: '2-pin toolboard fan' });\n\t\tfans.push({ id: '4pin-toolboard' as const, title: '4-pin toolboard fan' });\n\t\tif (\n\t\t\ttoolheadConfig?.toolboard.fourPinFanConnectorCount != null &&\n\t\t\ttoolheadConfig.toolboard.fourPinFanConnectorCount > 0\n\t\t) {\n\t\t\tfans.push({ id: '4pin-dedicated-toolboard' as const, title: '4-pin fan (dedicated 4-pin header on toolboard)' });\n\t\t}\n\t}\n\treturn fans;\n};\n\nexport const hotendFanOptions = (\n\tconfig?: z.infer<typeof PartialPrinterConfiguration> | null,\n\ttoolheadConfig?: (PartialToolheadConfiguration & { axis: null | PrinterAxis }) | null,\n): z.infer<typeof Fan>[] => {\n\tconst fans: z.infer<typeof Fan>[] = [];\n\tif (toolheadConfig == null || toolheadConfig?.axis === PrinterAxis.x) {\n\t\tfans.push({ id: '2pin' as const, title: '2-pin fan' });\n\t\tfans.push({ id: '4pin' as const, title: '4-pin fan' });\n\t}\n\tif (\n\t\t(config?.controlboard?.fourPinFanConnectorCount != null && config.controlboard.fourPinFanConnectorCount > 2) ||\n\t\t(config?.controlboard?.fourPinFanConnectorCount != null &&\n\t\t\tconfig.controlboard.fourPinFanConnectorCount > 1 &&\n\t\t\tconfig.controllerFan?.id !== '4pin-dedicated')\n\t) {\n\t\tfans.push({ id: '4pin-dedicated' as const, title: '4-pin fan (dedicated 4-pin header)' });\n\t}\n\tif (toolheadConfig?.toolboard != null) {\n\t\tfans.push({ id: '2pin-toolboard' as const, title: '2-pin toolboard fan' });\n\t\tfans.push({ id: '4pin-toolboard' as const, title: '4-pin toolboard fan' });\n\t\tif (\n\t\t\ttoolheadConfig?.toolboard.fourPinFanConnectorCount != null &&\n\t\t\ttoolheadConfig.toolboard.fourPinFanConnectorCount > 0\n\t\t) {\n\t\t\tfans.push({ id: '4pin-dedicated-toolboard' as const, title: '4-pin fan (dedicated 4-pin header on toolboard)' });\n\t\t}\n\t}\n\treturn fans;\n};\n\nexport const controllerFanOptions = (\n\tconfig?: z.infer<typeof PartialPrinterConfiguration> | null,\n\ttoolheadConfigs?: PartialToolheadConfiguration[] | null,\n): z.infer<typeof Fan>[] => {\n\tconst fans: z.infer<typeof Fan>[] = [\n\t\t{ id: '2pin' as const, title: '2-pin fan' },\n\t\t{ id: '4pin' as const, title: '4-pin fan' },\n\t];\n\tif (\n\t\t(config?.controlboard?.fourPinFanConnectorCount != null && config.controlboard.fourPinFanConnectorCount > 2) ||\n\t\t(config?.controlboard?.fourPinFanConnectorCount != null &&\n\t\t\tconfig.controlboard.fourPinFanConnectorCount > 1 &&\n\t\t\ttoolheadConfigs?.some((th) => th?.hotendFan?.id !== '4pin-dedicated'))\n\t) {\n\t\tfans.push({ id: '4pin-dedicated' as const, title: '4-pin fan (dedicated 4-pin header)' });\n\t}\n\tfans.push({ id: 'none', title: 'No fan' });\n\treturn fans;\n};\n\nexport const defaultControllerFan = { id: '2pin' as const, title: '2-pin fan' };\n","import { z } from 'zod';\nimport { Nozzle } from '@/zods/hardware';\n\nexport const getDefaultNozzle = () => {\n\treturn { diameter: 0.4, type: 'Regular' } satisfies z.infer<typeof Nozzle>;\n};\n","import { z } from 'zod';\nimport { Drivers } from '@/data/drivers';\nimport { Stepper, StepperVoltage } from '@/zods/motion';\n\nexport const findPreset = (\n\tstepper: (typeof Steppers)[number],\n\tdriver: (typeof Drivers)[number],\n\tvoltage: StepperVoltage,\n\tcurrent?: number,\n\tperformanceMode?: boolean | null,\n) => {\n\treturn stepper.presets\n\t\t?.slice()\n\t\t.sort((a, b) => (performanceMode ? b.run_current - a.run_current : a.run_current - b.run_current))\n\t\t.find(\n\t\t\t(p) =>\n\t\t\t\tp.driver === driver.type &&\n\t\t\t\tp.voltage === voltage &&\n\t\t\t\tp.sense_resistor === driver.senseResistor &&\n\t\t\t\t(current == null || p.run_current === current),\n\t\t);\n};\n\nexport const Steppers = z.array(Stepper).parse([\n\t{\n\t\tid: 'generic',\n\t\ttitle: 'Generic Stepper',\n\t\tmaxPeakCurrent: 2.8,\n\t},\n\t{\n\t\tid: 'BONDTECH-42H025H-0704-002',\n\t\ttitle: 'Bondtech LGX Stepper',\n\t\tmaxPeakCurrent: 0.7,\n\t},\n\t{\n\t\tid: 'LDO-42STH48-2504AC',\n\t\ttitle: 'LDO-42STH48-2504AC',\n\t\tmaxPeakCurrent: 2.5,\n\t\tpresets: [\n\t\t\t{\n\t\t\t\trun_current: 1.1,\n\t\t\t\tvoltage: 24,\n\t\t\t\tdriver: 'TMC2209',\n\t\t\t\tsense_resistor: 0.11,\n\t\t\t\tdriver_TBL: 1,\n\t\t\t\tdriver_TOFF: 3,\n\t\t\t\tdriver_HEND: 0,\n\t\t\t\tdriver_HSTRT: 0,\n\t\t\t},\n\t\t\t{\n\t\t\t\trun_current: 1.6,\n\t\t\t\tvoltage: 24,\n\t\t\t\tdriver: 'TMC2209',\n\t\t\t\tsense_resistor: 0.11,\n\t\t\t\tdriver_TBL: 2,\n\t\t\t\tdriver_TOFF: 3,\n\t\t\t\tdriver_HEND: 0,\n\t\t\t\tdriver_HSTRT: 6,\n\t\t\t},\n\t\t\t{\n\t\t\t\trun_current: 1.6,\n\t\t\t\tvoltage: 24,\n\t\t\t\tdriver: 'TMC5160',\n\t\t\t\tsense_resistor: 0.075,\n\t\t\t\tdriver_TBL: 2,\n\t\t\t\tdriver_TOFF: 3,\n\t\t\t\tdriver_HEND: 0,\n\t\t\t\tdriver_HSTRT: 6,\n\t\t\t},\n\t\t\t{\n\t\t\t\trun_current: 1.768,\n\t\t\t\tvoltage: 48,\n\t\t\t\tdriver: 'TMC5160',\n\t\t\t\tsense_resistor: 0.075,\n\t\t\t\tdriver_TBL: 0,\n\t\t\t\tdriver_TOFF: 4,\n\t\t\t\tdriver_HEND: 0,\n\t\t\t\tdriver_HSTRT: 4,\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tid: 'LDO-42STH40-1684AC',\n\t\ttitle: 'LDO-42STH40-1684AC',\n\t\tmaxPeakCurrent: 1.68,\n\t\tpresets: [\n\t\t\t{\n\t\t\t\trun_current: 0.4,\n\t\t\t\tvoltage: 24,\n\t\t\t\tdriver: 'TMC2130',\n\t\t\t\tsense_resistor: 0.22,\n\t\t\t\tdriver_IHOLDDELAY: 8,\n\t\t\t\tdriver_TPOWERDOWN: 0,\n\t\t\t\tdriver_TBL: 2,\n\t\t\t\tdriver_TOFF: 3,\n\t\t\t\tdriver_HEND: 1,\n\t\t\t\tdriver_HSTRT: 5,\n\t\t\t\tdriver_PWM_FREQ: 2,\n\t\t\t\tdriver_PWM_GRAD: 2,\n\t\t\t\tdriver_PWM_AMPL: 230,\n\t\t\t\tdriver_PWM_AUTOSCALE: true,\n\t\t\t\tdriver_SGT: 5,\n\t\t\t},\n\t\t\t{\n\t\t\t\trun_current: 0.52,\n\t\t\t\tvoltage: 24,\n\t\t\t\tdriver: 'TMC2130',\n\t\t\t\tsense_resistor: 0.22,\n\t\t\t\tdriver_IHOLDDELAY: 8,\n\t\t\t\tdriver_TPOWERDOWN: 0,\n\t\t\t\tdriver_TBL: 2,\n\t\t\t\tdriver_TOFF: 3,\n\t\t\t\tdriver_HEND: 1,\n\t\t\t\tdriver_HSTRT: 5,\n\t\t\t\tdriver_PWM_FREQ: 2,\n\t\t\t\tdriver_PWM_GRAD: 4,\n\t\t\t\tdriver_PWM_AMPL: 240,\n\t\t\t\tdriver_PWM_AUTOSCALE: true,\n\t\t\t\tdriver_SGT: 3,\n\t\t\t},\n\t\t\t{\n\t\t\t\trun_current: 0.8,\n\t\t\t\tvoltage: 24,\n\t\t\t\tdriver: 'TMC2209',\n\t\t\t\tsense_resistor: 0.11,\n\t\t\t\tdriver_TBL: 1,\n\t\t\t\tdriver_TOFF: 3,\n\t\t\t\tdriver_HEND: 3,\n\t\t\t\tdriver_HSTRT: 0,\n\t\t\t},\n\t\t\t{\n\t\t\t\trun_current: 1.188,\n\t\t\t\tvoltage: 24,\n\t\t\t\tdriver: 'TMC2209',\n\t\t\t\tsense_resistor: 0.11,\n\t\t\t\tdriver_TBL: 0,\n\t\t\t\tdriver_TOFF: 3,\n\t\t\t\tdriver_HEND: 0,\n\t\t\t\tdriver_HSTRT: 0,\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tid: 'LDO-42STH48-2004MAH',\n\t\ttitle: 'LDO-42STH48-2004MAH',\n\t\tmaxPeakCurrent: 2.0,\n\t\tfullStepsPerRotation: 400,\n\t},\n\t{\n\t\tid: 'LDO-42STH48-2004AC',\n\t\ttitle: 'LDO-42STH48-2004AC',\n\t\tmaxPeakCurrent: 2.0,\n\t},\n\t{\n\t\tid: 'LDO-42STH25-1404MAC',\n\t\ttitle: 'LDO-42STH25-1404MAC',\n\t\tmaxPeakCurrent: 1.4,\n\t\tfullStepsPerRotation: 400,\n\t\tpresets: [\n\t\t\t{\n\t\t\t\tvoltage: 24,\n\t\t\t\tdriver: 'TMC2209',\n\t\t\t\tsense_resistor: 0.11,\n\t\t\t\trun_current: 0.85,\n\t\t\t\tdriver_TBL: 1,\n\t\t\t\tdriver_TOFF: 3,\n\t\t\t\tdriver_HEND: 2,\n\t\t\t\tdriver_HSTRT: 0,\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tid: 'LDO-42STH25-1004CL200E',\n\t\ttitle: 'LDO-42STH25-1004CL200E',\n\t\tmaxPeakCurrent: 1.0,\n\t},\n\t{\n\t\tid: 'LDO-36STH20-1004AHG',\n\t\ttitle: 'LDO-36STH20-1004AHG',\n\t\tmaxPeakCurrent: 1.0,\n\t\tpresets: [\n\t\t\t{\n\t\t\t\tvoltage: 24,\n\t\t\t\tdriver: 'TMC2209',\n\t\t\t\tsense_resistor: 0.11,\n\t\t\t\trun_current: 0.707,\n\t\t\t\tdriver_TBL: 0,\n\t\t\t\tdriver_HEND: 6,\n\t\t\t\tdriver_HSTRT: 7,\n\t\t\t\tdriver_TOFF: 4,\n\t\t\t},\n\t\t\t// {\n\t\t\t// \tvoltage: 24,\n\t\t\t// \tdriver: 'TMC2209',\n\t\t\t// \tsense_resistor: 0.11,\n\t\t\t// \trun_current: 0.85,\n\t\t\t// \tdriver_TBL: 0,\n\t\t\t// \tdriver_HEND: 6,\n\t\t\t// \tdriver_HSTRT: 7,\n\t\t\t// \tdriver_TOFF: 4,\n\t\t\t// },\n\t\t],\n\t},\n\t{\n\t\tid: 'LDO-36STH17-1004AHG',\n\t\ttitle: 'LDO-36STH17-1004AHG',\n\t\tmaxPeakCurrent: 1.0,\n\t},\n\t{\n\t\tid: 'LDO-35STH48-1684AH',\n\t\ttitle: 'LDO-35STH48-1684AH',\n\t\tmaxPeakCurrent: 1.68,\n\t},\n] satisfies z.input<typeof Stepper>[]);\n","import { serializeToolheadConfiguration } from '@/utils/serialization';\nimport { PrinterAxis } from '@/zods/motion';\nimport {\n\tPartialToolheadConfiguration,\n\tSerializedToolheadConfiguration,\n\tToolheadConfiguration,\n\tToolNumber,\n} from '@/zods/toolhead';\nimport { getDefaultNozzle } from '@/data/nozzles';\nimport deepEqual from 'deep-equal';\nimport { ADXL345SensorName } from '@/zods/analysis';\n\ntype ToolheadSuffix = `t${ToolNumber}`;\ntype ToolheadCommand = `T${ToolNumber}`;\ntype ToolboardAxisString = 'x' | 'dc';\ntype ToolboardShortName = ToolheadSuffix;\n\nexport class ToolheadHelper<IsToolboard extends boolean> {\n\tprotected config: ToolheadConfiguration<IsToolboard>;\n\tconstructor(toolhead: ToolheadConfiguration<IsToolboard>) {\n\t\tthis.config = toolhead;\n\t}\n\tpublic hasToolboard(): boolean {\n\t\treturn this.config.toolboard != null;\n\t}\n\tpublic getToolboard() {\n\t\treturn this.config.toolboard;\n\t}\n\tpublic getMotionStepperName() {\n\t\tif (this.config.axis === PrinterAxis.dual_carriage) {\n\t\t\treturn 'dual_carriage';\n\t\t}\n\t\treturn `stepper_${this.getMotionAxis()}`;\n\t}\n\tpublic getToolboardName(): `toolboard_${ToolboardShortName}` {\n\t\tif (this.config.toolboard == null) {\n\t\t\tthrow new Error(`Toolhead T${this.getTool()} does not have a toolboard`);\n\t\t}\n\t\treturn `toolboard_${this.getShortToolName()}`;\n\t}\n\tpublic getShortToolName(): ToolboardShortName {\n\t\treturn `t${this.getTool()}`;\n\t}\n\tpublic getDescription(): string {\n\t\treturn this.config.description ?? `the printer's toolhead`;\n\t}\n\tpublic getMotionAxis(): PrinterAxis.x | PrinterAxis.dual_carriage {\n\t\tif (this.config.axis === PrinterAxis.dual_carriage) {\n\t\t\treturn PrinterAxis.dual_carriage;\n\t\t}\n\t\treturn PrinterAxis.x;\n\t}\n\tpublic getExtruderAxis(): PrinterAxis.extruder | PrinterAxis.extruder1 {\n\t\tif (this.config.axis === PrinterAxis.dual_carriage) {\n\t\t\treturn PrinterAxis.extruder1;\n\t\t}\n\t\treturn PrinterAxis.extruder;\n\t}\n\tpublic getToolCommand(): ToolheadCommand {\n\t\treturn `T${this.getTool()}`;\n\t}\n\tpublic getTool(): ToolNumber {\n\t\tif (this.config.axis === PrinterAxis.dual_carriage) {\n\t\t\treturn 1;\n\t\t}\n\t\treturn 0;\n\t}\n\tpublic getSerialSuffix(): ToolheadSuffix {\n\t\treturn `t${this.getTool()}`;\n\t}\n\tpublic getExtruder() {\n\t\treturn this.config.extruder;\n\t}\n\tpublic getHotend() {\n\t\treturn this.config.hotend;\n\t}\n\tpublic getNozzle() {\n\t\treturn this.config.nozzle ?? getDefaultNozzle();\n\t}\n\tpublic getThermistor() {\n\t\treturn this.config.thermistor;\n\t}\n\tpublic getXEndstop() {\n\t\treturn this.config.xEndstop;\n\t}\n\tpublic getYEndstop() {\n\t\treturn this.config.yEndstop;\n\t}\n\tpublic getXAccelerometer() {\n\t\treturn this.config.xAccelerometer;\n\t}\n\tpublic getYAccelerometer() {\n\t\treturn this.config.yAccelerometer;\n\t}\n\tpublic getXAccelerometerName(): ADXL345SensorName {\n\t\tswitch (this.getXAccelerometer()?.id) {\n\t\t\tcase 'controlboard':\n\t\t\t\treturn 'controlboard';\n\t\t\tcase 'toolboard':\n\t\t\t\tif (this.hasToolboard()) {\n\t\t\t\t\treturn this.getToolboardName();\n\t\t\t\t}\n\t\t\tcase 'sbc':\n\t\t\t\treturn 'rpi';\n\t\t\tdefault:\n\t\t\t\treturn 'controlboard';\n\t\t}\n\t}\n\tpublic getYAccelerometerName(): ADXL345SensorName {\n\t\tswitch (this.getYAccelerometer()?.id) {\n\t\t\tcase 'controlboard':\n\t\t\t\treturn 'controlboard';\n\t\t\tcase 'toolboard':\n\t\t\t\tif (this.hasToolboard()) {\n\t\t\t\t\treturn this.getToolboardName();\n\t\t\t\t}\n\t\t\tcase 'sbc':\n\t\t\t\treturn 'rpi';\n\t\t\tdefault:\n\t\t\t\treturn 'controlboard';\n\t\t}\n\t}\n\tpublic getChangeSet(changes: PartialToolheadConfiguration) {\n\t\tif (changes == null) {\n\t\t\treturn null;\n\t\t}\n\t\tconst changeSet: any = {};\n\t\tObject.keys(changes).forEach((key) => {\n\t\t\tconst current = this.getConfig()[key as keyof ToolheadConfiguration<IsToolboard>];\n\t\t\tconst change = changes[key as keyof ToolheadConfiguration<IsToolboard>];\n\t\t\tif ((current != null && change == null) || (current == null && change != null)) {\n\t\t\t\tchangeSet[key] = change;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (current && change) {\n\t\t\t\tif (typeof current === 'object' && 'id' in current && typeof change === 'object' && 'id' in change) {\n\t\t\t\t\tif (current.id !== change.id) {\n\t\t\t\t\t\tchangeSet[key] = change;\n\t\t\t\t\t}\n\t\t\t\t} else if (!deepEqual(current, change)) {\n\t\t\t\t\tchangeSet[key] = change;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tconst parsed = PartialToolheadConfiguration.safeParse(changeSet);\n\t\treturn parsed;\n\t}\n\tpublic getProbe() {\n\t\treturn this.config.probe;\n\t}\n\tpublic getPartFan() {\n\t\treturn this.config.partFan;\n\t}\n\tpublic getHotendFan() {\n\t\treturn this.config.hotendFan;\n\t}\n\tpublic serialize(): SerializedToolheadConfiguration {\n\t\treturn serializeToolheadConfiguration(this.config);\n\t}\n\tpublic getConfig(): ToolheadConfiguration<IsToolboard> {\n\t\treturn { ...this.config };\n\t}\n}\n","import { proxyClient, trpc } from '@/utils/trpc';\nexport { trpc, proxyClient as trpcClient };\n","import { ReadAtomInterface, syncEffect } from 'recoil-sync';\nimport { PrinterDefinitionWithResolvedToolheads } from '@/zods/printer';\nimport { trpcClient } from '@/helpers/trpc';\nimport { atomFamily, selector, DefaultValue, atom, noWait } from 'recoil';\nimport { z } from 'zod';\nimport { getRefineCheckerForZodSchema } from 'zod-refine';\nimport { deserializePrinterRail, serializePrinterRail } from '@/utils/serialization';\nimport { SerializedPrinterRail, PrinterAxis, PrinterRail } from '@/zods/motion';\nimport { Board, BoardPath } from '@/zods/boards';\nimport { moonrakerWriteEffect } from '@/components/sync-with-moonraker';\nimport { PrinterSize } from '@/zods/printer-configuration';\n\nlet cachedPrinters: { [id: string]: z.infer<typeof PrinterDefinitionWithResolvedToolheads> } = {};\n\n// SyncEffect read methods\nexport const readPrinterAtom = async ({\n\tread,\n}: ReadAtomInterface): Promise<z.infer<typeof PrinterDefinitionWithResolvedToolheads> | null> => {\n\tconst printer = await read(PrinterState.key);\n\tif (printer != null) {\n\t\tconst printerId = z.object({ id: PrinterDefinitionWithResolvedToolheads.shape.id }).safeParse(printer);\n\t\tif (printerId.success) {\n\t\t\tlet newPrinter: null | PrinterDefinitionWithResolvedToolheads = cachedPrinters[printerId.data.id];\n\t\t\tif (newPrinter == null) {\n\t\t\t\tnewPrinter = await trpcClient.printer.printer.query(printerId.data.id, {});\n\t\t\t\tif (newPrinter) {\n\t\t\t\t\tcachedPrinters[printerId.data.id] = newPrinter;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn newPrinter ?? null;\n\t\t}\n\t}\n\treturn null;\n};\n\nexport const readPrinterRailAtom =\n\t(param: PrinterAxis) =>\n\tasync ({ read }: ReadAtomInterface): Promise<z.infer<typeof SerializedPrinterRail> | null> => {\n\t\tconst printerRailState = await read(PrinterRailState(param).key);\n\t\tif (printerRailState != null) {\n\t\t\tconst parsedRail = SerializedPrinterRail.safeParse(printerRailState);\n\t\t\tif (parsedRail.success) {\n\t\t\t\treturn parsedRail.data;\n\t\t\t}\n\t\t\tconst printer = await readPrinterAtom({ read });\n\t\t\tconst printerRailDefault = printer?.defaults.rails.find((r) => r.axis === param);\n\t\t\tif (printerRailDefault != null) {\n\t\t\t\tconst parsedRailRepaired = SerializedPrinterRail.safeParse({ ...printerRailDefault, ...printerRailState });\n\t\t\t\tif (parsedRailRepaired.success) {\n\t\t\t\t\treturn parsedRailRepaired.data;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t};\n\nexport const PrinterState = atom<z.infer<typeof PrinterDefinitionWithResolvedToolheads> | null>({\n\tkey: 'Printer',\n\tdefault: null,\n\teffects: [\n\t\tmoonrakerWriteEffect(),\n\t\tsyncEffect({\n\t\t\tread: readPrinterAtom,\n\t\t\twrite: async ({ write }, newValue) => {\n\t\t\t\tawait new Promise((resolve) => {\n\t\t\t\t\tif (newValue instanceof DefaultValue) {\n\t\t\t\t\t\twrite(PrinterState.key, null);\n\t\t\t\t\t} else {\n\t\t\t\t\t\twrite(PrinterState.key, newValue ?? null);\n\t\t\t\t\t}\n\t\t\t\t\tsetTimeout(() => {}, 500);\n\t\t\t\t});\n\t\t\t},\n\t\t\trefine: getRefineCheckerForZodSchema(PrinterDefinitionWithResolvedToolheads.nullable()),\n\t\t}),\n\t],\n});\n\nexport const LoadablePrinterState = selector<z.infer<typeof PrinterDefinitionWithResolvedToolheads> | null>({\n\tkey: 'LoadablePrinterState',\n\tget: async ({ get }) => {\n\t\tconst loadable = get(noWait(PrinterState));\n\t\treturn {\n\t\t\thasValue: () => loadable.contents,\n\t\t\thasError: () => [],\n\t\t\tloading: () => [],\n\t\t}[loadable.state]();\n\t},\n});\n\nexport const PrinterSizeState = atom<z.output<typeof PrinterSize> | null>({\n\tkey: 'PrinterOption',\n\tdefault: null,\n\teffects: [\n\t\tmoonrakerWriteEffect(),\n\t\tsyncEffect({\n\t\t\trefine: getRefineCheckerForZodSchema(PrinterSize.nullable()),\n\t\t}),\n\t],\n});\n\nexport const ControlboardState = atom<Board | null>({\n\tkey: 'Controlboard',\n\tdefault: null,\n\teffects: [\n\t\tmoonrakerWriteEffect(),\n\t\tsyncEffect({\n\t\t\tread: async ({ read }) => {\n\t\t\t\tconst board = await read(ControlboardState.key);\n\t\t\t\tif (board != null) {\n\t\t\t\t\tconst boardId = z.object({ path: BoardPath }).safeParse(board);\n\t\t\t\t\tif (boardId.success) {\n\t\t\t\t\t\tconst boardReq = await trpcClient.mcu.boards.query({ boardFilters: { toolboard: false } });\n\t\t\t\t\t\tconst newBoard = boardReq.find((b) => b.path === boardId.data.path);\n\t\t\t\t\t\treturn newBoard ?? null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t},\n\t\t\trefine: getRefineCheckerForZodSchema(Board.nullable()),\n\t\t}),\n\t],\n});\n\nexport const PrinterRailState = atomFamily<z.infer<typeof SerializedPrinterRail> | null, PrinterAxis>({\n\tkey: 'PrinterRail',\n\tdefault: null,\n\teffects: (param) => [\n\t\tmoonrakerWriteEffect(),\n\t\tsyncEffect({\n\t\t\tread: readPrinterRailAtom(param),\n\t\t\trefine: getRefineCheckerForZodSchema(SerializedPrinterRail.nullable()),\n\t\t}),\n\t],\n});\n\nexport const PrinterRailsState = selector<z.infer<typeof PrinterRail>[]>({\n\tkey: 'PrinterRails',\n\tget: ({ get }) => {\n\t\tconst printer = get(PrinterState);\n\t\tconst rails = printer?.defaults.rails.map((rail) => {\n\t\t\tconst railState = get(PrinterRailState(rail.axis));\n\t\t\treturn deserializePrinterRail(railState ?? rail);\n\t\t});\n\t\treturn rails ?? [];\n\t},\n\tset: ({ set }, newValue) => {\n\t\tif (newValue instanceof DefaultValue) {\n\t\t\tObject.values(PrinterAxis).forEach((axis) => {\n\t\t\t\tset(PrinterRailState(axis), null);\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\tnewValue.forEach((rail) => {\n\t\t\tset(PrinterRailState(rail.axis), serializePrinterRail(rail));\n\t\t});\n\t},\n});\n\nexport const LoadablePrinterRailsState = selector<z.infer<typeof PrinterRail>[]>({\n\tkey: 'LoadablePrinterRailsState',\n\tget: async ({ get }) => {\n\t\tconst loadable = get(noWait(PrinterRailsState));\n\t\treturn {\n\t\t\thasValue: () => loadable.contents,\n\t\t\thasError: () => [],\n\t\t\tloading: () => [],\n\t\t}[loadable.state]();\n\t},\n});\n","import { atomFamily, DefaultValue, selector, selectorFamily, noWait, waitForAll } from 'recoil';\nimport { ReadAtomInterface, syncEffect } from 'recoil-sync';\nimport { z } from 'zod';\nimport { getRefineCheckerForZodSchema } from 'zod-refine';\nimport { trpcClient } from '@/helpers/trpc';\nimport { BoardPath, Toolboard } from '@/zods/boards';\nimport { PrinterAxis } from '@/zods/motion';\nimport {\n\tBaseToolheadConfiguration,\n\tSerializedToolheadConfiguration,\n\tToolheadConfiguration,\n\tToolNumber,\n} from '@/zods/toolhead';\nimport { PrinterState } from '@/recoil/printer';\nimport { moonrakerWriteEffect } from '@/components/sync-with-moonraker';\nimport { getLogger } from '@/app/_helpers/logger';\n\nexport const isAxisValidForTool = (axis: PrinterAxis, tool: ToolNumber) => {\n\tif (axis === PrinterAxis.dual_carriage && tool === 1) {\n\t\treturn true;\n\t}\n\tif (axis === PrinterAxis.x) {\n\t\treturn true;\n\t}\n\treturn false;\n};\n\nexport const PrinterToolheadState = atomFamily<\n\t(ToolheadConfiguration<any> & { toolNumber: ToolNumber }) | null,\n\tToolNumber\n>({\n\tkey: 'PrinterToolhead',\n\tdefault: null,\n\teffects: (param) => [\n\t\tmoonrakerWriteEffect(),\n\t\tsyncEffect({\n\t\t\tread: async ({\n\t\t\t\tread,\n\t\t\t}: ReadAtomInterface): Promise<(ToolheadConfiguration<any> & { toolNumber: ToolNumber }) | null> => {\n\t\t\t\tconst state = await read(PrinterToolheadState(param).key);\n\t\t\t\tif (typeof state !== 'object') {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tif (state == null) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tconst { toolNumber: tNum, ...printerToolheadState } = state as ToolheadConfiguration<any> & {\n\t\t\t\t\ttoolNumber: ToolNumber;\n\t\t\t\t};\n\t\t\t\tif (printerToolheadState != null) {\n\t\t\t\t\tconst parsedToolhead = ToolheadConfiguration.safeParse(printerToolheadState);\n\t\t\t\t\tif (parsedToolhead.success) {\n\t\t\t\t\t\tlet freshToolboard = parsedToolhead.data.toolboard;\n\t\t\t\t\t\tif (freshToolboard) {\n\t\t\t\t\t\t\tif (freshToolboard != null) {\n\t\t\t\t\t\t\t\tconst toolboardPath = z.object({ path: BoardPath }).safeParse(freshToolboard);\n\t\t\t\t\t\t\t\tif (toolboardPath.success) {\n\t\t\t\t\t\t\t\t\tconst boardReq = await trpcClient.mcu.boards.query({ boardFilters: { toolboard: true } });\n\t\t\t\t\t\t\t\t\tconst maybeToolboard = boardReq.find((b) => b.path === toolboardPath.data.path);\n\t\t\t\t\t\t\t\t\tif (maybeToolboard) {\n\t\t\t\t\t\t\t\t\t\tfreshToolboard = Toolboard.parse(maybeToolboard);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn { ...parsedToolhead.data, toolboard: freshToolboard, toolNumber: param };\n\t\t\t\t\t}\n\t\t\t\t\tconsole.debug(\n\t\t\t\t\t\t'RecoilSync: failed to read toolhead!',\n\t\t\t\t\t\tPrinterToolheadState(param).key,\n\t\t\t\t\t\tparsedToolhead.error,\n\t\t\t\t\t\tprinterToolheadState,\n\t\t\t\t\t);\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t},\n\t\t\trefine: getRefineCheckerForZodSchema(BaseToolheadConfiguration.extend({ toolNumber: ToolNumber }).nullable()),\n\t\t}),\n\t],\n});\n\nexport const DeserializeToolheadQuery = selectorFamily<\n\t(ToolheadConfiguration<any> & { toolNumber: ToolNumber }) | null,\n\t{ th: SerializedToolheadConfiguration; boardId: string; toolNumber: ToolNumber }\n>({\n\tkey: 'DeserializeToolheadQuery',\n\tget:\n\t\t(param) =>\n\t\tasync ({ get }) => {\n\t\t\tconst parsedToolhead = ToolheadConfiguration.safeParse(\n\t\t\t\tawait trpcClient.printer.deserializeToolheadConfiguration.query({\n\t\t\t\t\tconfig: param.th,\n\t\t\t\t\tprinterConfig: { controlboard: param.boardId },\n\t\t\t\t}),\n\t\t\t);\n\t\t\tif (!parsedToolhead.success) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn { ...parsedToolhead.data, toolNumber: param.toolNumber };\n\t\t},\n});\n\nexport const PrinterToolheadsState = selector<(ToolheadConfiguration<any> & { toolNumber: ToolNumber })[]>({\n\tkey: 'PrinterToolheadsState',\n\tget: ({ get }) => {\n\t\tconst printer = get(PrinterState);\n\t\tif (printer == null) {\n\t\t\treturn [];\n\t\t}\n\t\treturn get(waitForAll(printer.defaults.toolheads.map((th, i) => PrinterToolheadState(i as ToolNumber)))).filter(\n\t\t\tBoolean,\n\t\t);\n\t},\n\tset: ({ set, reset }, newValue) => {\n\t\tif (newValue instanceof DefaultValue) {\n\t\t\tthrow new Error('ToolheadsState cannot be reset, please reset the individual ToolheadState instead');\n\t\t}\n\t\tnewValue.forEach((th) => {\n\t\t\tset(PrinterToolheadState(th.toolNumber), { ...th, toolNumber: th.toolNumber });\n\t\t});\n\t},\n});\n\nexport const LoadablePrinterToolheadsState = selector<(ToolheadConfiguration<any> & { toolNumber: ToolNumber })[]>({\n\tkey: 'LoadablePrinterToolheadsState',\n\tget: async ({ get }) => {\n\t\tconst loadable = get(noWait(PrinterToolheadsState));\n\t\tgetLogger().debug('LoadableToolheadState', loadable);\n\t\treturn {\n\t\t\thasValue: () => loadable.contents,\n\t\t\thasError: () => [],\n\t\t\tloading: () => [],\n\t\t}[loadable.state]();\n\t},\n});\n","import type { z } from 'zod';\nimport { Drivers } from '@/data/drivers';\nimport {\n\tBasePrinterRail,\n\tDriver,\n\tPrinterRail,\n\tPrinterRailDefinition,\n\tSerializedPrinterRail,\n\tSerializedPrinterRailDefinition,\n\tStepper,\n\tPrinterAxis,\n} from '@/zods/motion';\nimport { Steppers } from '@/data/steppers';\nimport {\n\tToolheadConfiguration,\n\tSerializedToolheadConfiguration,\n\tPartialToolheadConfiguration,\n\tSerializedPartialToolheadConfiguration,\n\tToolOrAxis,\n} from '@/zods/toolhead';\nimport { PartialPrinterConfiguration } from '@/zods/printer-configuration';\nimport { ToolheadHelper } from '@/helpers/toolhead';\n\nexport const deserializeDriver = (driverId: z.input<typeof Driver.shape.id>): z.infer<typeof Driver> | null => {\n\treturn Drivers.find((d) => d.id === driverId) ?? null;\n};\n\nexport const deserializeStepper = (stepperId: z.input<typeof Stepper.shape.id>): z.infer<typeof Stepper> | null => {\n\treturn Steppers.find((d) => d.id === stepperId) ?? null;\n};\n\nexport const deserializePrinterRail = (rail: z.input<typeof SerializedPrinterRail>): z.infer<typeof PrinterRail> => {\n\tconst stepper = deserializeStepper(rail.stepper);\n\tconst driver = deserializeDriver(rail.driver);\n\tif (stepper == null) {\n\t\tthrow new Error(`Stepper ${rail.stepper} not found in database`);\n\t}\n\tif (driver == null) {\n\t\tthrow new Error(`Driver ${rail.driver} not found in database`);\n\t}\n\treturn BasePrinterRail.parse({\n\t\t...rail,\n\t\tstepper,\n\t\tdriver,\n\t});\n};\n\nexport const deserializePrinterRailDefinition = (\n\trail: z.input<typeof SerializedPrinterRailDefinition>,\n): z.infer<typeof PrinterRailDefinition> => {\n\tconst stepper = deserializeStepper(rail.stepper);\n\tconst driver = deserializeDriver(rail.driver);\n\tif (stepper == null) {\n\t\tthrow new Error(`Stepper ${rail.stepper} not found in database`);\n\t}\n\tif (driver == null) {\n\t\tthrow new Error(`Driver ${rail.driver} not found in database`);\n\t}\n\treturn PrinterRailDefinition.parse({\n\t\t...rail,\n\t\tstepper,\n\t\tdriver,\n\t});\n};\n\nexport const stringToTitleObject = <Item extends string>(data: Item): { id: Item; title: Item } => {\n\treturn { id: data, title: data };\n};\n\nexport const serializePrinterRail = (rail: z.input<typeof PrinterRail>): z.infer<typeof SerializedPrinterRail> => {\n\treturn SerializedPrinterRail.parse({\n\t\t...rail,\n\t\tdriver: rail.driver.id,\n\t\tstepper: rail.stepper.id,\n\t});\n};\n\nexport const serializeToolheadConfiguration = (th: ToolheadConfiguration<any>): SerializedToolheadConfiguration => {\n\treturn {\n\t\t...th,\n\t\ttoolboard: th.toolboard?.id,\n\t\thotend: th.hotend.id,\n\t\tthermistor: th.thermistor,\n\t\textruder: th.extruder.id,\n\t\tprobe: th.probe?.id,\n\t\txEndstop: th.xEndstop.id,\n\t\tyEndstop: th.yEndstop.id,\n\t\tpartFan: th.partFan.id,\n\t\thotendFan: th.hotendFan.id,\n\t\txAccelerometer: th.xAccelerometer?.id,\n\t\tyAccelerometer: th.yAccelerometer?.id,\n\t};\n};\n\nexport const serializePartialToolheadConfiguration = (\n\tth: PartialToolheadConfiguration,\n): SerializedPartialToolheadConfiguration => {\n\treturn th == null\n\t\t? undefined\n\t\t: {\n\t\t\t\t...th,\n\t\t\t\ttoolboard: th.toolboard?.id,\n\t\t\t\thotend: th.hotend?.id,\n\t\t\t\tthermistor: th.thermistor,\n\t\t\t\textruder: th.extruder?.id,\n\t\t\t\tprobe: th.probe?.id,\n\t\t\t\txEndstop: th.xEndstop?.id,\n\t\t\t\tyEndstop: th.yEndstop?.id,\n\t\t\t\tpartFan: th.partFan?.id,\n\t\t\t\thotendFan: th.hotendFan?.id,\n\t\t\t\txAccelerometer: th.xAccelerometer?.id,\n\t\t\t\tyAccelerometer: th.yAccelerometer?.id,\n\t\t\t};\n};\n\nexport const extractToolheadsFromPrinterConfiguration = (config: PartialPrinterConfiguration) => {\n\tconst toolheads = config?.toolheads\n\t\t?.map((th) => {\n\t\t\tif (th == null) {\n\t\t\t\tthrow new Error('Toolhead can not be null');\n\t\t\t}\n\t\t\treturn new ToolheadHelper(ToolheadConfiguration.parse(th));\n\t\t})\n\t\t.filter(Boolean);\n\tif (toolheads == null) {\n\t\tthrow new Error('No toolheads found');\n\t}\n\treturn toolheads;\n};\n\nexport const extractToolheadFromPrinterConfiguration = (\n\ttoolOrAxis: ToolOrAxis | PrinterAxis,\n\tconfig: PartialPrinterConfiguration,\n) => {\n\tif (config?.toolheads == null || config.toolheads.length === 0) {\n\t\tthrow new Error('No toolheads preset in supplied printer config');\n\t}\n\tconst toolheads = extractToolheadsFromPrinterConfiguration(config);\n\tconst th =\n\t\ttypeof toolOrAxis === 'number'\n\t\t\t? toolheads.find((th) => th.getTool() === toolOrAxis)\n\t\t\t: toolheads.find((th) => th.getExtruderAxis() === toolOrAxis || th.getMotionAxis() === toolOrAxis);\n\treturn th;\n};\n","import { z } from 'zod';\nimport { PrinterAxis, Voltage } from '@/zods/motion';\n\n// Complete map of all available RatOS pin aliases.\nexport const AllPins = {\n\tx_step_pin: z.string().optional(),\n\tx_dir_pin: z.string().optional(),\n\tx_enable_pin: z.string().optional(),\n\tx_uart_pin: z.string().optional(),\n\tx_diag_pin: z.string().optional(),\n\tx_endstop_pin: z.string().optional(),\n\tx1_step_pin: z.string().optional(),\n\tx1_dir_pin: z.string().optional(),\n\tx1_enable_pin: z.string().optional(),\n\tx1_uart_pin: z.string().optional(),\n\tx1_diag_pin: z.string().optional(),\n\tx1_endstop_pin: z.string().optional(),\n\tdual_carriage_step_pin: z.string().optional(),\n\tdual_carriage_dir_pin: z.string().optional(),\n\tdual_carriage_enable_pin: z.string().optional(),\n\tdual_carriage_uart_pin: z.string().optional(),\n\tdual_carriage_diag_pin: z.string().optional(),\n\tdual_carriage_endstop_pin: z.string().optional(),\n\ty_step_pin: z.string().optional(),\n\ty_dir_pin: z.string().optional(),\n\ty_enable_pin: z.string().optional(),\n\ty_uart_pin: z.string().optional(),\n\ty_diag_pin: z.string().optional(),\n\ty_endstop_pin: z.string().optional(),\n\ty1_step_pin: z.string().optional(),\n\ty1_dir_pin: z.string().optional(),\n\ty1_enable_pin: z.string().optional(),\n\ty1_uart_pin: z.string().optional(),\n\ty1_diag_pin: z.string().optional(),\n\ty1_endstop_pin: z.string().optional(),\n\ty2_step_pin: z.string().optional(),\n\ty2_dir_pin: z.string().optional(),\n\ty2_enable_pin: z.string().optional(),\n\ty2_uart_pin: z.string().optional(),\n\ty2_diag_pin: z.string().optional(),\n\ty2_endstop_pin: z.string().optional(),\n\tz0_step_pin: z.string().optional(),\n\tz0_dir_pin: z.string().optional(),\n\tz0_enable_pin: z.string().optional(),\n\tz0_uart_pin: z.string().optional(),\n\tz0_diag_pin: z.string().optional(),\n\tz1_step_pin: z.string().optional(),\n\tz1_dir_pin: z.string().optional(),\n\tz1_enable_pin: z.string().optional(),\n\tz1_uart_pin: z.string().optional(),\n\tz1_diag_pin: z.string().optional(),\n\tz2_step_pin: z.string().optional(),\n\tz2_dir_pin: z.string().optional(),\n\tz2_enable_pin: z.string().optional(),\n\tz2_uart_pin: z.string().optional(),\n\tz2_diag_pin: z.string().optional(),\n\tz3_step_pin: z.string().optional(),\n\tz3_dir_pin: z.string().optional(),\n\tz3_enable_pin: z.string().optional(),\n\tz3_uart_pin: z.string().optional(),\n\tz3_diag_pin: z.string().optional(),\n\te_step_pin: z.string().optional(),\n\te_dir_pin: z.string().optional(),\n\te_enable_pin: z.string().optional(),\n\te_uart_pin: z.string().optional(),\n\te_diag_pin: z.string().optional(),\n\te_heater_pin: z.string().optional(),\n\te_sensor_pin: z.string().optional(),\n\tstepper_spi_mosi_pin: z.string().optional(),\n\tstepper_spi_miso_pin: z.string().optional(),\n\tstepper_spi_sclk_pin: z.string().optional(),\n\tadxl345_cs_pin: z.string().optional(),\n\tbltouch_sensor_pin: z.string().optional(),\n\tbltouch_control_pin: z.string().optional(),\n\tprobe_pin: z.string().optional(),\n\tfan_part_cooling_pin: z.string().optional(),\n\tfan_toolhead_cooling_pin: z.string().optional(),\n\tfan_controller_board_pin: z.string().optional(),\n\theater_bed_heating_pin: z.string().optional(),\n\theater_bed_sensor_pin: z.string().optional(),\n\t'4p_fan_part_cooling_pin': z.string().optional(),\n\t'4p_fan_part_cooling_tach_pin': z.string().optional(),\n\t'4p_toolhead_cooling_pin': z.string().optional(),\n\t'4p_toolhead_cooling_tach_pin': z.string().optional(),\n\t'4p_controller_board_pin': z.string().optional(),\n\t'4p_controller_board_tach_pin': z.string().optional(),\n};\nexport const PinMap = z.object(AllPins);\n\nexport enum AxisPinPrefix {\n\tx = 'x',\n\tx1 = 'x1',\n\ty = 'y',\n\ty1 = 'y1',\n\ty2 = 'y2',\n\tz0 = 'z0',\n\tz1 = 'z1',\n\tz2 = 'z2',\n\tz3 = 'z3',\n\te = 'e',\n\te1 = 'e1',\n\tdual_carriage = 'dual_carriage',\n}\n\nexport const pinAliasPrefixToPrinterAxis: { [key in AxisPinPrefix]: PrinterAxis } = {\n\tx: PrinterAxis['x'],\n\tx1: PrinterAxis['x1'],\n\ty: PrinterAxis['y'],\n\ty1: PrinterAxis['y1'],\n\ty2: PrinterAxis['y2'],\n\tz0: PrinterAxis['z'],\n\tz1: PrinterAxis['z1'],\n\tz2: PrinterAxis['z2'],\n\tz3: PrinterAxis['z3'],\n\te: PrinterAxis['extruder'],\n\te1: PrinterAxis['extruder1'],\n\tdual_carriage: PrinterAxis['dual_carriage'],\n};\n\nexport const pinPrefixToAxis = z.nativeEnum(AxisPinPrefix).transform((v) => pinAliasPrefixToPrinterAxis[v] ?? null);\nexport const axisToPinPrefix = z\n\t.nativeEnum(PrinterAxis)\n\t.transform(\n\t\t(pa) =>\n\t\t\t(Object.keys(pinAliasPrefixToPrinterAxis) as AxisPinPrefix[]).find(\n\t\t\t\t(p) => pinAliasPrefixToPrinterAxis[p] === pa,\n\t\t\t) ?? null,\n\t);\n\nexport const ControlBoardPinMap = PinMap.extend({\n\tx_step_pin: z.string(),\n\tx_dir_pin: z.string(),\n\tx_enable_pin: z.string(),\n\tx_uart_pin: z.string(),\n\tx_endstop_pin: z.string(),\n\ty_step_pin: z.string(),\n\ty_dir_pin: z.string(),\n\ty_enable_pin: z.string(),\n\ty_uart_pin: z.string(),\n\ty_endstop_pin: z.string(),\n\tz0_step_pin: z.string(),\n\tz0_dir_pin: z.string(),\n\tz0_enable_pin: z.string(),\n\tz0_uart_pin: z.string(),\n\te_step_pin: z.string(),\n\te_dir_pin: z.string(),\n\te_enable_pin: z.string(),\n\te_uart_pin: z.string(),\n\te_heater_pin: z.string(),\n\te_sensor_pin: z.string(),\n\tprobe_pin: z.string(),\n\theater_bed_heating_pin: z.string(),\n\theater_bed_sensor_pin: z.string(),\n}).and(\n\tz\n\t\t.object({\n\t\t\tfan_part_cooling_pin: z.string(),\n\t\t\tfan_toolhead_cooling_pin: z.string(),\n\t\t})\n\t\t.or(\n\t\t\tz.object({\n\t\t\t\t'4p_fan_part_cooling_pin': z.string(),\n\t\t\t\t'4p_fan_part_cooling_tach_pin': z.string(),\n\t\t\t\t'4p_toolhead_cooling_pin': z.string(),\n\t\t\t\t'4p_toolhead_cooling_tach_pin': z.string(),\n\t\t\t}),\n\t\t),\n);\n\nexport const ExtruderlessControlBoardPinMap = PinMap.extend({\n\tx_step_pin: z.string(),\n\tx_dir_pin: z.string(),\n\tx_enable_pin: z.string(),\n\tx_uart_pin: z.string(),\n\tx_endstop_pin: z.string(),\n\ty_step_pin: z.string(),\n\ty_dir_pin: z.string(),\n\ty_enable_pin: z.string(),\n\ty_uart_pin: z.string(),\n\ty_endstop_pin: z.string(),\n\tz0_step_pin: z.string(),\n\tz0_dir_pin: z.string(),\n\tz0_enable_pin: z.string(),\n\tz0_uart_pin: z.string(),\n\tz1_step_pin: z.string(),\n\tz1_dir_pin: z.string(),\n\tz1_enable_pin: z.string(),\n\tz1_uart_pin: z.string(),\n\tz2_step_pin: z.string(),\n\tz2_dir_pin: z.string(),\n\tz2_enable_pin: z.string(),\n\tz2_uart_pin: z.string(),\n\tprobe_pin: z.string(),\n\theater_bed_heating_pin: z.string(),\n\theater_bed_sensor_pin: z.string(),\n}).and(\n\tz\n\t\t.object({\n\t\t\tfan_part_cooling_pin: z.string(),\n\t\t\tfan_toolhead_cooling_pin: z.string(),\n\t\t})\n\t\t.or(\n\t\t\tz.object({\n\t\t\t\t'4p_fan_part_cooling_pin': z.string(),\n\t\t\t\t'4p_fan_part_cooling_tach_pin': z.string(),\n\t\t\t\t'4p_toolhead_cooling_pin': z.string(),\n\t\t\t\t'4p_toolhead_cooling_tach_pin': z.string(),\n\t\t\t}),\n\t\t),\n);\nexport const ToolboardPinMap = PinMap.extend({\n\te_step_pin: z.string(),\n\te_dir_pin: z.string(),\n\te_enable_pin: z.string(),\n\te_uart_pin: z.string(),\n\te_heater_pin: z.string(),\n\te_sensor_pin: z.string(),\n\tadxl345_cs_pin: z.string(),\n\tprobe_pin: z.string(),\n}).and(\n\tz\n\t\t.object({\n\t\t\tfan_part_cooling_pin: z.string(),\n\t\t\tfan_toolhead_cooling_pin: z.string(),\n\t\t})\n\t\t.or(\n\t\t\tz.object({\n\t\t\t\t'4p_fan_part_cooling_pin': z.string(),\n\t\t\t\t'4p_fan_part_cooling_tach_pin': z.string(),\n\t\t\t\t'4p_toolhead_cooling_pin': z.string(),\n\t\t\t\t'4p_toolhead_cooling_tach_pin': z.string(),\n\t\t\t}),\n\t\t),\n);\n\nexport const UARTPins = z.object({\n\tuart_pin: z.string(),\n\tuart_address: z.string().optional(),\n\trx_pin: z.string().optional(),\n\ttx_pin: z.string().optional(),\n});\n\nexport const SPIPins = z\n\t.object({\n\t\tcs_pin: z.string(),\n\t})\n\t.and(\n\t\tz.object({ spi_bus: z.string() }).or(\n\t\t\tz.object({\n\t\t\t\tspi_software_mosi_pin: z.string().optional(),\n\t\t\t\tspi_software_miso_pin: z.string().optional(),\n\t\t\t\tspi_software_sclk_pin: z.string().optional(),\n\t\t\t}),\n\t\t),\n\t);\n\nexport const hasSPI = (slot: unknown) => {\n\treturn SPIPins.safeParse(slot).success;\n};\n\nexport const hasUART = (slot: unknown) => {\n\treturn UARTPins.safeParse(slot).success;\n};\n\nexport const MotorSlotPins = z.object({\n\tstep_pin: z.string(),\n\tdir_pin: z.string(),\n\tenable_pin: z.string(),\n\tdiag_pin: z.string().optional(),\n\tendstop_pin: z.string().optional(),\n\t// UART\n\tuart_pin: z.string().optional(),\n\trx_pin: z.string().optional(),\n\ttx_pin: z.string().optional(),\n\t// SPI\n\tcs_pin: z.string().optional(),\n});\n\nexport const MotorSlot = MotorSlotPins.extend({\n\ttitle: z.string(),\n\t// UART\n\tuart_address: z.string().optional(),\n\t// SPI\n\tspi_bus: z.string().optional(),\n\tspi_software_mosi_pin: z.string().optional(),\n\tspi_software_miso_pin: z.string().optional(),\n\tspi_software_sclk_pin: z.string().optional(),\n}).refine(\n\t(slot) => {\n\t\treturn hasSPI(slot) || hasUART(slot);\n\t},\n\t{ message: 'Motor slot must have either SPI or UART pins' },\n);\n\nexport type MotorSlot = z.output<typeof MotorSlot>;\n\nconst AnySlotPin = MotorSlot.innerType().omit({ title: true }).partial();\nexport type AnySlotPin = z.infer<typeof AnySlotPin>;\n\nexport const MotorSlotKey = z.string();\n\nexport const reversePinLookup: (pins: AnySlotPin, board: Board) => z.infer<typeof MotorSlotKey> | undefined = (\n\tpins,\n\tboard,\n) => {\n\tconst slots = Object.entries(board.motorSlots ?? {});\n\tfor (const [key, slot] of slots) {\n\t\tif (Object.entries(pins).every(([pin, value]) => slot[pin as keyof typeof slot] === value)) {\n\t\t\treturn key;\n\t\t}\n\t}\n\treturn undefined;\n};\n\nexport const BoardID = z.string().brand('BoardID');\nexport const BoardPath = z.string().brand('BoardPath');\nexport const BoardSerialPath = z.string().brand('BoardSerialPath');\n\nconst integratedDrivers = z.record(z.nativeEnum(PrinterAxis), z.string());\nconst motorSlots = z.record(MotorSlotKey, MotorSlot);\n\nexport const Board = z\n\t.object({\n\t\tid: BoardID,\n\t\tisToolboard: z.boolean().optional(),\n\t\tisHost: z.boolean().optional(),\n\t\tserialPath: BoardSerialPath.optional(),\n\t\tname: z.string(),\n\t\tmanufacturer: z.string(),\n\t\tfirmwareBinaryName: z.string(),\n\t\tcompileScript: z.string(),\n\t\tflashScript: z.string().optional(),\n\t\tflashInstructions: z.string().optional(),\n\t\tdisableAutoFlash: z.boolean().optional(),\n\t\tdocumentationLink: z.string().optional(),\n\t\thasQuirksFiles: z.boolean().optional(),\n\t\tdriverCount: z.number(),\n\t\tintegratedDrivers: integratedDrivers.optional(),\n\t\textruderlessConfig: z.string().optional(),\n\t\tfourPinFanConnectorCount: z.number().optional(),\n\t\tdriverVoltages: Voltage.array().default([24]),\n\t\thasMcuTempSensor: z.boolean().default(true),\n\t\talternativePT1000Resistor: z.number().optional(),\n\t\tmotorSlots: z.record(MotorSlotKey, MotorSlot).optional(),\n\t\toutputPins: z\n\t\t\t.array(\n\t\t\t\tz.object({\n\t\t\t\t\tpin: z.string(),\n\t\t\t\t\tname: z.string(),\n\t\t\t\t\tvalue: z.number().min(0).max(1),\n\t\t\t\t}),\n\t\t\t)\n\t\t\t.optional(),\n\t\tdfu: z\n\t\t\t.object({\n\t\t\t\tdfuBootImage: z.string(),\n\t\t\t\tflashDevice: z.string(),\n\t\t\t\tinstructions: z.array(z.string()),\n\t\t\t\treminder: z.string().optional(),\n\t\t\t\thasBoot0Jumper: z.boolean(),\n\t\t\t})\n\t\t\t.optional(),\n\t\tstepperSPI: z\n\t\t\t.object({\n\t\t\t\tsoftware: z.object({\n\t\t\t\t\tsclk: z.string(),\n\t\t\t\t\tmosi: z.string(),\n\t\t\t\t\tmiso: z.string(),\n\t\t\t\t}),\n\t\t\t})\n\t\t\t.or(\n\t\t\t\tz.object({\n\t\t\t\t\thardware: z.object({\n\t\t\t\t\t\tbus: z.string(),\n\t\t\t\t\t}),\n\t\t\t\t}),\n\t\t\t)\n\t\t\t.optional(),\n\t\tADXL345SPI: z\n\t\t\t.object({\n\t\t\t\tcs_pin: z.string(),\n\t\t\t})\n\t\t\t.and(\n\t\t\t\tz\n\t\t\t\t\t.object({\n\t\t\t\t\t\tsoftware: z.object({\n\t\t\t\t\t\t\tsclk: z.string(),\n\t\t\t\t\t\t\tmosi: z.string(),\n\t\t\t\t\t\t\tmiso: z.string(),\n\t\t\t\t\t\t}),\n\t\t\t\t\t})\n\t\t\t\t\t.or(\n\t\t\t\t\t\tz.object({\n\t\t\t\t\t\t\thardware: z.object({\n\t\t\t\t\t\t\t\tbus: z.string(),\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t}),\n\t\t\t\t\t),\n\t\t\t)\n\t\t\t.optional(),\n\t\tLIS2DW: z\n\t\t\t.object({\n\t\t\t\tcs_pin: z.string(),\n\t\t\t})\n\t\t\t.and(\n\t\t\t\tz\n\t\t\t\t\t.object({\n\t\t\t\t\t\tsoftware: z.object({\n\t\t\t\t\t\t\tsclk: z.string(),\n\t\t\t\t\t\t\tmosi: z.string(),\n\t\t\t\t\t\t\tmiso: z.string(),\n\t\t\t\t\t\t}),\n\t\t\t\t\t})\n\t\t\t\t\t.or(\n\t\t\t\t\t\tz.object({\n\t\t\t\t\t\t\thardware: z.object({\n\t\t\t\t\t\t\t\tbus: z.string(),\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t}),\n\t\t\t\t\t),\n\t\t\t)\n\t\t\t.optional(),\n\t\tpath: BoardPath,\n\t})\n\t.and(\n\t\tz\n\t\t\t.object({ isToolboard: z.literal(true), motorSlots: z.undefined() })\n\t\t\t.or(z.object({ motorSlots: motorSlots }))\n\t\t\t.or(z.object({ isHost: z.literal(true), motorSlots: z.undefined() })),\n\t);\n\nexport const BoardWithDetectionStatus = Board.and(\n\tz.object({\n\t\tdetected: z.boolean(),\n\t}),\n);\n\nexport const AutoFlashableBoard = z.object({\n\tid: z.string(),\n\tdisableAutoFlash: z.literal(false).optional(),\n\tisToolboard: z.boolean().optional(),\n\tcompileScript: z.string(),\n\tflashScript: z.string(),\n\tpath: BoardPath,\n});\n\nexport const Toolboard = Board.and(\n\tz.object({\n\t\tisToolboard: z.literal(true),\n\t\tisHost: z.literal(false).optional(),\n\t\tintegratedDrivers: integratedDrivers.and(\n\t\t\tz.object({\n\t\t\t\t[PrinterAxis.extruder]: z.string(),\n\t\t\t}),\n\t\t),\n\t}),\n);\n\nexport const ToolboardWithDetectionStatus = Toolboard.and(\n\tz.object({\n\t\tdetected: z.boolean(),\n\t}),\n);\n\nexport type Board = z.infer<typeof Board>;\nexport type BoardWithDetectionStatus = z.infer<typeof BoardWithDetectionStatus>;\nexport type Toolboard = z.infer<typeof Toolboard>;\nexport type ToolboardWithDetectionStatus = z.infer<typeof ToolboardWithDetectionStatus>;\nexport type AutoFlashableBoard = z.infer<typeof AutoFlashableBoard>;\nexport type ToolboardPinMap = z.infer<typeof ToolboardPinMap>;\nexport type ControlBoardPinMap = z.infer<typeof ControlBoardPinMap>;\nexport type ExtruderlessControlBoardPinMap = z.infer<typeof ExtruderlessControlBoardPinMap>;\n","import { z } from 'zod';\nimport { serverSchema } from '@/env/schema.mjs';\nimport { PrinterRailDefinition, Stepper } from '@/zods/motion';\n\nexport const thermistors = [\n\t'EPCOS 100K B57560G104F',\n\t'ATC Semitec 104GT-2',\n\t'ATC Semitec 104NT-4-R025H42G',\n\t'Generic 3950',\n\t'Honeywell 100K 135-104LAG-J01',\n\t'NTC 100K MGB18-104F39050L32',\n\t'SliceEngineering 450',\n\t'TDK NTCG104LH104JT1',\n\t'PT1000',\n] as const;\n\nlet startsWithServerValidation = '';\nif (process.env.RATOS_CONFIGURATION_PATH) {\n\tconst environment = serverSchema.parse(process.env);\n\tstartsWithServerValidation = environment.RATOS_CONFIGURATION_PATH;\n}\nconst hardwareType = z.object({\n\tpath: z.string().startsWith(startsWithServerValidation).endsWith('.cfg'),\n\tid: z.string(),\n});\n\nexport const Thermistor = z.enum(thermistors);\n\nexport const Hotend = hardwareType.extend({\n\ttype: z.literal('hotend'),\n\ttitle: z.string(),\n\tthermistor: z.enum(thermistors),\n\tflowType: z.union([z.literal('sf'), z.literal('hf'), z.literal('uhf')]),\n});\n\nexport const Nozzle = z.object({\n\ttype: z.enum(['Regular', 'CHT']),\n\tdiameter: z.number().min(0.2).max(1.8),\n});\n\nexport const Extruder = hardwareType.extend({\n\ttype: z.literal('extruder'),\n\tstepper: Stepper.shape.id.optional(),\n\tcurrent: PrinterRailDefinition.shape.current.optional(),\n\ttitle: z.string(),\n});\n\nexport const Probe = hardwareType.extend({\n\ttype: z.literal('static-probe').or(z.literal('stowable-probe')),\n\ttitle: z.string(),\n});\n\nexport const Endstop = z.object({\n\tid: z.enum(['endstop', 'endstop-toolboard', 'sensorless']),\n\ttitle: z.string(),\n});\n\nexport const AccelerometerType = z.union([z.literal('adxl345'), z.literal('lis2dw')]);\n\nexport const Accelerometer = z.object({\n\tid: z.enum(['toolboard', 'controlboard', 'sbc', 'none']),\n\ttitle: z.string(),\n});\n\nexport const Fan = z.object({\n\tid: z.enum([\n\t\t'2pin',\n\t\t'4pin',\n\t\t'4pin-dedicated',\n\t\t'2pin-toolboard',\n\t\t'4pin-toolboard',\n\t\t'4pin-dedicated-toolboard',\n\t\t'none',\n\t]),\n\ttitle: z.string(),\n});\n","import * as z from 'zod';\nimport type { Board, Toolboard } from '@/zods/boards';\nexport enum StepperVoltage {\n\t'24V' = 24,\n\t'36V' = 36,\n\t'48V' = 48,\n\t'56V' = 56,\n\t'60V' = 60,\n}\n\nexport const Voltages: { id: StepperVoltage; title: string }[] = [\n\t{ id: StepperVoltage['24V'], title: '24V' },\n\t{ id: StepperVoltage['36V'], title: '36V' },\n\t{ id: StepperVoltage['48V'], title: '48V' },\n\t{ id: StepperVoltage['56V'], title: '56V' },\n\t{ id: StepperVoltage['60V'], title: '60V' },\n];\n\nexport const getSupportedVoltages = (\n\tboard: Board | Toolboard | null,\n\tdriver?: z.infer<typeof Driver>,\n): typeof Voltages => {\n\tif (driver?.external) {\n\t\treturn Voltages.filter((v) => driver?.voltages?.includes(v.id) || v.id === StepperVoltage['24V']);\n\t}\n\treturn Voltages.filter((v) => board?.driverVoltages?.includes(v.id) || v.id === StepperVoltage['24V']).filter(\n\t\t(v) => driver?.voltages?.includes(v.id) || v.id === StepperVoltage['24V'],\n\t);\n};\n\nexport const matchesDefaultRail = (\n\trail: Zod.infer<typeof BasePrinterRail>,\n\tdefaultRail: Zod.infer<typeof PrinterRailDefinition>,\n\tperformanceMode: boolean,\n) => {\n\treturn (\n\t\trail.axis === defaultRail.axis &&\n\t\trail.driver.id === defaultRail.driver.id &&\n\t\trail.stepper.id === defaultRail.stepper.id &&\n\t\t((performanceMode &&\n\t\t\tdefaultRail.performanceMode &&\n\t\t\trail.voltage === defaultRail.performanceMode?.voltage &&\n\t\t\trail.current === defaultRail.performanceMode?.current) ||\n\t\t\t(!performanceMode && rail.voltage === defaultRail.voltage && rail.current === defaultRail.current))\n\t);\n};\n\nexport const Voltage = z.nativeEnum(StepperVoltage);\n\nexport const Driver = z.object({\n\tid: z.string(),\n\ttitle: z.string(),\n\ttype: z.enum(['TMC2209', 'TMC2226', 'TMC5160', 'TMC2130', 'TMC2240']),\n\tprotocol: z.enum(['SPI', 'UART']),\n\tsenseResistor: z.number().min(0),\n\tcoolingCurrentThreshold: z.number(),\n\tvoltages: Voltage.array(),\n\tmaxCurrent: z.number().min(0),\n\texternal: z.boolean().optional(),\n});\n\nconst BaseStepperPreset = z.object({\n\tvoltage: Voltage,\n\trun_current: z.number(),\n\tdriver: Driver.shape.id,\n\tsense_resistor: z.number(),\n});\n\nexport const Stepper = z.object({\n\tid: z.string(),\n\ttitle: z.string(),\n\tfullStepsPerRotation: z.number().default(200),\n\tmaxPeakCurrent: z.number().min(0),\n\tpresets: z\n\t\t.array(\n\t\t\tz.discriminatedUnion('driver', [\n\t\t\t\tBaseStepperPreset.extend({\n\t\t\t\t\tdriver: z.enum(['TMC2130', 'TMC5160', 'TMC2240']),\n\t\t\t\t\tdriver_MSLUT0: z.number().optional(),\n\t\t\t\t\tdriver_MSLUT1: z.number().optional(),\n\t\t\t\t\tdriver_MSLUT2: z.number().optional(),\n\t\t\t\t\tdriver_MSLUT3: z.number().optional(),\n\t\t\t\t\tdriver_MSLUT4: z.number().optional(),\n\t\t\t\t\tdriver_MSLUT5: z.number().optional(),\n\t\t\t\t\tdriver_MSLUT6: z.number().optional(),\n\t\t\t\t\tdriver_MSLUT7: z.number().optional(),\n\t\t\t\t\tdriver_W0: z.number().optional(),\n\t\t\t\t\tdriver_W1: z.number().optional(),\n\t\t\t\t\tdriver_W2: z.number().optional(),\n\t\t\t\t\tdriver_W3: z.number().optional(),\n\t\t\t\t\tdriver_X1: z.number().optional(),\n\t\t\t\t\tdriver_X2: z.number().optional(),\n\t\t\t\t\tdriver_X3: z.number().optional(),\n\t\t\t\t\tdriver_START_SIN: z.number().optional(),\n\t\t\t\t\tdriver_START_SIN90: z.number().optional(),\n\t\t\t\t\tdriver_IHOLDDELAY: z.number().optional(),\n\t\t\t\t\tdriver_TPOWERDOWN: z.number().optional(),\n\t\t\t\t\tdriver_TBL: z.number().optional(),\n\t\t\t\t\tdriver_TOFF: z.number().optional(),\n\t\t\t\t\tdriver_HEND: z.number().optional(),\n\t\t\t\t\tdriver_HSTRT: z.number().optional(),\n\t\t\t\t\tdriver_PWM_AUTOSCALE: z.boolean().optional(),\n\t\t\t\t\tdriver_PWM_FREQ: z.number().optional(),\n\t\t\t\t\tdriver_PWM_GRAD: z.number().optional(),\n\t\t\t\t\tdriver_PWM_AMPL: z.number().optional(),\n\t\t\t\t\tdriver_SGT: z.number().optional(),\n\t\t\t\t}),\n\t\t\t\tBaseStepperPreset.extend({\n\t\t\t\t\tdriver: z.enum(['TMC2209']),\n\t\t\t\t\tdriver_TBL: z.number().optional(),\n\t\t\t\t\tdriver_TOFF: z.number().optional(),\n\t\t\t\t\tdriver_HEND: z.number().optional(),\n\t\t\t\t\tdriver_HSTRT: z.number().optional(),\n\t\t\t\t}),\n\t\t\t]),\n\t\t)\n\t\t.optional()\n\t\t.describe('Stepper presets are tightly coupled to the driver type, sense_resistor, stepper, voltage and current.'),\n});\n\nexport enum PrinterAxis {\n\t'x' = 'x',\n\t'dual_carriage' = 'dual_carriage',\n\t'x1' = 'x1',\n\t'y' = 'y',\n\t'y1' = 'y1',\n\t'y2' = 'y2',\n\t'z' = 'z',\n\t'z1' = 'z1',\n\t'z2' = 'z2',\n\t'z3' = 'z3',\n\t'extruder' = 'extruder',\n\t'extruder1' = 'extruder1',\n}\n\nexport const BasePrinterRail = z.object({\n\taxis: z.nativeEnum(PrinterAxis).describe('Axis of the rail'),\n\taxisDescription: z.string().optional().describe('Description of the axis'),\n\tdriver: Driver.describe('Stepper driver used on this axis'),\n\tvoltage: Voltage.default(StepperVoltage['24V']).describe('Voltage of the stepper driver'),\n\tstepper: Stepper.describe('Stepper motor connected to this axis'),\n\tmotorSlot: z.string().optional().describe('Optional board motor slot of the stepper driver'),\n\tcurrent: z.number().min(0),\n\trotationDistance: z.number().min(0).describe('Distance in mm the axis travels per stepper rotation'),\n\tgearRatio: z\n\t\t.string()\n\t\t.regex(/^\\d+:\\d+$/)\n\t\t.optional()\n\t\t.describe('Optional gear ratio of the axis'),\n\thomingSpeed: z.number().min(0).default(10).describe('Axis speed during homing in mm/s'),\n\tmicrostepping: z\n\t\t.number()\n\t\t.min(16)\n\t\t.max(256)\n\t\t.default(64)\n\t\t.describe(\n\t\t\t'Microstepping of the stepper driver, higher values increase resolution and lower noise but increases load on the MCU',\n\t\t),\n});\n\nexport const PrinterRailDefinition = BasePrinterRail.extend({\n\tmotorSlot: z.undefined(),\n\tperformanceMode: z\n\t\t.object({\n\t\t\tcurrent: z.number().min(0),\n\t\t\tvoltage: Voltage.default(StepperVoltage['24V']).describe('Voltage of the stepper driver in performance mode'),\n\t\t\thomingSpeed: z.number().min(0).optional().describe('Axis speed during homing in mm/s in performance mode'),\n\t\t})\n\t\t.optional(),\n});\n\nexport const SerializedPrinterRailDefinition = PrinterRailDefinition.extend({\n\tdriver: Driver.shape.id,\n\tstepper: Stepper.shape.id,\n});\n\nexport const PrinterRail = BasePrinterRail\n\t// Don't enforce this, warn about temperatures in the frontend instead.\n\t// .refine(\n\t// \t(data) => data.current <= data.stepper.maxPeakCurrent / 1.41,\n\t// \t'Current must be less than max peak current of the stepper divided by 1.41',\n\t// )\n\t.refine((data) => data.current <= data.driver.maxCurrent, 'Current must be less than max current of the driver');\n\nexport const SerializedPrinterRail = BasePrinterRail.extend({\n\tdriver: Driver.shape.id,\n\tstepper: Stepper.shape.id,\n});\n\nexport const Limits = z.object({\n\tmin: z.number(),\n\tmax: z.number(),\n\tendstop: z.number(),\n});\nexport type Limits = z.infer<typeof Limits>;\n","import { Board, BoardID } from '@/zods/boards';\nimport { Fan } from '@/zods/hardware';\nimport { PrinterDefinition, PrinterSizeDefinition } from '@/zods/printer';\nimport { PrinterAxis, PrinterRail, SerializedPrinterRail } from '@/zods/motion';\nimport {\n\tPartialToolheadConfiguration,\n\tSerializedPartialToolheadConfiguration,\n\tSerializedToolheadConfiguration,\n\tToolheadConfiguration,\n} from '@/zods/toolhead';\nimport { ToolheadHelper } from '@/helpers/toolhead';\nimport { z } from 'zod';\n\nexport const PrinterSize = z.union([PrinterSizeDefinition, z.number(), z.string()]).nullable().optional();\n\nconst BasePrinterConfiguration = z\n\t.object({\n\t\tprinter: PrinterDefinition,\n\t\tcontrolboard: Board,\n\t\ttoolheads: z.array(ToolheadConfiguration).min(1).max(2),\n\t\tsize: PrinterSize,\n\t\tcontrollerFan: Fan,\n\t\tperformanceMode: z.boolean().default(false),\n\t\tstealthchop: z.boolean().default(false),\n\t\tstandstillStealth: z.boolean().default(false),\n\t\trails: z.array(PrinterRail),\n\t})\n\t.strict()\n\t.transform((data, ctx) => {\n\t\tif (data.size == null) {\n\t\t\tdata.size = data.printer.sizes[Object.keys(data.printer.sizes)[0]];\n\t\t} else if (typeof data.size === 'number' || typeof data.size === 'string') {\n\t\t\tconst size = data.printer.sizes[data.size.toString()];\n\t\t\tif (size == null) {\n\t\t\t\tctx.addIssue({\n\t\t\t\t\tcode: z.ZodIssueCode.custom,\n\t\t\t\t\tmessage: `Size ${data.size} is not a valid size for a ${data.printer.name} config`,\n\t\t\t\t});\n\t\t\t\treturn z.NEVER;\n\t\t\t}\n\t\t\tdata.size = size;\n\t\t}\n\t\treturn data as Omit<typeof data, 'size'> & { size: z.output<typeof PrinterSizeDefinition> };\n\t});\n\nexport const PrinterConfiguration = BasePrinterConfiguration.superRefine((arg, ctx) => {\n\t// Driver count validation\n\tconst toolboardCount = arg.toolheads.map((t) => t.toolboard).filter(Boolean).length;\n\tif (toolboardCount + arg.controlboard.driverCount < arg.printer.driverCountRequired) {\n\t\tctx.addIssue({\n\t\t\tcode: z.ZodIssueCode.too_small,\n\t\t\tmessage: `Your combination of controlboard and toolboards do not have enough stepper drivers for a ${arg.printer.name} config`,\n\t\t\tminimum: arg.printer.driverCountRequired,\n\t\t\tinclusive: true,\n\t\t\ttype: 'number',\n\t\t});\n\t}\n}).superRefine((arg, ctx) => {\n\t// Rail motor slot validation\n\tconst toolheads = arg.toolheads.map((t) => new ToolheadHelper(t));\n\tconst errors = arg.rails\n\t\t.map((r, i) => {\n\t\t\tconst toolhead = toolheads.find((th) => th.getExtruderAxis() === r.axis);\n\t\t\tif (r.motorSlot != null) {\n\t\t\t\tconst conflicts = arg.rails.filter((pr) => {\n\t\t\t\t\tconst conflictingToolhead = toolheads.find((th) => th.getExtruderAxis() === pr.axis);\n\t\t\t\t\tif (pr.axis === r.axis || toolhead?.hasToolboard() != null) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\tif (conflictingToolhead?.hasToolboard != null) {\n\t\t\t\t\t\t// The rail is an extruder rail and the toolhead has a toolboard, no chance of conflict.\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\treturn pr.motorSlot === r.motorSlot;\n\t\t\t\t});\n\t\t\t\tconst railName = (axis: PrinterAxis) =>\n\t\t\t\t\taxis === 'extruder'\n\t\t\t\t\t\t? 'Extruder T0'\n\t\t\t\t\t\t: axis === PrinterAxis.extruder1\n\t\t\t\t\t\t\t? 'Extruder T1'\n\t\t\t\t\t\t\t: 'Stepper ' + axis.toLocaleUpperCase();\n\t\t\t\tif (conflicts.length === 1) {\n\t\t\t\t\tctx.addIssue({\n\t\t\t\t\t\tcode: z.ZodIssueCode.custom,\n\t\t\t\t\t\tmessage: `Motor slot ${r.motorSlot} is already in use on ${railName(conflicts[0].axis)}`,\n\t\t\t\t\t\tpath: ['rails', i, 'motorSlot'],\n\t\t\t\t\t});\n\t\t\t\t} else if (conflicts.length > 1) {\n\t\t\t\t\tctx.addIssue({\n\t\t\t\t\t\tcode: z.ZodIssueCode.custom,\n\t\t\t\t\t\tmessage: `Motor slot ${r.motorSlot} is already in use on ${conflicts\n\t\t\t\t\t\t\t.slice(0, -1)\n\t\t\t\t\t\t\t.map((cr) => railName(cr.axis))\n\t\t\t\t\t\t\t.join(', ')} and ${railName(conflicts[conflicts.length - 1].axis)}`,\n\t\t\t\t\t\tpath: ['rails', i, 'motorSlot'],\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn conflicts.length > 0 ? { rail: r, conflicts } : 0;\n\t\t\t}\n\t\t\treturn null;\n\t\t})\n\t\t.filter(Boolean);\n\tif (errors.length > 0) {\n\t\tctx.addIssue({\n\t\t\tcode: z.ZodIssueCode.custom,\n\t\t\tmessage: 'Motor slot conflicts detected',\n\t\t});\n\t}\n});\n\nexport const SerializedPrinterConfiguration = BasePrinterConfiguration.innerType()\n\t.extend({\n\t\tprinter: PrinterDefinition.shape.id,\n\t\tcontrolboard: BoardID,\n\t\ttoolheads: z.array(SerializedToolheadConfiguration).min(1).max(2),\n\t\tcontrollerFan: Fan.shape.id,\n\t\trails: z.array(SerializedPrinterRail),\n\t})\n\t.strict();\n\nexport const PartialPrinterConfiguration = BasePrinterConfiguration.innerType()\n\t.extend({\n\t\ttoolheads: z.array(PartialToolheadConfiguration).min(1).max(2),\n\t})\n\t.strict()\n\t.partial()\n\t.optional();\n\nexport const SerializedPartialPrinterConfiguration = SerializedPrinterConfiguration.extend({\n\ttoolheads: z.array(SerializedPartialToolheadConfiguration).min(1).max(2),\n})\n\t.strict()\n\t.partial();\n\nexport type PrinterConfiguration = z.infer<typeof PrinterConfiguration>;\nexport type PartialPrinterConfiguration = z.infer<typeof PartialPrinterConfiguration>;\nexport type SerializedPrinterConfiguration = z.infer<typeof SerializedPrinterConfiguration>;\nexport type SerializedPartialPrinterConfiguration = z.infer<typeof SerializedPartialPrinterConfiguration>;\n","import { z } from 'zod';\nimport { serverSchema } from '@/env/schema.mjs';\nimport path from 'path';\nimport { SerializedPrinterRailDefinition } from '@/zods/motion';\nimport { SerializedToolheadConfiguration, ToolheadConfiguration } from '@/zods/toolhead';\nimport { Fan } from '@/zods/hardware';\nimport { BoardID } from '@/zods/boards';\n\nlet startsWithServerValidation = '';\nif (process.env.RATOS_CONFIGURATION_PATH) {\n\tconst environment = serverSchema.parse(process.env);\n\tstartsWithServerValidation = path.join(environment.RATOS_CONFIGURATION_PATH, 'printers');\n}\n\nconst SpeedLimits = z\n\t.object({\n\t\tvelocity: z.number().min(0).describe('Maximum velocity for this printer'),\n\t\taccel: z.number().min(0).describe('Maximum acceleration for this printer'),\n\t\tz_velocity: z.number().min(0).describe('Maximum z velocity for this printer'),\n\t\tz_accel: z.number().min(0).describe('Maximum z acceleration for this printer'),\n\t\tsquare_corner_velocity: z.number().min(0).default(5).describe('Maximum square corner velocity for this printer'),\n\t\ttravel_velocity: z.number().min(0).default(200).describe('Maximum travel velocity for this printer'),\n\t\ttravel_accel: z.number().min(0).default(3000).describe('Maximum travel velocity for this printer'),\n\t})\n\t.strict();\n\nexport const PrinterSizeDefinition = z\n\t.object({\n\t\tx: z.number().min(0).describe('The print volume in X'),\n\t\ty: z.number().min(0).describe('The print volume in Y'),\n\t\tz: z.number().min(0).describe('The print volume in Z'),\n\t})\n\t.describe('The print volume of a printer');\n\nexport const PrinterDefinition = z\n\t.object({\n\t\tid: z.string(),\n\t\tname: z.string().describe('The name of the printer'),\n\t\tdescription: z.string().describe('A description of the printer'),\n\t\tmanufacturer: z.string().describe('The name of the manufacturer of this printer'),\n\t\tdocumentationLink: z.string().describe('Link to the RatOS documentation for this printer'),\n\t\timage: z.string().describe('Link to an image of the printer'),\n\t\tsizes: z.record(z.string(), PrinterSizeDefinition).describe('Size options for this printer'),\n\t\ttemplate: z.string().describe('Printer.cfg template for this printer'),\n\t\tpath: z.string().startsWith(startsWithServerValidation),\n\t\tdriverCountRequired: z.number().describe('Number of drivers required for this printer'),\n\t\tkinematics: z\n\t\t\t.union([z.literal('cartesian'), z.literal('corexy'), z.literal('hybrid-corexy'), z.literal('hybrid-corexy-idex')])\n\t\t\t.optional(),\n\t\tbedMargin: z\n\t\t\t.object({\n\t\t\t\tx: z.tuple([z.number().default(0), z.number().default(0)]),\n\t\t\t\ty: z.tuple([z.number().default(0), z.number().default(0)]),\n\t\t\t})\n\t\t\t.describe('Margin of available movement around the bed for this printer')\n\t\t\t.default({ x: [0, 0], y: [0, 0] }),\n\t\tspeedLimits: z\n\t\t\t.object({\n\t\t\t\tbasic: SpeedLimits,\n\t\t\t\tperformance: SpeedLimits.optional(),\n\t\t\t})\n\t\t\t.strict()\n\t\t\t.describe('Speed limits for this printer'),\n\t\tdefaults: z\n\t\t\t.object({\n\t\t\t\ttoolheads: z.array(SerializedToolheadConfiguration).describe('Default toolheads for this printer'),\n\t\t\t\tboard: BoardID.describe('Default board for this printer. Should be the name of the board directory.'),\n\t\t\t\trails: z.array(SerializedPrinterRailDefinition).describe('Default rails for this printer'),\n\t\t\t\tcontrollerFan: Fan.shape.id.optional().describe('Default controller fan for this printer'),\n\t\t\t})\n\t\t\t.strict()\n\t\t\t.describe('Default hardware for this printer'),\n\t})\n\t.describe('A RatOS supported 3d printer');\n\nexport const PrinterDefinitionWithResolvedToolheads = PrinterDefinition.extend({\n\tdefaults: PrinterDefinition.shape.defaults\n\t\t.extend({\n\t\t\ttoolheads: z.array(ToolheadConfiguration),\n\t\t})\n\t\t.strict(),\n});\n\nexport type PrinterDefinition = z.infer<typeof PrinterDefinition>;\nexport type PrinterDefinitionWithResolvedToolheads = z.infer<typeof PrinterDefinitionWithResolvedToolheads>;\n","import { z } from 'zod';\nimport { BoardID, Toolboard } from '@/zods/boards';\nimport { Hotend, Thermistor, Extruder, Probe, Endstop, Fan, Accelerometer, Nozzle } from '@/zods/hardware';\nimport { PrinterAxis } from '@/zods/motion';\nimport { getDefaultNozzle } from '@/data/nozzles';\n\nexport const BaseToolheadConfiguration = z\n\t.object({\n\t\thotend: Hotend,\n\t\tthermistor: Thermistor,\n\t\textruder: Extruder,\n\t\txEndstop: Endstop,\n\t\tyEndstop: Endstop,\n\t\thotendFan: Fan,\n\t\tpartFan: Fan,\n\t\tnozzle: Nozzle.default(getDefaultNozzle()),\n\t\txAccelerometer: Accelerometer.optional().nullable(),\n\t\tyAccelerometer: Accelerometer.optional().nullable(),\n\t\ttoolboard: Toolboard.nullable(),\n\t\tprobe: Probe.optional(),\n\t\taxis: z.literal(PrinterAxis.x).or(z.literal(PrinterAxis.dual_carriage)),\n\t\tdescription: z.string().optional(),\n\t\ttoolNumber: z.number().optional(),\n\t})\n\t.strict();\n\nexport const ToolNumber = z.union([z.literal(0), z.literal(1)]);\nexport const ToolAxis = z.union([\n\tz.literal(PrinterAxis.x),\n\tz.literal(PrinterAxis.dual_carriage),\n\tz.literal(PrinterAxis.extruder),\n\tz.literal(PrinterAxis.extruder1),\n]);\nexport const ToolOrAxis = z.union([ToolAxis, ToolNumber]);\nexport type ToolNumber = z.infer<typeof ToolNumber>;\nexport type ToolAxis = z.infer<typeof ToolAxis>;\nexport type ToolOrAxis = z.infer<typeof ToolOrAxis>;\n\nexport const ToolheadConfiguration = BaseToolheadConfiguration.refine(\n\t(data) => data.toolboard !== null || data.xEndstop.id !== 'endstop-toolboard',\n\t'Cannot use toolboard endstop without a toolboard',\n)\n\t.refine(\n\t\t(data) =>\n\t\t\tdata.toolboard !== null ||\n\t\t\t!['2pin-toolboard', '4pin-toolboard', '4pin-dedicated-toolboard'].includes(data.hotendFan.id),\n\t\t'Cannot use toolboard hotend fan without a toolboard',\n\t)\n\t.refine(\n\t\t(data) =>\n\t\t\tdata.toolboard !== null ||\n\t\t\t!['2pin-toolboard', '4pin-toolboard', '4pin-dedicated-toolboard'].includes(data.partFan.id),\n\t\t'Cannot use toolboard part cooling fan without a toolboard',\n\t);\n\nexport const PartialToolheadConfiguration = BaseToolheadConfiguration.partial().optional();\nexport const SerializedToolheadConfiguration = BaseToolheadConfiguration.extend({\n\thotend: Hotend.shape.id,\n\textruder: Extruder.shape.id,\n\tthermistor: Thermistor,\n\txEndstop: Endstop.shape.id,\n\tyEndstop: Endstop.shape.id,\n\thotendFan: Fan.shape.id,\n\tpartFan: Fan.shape.id,\n\txAccelerometer: Accelerometer.shape.id.optional().nullable(),\n\tyAccelerometer: Accelerometer.shape.id.optional().nullable(),\n\ttoolboard: BoardID.optional().nullable(),\n\tprobe: Probe.shape.id.optional().nullable(),\n}).strict();\nexport const SerializedPartialToolheadConfiguration = SerializedToolheadConfiguration.partial().optional();\n\nexport type ToolheadConfiguration<T extends boolean> = z.infer<typeof ToolheadConfiguration> & {\n\ttoolboard: T extends true ? Toolboard : null;\n};\nexport type PartialToolheadConfiguration = z.infer<typeof PartialToolheadConfiguration>;\nexport type SerializedToolheadConfiguration = z.infer<typeof SerializedToolheadConfiguration>;\nexport type SerializedPartialToolheadConfiguration = z.infer<typeof SerializedPartialToolheadConfiguration>;\n","// @ts-check\nimport { z } from 'zod';\n\n/**\n * Specify your server-side environment variables schema here.\n * This way you can ensure the app isn't built with invalid env vars.\n */\nexport const serverSchema = z.object({\n\tNODE_ENV: z.enum(['development', 'test', 'production']),\n\tRATOS_CONFIGURATION_PATH: z.string(),\n\tRATOS_SCRIPT_DIR: z.string(),\n\tKLIPPER_CONFIG_PATH: z.string(),\n\tKLIPPER_DIR: z.string(),\n\tKLIPPER_ENV: z.string(),\n\tMOONRAKER_DIR: z.string(),\n\tLOG_FILE: z.string(),\n\tRATOS_DATA_DIR: z.string(),\n});\n\n/**\n * Specify your client-side environment variables schema here.\n * This way you can ensure the app isn't built with invalid env vars.\n * To expose them to the client, prefix them with `NEXT_PUBLIC_`.\n */\nexport const clientSchema = z.object({\n\tNEXT_PUBLIC_KLIPPER_HOSTNAME: z.string().optional(),\n});\n\n/**\n * You can't destruct `process.env` as a regular object, so you have to do\n * it manually here. This is because Next.js evaluates this at build time,\n * and only used environment variables are included in the build.\n * @type {{ [k in keyof z.infer<typeof clientSchema>]: z.infer<typeof clientSchema>[k] | undefined }}\n */\nexport const clientEnv = {\n\tNEXT_PUBLIC_KLIPPER_HOSTNAME: process.env.NEXT_PUBLIC_KLIPPER_HOSTNAME,\n};\n"],"names":["globalPinoOpts","timestamp","PinoLogLevel","z","enum","PinoLogEvent","object","ts","number","messages","array","any","bindings","record","string","level","label","value","send","logEvent","trpcClient","clientLog","mutate","parse","logger","getLogger","pino","browser","asObject","serialize","transmit","write","moonrakerSyncEventEmitter","EventTarget","DispatchSaveAtomEvent","itemKey","dispatchEvent","CustomEvent","detail","moonrakerWriteEffect","params","onSet","debug","key","node","newValue","concat","trigger","SyncWithMoonraker","children","param","moonraker","useMoonraker","read","useCallback","getItem","DefaultValue","saveAtom","event","saveItem","useEffect","addEventListener","removeEventListener","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsx","RecoilSync","Drivers","Driver","id","title","type","protocol","senseResistor","coolingCurrentThreshold","voltages","maxCurrent","external","partFanOptions","config","toolheadConfig","fans","axis","PrinterAxis","x","push","controlboard","fourPinFanConnectorCount","toolboard","hotendFanOptions","controllerFan","defaultControllerFan","getDefaultNozzle","diameter","findPreset","stepper","driver","voltage","current","performanceMode","presets","slice","sort","a","b","run_current","find","p","sense_resistor","Steppers","Stepper","maxPeakCurrent","driver_TBL","driver_TOFF","driver_HEND","driver_HSTRT","driver_IHOLDDELAY","driver_TPOWERDOWN","driver_PWM_FREQ","driver_PWM_GRAD","driver_PWM_AMPL","driver_PWM_AUTOSCALE","driver_SGT","fullStepsPerRotation","ToolheadHelper","hasToolboard","getToolboard","getMotionStepperName","dual_carriage","getMotionAxis","getToolboardName","getTool","getShortToolName","getDescription","_this_config_description","description","getExtruderAxis","extruder1","extruder","getToolCommand","getSerialSuffix","getExtruder","getHotend","hotend","getNozzle","_this_config_nozzle","nozzle","getThermistor","thermistor","getXEndstop","xEndstop","getYEndstop","yEndstop","getXAccelerometer","xAccelerometer","getYAccelerometer","yAccelerometer","getXAccelerometerName","_this_getXAccelerometer","getYAccelerometerName","_this_getYAccelerometer","getChangeSet","changes","changeSet","Object","keys","forEach","getConfig","change","deepEqual","parsed","PartialToolheadConfiguration","safeParse","getProbe","probe","getPartFan","partFan","getHotendFan","hotendFan","serializeToolheadConfiguration","constructor","toolhead","cachedPrinters","readPrinterAtom","printer","PrinterState","printerId","PrinterDefinitionWithResolvedToolheads","shape","success","newPrinter","data","query","readPrinterRailAtom","param1","printerRailState","PrinterRailState","parsedRail","SerializedPrinterRail","printerRailDefault","defaults","rails","r","parsedRailRepaired","atom","default","effects","syncEffect","Promise","setTimeout","refine","getRefineCheckerForZodSchema","nullable","LoadablePrinterState","selector","get","loadable","noWait","hasValue","contents","hasError","loading","state","PrinterSizeState","PrinterSize","ControlboardState","board","boardId","path","BoardPath","boardReq","mcu","boards","boardFilters","newBoard","Board","atomFamily","PrinterRailsState","map","railState","rail","deserializePrinterRail","set","values","serializePrinterRail","PrinterToolheadState","toolNumber","tNum","printerToolheadState","parsedToolhead","ToolheadConfiguration","freshToolboard","toolboardPath","maybeToolboard","Toolboard","console","error","BaseToolheadConfiguration","extend","ToolNumber","selectorFamily","deserializeToolheadConfiguration","th","printerConfig","PrinterToolheadsState","waitForAll","toolheads","i","filter","Boolean","reset","LoadablePrinterToolheadsState","deserializeDriver","d","driverId","deserializeStepper","stepperId","BasePrinterRail","deserializePrinterRailDefinition","PrinterRailDefinition","stringToTitleObject","serializePartialToolheadConfiguration","undefined","AxisPinPrefix","AllPins","x_step_pin","optional","x_dir_pin","x_enable_pin","x_uart_pin","x_diag_pin","x_endstop_pin","x1_step_pin","x1_dir_pin","x1_enable_pin","x1_uart_pin","x1_diag_pin","x1_endstop_pin","dual_carriage_step_pin","dual_carriage_dir_pin","dual_carriage_enable_pin","dual_carriage_uart_pin","dual_carriage_diag_pin","dual_carriage_endstop_pin","y_step_pin","y_dir_pin","y_enable_pin","y_uart_pin","y_diag_pin","y_endstop_pin","y1_step_pin","y1_dir_pin","y1_enable_pin","y1_uart_pin","y1_diag_pin","y1_endstop_pin","y2_step_pin","y2_dir_pin","y2_enable_pin","y2_uart_pin","y2_diag_pin","y2_endstop_pin","z0_step_pin","z0_dir_pin","z0_enable_pin","z0_uart_pin","z0_diag_pin","z1_step_pin","z1_dir_pin","z1_enable_pin","z1_uart_pin","z1_diag_pin","z2_step_pin","z2_dir_pin","z2_enable_pin","z2_uart_pin","z2_diag_pin","z3_step_pin","z3_dir_pin","z3_enable_pin","z3_uart_pin","z3_diag_pin","e_step_pin","e_dir_pin","e_enable_pin","e_uart_pin","e_diag_pin","e_heater_pin","e_sensor_pin","stepper_spi_mosi_pin","stepper_spi_miso_pin","stepper_spi_sclk_pin","adxl345_cs_pin","bltouch_sensor_pin","bltouch_control_pin","probe_pin","fan_part_cooling_pin","fan_toolhead_cooling_pin","fan_controller_board_pin","heater_bed_heating_pin","heater_bed_sensor_pin","PinMap","pinAliasPrefixToPrinterAxis","x1","y","y1","y2","z0","z1","z2","z3","e","e1","nativeEnum","transform","v","_Object_keys_find","pa","and","or","UARTPins","uart_pin","uart_address","rx_pin","tx_pin","SPIPins","cs_pin","spi_bus","spi_software_mosi_pin","spi_software_miso_pin","spi_software_sclk_pin","hasSPI","slot","hasUART","MotorSlotPins","step_pin","dir_pin","enable_pin","diag_pin","endstop_pin","MotorSlot","message","innerType","omit","partial","MotorSlotKey","BoardID","brand","BoardSerialPath","integratedDrivers","motorSlots","isToolboard","boolean","isHost","serialPath","name","manufacturer","firmwareBinaryName","compileScript","flashScript","flashInstructions","disableAutoFlash","documentationLink","hasQuirksFiles","driverCount","extruderlessConfig","driverVoltages","Voltage","hasMcuTempSensor","alternativePT1000Resistor","outputPins","pin","min","max","dfu","dfuBootImage","flashDevice","instructions","reminder","hasBoot0Jumper","stepperSPI","software","sclk","mosi","miso","hardware","bus","ADXL345SPI","LIS2DW","literal","detected","thermistors","startsWithServerValidation","process","env","RATOS_CONFIGURATION_PATH","environment","serverSchema","hardwareType","startsWith","endsWith","Thermistor","Hotend","flowType","union","Nozzle","Extruder","Probe","Endstop","Accelerometer","Fan","StepperVoltage","Voltages","getSupportedVoltages","includes","matchesDefaultRail","defaultRail","BaseStepperPreset","driver_MSLUT0","driver_MSLUT1","driver_MSLUT2","driver_MSLUT3","driver_MSLUT4","driver_MSLUT5","driver_MSLUT6","driver_MSLUT7","driver_W0","driver_W1","driver_W2","driver_W3","driver_X1","driver_X2","driver_X3","driver_START_SIN","driver_START_SIN90","describe","axisDescription","motorSlot","rotationDistance","gearRatio","regex","homingSpeed","microstepping","SerializedPrinterRailDefinition","PrinterRail","endstop","PrinterSizeDefinition","BasePrinterConfiguration","PrinterDefinition","size","stealthchop","standstillStealth","strict","ctx","sizes","toString","addIssue","code","ZodIssueCode","custom","NEVER","PrinterConfiguration","superRefine","arg","toolboardCount","t","length","driverCountRequired","too_small","minimum","inclusive","errors","conflicts","conflictingToolhead","pr","railName","toLocaleUpperCase","cr","join","SerializedPrinterConfiguration","SerializedToolheadConfiguration","PartialPrinterConfiguration","SerializedPartialPrinterConfiguration","SerializedPartialToolheadConfiguration","SpeedLimits","velocity","accel","z_velocity","z_accel","square_corner_velocity","travel_velocity","travel_accel","image","template","kinematics","bedMargin","tuple","speedLimits","basic","performance","ToolAxis","NODE_ENV","RATOS_SCRIPT_DIR","KLIPPER_CONFIG_PATH","KLIPPER_DIR","KLIPPER_ENV","MOONRAKER_DIR","LOG_FILE","RATOS_DATA_DIR","NEXT_PUBLIC_KLIPPER_HOSTNAME"],"sourceRoot":""}