{"version":3,"file":"static/chunks/6302.055c5b59bd8c3ca8.js","mappings":"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","sources":["webpack://_N_E/ignored|/home/runner/work/RatOS-configurator/RatOS-configurator/src/node_modules/.pnpm/@tensorflow+tfjs-core@4.19.0_encoding@0.1.13/node_modules/@tensorflow/tfjs-core/dist/platforms|node-fetch","webpack://_N_E/ignored|/home/runner/work/RatOS-configurator/RatOS-configurator/src/node_modules/.pnpm/@tensorflow+tfjs-core@4.19.0_encoding@0.1.13/node_modules/@tensorflow/tfjs-core/dist/platforms|util","webpack://_N_E/./app/analysis/periodogram.ts","webpack://_N_E/./app/analysis/_worker/stream-utils.ts","webpack://_N_E/./app/analysis/_worker/psd.ts","webpack://_N_E/webpack/bootstrap","webpack://_N_E/webpack/runtime/chunk loaded","webpack://_N_E/webpack/runtime/compat get default export","webpack://_N_E/webpack/runtime/define property getters","webpack://_N_E/webpack/runtime/ensure chunk","webpack://_N_E/webpack/runtime/get javascript chunk filename","webpack://_N_E/webpack/runtime/get mini-css chunk filename","webpack://_N_E/webpack/runtime/global","webpack://_N_E/webpack/runtime/hasOwnProperty shorthand","webpack://_N_E/webpack/runtime/make namespace object","webpack://_N_E/webpack/runtime/trusted types policy","webpack://_N_E/webpack/runtime/trusted types script url","webpack://_N_E/webpack/runtime/publicPath","webpack://_N_E/webpack/runtime/importScripts chunk loading","webpack://_N_E/webpack/runtime/startup chunk dependencies","webpack://_N_E/webpack/before-startup","webpack://_N_E/webpack/startup","webpack://_N_E/webpack/after-startup","webpack://_N_E/<anon>"],"sourcesContent":["/* (ignored) */","/* (ignored) */","import {\n\tsignal as tfSignal,\n\tTensor1D,\n\tsum,\n\tpow,\n\tdiv,\n\tmean,\n\tsub,\n\ttidy,\n\ttranspose,\n\tmul,\n\treal,\n\ttensor1d,\n} from '@tensorflow/tfjs-core';\nimport '@tensorflow/tfjs-backend-webgl';\nimport { NumberRange } from 'scichart';\nimport { PSD } from '@/zods/analysis';\n\nexport interface TypedArrayPSD extends Omit<PSD, 'estimates' | 'frequencies'> {\n\testimates: Float64Array;\n\tfrequencies: Float64Array;\n}\n\n/**\n * Returns the ceil of the log2 of the absolute value of the passed number\n * @memberof module:bcijs\n * @function\n * @name nextpow2\n * @param {number} num\n * @returns {number} The ceil of the log2 of the absolute value of the passed number\n * @example\n * nextpow2(8); // 3\n * nextpow2(9); // 4\n * nextpow2(16); // 4\n * nextpow2(30); // 5\n * nextpow2(0); // -Infinity\n */\nexport function nextpow2(num: number): number {\n\treturn Math.ceil(Math.log2(Math.abs(num)));\n}\n\nexport const detrendSignal = (signal: Tensor1D) => tidy(() => sub<Tensor1D>(signal, mean(signal, 0, true)));\n\nconst WINDOW_T_SEC = 0.5;\nconst MAX_FREQ = 200;\n\nexport const getFFTSize = (sampleRate: number, windowT: number = WINDOW_T_SEC): number =>\n\t1 << Math.floor(sampleRate * windowT - 1).toString(2).length;\n\n/**\n * Estimates the power spectral density of a real-valued input signal using the periodogram method and a hann window.\n * Output units are based on that of the input signal, of the form X^2/Hz, where X is the units of the input signal.\n *\n * @memberof module:bcijs\n * @function\n * @name periodogram\n * @param {number[]} signal - The signal.\n * @param {number} sampleRate - sample rate in Hz\n * @param {Object} [options]\n * @param {number} [options.fftSize=1 << nextpow2(sample_rate * WINDOW_T_SEC - 1)] - Size of the fft to be used. Should be a power of 2.\n * @returns {Object} Object with keys 'estimates' (the psd estimates) and 'frequencies' (the corresponding frequencies in Hz)\n */\nexport async function powerSpectralDensity(\n\tsignal: Tensor1D,\n\tsampleRate: number,\n\toptions?: { fftSize?: number; _scaling?: string; isDetrended?: boolean },\n): Promise<TypedArrayPSD> {\n\tlet { fftSize, _scaling } = Object.assign(\n\t\t{\n\t\t\tfftSize: getFFTSize(sampleRate, WINDOW_T_SEC),\n\t\t\t_scaling: 'psd',\n\t\t},\n\t\toptions,\n\t);\n\t// Validate _scaling\n\tif (_scaling != 'psd' && _scaling != 'none') {\n\t\tthrow new Error('Unknown scaling');\n\t}\n\n\tlet scaling_factor: number = _scaling === 'none' ? 1 : 2;\n\tconst win = tfSignal.hannWindow(fftSize);\n\tlet windowLossCompensationFactor = (await tidy(() => div(div(1.0, sum(pow(win, 2))), sampleRate)).array()) as number;\n\n\tconst detrended = options?.isDetrended ? signal : detrendSignal(signal);\n\t// await setBackend('webgl');\n\tlet f = tfSignal.stft(detrended, fftSize, Math.floor(fftSize / 2), fftSize, tfSignal.hannWindow);\n\n\tlet x = (await f.array()) as number[][];\n\tf.dispose();\n\tdetrended.dispose();\n\twin.dispose();\n\n\tconst data = x.map((series) => {\n\t\t// Get the power of each FFT bin value\n\t\tlet powers: number[] = [];\n\t\tlet frequencies: number[] = [];\n\t\tlet maxPower = 0;\n\t\tlet minPower = 0;\n\t\tlet skipped = 0;\n\t\tconst fftRatio = sampleRate / fftSize;\n\t\tfor (var i = 0; i < series.length - 1; i += 2) {\n\t\t\tconst frequency = (i === 0 ? 0 : i / 2) * fftRatio;\n\t\t\tif (frequency > MAX_FREQ) {\n\t\t\t\tskipped++;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst nextFrequency = ((i + 2) / 2) * fftRatio;\n\t\t\t// apply scaling\n\t\t\t// magnitude is sqrt(real^2 + imag^2), power is magnitude^2\n\t\t\tlet power: number = series[i] ** 2 + series[i + 1] ** 2;\n\t\t\tpower *= windowLossCompensationFactor;\n\t\t\t// Don't scale DC or Nyquist by 2\n\t\t\tif (_scaling == 'psd' && i > 0 && nextFrequency < MAX_FREQ) {\n\t\t\t\tpower *= scaling_factor;\n\t\t\t}\n\t\t\tif (power > maxPower) {\n\t\t\t\tmaxPower = power;\n\t\t\t}\n\t\t\tif (power < minPower) {\n\t\t\t\tminPower = power;\n\t\t\t}\n\t\t\tpowers.push(power);\n\t\t\tfrequencies.push(frequency);\n\t\t}\n\n\t\treturn {\n\t\t\testimates: powers,\n\t\t\tfrequencies: frequencies,\n\t\t\tpowerRange: new NumberRange(minPower, maxPower),\n\t\t};\n\t});\n\tconst avg = welch(data);\n\treturn avg;\n}\n\n// Keep this async so that we can potentially move it to the GPU\nexport const welch = async (PSDs: PSD[]): Promise<TypedArrayPSD> => {\n\tif (PSDs.length == 0) throw new Error('Unable to calculate any PSD estimates');\n\t// if (PSDs.length == 1) {\n\t// \tgetLogger().warn('Not enough data to compute more than one segment, returning single modified periodogram.');\n\t// \treturn PSDs[0];\n\t// }\n\n\t// Compute average PSD\n\tlet num_estimates = PSDs[0].estimates.length;\n\tlet avg = new Float64Array(num_estimates).fill(0);\n\tfor (let p = 0; p < PSDs.length; p++) {\n\t\tfor (let i = 0; i < num_estimates; i++) {\n\t\t\tavg[i] += PSDs[p].estimates[i];\n\t\t}\n\t}\n\tlet maxPower = 0;\n\tlet minPower = 0;\n\tfor (let i = 0; i < num_estimates; i++) {\n\t\tavg[i] = avg[i] / PSDs.length;\n\t\tif (avg[i] > maxPower) {\n\t\t\tmaxPower = avg[i];\n\t\t}\n\t\tif (avg[i] < minPower) {\n\t\t\tminPower = avg[i];\n\t\t}\n\t}\n\n\treturn {\n\t\testimates: avg,\n\t\tfrequencies: Float64Array.from(PSDs[0].frequencies),\n\t\tpowerRange: new NumberRange(minPower, maxPower),\n\t};\n};\n\nexport const sumPSDs = (PSDs: TypedArrayPSD[]): TypedArrayPSD => {\n\tlet num_estimates = PSDs[0].estimates.length;\n\tlet sum = new Float64Array(num_estimates).fill(0);\n\tfor (let p = 0; p < PSDs.length; p++) {\n\t\tfor (let i = 0; i < num_estimates; i++) {\n\t\t\tsum[i] += PSDs[p].estimates[i];\n\t\t}\n\t}\n\tconst { minPower, maxPower } = PSDs.reduce(\n\t\t(acc, psd) => {\n\t\t\tif (psd.powerRange.min < acc.minPower) {\n\t\t\t\tacc.minPower = psd.powerRange.min;\n\t\t\t}\n\t\t\tif (psd.powerRange.max > acc.maxPower) {\n\t\t\t\tacc.maxPower = psd.powerRange.max;\n\t\t\t}\n\t\t\treturn acc;\n\t\t},\n\t\t{ minPower: 0, maxPower: 0 },\n\t);\n\treturn {\n\t\testimates: sum,\n\t\tfrequencies: Float64Array.from(PSDs[0].frequencies),\n\t\tpowerRange: new NumberRange(minPower, maxPower),\n\t};\n};\n","import { scan, pipe, filter, Observable, UnaryFunction } from 'rxjs';\n\nexport const bufferFifo = <T>(bufferSize: number): UnaryFunction<Observable<T>, Observable<T[]>> =>\n\tpipe(\n\t\tscan((acc, input: T) => {\n\t\t\tconst buffer = [...acc, input].slice(-bufferSize);\n\t\t\treturn buffer;\n\t\t}, [] as T[]),\n\t\tfilter((buffer) => buffer.length >= bufferSize),\n\t);\n","import {\n\tObservable,\n\tswitchMap,\n\tswitchScan,\n\tscan,\n\tthrottle,\n\tSubject,\n\tmap,\n\tfrom,\n\tconcatMap,\n\tdistinctUntilChanged,\n\tfilter,\n\tmergeMap,\n\tof,\n\tshareReplay,\n\tEMPTY,\n\tmerge,\n\tasyncScheduler,\n\tscheduled,\n} from 'rxjs';\nimport { AccelSampleMs } from '@/app/analysis/_worker/processing';\nimport { powerSpectralDensity, sumPSDs } from '@/app/analysis/periodogram';\nimport { Rank, Tensor2D, reshape, setBackend, split, tensor2d, tidy } from '@tensorflow/tfjs-core';\nimport '@tensorflow/tfjs-backend-webgpu';\nimport '@tensorflow/tfjs-backend-webgl';\nimport BigNumber from 'bignumber.js';\nimport { DoWork, runWorker } from 'observable-webworker';\nimport { bufferFifo } from '@/app/analysis/_worker/stream-utils';\nif (!navigator.gpu) {\n\tsetBackend('webgpu');\n} else {\n\tsetBackend('webgl');\n}\n\nconst runPSD = async (samples: AccelSampleMs[], includeSource: boolean = false) => {\n\tconst sampleRate = new BigNumber(samples.length)\n\t\t.div(new BigNumber(samples[samples.length - 1][0]).minus(samples[0][0]).shiftedBy(-3))\n\t\t.decimalPlaces(0, BigNumber.ROUND_FLOOR)\n\t\t.toNumber();\n\tconst tensors = tidy(() => {\n\t\tconst signal = tensor2d(samples.map((s) => [s[1], s[2], s[3]]));\n\t\tconst [x2d, y2d, z2d] = split<Tensor2D>(signal, 3, 1);\n\t\tconst x = reshape<Rank.R1>(x2d, [x2d.shape[0]]);\n\t\tconst y = reshape<Rank.R1>(y2d, [y2d.shape[0]]);\n\t\tconst z = reshape<Rank.R1>(z2d, [z2d.shape[0]]);\n\t\treturn { x, y, z };\n\t});\n\tconst [xPsd, yPsd, zPsd] = await Promise.all([\n\t\tpowerSpectralDensity(tensors.x, sampleRate, { isDetrended: true }),\n\t\tpowerSpectralDensity(tensors.y, sampleRate, { isDetrended: true }),\n\t\tpowerSpectralDensity(tensors.z, sampleRate, { isDetrended: true }),\n\t]);\n\tObject.values(tensors).forEach((t) => t.dispose());\n\treturn {\n\t\tx: xPsd,\n\t\ty: yPsd,\n\t\tz: zPsd,\n\t\ttotal: sumPSDs([xPsd, yPsd, zPsd]),\n\t\t// TODO: save source for later analysis.\n\t\t// source: includeSource ? samples.map((s) => new Float64Array([s[0].toNumber(), s[1], s[2], s[3]])) : undefined,\n\t};\n};\n\nexport type PSDResult = Awaited<ReturnType<typeof runPSD>>;\n\nexport type AccumulateAndCallback = false | ((psd: Awaited<ReturnType<typeof runPSD>>) => void);\n\nconst psdProcess = new Subject();\nconst psdProcess$ = psdProcess.asObservable();\nconst accumulationSubject = new Subject<AccumulateAndCallback>();\nconst accumulation$ = accumulationSubject.asObservable();\nconst createPSDProcessor = (signal$: Observable<AccelSampleMs>, specSampleRate$: Observable<number>) => {\n\tlet first = true;\n\treturn accumulation$.pipe(\n\t\tdistinctUntilChanged(),\n\t\tswitchScan(\n\t\t\t(acc, accumulate) => {\n\t\t\t\tif (accumulate) {\n\t\t\t\t\treturn signal$.pipe(\n\t\t\t\t\t\tscan((sampleAcc, sample) => {\n\t\t\t\t\t\t\tsampleAcc.push(sample);\n\t\t\t\t\t\t\treturn sampleAcc;\n\t\t\t\t\t\t}, [] as AccelSampleMs[]),\n\t\t\t\t\t\tfilter((samples) => samples.length > 3200),\n\t\t\t\t\t\tmap((samples) => {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tsamples,\n\t\t\t\t\t\t\t\tonAccumulationComplete: accumulate,\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}),\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tif (!accumulate && acc.onAccumulationComplete) {\n\t\t\t\t\tconst cb = acc.onAccumulationComplete;\n\t\t\t\t\trunPSD(acc.samples, true).then((psd) => {\n\t\t\t\t\t\tcb(psd);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\t// Don't accumulate\n\t\t\t\treturn specSampleRate$.pipe(\n\t\t\t\t\tswitchMap((sampleRate) => {\n\t\t\t\t\t\treturn signal$.pipe(bufferFifo(sampleRate)); // Returns the last count(sampleRate) samples each time there's a new sample.\n\t\t\t\t\t}),\n\t\t\t\t\tmap((samples) => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tsamples,\n\t\t\t\t\t\t\tonAccumulationComplete: false,\n\t\t\t\t\t\t};\n\t\t\t\t\t}),\n\t\t\t\t);\n\t\t\t},\n\t\t\t{ samples: [] as AccelSampleMs[], onAccumulationComplete: false as AccumulateAndCallback },\n\t\t),\n\t\tthrottle(() => psdProcess$, { leading: first, trailing: true }),\n\t\tconcatMap(({ samples, onAccumulationComplete }) => {\n\t\t\tif (first) {\n\t\t\t\tfirst = false;\n\t\t\t}\n\t\t\treturn scheduled(\n\t\t\t\tfrom(\n\t\t\t\t\trunPSD(samples).then((psd) => {\n\t\t\t\t\t\tpsdProcess.next({}); // Allow the next batch of samples through.\n\t\t\t\t\t\treturn psd;\n\t\t\t\t\t}),\n\t\t\t\t),\n\t\t\t\tasyncScheduler,\n\t\t\t);\n\t\t}),\n\t);\n};\n\nexport type PSDWorkerInput =\n\t| {\n\t\t\tcommand: 'sampleInput';\n\t\t\tpayload: AccelSampleMs;\n\t  }\n\t| {\n\t\t\tcommand: 'specSampleRateInput';\n\t\t\tpayload: number;\n\t  }\n\t| {\n\t\t\tcommand: 'accumulate';\n\t\t\tpayload: boolean;\n\t  };\nexport type PSDWorkerOutput =\n\t| {\n\t\t\ttype: 'accumulation_finished';\n\t\t\tpsd: PSDResult;\n\t  }\n\t| {\n\t\t\ttype: 'accumulation_started';\n\t  }\n\t| {\n\t\t\ttype: 'psd';\n\t\t\tpsd: PSDResult;\n\t  };\n\nlet processor: ReturnType<typeof createPSDProcessor> | null = null;\nlet signalPassThroughSubject = new Subject<AccelSampleMs>();\nlet signalPassThrough$ = signalPassThroughSubject.asObservable();\nlet sampleRatePassThroughSubject = new Subject<number>();\nlet sampleRatePassThrough$ = sampleRatePassThroughSubject\n\t.asObservable()\n\t.pipe(shareReplay({ bufferSize: 1, refCount: false }));\nexport class PSDWorker implements DoWork<PSDWorkerInput, PSDWorkerOutput> {\n\tprivate isAccumulating = false;\n\tpublic work(input$: Observable<PSDWorkerInput>) {\n\t\treturn input$.pipe(\n\t\t\tmergeMap((input): Observable<PSDWorkerOutput> => {\n\t\t\t\tswitch (input.command) {\n\t\t\t\t\tcase 'accumulate': {\n\t\t\t\t\t\tif (!this.isAccumulating && input.payload === true) {\n\t\t\t\t\t\t\tthis.isAccumulating = true;\n\t\t\t\t\t\t\treturn merge(\n\t\t\t\t\t\t\t\tof({\n\t\t\t\t\t\t\t\t\ttype: `accumulation_started` as const,\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\tscheduled(\n\t\t\t\t\t\t\t\t\tfrom(\n\t\t\t\t\t\t\t\t\t\tnew Promise<PSDResult>((resolve, reject) => {\n\t\t\t\t\t\t\t\t\t\t\taccumulationSubject.next((val) => {\n\t\t\t\t\t\t\t\t\t\t\t\tresolve(val);\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\t).pipe(\n\t\t\t\t\t\t\t\t\t\tmap((result) => {\n\t\t\t\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\t\t\t\ttype: `accumulation_finished` as const,\n\t\t\t\t\t\t\t\t\t\t\t\tpsd: result,\n\t\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\tasyncScheduler,\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.isAccumulating = false;\n\t\t\t\t\t\t\taccumulationSubject.next(false);\n\t\t\t\t\t\t\tpsdProcess.next({});\n\t\t\t\t\t\t\treturn EMPTY;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcase 'sampleInput': {\n\t\t\t\t\t\tsignalPassThroughSubject.next(input.payload);\n\t\t\t\t\t\tif (processor == null) {\n\t\t\t\t\t\t\tprocessor = createPSDProcessor(signalPassThrough$, sampleRatePassThrough$);\n\t\t\t\t\t\t\taccumulationSubject.next(false);\n\t\t\t\t\t\t\treturn processor.pipe(\n\t\t\t\t\t\t\t\tmap((psd) => {\n\t\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\t\ttype: 'psd',\n\t\t\t\t\t\t\t\t\t\tpsd,\n\t\t\t\t\t\t\t\t\t} as {\n\t\t\t\t\t\t\t\t\t\ttype: 'psd';\n\t\t\t\t\t\t\t\t\t\tpsd: PSDResult;\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn EMPTY;\n\t\t\t\t\t}\n\t\t\t\t\tcase 'specSampleRateInput': {\n\t\t\t\t\t\tif (!this.isAccumulating) {\n\t\t\t\t\t\t\taccumulationSubject.next(false);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsampleRatePassThroughSubject.next(input.payload);\n\t\t\t\t\t\treturn EMPTY;\n\t\t\t\t\t}\n\t\t\t\t\tdefault: {\n\t\t\t\t\t\treturn EMPTY;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t}\n\tpublic selectTransferables(output: PSDWorkerOutput): Transferable[] {\n\t\tswitch (output.type) {\n\t\t\tcase 'psd': {\n\t\t\t\treturn [\n\t\t\t\t\toutput.psd.x.estimates.buffer,\n\t\t\t\t\toutput.psd.x.frequencies.buffer,\n\t\t\t\t\toutput.psd.y.estimates.buffer,\n\t\t\t\t\toutput.psd.y.frequencies.buffer,\n\t\t\t\t\toutput.psd.z.estimates.buffer,\n\t\t\t\t\toutput.psd.z.frequencies.buffer,\n\t\t\t\t\toutput.psd.total.estimates.buffer,\n\t\t\t\t\toutput.psd.total.frequencies.buffer,\n\t\t\t\t];\n\t\t\t}\n\t\t\tcase 'accumulation_finished': {\n\t\t\t\treturn [\n\t\t\t\t\toutput.psd.x.estimates.buffer,\n\t\t\t\t\toutput.psd.x.frequencies.buffer,\n\t\t\t\t\toutput.psd.y.estimates.buffer,\n\t\t\t\t\toutput.psd.y.frequencies.buffer,\n\t\t\t\t\toutput.psd.z.estimates.buffer,\n\t\t\t\t\toutput.psd.z.frequencies.buffer,\n\t\t\t\t\toutput.psd.total.estimates.buffer,\n\t\t\t\t\toutput.psd.total.frequencies.buffer,\n\t\t\t\t];\n\t\t\t}\n\t\t\tdefault: {\n\t\t\t\treturn [];\n\t\t\t}\n\t\t}\n\t}\n}\n\nrunWorker(PSDWorker);\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\tvar threw = true;\n\ttry {\n\t\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t\tthrew = false;\n\t} finally {\n\t\tif(threw) delete __webpack_module_cache__[moduleId];\n\t}\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// the startup function\n__webpack_require__.x = function() {\n\t// Load entry module and return exports\n\t// This entry module depends on other loaded chunks and execution need to be delayed\n\tvar __webpack_exports__ = __webpack_require__.O(undefined, [364,6986,6639,5744,9300,5081,8833,5136], function() { return __webpack_require__(44639); })\n\t__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n\treturn __webpack_exports__;\n};\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = function(chunkId) {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce(function(promises, key) {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.u = function(chunkId) {\n\t// return url for filenames not based on template\n\tif (chunkId === 5744) return \"static/chunks/3c0d6de1.ff9795f876c0ff96.js\";\n\tif (chunkId === 9300) return \"static/chunks/de4cc4ef.03171b77d5759ebd.js\";\n\tif (chunkId === 5136) return \"static/chunks/5136.5c43c226cf8045f1.js\";\n\t// return url for filenames based on template\n\treturn \"static/chunks/\" + ({\"364\":\"3e8a0735\",\"6639\":\"a926f453\",\"6986\":\"0efacefc\"}[chunkId] || chunkId) + \"-\" + {\"364\":\"ff241942f5aa2446\",\"5081\":\"17e6cd45e36d4661\",\"6639\":\"33c3aae45dbbc348\",\"6986\":\"15aa0f67458d661e\",\"8833\":\"8233452a8f0931b8\"}[chunkId] + \".js\";\n};","// This function allow to reference all chunks\n__webpack_require__.miniCssF = function(chunkId) {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var policy;\n__webpack_require__.tt = function() {\n\t// Create Trusted Type policy if Trusted Types are available and the policy doesn't exist yet.\n\tif (policy === undefined) {\n\t\tpolicy = {\n\t\t\tcreateScriptURL: function(url) { return url; }\n\t\t};\n\t\tif (typeof trustedTypes !== \"undefined\" && trustedTypes.createPolicy) {\n\t\t\tpolicy = trustedTypes.createPolicy(\"nextjs#bundler\", policy);\n\t\t}\n\t}\n\treturn policy;\n};","__webpack_require__.tu = function(url) { return __webpack_require__.tt().createScriptURL(url); };","__webpack_require__.p = \"/configure/_next/\";","// no baseURI\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t6302: 1\n};\n\n// importScripts chunk loading\nvar installChunk = function(data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\twhile(chunkIds.length)\n\t\tinstalledChunks[chunkIds.pop()] = 1;\n\tparentChunkLoadingFunction(data);\n};\n__webpack_require__.f.i = function(chunkId, promises) {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\timportScripts(__webpack_require__.tu(__webpack_require__.p + __webpack_require__.u(chunkId)));\n\t\t}\n\t}\n};\n\nvar chunkLoadingGlobal = self[\"webpackChunk_N_E\"] = self[\"webpackChunk_N_E\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = installChunk;\n\n// no HMR\n\n// no HMR manifest","var next = __webpack_require__.x;\n__webpack_require__.x = function() {\n\treturn Promise.all([364,6986,6639,5744,9300,5081,8833,5136].map(__webpack_require__.e, __webpack_require__)).then(next);\n};",null,"// run startup\nvar __webpack_exports__ = __webpack_require__.x();\n"],"names":["deferred","policy","installedChunks","chunkLoadingGlobal","parentChunkLoadingFunction","next","detrendSignal","tidy","sub","signal","mean","getFFTSize","sampleRate","windowT","Math","floor","toString","length","powerSpectralDensity","options","fftSize","_scaling","Object","assign","scaling_factor","win","tfSignal","hannWindow","windowLossCompensationFactor","div","sum","pow","array","detrended","isDetrended","f","stft","x","dispose","data","map","powers","frequencies","maxPower","minPower","fftRatio","i","series","frequency","nextFrequency","power","push","estimates","powerRange","NumberRange","avg","welch","PSDs","num_estimates","Float64Array","fill","p","from","sumPSDs","reduce","acc","psd","min","max","bufferFifo","pipe","scan","input","buffer","slice","bufferSize","filter","navigator","gpu","setBackend","runPSD","samples","includeSource","BigNumber","minus","shiftedBy","decimalPlaces","ROUND_FLOOR","toNumber","tensors","tensor2d","s","x2d","y2d","z2d","split","reshape","shape","y","z","xPsd","yPsd","zPsd","Promise","all","values","forEach","t","total","psdProcess","Subject","psdProcess$","asObservable","accumulationSubject","accumulation$","createPSDProcessor","signal$","specSampleRate$","first","distinctUntilChanged","switchScan","accumulate","sampleAcc","sample","onAccumulationComplete","cb","then","switchMap","throttle","leading","trailing","concatMap","param","scheduled","asyncScheduler","processor","signalPassThroughSubject","signalPassThrough$","sampleRatePassThroughSubject","sampleRatePassThrough$","shareReplay","refCount","runWorker","work","input$","mergeMap","command","isAccumulating","payload","merge","of","type","resolve","reject","val","result","EMPTY","selectTransferables","output","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","threw","__webpack_modules__","call","m","__webpack_exports__","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","keys","every","key","splice","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","e","chunkId","promises","u","miniCssF","g","globalThis","window","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","value","tt","createScriptURL","url","trustedTypes","createPolicy","tu","importScripts","self","bind","moreModules","runtime","pop"],"sourceRoot":""}