{"version":3,"file":"static/chunks/app/motion/page-515828a773f3609a.js","mappings":"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","sources":["webpack://_N_E/?5198","webpack://_N_E/./app/motion/motion.tsx","webpack://_N_E/./app/motion/page.tsx","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.0.8_react-dom@18.2.0_react@18.2.0/node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.0.8_react-dom@18.2.0_react@18.2.0/node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.0.8_react-dom@18.2.0_react@18.2.0/node_modules/framer-motion/dist/es/utils/use-unmount-effect.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.0.8_react-dom@18.2.0_react@18.2.0/node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.0.8_react-dom@18.2.0_react@18.2.0/node_modules/framer-motion/dist/es/utils/use-force-update.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.0.8_react-dom@18.2.0_react@18.2.0/node_modules/framer-motion/dist/es/utils/use-is-mounted.mjs","webpack://_N_E/<anon>"],"sourcesContent":["import(/* webpackMode: \"eager\" */ \"/home/runner/work/RatOS-configurator/RatOS-configurator/src/app/motion/page.tsx\")","'use client';\nimport { useAutoAnimate } from '@formkit/auto-animate/react';\nimport { Spinner } from '@/components/common/spinner';\nimport { PrinterRailSettings } from '@/components/setup-steps/printer-rail-settings';\nimport { usePrinterConfiguration } from '@/hooks/usePrinterConfiguration';\nimport { deserializePrinterRailDefinition } from '@/utils/serialization';\n\nexport const Motion = () => {\n\tconst [animate] = useAutoAnimate();\n\tconst { selectedBoard, selectedPrinter, performanceMode, selectedPrinterRails, parsedPrinterConfiguration } =\n\t\tusePrinterConfiguration();\n\tlet formattedErrors = parsedPrinterConfiguration.success === false ? parsedPrinterConfiguration.error.format() : null;\n\tif (selectedPrinter == null) {\n\t\treturn (\n\t\t\t<div className=\"mx-auto flex items-center justify-center p-8\">\n\t\t\t\t<Spinner />\n\t\t\t</div>\n\t\t);\n\t}\n\treturn (\n\t\t<div className=\"grid gap-4 py-4 @lg:grid-cols-2 @3xl:grid-cols-3 @6xl:grid-cols-4\" ref={animate}>\n\t\t\t{selectedPrinterRails.map((rail, ri) => {\n\t\t\t\tconst defaultRail = selectedPrinter?.defaults.rails.find((r) => r.axis === rail.axis);\n\t\t\t\tif (defaultRail == null) {\n\t\t\t\t\tthrow new Error('No printer default for axis ' + rail.axis);\n\t\t\t\t}\n\t\t\t\treturn (\n\t\t\t\t\t<PrinterRailSettings\n\t\t\t\t\t\tkey={rail.axis}\n\t\t\t\t\t\terrors={formattedErrors?.rails?.[ri] != null ? formattedErrors.rails[ri] : { _errors: [] }}\n\t\t\t\t\t\tselectedBoard={selectedBoard}\n\t\t\t\t\t\tprinterRail={rail}\n\t\t\t\t\t\tprinterRailDefault={deserializePrinterRailDefinition(defaultRail)}\n\t\t\t\t\t\tperformanceMode={performanceMode}\n\t\t\t\t\t\tisVisible={true}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t})}\n\t\t</div>\n\t);\n};\n","'use client';\nimport React from 'react';\nimport { Motion } from '@/app/motion/motion';\nimport { Spinner } from '@/components/common/spinner';\nimport { useIsClient } from '@/hooks/isClient';\n\nconst LoadScreen: React.FC = () => {\n\treturn (\n\t\t<div className=\"p-8\">\n\t\t\t<div className=\"mb-5 border-b border-zinc-200 pb-5 dark:border-zinc-700\">\n\t\t\t\t<h3 className=\"text-lg font-medium leading-6 text-zinc-900 dark:text-zinc-100\">\n\t\t\t\t\tLoading printer configuration...\n\t\t\t\t</h3>\n\t\t\t\t<p className=\"mt-2 max-w-4xl text-sm text-zinc-500 dark:text-zinc-400\">\n\t\t\t\t\tPlease wait while RatOS loads your printer configuration\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t\t<div className=\"mt-4 flex h-48 items-center justify-center\">\n\t\t\t\t<Spinner />\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default function Page() {\n\tconst isClient = useIsClient();\n\treturn isClient ? (\n\t\t<div className=\"mx-auto mt-8 grid grid-cols-1 gap-6 @container\">\n\t\t\t<div className=\"relative rounded-lg bg-white shadow dark:bg-zinc-900\">\n\t\t\t\t<React.Suspense fallback={<LoadScreen />}>\n\t\t\t\t\t<Motion />\n\t\t\t\t</React.Suspense>\n\t\t\t</div>\n\t\t</div>\n\t) : null;\n}\n","import * as React from 'react';\nimport { useId, useRef, useInsertionEffect } from 'react';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent }) {\n    const id = useId();\n    const ref = useRef(null);\n    const size = useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n    });\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    useInsertionEffect(() => {\n        const { width, height, top, left } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        document.head.appendChild(style);\n        if (style.sheet) {\n            style.sheet.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            top: ${top}px !important;\n            left: ${left}px !important;\n          }\n        `);\n        }\n        return () => {\n            document.head.removeChild(style);\n        };\n    }, [isPresent]);\n    return (React.createElement(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size }, React.cloneElement(children, { ref })));\n}\n\nexport { PopChild };\n","import * as React from 'react';\nimport { useId, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    const context = useMemo(() => ({\n        id,\n        initial,\n        isPresent,\n        custom,\n        onExitComplete: (childId) => {\n            presenceChildren.set(childId, true);\n            for (const isComplete of presenceChildren.values()) {\n                if (!isComplete)\n                    return; // can stop searching when any is incomplete\n            }\n            onExitComplete && onExitComplete();\n        },\n        register: (childId) => {\n            presenceChildren.set(childId, false);\n            return () => presenceChildren.delete(childId);\n        },\n    }), \n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    presenceAffectsLayout ? undefined : [isPresent]);\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = React.createElement(PopChild, { isPresent: isPresent }, children);\n    }\n    return (React.createElement(PresenceContext.Provider, { value: context }, children));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import { useEffect } from 'react';\n\nfunction useUnmountEffect(callback) {\n    return useEffect(() => () => callback(), []);\n}\n\nexport { useUnmountEffect };\n","import * as React from 'react';\nimport { useContext, useRef, cloneElement, Children, isValidElement } from 'react';\nimport { useForceUpdate } from '../../utils/use-force-update.mjs';\nimport { useIsMounted } from '../../utils/use-is-mounted.mjs';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { useUnmountEffect } from '../../utils/use-unmount-effect.mjs';\nimport { invariant } from '../../utils/errors.mjs';\n\nconst getChildKey = (child) => child.key || \"\";\nfunction updateChildLookup(children, allChildren) {\n    children.forEach((child) => {\n        const key = getChildKey(child);\n        allChildren.set(key, child);\n    });\n}\nfunction onlyElements(children) {\n    const filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, (child) => {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nconst AnimatePresence = ({ children, custom, initial = true, onExitComplete, exitBeforeEnter, presenceAffectsLayout = true, mode = \"sync\", }) => {\n    invariant(!exitBeforeEnter, \"Replace exitBeforeEnter with mode='wait'\");\n    // We want to force a re-render once all exiting animations have finished. We\n    // either use a local forceRender function, or one from a parent context if it exists.\n    const forceRender = useContext(LayoutGroupContext).forceRender || useForceUpdate()[0];\n    const isMounted = useIsMounted();\n    // Filter out any children that aren't ReactElements. We can only track ReactElements with a props.key\n    const filteredChildren = onlyElements(children);\n    let childrenToRender = filteredChildren;\n    const exitingChildren = useRef(new Map()).current;\n    // Keep a living record of the children we're actually rendering so we\n    // can diff to figure out which are entering and exiting\n    const presentChildren = useRef(childrenToRender);\n    // A lookup table to quickly reference components by key\n    const allChildren = useRef(new Map()).current;\n    // If this is the initial component render, just deal with logic surrounding whether\n    // we play onMount animations or not.\n    const isInitialRender = useRef(true);\n    useIsomorphicLayoutEffect(() => {\n        isInitialRender.current = false;\n        updateChildLookup(filteredChildren, allChildren);\n        presentChildren.current = childrenToRender;\n    });\n    useUnmountEffect(() => {\n        isInitialRender.current = true;\n        allChildren.clear();\n        exitingChildren.clear();\n    });\n    if (isInitialRender.current) {\n        return (React.createElement(React.Fragment, null, childrenToRender.map((child) => (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, initial: initial ? undefined : false, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child)))));\n    }\n    // If this is a subsequent render, deal with entering and exiting children\n    childrenToRender = [...childrenToRender];\n    // Diff the keys of the currently-present and target children to update our\n    // exiting list.\n    const presentKeys = presentChildren.current.map(getChildKey);\n    const targetKeys = filteredChildren.map(getChildKey);\n    // Diff the present children with our target children and mark those that are exiting\n    const numPresent = presentKeys.length;\n    for (let i = 0; i < numPresent; i++) {\n        const key = presentKeys[i];\n        if (targetKeys.indexOf(key) === -1 && !exitingChildren.has(key)) {\n            exitingChildren.set(key, undefined);\n        }\n    }\n    // If we currently have exiting children, and we're deferring rendering incoming children\n    // until after all current children have exiting, empty the childrenToRender array\n    if (mode === \"wait\" && exitingChildren.size) {\n        childrenToRender = [];\n    }\n    // Loop through all currently exiting components and clone them to overwrite `animate`\n    // with any `exit` prop they might have defined.\n    exitingChildren.forEach((component, key) => {\n        // If this component is actually entering again, early return\n        if (targetKeys.indexOf(key) !== -1)\n            return;\n        const child = allChildren.get(key);\n        if (!child)\n            return;\n        const insertionIndex = presentKeys.indexOf(key);\n        let exitingComponent = component;\n        if (!exitingComponent) {\n            const onExit = () => {\n                // clean up the exiting children map\n                exitingChildren.delete(key);\n                // compute the keys of children that were rendered once but are no longer present\n                // this could happen in case of too many fast consequent renderings\n                // @link https://github.com/framer/motion/issues/2023\n                const leftOverKeys = Array.from(allChildren.keys()).filter((childKey) => !targetKeys.includes(childKey));\n                // clean up the all children map\n                leftOverKeys.forEach((leftOverKey) => allChildren.delete(leftOverKey));\n                // make sure to render only the children that are actually visible\n                presentChildren.current = filteredChildren.filter((presentChild) => {\n                    const presentChildKey = getChildKey(presentChild);\n                    return (\n                    // filter out the node exiting\n                    presentChildKey === key ||\n                        // filter out the leftover children\n                        leftOverKeys.includes(presentChildKey));\n                });\n                // Defer re-rendering until all exiting children have indeed left\n                if (!exitingChildren.size) {\n                    if (isMounted.current === false)\n                        return;\n                    forceRender();\n                    onExitComplete && onExitComplete();\n                }\n            };\n            exitingComponent = (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: false, onExitComplete: onExit, custom: custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child));\n            exitingChildren.set(key, exitingComponent);\n        }\n        childrenToRender.splice(insertionIndex, 0, exitingComponent);\n    });\n    // Add `MotionContext` even to children that don't need it to ensure we're rendering\n    // the same tree between renders\n    childrenToRender = childrenToRender.map((child) => {\n        const key = child.key;\n        return exitingChildren.has(key) ? (child) : (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child));\n    });\n    if (process.env.NODE_ENV !== \"production\" &&\n        mode === \"wait\" &&\n        childrenToRender.length > 1) {\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\n    }\n    return (React.createElement(React.Fragment, null, exitingChildren.size\n        ? childrenToRender\n        : childrenToRender.map((child) => cloneElement(child))));\n};\n\nexport { AnimatePresence };\n","import { useState, useCallback } from 'react';\nimport { useIsMounted } from './use-is-mounted.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction useForceUpdate() {\n    const isMounted = useIsMounted();\n    const [forcedRenderCount, setForcedRenderCount] = useState(0);\n    const forceRender = useCallback(() => {\n        isMounted.current && setForcedRenderCount(forcedRenderCount + 1);\n    }, [forcedRenderCount]);\n    /**\n     * Defer this to the end of the next animation frame in case there are multiple\n     * synchronous calls.\n     */\n    const deferredForceRender = useCallback(() => frame.postRender(forceRender), [forceRender]);\n    return [deferredForceRender, forcedRenderCount];\n}\n\nexport { useForceUpdate };\n","import { useRef } from 'react';\nimport { useIsomorphicLayoutEffect } from './use-isomorphic-effect.mjs';\n\nfunction useIsMounted() {\n    const isMounted = useRef(false);\n    useIsomorphicLayoutEffect(() => {\n        isMounted.current = true;\n        return () => {\n            isMounted.current = false;\n        };\n    }, []);\n    return isMounted;\n}\n\nexport { useIsMounted };\n"],"names":["Promise","resolve","then","__webpack_require__","bind","Motion","animate","useAutoAnimate","selectedBoard","selectedPrinter","performanceMode","selectedPrinterRails","parsedPrinterConfiguration","usePrinterConfiguration","formattedErrors","success","error","format","jsx_runtime","jsx","div","className","Spinner","ref","map","rail","ri","defaultRail","defaults","rails","find","r","axis","PrinterRailSettings","errors","_errors","printerRail","printerRailDefault","deserializePrinterRailDefinition","isVisible","LoadScreen","jsxs","h3","p","Page","isClient","useIsClient","React","fallback","PopChildMeasure","react","Component","getSnapshotBeforeUpdate","prevProps","element","props","childRef","current","isPresent","size","sizeRef","height","offsetHeight","width","offsetWidth","top","offsetTop","left","offsetLeft","componentDidUpdate","render","children","PopChild","id","useId","useRef","useInsertionEffect","dataset","motionPopId","style","document","createElement","head","appendChild","sheet","insertRule","removeChild","cloneElement","PresenceChild","initial","onExitComplete","custom","presenceAffectsLayout","mode","presenceChildren","use_constant","h","newChildrenMap","context","useMemo","isComplete","set","childId","values","register","delete","undefined","forEach","_","key","useEffect","PresenceContext","O","Provider","value","Map","getChildKey","child","AnimatePresence","exitBeforeEnter","callback","k","forceRender","useContext","LayoutGroupContext","use_force_update","N","isMounted","use_is_mounted","t","filteredChildren","onlyElements","filtered","Children","isValidElement","push","childrenToRender","exitingChildren","presentChildren","allChildren","isInitialRender","use_isomorphic_effect","L","updateChildLookup","clear","Fragment","presentKeys","targetKeys","numPresent","length","i","indexOf","has","component","get","insertionIndex","exitingComponent","leftOverKeys","Array","from","keys","filter","includes","childKey","leftOverKey","presentChildKey","presentChild","splice","useForceUpdate","_use_is_mounted_mjs__WEBPACK_IMPORTED_MODULE_1__","forcedRenderCount","setForcedRenderCount","react__WEBPACK_IMPORTED_MODULE_0__","useState","useCallback","deferredForceRender","_frameloop_frame_mjs__WEBPACK_IMPORTED_MODULE_2__","Wi","postRender","useIsMounted","_use_isomorphic_effect_mjs__WEBPACK_IMPORTED_MODULE_1__"],"sourceRoot":""}