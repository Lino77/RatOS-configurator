{"version":3,"file":"static/chunks/app/motion/page-393b3a379b4cacf3.js","mappings":"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","sources":["webpack://_N_E/?17e6","webpack://_N_E/./app/motion/motion.tsx","webpack://_N_E/./components/common/printer-state-header.tsx","webpack://_N_E/./app/motion/page.tsx","webpack://_N_E/./hooks/useMainsail.tsx","webpack://_N_E/<anon>"],"sourcesContent":["import(/* webpackMode: \"eager\" */ \"/home/runner/work/RatOS-configurator/RatOS-configurator/src/app/motion/page.tsx\")","'use client';\nimport { AnimatedContainer } from '@/components/common/animated-container';\nimport { Button } from '@/components/common/button';\nimport { Card } from '@/components/common/card';\nimport { Spinner } from '@/components/common/spinner';\nimport { FileChanges } from '@/components/setup-steps/file-changes';\nimport { PrinterRailSettings } from '@/components/setup-steps/printer-rail-settings';\nimport { CardContent, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';\nimport { serializePrinterConfiguration, usePrinterConfiguration } from '@/hooks/usePrinterConfiguration';\nimport { deserializePrinterRailDefinition } from '@/utils/serialization';\nimport { trpc } from '@/utils/trpc';\nimport { useQuery } from '@tanstack/react-query';\nimport { LayoutGroup } from 'framer-motion';\nimport { useState, useMemo, useCallback } from 'react';\nimport { toast } from 'sonner';\n\nexport const Motion = () => {\n\tconst { selectedBoard, selectedPrinter, performanceMode, selectedPrinterRails, parsedPrinterConfiguration } =\n\t\tusePrinterConfiguration();\n\tlet formattedErrors = parsedPrinterConfiguration.success === false ? parsedPrinterConfiguration.error.format() : null;\n\tconst [filesToOverwrite, setFilesToOverwrite] = useState<string[]>([]);\n\n\tconst [filesToIgnore, setFilesToIgnore] = useState<string[]>([]);\n\n\tconst serializedPrinterConfiguration = useMemo(() => {\n\t\tif (parsedPrinterConfiguration.success === true) {\n\t\t\treturn serializePrinterConfiguration(parsedPrinterConfiguration.data);\n\t\t}\n\t\treturn null;\n\t}, [parsedPrinterConfiguration]);\n\n\tconst saveConfigurationMutation = trpc.printer.saveConfiguration.useMutation();\n\tconst saveConfiguration = useCallback(async () => {\n\t\tif (parsedPrinterConfiguration.success) {\n\t\t\tsaveConfigurationMutation.mutate(\n\t\t\t\t{\n\t\t\t\t\tconfig: serializePrinterConfiguration(parsedPrinterConfiguration.data),\n\t\t\t\t\toverwriteFiles: filesToOverwrite,\n\t\t\t\t\tskipFiles: filesToIgnore,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tonSuccess: () => toast.success('Configuration saved'),\n\t\t\t\t\tonError: () => toast.error('Failed to save configuration'),\n\t\t\t\t},\n\t\t\t);\n\t\t}\n\t}, [parsedPrinterConfiguration, saveConfigurationMutation, filesToOverwrite, filesToIgnore]);\n\n\tconst client = trpc.useUtils().client;\n\tconst filesToWrite = useQuery({\n\t\tqueryKey: ['filesToWrite', serializedPrinterConfiguration],\n\t\tqueryFn: async () => {\n\t\t\tconst res = await client.printer.getFilesToWrite.mutate({\n\t\t\t\tconfig: serializedPrinterConfiguration ?? ({} as any),\n\t\t\t});\n\t\t\treturn res;\n\t\t},\n\t\tenabled: parsedPrinterConfiguration.success,\n\t});\n\n\tconst requiresExplicitFileActions = filesToWrite.data?.some(\n\t\t(f) =>\n\t\t\tf.state === 'changed' &&\n\t\t\tf.changedFromConfig === true &&\n\t\t\tf.overwrite === false &&\n\t\t\t!filesToIgnore.includes(f.fileName) &&\n\t\t\t!filesToOverwrite.includes(f.fileName),\n\t);\n\n\tif (selectedPrinter == null) {\n\t\treturn (\n\t\t\t<div className=\"mx-auto flex items-center justify-center p-8\">\n\t\t\t\t<Spinner />\n\t\t\t</div>\n\t\t);\n\t}\n\treturn (\n\t\t<div className=\"grid gap-8\">\n\t\t\t<LayoutGroup id=\"rails\">\n\t\t\t\t<AnimatedContainer className=\"grid gap-4 @3xl:grid-cols-2 @6xl:grid-cols-3\">\n\t\t\t\t\t{selectedPrinterRails.map((rail, ri) => {\n\t\t\t\t\t\tconst defaultRail = selectedPrinter?.defaults.rails.find((r) => r.axis === rail.axis);\n\t\t\t\t\t\tif (defaultRail == null) {\n\t\t\t\t\t\t\tthrow new Error('No printer default for axis ' + rail.axis);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<PrinterRailSettings\n\t\t\t\t\t\t\t\tkey={rail.axis}\n\t\t\t\t\t\t\t\terrors={formattedErrors?.rails?.[ri] != null ? formattedErrors.rails[ri] : { _errors: [] }}\n\t\t\t\t\t\t\t\tselectedBoard={selectedBoard}\n\t\t\t\t\t\t\t\tprinterRail={rail}\n\t\t\t\t\t\t\t\tprinterRailDefault={deserializePrinterRailDefinition(defaultRail)}\n\t\t\t\t\t\t\t\tperformanceMode={performanceMode}\n\t\t\t\t\t\t\t\tisVisible={true}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</AnimatedContainer>\n\t\t\t</LayoutGroup>\n\t\t\t<AnimatedContainer>\n\t\t\t\t{(filesToWrite.data?.filter((f) => f.state !== 'unchanged').length ?? 0) > 0 && (\n\t\t\t\t\t<Card>\n\t\t\t\t\t\t<CardHeader>\n\t\t\t\t\t\t\t<CardTitle>File Changes</CardTitle>\n\t\t\t\t\t\t</CardHeader>\n\t\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t\t<FileChanges\n\t\t\t\t\t\t\t\tserializedConfig={parsedPrinterConfiguration.success ? serializedPrinterConfiguration : null}\n\t\t\t\t\t\t\t\tonFilesToIgnoreChange={setFilesToIgnore}\n\t\t\t\t\t\t\t\tonFilesToOverwriteChange={setFilesToOverwrite}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</CardContent>\n\t\t\t\t\t\t<CardFooter>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tonClick={saveConfiguration}\n\t\t\t\t\t\t\t\tdisabled={\n\t\t\t\t\t\t\t\t\tsaveConfigurationMutation.isLoading ||\n\t\t\t\t\t\t\t\t\t!parsedPrinterConfiguration.success ||\n\t\t\t\t\t\t\t\t\trequiresExplicitFileActions\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{saveConfigurationMutation.isLoading && <Spinner />} Save Configuration\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</CardFooter>\n\t\t\t\t\t</Card>\n\t\t\t\t)}\n\t\t\t</AnimatedContainer>\n\t\t</div>\n\t);\n};\n","import { twMerge } from 'tailwind-merge';\nimport { FullLoadScreen } from '@/components/common/full-load-screen';\nimport { useIsClient } from '@/hooks/isClient';\nimport { Badge } from '@/components/common/badge';\nimport { useMainsailQuery } from '@/hooks/useMainsail';\nimport { useMoonrakerQuery, usePrinterObjectQuery } from '@/moonraker/hooks';\nimport { trpc } from '@/utils/trpc';\nimport React from 'react';\n\nexport const PrinterStateHeader: React.FC<{ title?: string; description: string }> = (props) => {\n\tconst printerName = useMainsailQuery('general.printername', { initialData: 'Loading...' });\n\tconst savedPrinterName = trpc.printer.getSavedPrinterName.useQuery(undefined, { initialData: 'Loading...' });\n\tconst klippyState = useMoonrakerQuery('server.info');\n\tconst printerStateQuery = usePrinterObjectQuery('print_stats');\n\tconst printerState = printerStateQuery.data?.print_stats.state;\n\tconst isClient = useIsClient();\n\treturn isClient ? (\n\t\t<div className=\"bg-zinc-700/15 backdrop-blur-sm\">\n\t\t\t<div className=\"mx-auto flex max-w-7xl flex-col items-start justify-between gap-x-8 px-4 py-4 @screen-sm:flex-row @screen-sm:items-center\">\n\t\t\t\t<div>\n\t\t\t\t\t<div className=\"flex items-center gap-x-3\">\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclassName={twMerge(\n\t\t\t\t\t\t\t\t'flex-none rounded-full bg-green-400/10 p-1 text-zinc-400',\n\t\t\t\t\t\t\t\tklippyState.data?.klippy_state === 'error' && 'bg-red-400/10 text-red-400',\n\t\t\t\t\t\t\t\tklippyState.data?.klippy_state === 'startup' && 'bg-amber-400/10 text-amber-400',\n\t\t\t\t\t\t\t\tklippyState.data?.klippy_state === 'ready' && 'bg-green-400/10 text-green-400',\n\t\t\t\t\t\t\t\tklippyState.data?.klippy_state === 'shutdown' && 'bg-red-400/10 text-red-400',\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<div className=\"h-2 w-2 rounded-full bg-current\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<h1 className=\"flex gap-x-3 text-base leading-7\">\n\t\t\t\t\t\t\t<span className=\"font-semibold text-white\">{printerName.data}</span>\n\t\t\t\t\t\t\t<span className=\"text-zinc-600\">/</span>\n\t\t\t\t\t\t\t<span className=\"font-semibold text-white\">{savedPrinterName.data}</span>\n\t\t\t\t\t\t</h1>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<Badge\n\t\t\t\t\tclassName=\"order-first capitalize @screen-sm:order-none\"\n\t\t\t\t\tcolor={\n\t\t\t\t\t\tprinterState === undefined\n\t\t\t\t\t\t\t? 'gray'\n\t\t\t\t\t\t\t: printerState == 'canceled'\n\t\t\t\t\t\t\t\t? 'pink'\n\t\t\t\t\t\t\t\t: printerState == 'complete'\n\t\t\t\t\t\t\t\t\t? 'green'\n\t\t\t\t\t\t\t\t\t: printerState == 'error'\n\t\t\t\t\t\t\t\t\t\t? 'red'\n\t\t\t\t\t\t\t\t\t\t: printerState === 'paused'\n\t\t\t\t\t\t\t\t\t\t\t? 'sky'\n\t\t\t\t\t\t\t\t\t\t\t: printerState === 'printing'\n\t\t\t\t\t\t\t\t\t\t\t\t? 'yellow'\n\t\t\t\t\t\t\t\t\t\t\t\t: printerState === 'standby'\n\t\t\t\t\t\t\t\t\t\t\t\t\t? 'brand'\n\t\t\t\t\t\t\t\t\t\t\t\t\t: 'gray'\n\t\t\t\t\t}\n\t\t\t\t>\n\t\t\t\t\t{printerState === undefined ? 'Offline' : printerState ?? 'Loading...'}\n\t\t\t\t</Badge>\n\t\t\t</div>\n\t\t\t<header className=\"sticky top-14 z-10 flex flex-grow-0 items-center gap-1 border-y border-white/5 bg-zinc-700/10 backdrop-blur-sm\">\n\t\t\t\t<div className=\"mx-auto w-full max-w-7xl gap-x-8 px-4 py-4\">\n\t\t\t\t\t<h3 className=\"dark:focus-ring-0 flex h-auto flex-1 border-none p-0 text-xl font-medium focus:ring-0 focus:ring-offset-0\">\n\t\t\t\t\t\t{props.title}\n\t\t\t\t\t</h3>\n\t\t\t\t\t<p className=\"dark:focus-ring-0 flex h-auto flex-1 border-none p-0 text-base font-medium text-muted-foreground focus:ring-0 focus:ring-offset-0 dark:text-muted-foreground\">\n\t\t\t\t\t\t{props.description}\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t</header>\n\t\t</div>\n\t) : (\n\t\t<FullLoadScreen />\n\t);\n};\n","'use client';\nimport React from 'react';\nimport { Motion } from '@/app/motion/motion';\nimport { Spinner } from '@/components/common/spinner';\nimport { useIsClient } from '@/hooks/isClient';\nimport { NoSSR } from '@/components/common/no-ssr';\nimport { PrinterStateHeader } from '@/components/common/printer-state-header';\n\nconst LoadScreen: React.FC = () => {\n\treturn (\n\t\t<div className=\"p-8\">\n\t\t\t<div className=\"mb-5 border-b border-zinc-200 pb-5 dark:border-zinc-700\">\n\t\t\t\t<h3 className=\"text-lg font-medium leading-6 text-zinc-900 dark:text-zinc-100\">\n\t\t\t\t\tLoading printer configuration...\n\t\t\t\t</h3>\n\t\t\t\t<p className=\"mt-2 max-w-4xl text-sm text-zinc-500 dark:text-zinc-400\">\n\t\t\t\t\tPlease wait while RatOS loads your printer configuration\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t\t<div className=\"mt-4 flex h-48 items-center justify-center\">\n\t\t\t\t<Spinner />\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default function Page() {\n\tconst isClient = useIsClient();\n\treturn isClient ? (\n\t\t<div className=\"mt-8 grid grid-cols-1 gap-6 @container\">\n\t\t\t<PrinterStateHeader\n\t\t\t\ttitle=\"Motion Settings\"\n\t\t\t\tdescription=\"You can change your motion settings below, be aware that any change will require the config to be regenerated\"\n\t\t\t/>\n\t\t\t<div className=\"mx-auto max-w-7xl px-4\">\n\t\t\t\t<React.Suspense fallback={<LoadScreen />}>\n\t\t\t\t\t<NoSSR fallback={<LoadScreen />}>\n\t\t\t\t\t\t<Motion />\n\t\t\t\t\t</NoSSR>\n\t\t\t\t</React.Suspense>\n\t\t\t</div>\n\t\t</div>\n\t) : null;\n}\n","import { useCallback } from 'react';\nimport { useMoonraker, useNamespacedItemMutation, useNamespacedItemQuery } from '@/moonraker/hooks';\nimport { UseMutationOptions, UseQueryOptions } from '@tanstack/react-query';\nimport { MoonrakerDBItemResponse, MoonrakerDBValue, MoonrakerNamespaceKeys } from '@/moonraker/types';\n\nexport const useMainsailQuery = <\n\tK extends MoonrakerNamespaceKeys<'mainsail'>,\n\tV extends MoonrakerDBValue<'mainsail', K>,\n>(\n\tkey: K,\n\toptions?: Omit<UseQueryOptions<V, unknown, V, 'mainsail'[]>, 'queryKey' | 'queryFn'>,\n) => useNamespacedItemQuery('mainsail', key, options);\n\nexport const useMainsailMutation = <\n\tK extends MoonrakerNamespaceKeys<'mainsail'>,\n\tV extends MoonrakerDBValue<'mainsail', K>,\n>(\n\tkey: K,\n\toptions?: Omit<UseMutationOptions<MoonrakerDBItemResponse<V>, unknown, V>, 'mutationKey' | 'mutationFn'>,\n) => useNamespacedItemMutation('mainsail', key, options);\n\nexport function useMainsail() {\n\tconst moonraker = useMoonraker();\n\tconst getMainsailItem = useCallback(\n\t\tasync <K extends MoonrakerNamespaceKeys<'mainsail'>, V extends MoonrakerDBValue<'mainsail', K>>(\n\t\t\tkey: MoonrakerNamespaceKeys<'mainsail'>,\n\t\t): Promise<V> => {\n\t\t\treturn (await moonraker.getItem('mainsail', key)) as V;\n\t\t},\n\t\t[moonraker],\n\t);\n\tconst saveMainsailItem = useCallback(\n\t\tasync <K extends MoonrakerNamespaceKeys<'mainsail'>, V extends MoonrakerDBValue<'mainsail', K>>(\n\t\t\tkey: K,\n\t\t\tvalue: V,\n\t\t): Promise<MoonrakerDBItemResponse<V>> => {\n\t\t\treturn await moonraker.saveItem('mainsail', key, value as V);\n\t\t},\n\t\t[moonraker],\n\t);\n\n\treturn {\n\t\tgetItem: getMainsailItem,\n\t\tsaveItem: saveMainsailItem,\n\t};\n}\n"],"names":["Promise","resolve","then","__webpack_require__","bind","Motion","filesToWrite","selectedBoard","selectedPrinter","performanceMode","selectedPrinterRails","parsedPrinterConfiguration","usePrinterConfiguration","formattedErrors","success","error","format","filesToOverwrite","setFilesToOverwrite","useState","filesToIgnore","setFilesToIgnore","serializedPrinterConfiguration","useMemo","serializePrinterConfiguration","data","saveConfigurationMutation","trpc","printer","saveConfiguration","useMutation","useCallback","mutate","config","overwriteFiles","skipFiles","onSuccess","toast","onError","client","useUtils","useQuery","queryKey","queryFn","res","getFilesToWrite","enabled","requiresExplicitFileActions","some","f","state","changedFromConfig","overwrite","includes","fileName","jsx_runtime","jsx","div","className","Spinner","jsxs","LayoutGroup","id","AnimatedContainer","map","rail","ri","defaultRail","defaults","rails","find","r","axis","PrinterRailSettings","errors","_errors","printerRail","printerRailDefault","deserializePrinterRailDefinition","isVisible","filter","length","Card","CardHeader","CardTitle","CardContent","FileChanges","serializedConfig","onFilesToIgnoreChange","onFilesToOverwriteChange","CardFooter","Button","onClick","disabled","isLoading","PrinterStateHeader","printerStateQuery","klippyState","printerName","useMainsailQuery","initialData","savedPrinterName","getSavedPrinterName","undefined","useMoonrakerQuery","usePrinterObjectQuery","printerState","print_stats","isClient","useIsClient","twMerge","klippy_state","h1","span","Badge","color","header","h3","props","title","p","description","FullLoadScreen","LoadScreen","Page","React","fallback","NoSSR","key","options","useNamespacedItemQuery"],"sourceRoot":""}