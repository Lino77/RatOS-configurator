{"version":3,"file":"static/chunks/app/motion/page-2e42d3d37822c129.js","mappings":"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","sources":["webpack://_N_E/?17e6","webpack://_N_E/./app/motion/motion.tsx","webpack://_N_E/./app/motion/page.tsx","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.2.6_@emotion+is-prop-valid@0.8.8_react-dom@18.2.0_react@18.2.0__react@18.2.0/node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.2.6_@emotion+is-prop-valid@0.8.8_react-dom@18.2.0_react@18.2.0__react@18.2.0/node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.2.6_@emotion+is-prop-valid@0.8.8_react-dom@18.2.0_react@18.2.0__react@18.2.0/node_modules/framer-motion/dist/es/utils/use-unmount-effect.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.2.6_@emotion+is-prop-valid@0.8.8_react-dom@18.2.0_react@18.2.0__react@18.2.0/node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.2.6_@emotion+is-prop-valid@0.8.8_react-dom@18.2.0_react@18.2.0__react@18.2.0/node_modules/framer-motion/dist/es/utils/use-force-update.mjs","webpack://_N_E/./node_modules/.pnpm/framer-motion@11.2.6_@emotion+is-prop-valid@0.8.8_react-dom@18.2.0_react@18.2.0__react@18.2.0/node_modules/framer-motion/dist/es/utils/use-is-mounted.mjs","webpack://_N_E/<anon>"],"sourcesContent":["import(/* webpackMode: \"eager\" */ \"/home/runner/work/RatOS-configurator/RatOS-configurator/src/app/motion/page.tsx\")","'use client';\nimport { AnimatedContainer } from '@/components/common/animated-container';\nimport { Button } from '@/components/common/button';\nimport { Card } from '@/components/common/card';\nimport { Spinner } from '@/components/common/spinner';\nimport { FileChanges } from '@/components/setup-steps/file-changes';\nimport { PrinterRailSettings } from '@/components/setup-steps/printer-rail-settings';\nimport { CardContent, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';\nimport { serializePrinterConfiguration, usePrinterConfiguration } from '@/hooks/usePrinterConfiguration';\nimport { deserializePrinterRailDefinition } from '@/utils/serialization';\nimport { trpc } from '@/utils/trpc';\nimport { useQuery } from '@tanstack/react-query';\nimport { LayoutGroup } from 'framer-motion';\nimport { useState, useMemo, useCallback } from 'react';\nimport { toast } from 'sonner';\n\nexport const Motion = () => {\n\tconst { selectedBoard, selectedPrinter, performanceMode, selectedPrinterRails, parsedPrinterConfiguration } =\n\t\tusePrinterConfiguration();\n\tlet formattedErrors = parsedPrinterConfiguration.success === false ? parsedPrinterConfiguration.error.format() : null;\n\tconst [filesToOverwrite, setFilesToOverwrite] = useState<string[]>([]);\n\n\tconst [filesToIgnore, setFilesToIgnore] = useState<string[]>([]);\n\n\tconst serializedPrinterConfiguration = useMemo(() => {\n\t\tif (parsedPrinterConfiguration.success === true) {\n\t\t\treturn serializePrinterConfiguration(parsedPrinterConfiguration.data);\n\t\t}\n\t\treturn null;\n\t}, [parsedPrinterConfiguration]);\n\n\tconst saveConfigurationMutation = trpc.printer.saveConfiguration.useMutation();\n\tconst saveConfiguration = useCallback(async () => {\n\t\tif (parsedPrinterConfiguration.success) {\n\t\t\tsaveConfigurationMutation.mutate(\n\t\t\t\t{\n\t\t\t\t\tconfig: serializePrinterConfiguration(parsedPrinterConfiguration.data),\n\t\t\t\t\toverwriteFiles: filesToOverwrite,\n\t\t\t\t\tskipFiles: filesToIgnore,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tonSuccess: () => toast.success('Configuration saved'),\n\t\t\t\t\tonError: () => toast.error('Failed to save configuration'),\n\t\t\t\t},\n\t\t\t);\n\t\t}\n\t}, [parsedPrinterConfiguration, saveConfigurationMutation, filesToOverwrite, filesToIgnore]);\n\n\tconst client = trpc.useUtils().client;\n\tconst filesToWrite = useQuery({\n\t\tqueryKey: ['filesToWrite', serializedPrinterConfiguration],\n\t\tqueryFn: async () => {\n\t\t\tconst res = await client.printer.getFilesToWrite.mutate({\n\t\t\t\tconfig: serializedPrinterConfiguration ?? ({} as any),\n\t\t\t});\n\t\t\treturn res;\n\t\t},\n\t\tenabled: parsedPrinterConfiguration.success,\n\t});\n\n\tconst requiresExplicitFileActions = filesToWrite.data?.some(\n\t\t(f) =>\n\t\t\tf.state === 'changed' &&\n\t\t\tf.changedFromConfig === true &&\n\t\t\tf.overwrite === false &&\n\t\t\t!filesToIgnore.includes(f.fileName) &&\n\t\t\t!filesToOverwrite.includes(f.fileName),\n\t);\n\n\tif (selectedPrinter == null) {\n\t\treturn (\n\t\t\t<div className=\"mx-auto flex items-center justify-center p-8\">\n\t\t\t\t<Spinner />\n\t\t\t</div>\n\t\t);\n\t}\n\treturn (\n\t\t<div className=\"grid gap-8\">\n\t\t\t<LayoutGroup id=\"rails\">\n\t\t\t\t<AnimatedContainer className=\"grid gap-4 @3xl:grid-cols-2 @6xl:grid-cols-3\">\n\t\t\t\t\t{selectedPrinterRails.map((rail, ri) => {\n\t\t\t\t\t\tconst defaultRail = selectedPrinter?.defaults.rails.find((r) => r.axis === rail.axis);\n\t\t\t\t\t\tif (defaultRail == null) {\n\t\t\t\t\t\t\tthrow new Error('No printer default for axis ' + rail.axis);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<PrinterRailSettings\n\t\t\t\t\t\t\t\tkey={rail.axis}\n\t\t\t\t\t\t\t\terrors={formattedErrors?.rails?.[ri] != null ? formattedErrors.rails[ri] : { _errors: [] }}\n\t\t\t\t\t\t\t\tselectedBoard={selectedBoard}\n\t\t\t\t\t\t\t\tprinterRail={rail}\n\t\t\t\t\t\t\t\tprinterRailDefault={deserializePrinterRailDefinition(defaultRail)}\n\t\t\t\t\t\t\t\tperformanceMode={performanceMode}\n\t\t\t\t\t\t\t\tisVisible={true}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</AnimatedContainer>\n\t\t\t</LayoutGroup>\n\t\t\t<AnimatedContainer>\n\t\t\t\t{(filesToWrite.data?.filter((f) => f.state !== 'unchanged').length ?? 0) > 0 && (\n\t\t\t\t\t<Card>\n\t\t\t\t\t\t<CardHeader>\n\t\t\t\t\t\t\t<CardTitle>File Changes</CardTitle>\n\t\t\t\t\t\t</CardHeader>\n\t\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t\t<FileChanges\n\t\t\t\t\t\t\t\tserializedConfig={parsedPrinterConfiguration.success ? serializedPrinterConfiguration : null}\n\t\t\t\t\t\t\t\tonFilesToIgnoreChange={setFilesToIgnore}\n\t\t\t\t\t\t\t\tonFilesToOverwriteChange={setFilesToOverwrite}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</CardContent>\n\t\t\t\t\t\t<CardFooter>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tonClick={saveConfiguration}\n\t\t\t\t\t\t\t\tdisabled={\n\t\t\t\t\t\t\t\t\tsaveConfigurationMutation.isLoading ||\n\t\t\t\t\t\t\t\t\t!parsedPrinterConfiguration.success ||\n\t\t\t\t\t\t\t\t\trequiresExplicitFileActions\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{saveConfigurationMutation.isLoading && <Spinner />} Save Configuration\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</CardFooter>\n\t\t\t\t\t</Card>\n\t\t\t\t)}\n\t\t\t</AnimatedContainer>\n\t\t</div>\n\t);\n};\n","'use client';\nimport React from 'react';\nimport { Motion } from '@/app/motion/motion';\nimport { Spinner } from '@/components/common/spinner';\nimport { useIsClient } from '@/hooks/isClient';\nimport { NoSSR } from '@/components/common/no-ssr';\nimport { PrinterStateHeader } from '@/components/common/printer-state-header';\n\nconst LoadScreen: React.FC = () => {\n\treturn (\n\t\t<div className=\"p-8\">\n\t\t\t<div className=\"mb-5 border-b border-zinc-200 pb-5 dark:border-zinc-700\">\n\t\t\t\t<h3 className=\"text-lg font-medium leading-6 text-zinc-900 dark:text-zinc-100\">\n\t\t\t\t\tLoading printer configuration...\n\t\t\t\t</h3>\n\t\t\t\t<p className=\"mt-2 max-w-4xl text-sm text-zinc-500 dark:text-zinc-400\">\n\t\t\t\t\tPlease wait while RatOS loads your printer configuration\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t\t<div className=\"mt-4 flex h-48 items-center justify-center\">\n\t\t\t\t<Spinner />\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default function Page() {\n\tconst isClient = useIsClient();\n\treturn isClient ? (\n\t\t<div className=\"grid grid-cols-1 gap-6 @container\">\n\t\t\t<PrinterStateHeader\n\t\t\t\ttitle=\"Motion Settings\"\n\t\t\t\tdescription=\"You can change your motion settings below, be aware that any change will require the config to be regenerated\"\n\t\t\t/>\n\t\t\t<div className=\"mx-auto max-w-7xl px-4\">\n\t\t\t\t<React.Suspense fallback={<LoadScreen />}>\n\t\t\t\t\t<NoSSR fallback={<LoadScreen />}>\n\t\t\t\t\t\t<Motion />\n\t\t\t\t\t</NoSSR>\n\t\t\t\t</React.Suspense>\n\t\t\t</div>\n\t\t</div>\n\t) : null;\n}\n","import { jsx } from 'react/jsx-runtime';\nimport * as React from 'react';\nimport { useId, useRef, useContext, useInsertionEffect } from 'react';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent }) {\n    const id = useId();\n    const ref = useRef(null);\n    const size = useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n    });\n    const { nonce } = useContext(MotionConfigContext);\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    useInsertionEffect(() => {\n        const { width, height, top, left } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        if (nonce)\n            style.nonce = nonce;\n        document.head.appendChild(style);\n        if (style.sheet) {\n            style.sheet.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            top: ${top}px !important;\n            left: ${left}px !important;\n          }\n        `);\n        }\n        return () => {\n            document.head.removeChild(style);\n        };\n    }, [isPresent]);\n    return (jsx(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size, children: React.cloneElement(children, { ref }) }));\n}\n\nexport { PopChild };\n","import { jsx } from 'react/jsx-runtime';\nimport * as React from 'react';\nimport { useId, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    const context = useMemo(() => ({\n        id,\n        initial,\n        isPresent,\n        custom,\n        onExitComplete: (childId) => {\n            presenceChildren.set(childId, true);\n            for (const isComplete of presenceChildren.values()) {\n                if (!isComplete)\n                    return; // can stop searching when any is incomplete\n            }\n            onExitComplete && onExitComplete();\n        },\n        register: (childId) => {\n            presenceChildren.set(childId, false);\n            return () => presenceChildren.delete(childId);\n        },\n    }), \n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    presenceAffectsLayout ? [Math.random()] : [isPresent]);\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = jsx(PopChild, { isPresent: isPresent, children: children });\n    }\n    return (jsx(PresenceContext.Provider, { value: context, children: children }));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import { useEffect } from 'react';\n\nfunction useUnmountEffect(callback) {\n    return useEffect(() => () => callback(), []);\n}\n\nexport { useUnmountEffect };\n","import { jsx, Fragment } from 'react/jsx-runtime';\nimport { useContext, useRef, cloneElement, Children, isValidElement } from 'react';\nimport { useForceUpdate } from '../../utils/use-force-update.mjs';\nimport { useIsMounted } from '../../utils/use-is-mounted.mjs';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { useUnmountEffect } from '../../utils/use-unmount-effect.mjs';\nimport { invariant } from '../../utils/errors.mjs';\n\nconst getChildKey = (child) => child.key || \"\";\nfunction updateChildLookup(children, allChildren) {\n    children.forEach((child) => {\n        const key = getChildKey(child);\n        allChildren.set(key, child);\n    });\n}\nfunction onlyElements(children) {\n    const filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, (child) => {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nconst AnimatePresence = ({ children, custom, initial = true, onExitComplete, exitBeforeEnter, presenceAffectsLayout = true, mode = \"sync\", }) => {\n    invariant(!exitBeforeEnter, \"Replace exitBeforeEnter with mode='wait'\");\n    // We want to force a re-render once all exiting animations have finished. We\n    // either use a local forceRender function, or one from a parent context if it exists.\n    const forceRender = useContext(LayoutGroupContext).forceRender || useForceUpdate()[0];\n    const isMounted = useIsMounted();\n    // Filter out any children that aren't ReactElements. We can only track ReactElements with a props.key\n    const filteredChildren = onlyElements(children);\n    let childrenToRender = filteredChildren;\n    const exitingChildren = useRef(new Map()).current;\n    // Keep a living record of the children we're actually rendering so we\n    // can diff to figure out which are entering and exiting\n    const presentChildren = useRef(childrenToRender);\n    // A lookup table to quickly reference components by key\n    const allChildren = useRef(new Map()).current;\n    // If this is the initial component render, just deal with logic surrounding whether\n    // we play onMount animations or not.\n    const isInitialRender = useRef(true);\n    useIsomorphicLayoutEffect(() => {\n        isInitialRender.current = false;\n        updateChildLookup(filteredChildren, allChildren);\n        presentChildren.current = childrenToRender;\n    });\n    useUnmountEffect(() => {\n        isInitialRender.current = true;\n        allChildren.clear();\n        exitingChildren.clear();\n    });\n    if (isInitialRender.current) {\n        return (jsx(Fragment, { children: childrenToRender.map((child) => (jsx(PresenceChild, { isPresent: true, initial: initial ? undefined : false, presenceAffectsLayout: presenceAffectsLayout, mode: mode, children: child }, getChildKey(child)))) }));\n    }\n    // If this is a subsequent render, deal with entering and exiting children\n    childrenToRender = [...childrenToRender];\n    // Diff the keys of the currently-present and target children to update our\n    // exiting list.\n    const presentKeys = presentChildren.current.map(getChildKey);\n    const targetKeys = filteredChildren.map(getChildKey);\n    // Diff the present children with our target children and mark those that are exiting\n    const numPresent = presentKeys.length;\n    for (let i = 0; i < numPresent; i++) {\n        const key = presentKeys[i];\n        if (targetKeys.indexOf(key) === -1 && !exitingChildren.has(key)) {\n            exitingChildren.set(key, undefined);\n        }\n    }\n    // If we currently have exiting children, and we're deferring rendering incoming children\n    // until after all current children have exiting, empty the childrenToRender array\n    if (mode === \"wait\" && exitingChildren.size) {\n        childrenToRender = [];\n    }\n    // Loop through all currently exiting components and clone them to overwrite `animate`\n    // with any `exit` prop they might have defined.\n    exitingChildren.forEach((component, key) => {\n        // If this component is actually entering again, early return\n        if (targetKeys.indexOf(key) !== -1)\n            return;\n        const child = allChildren.get(key);\n        if (!child)\n            return;\n        const insertionIndex = presentKeys.indexOf(key);\n        let exitingComponent = component;\n        if (!exitingComponent) {\n            const onExit = () => {\n                // clean up the exiting children map\n                exitingChildren.delete(key);\n                // compute the keys of children that were rendered once but are no longer present\n                // this could happen in case of too many fast consequent renderings\n                // @link https://github.com/framer/motion/issues/2023\n                const leftOverKeys = Array.from(allChildren.keys()).filter((childKey) => !targetKeys.includes(childKey));\n                // clean up the all children map\n                leftOverKeys.forEach((leftOverKey) => allChildren.delete(leftOverKey));\n                // make sure to render only the children that are actually visible\n                presentChildren.current = filteredChildren.filter((presentChild) => {\n                    const presentChildKey = getChildKey(presentChild);\n                    return (\n                    // filter out the node exiting\n                    presentChildKey === key ||\n                        // filter out the leftover children\n                        leftOverKeys.includes(presentChildKey));\n                });\n                // Defer re-rendering until all exiting children have indeed left\n                if (!exitingChildren.size) {\n                    if (isMounted.current === false)\n                        return;\n                    forceRender();\n                    onExitComplete && onExitComplete();\n                }\n            };\n            exitingComponent = (jsx(PresenceChild, { isPresent: false, onExitComplete: onExit, custom: custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode, children: child }, getChildKey(child)));\n            exitingChildren.set(key, exitingComponent);\n        }\n        childrenToRender.splice(insertionIndex, 0, exitingComponent);\n    });\n    // Add `MotionContext` even to children that don't need it to ensure we're rendering\n    // the same tree between renders\n    childrenToRender = childrenToRender.map((child) => {\n        const key = child.key;\n        return exitingChildren.has(key) ? (child) : (jsx(PresenceChild, { isPresent: true, presenceAffectsLayout: presenceAffectsLayout, mode: mode, children: child }, getChildKey(child)));\n    });\n    if (process.env.NODE_ENV !== \"production\" &&\n        mode === \"wait\" &&\n        childrenToRender.length > 1) {\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\n    }\n    return (jsx(Fragment, { children: exitingChildren.size\n            ? childrenToRender\n            : childrenToRender.map((child) => cloneElement(child)) }));\n};\n\nexport { AnimatePresence };\n","import { useState, useCallback } from 'react';\nimport { useIsMounted } from './use-is-mounted.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction useForceUpdate() {\n    const isMounted = useIsMounted();\n    const [forcedRenderCount, setForcedRenderCount] = useState(0);\n    const forceRender = useCallback(() => {\n        isMounted.current && setForcedRenderCount(forcedRenderCount + 1);\n    }, [forcedRenderCount]);\n    /**\n     * Defer this to the end of the next animation frame in case there are multiple\n     * synchronous calls.\n     */\n    const deferredForceRender = useCallback(() => frame.postRender(forceRender), [forceRender]);\n    return [deferredForceRender, forcedRenderCount];\n}\n\nexport { useForceUpdate };\n","import { useRef } from 'react';\nimport { useIsomorphicLayoutEffect } from './use-isomorphic-effect.mjs';\n\nfunction useIsMounted() {\n    const isMounted = useRef(false);\n    useIsomorphicLayoutEffect(() => {\n        isMounted.current = true;\n        return () => {\n            isMounted.current = false;\n        };\n    }, []);\n    return isMounted;\n}\n\nexport { useIsMounted };\n"],"names":["Promise","resolve","then","__webpack_require__","bind","Motion","filesToWrite","selectedBoard","selectedPrinter","performanceMode","selectedPrinterRails","parsedPrinterConfiguration","usePrinterConfiguration","formattedErrors","success","error","format","filesToOverwrite","setFilesToOverwrite","useState","filesToIgnore","setFilesToIgnore","serializedPrinterConfiguration","useMemo","serializePrinterConfiguration","data","saveConfigurationMutation","trpc","printer","saveConfiguration","useMutation","useCallback","mutate","config","overwriteFiles","skipFiles","onSuccess","toast","onError","client","useUtils","useQuery","queryKey","queryFn","res","getFilesToWrite","enabled","requiresExplicitFileActions","some","f","state","changedFromConfig","overwrite","includes","fileName","jsx_runtime","jsx","div","className","Spinner","jsxs","LayoutGroup","id","AnimatedContainer","map","rail","ri","defaultRail","defaults","rails","find","r","axis","PrinterRailSettings","errors","_errors","printerRail","printerRailDefault","deserializePrinterRailDefinition","isVisible","filter","length","Card","CardHeader","CardTitle","CardContent","FileChanges","serializedConfig","onFilesToIgnoreChange","onFilesToOverwriteChange","CardFooter","Button","onClick","disabled","isLoading","LoadScreen","h3","p","Page","isClient","useIsClient","PrinterStateHeader","title","description","React","fallback","NoSSR","PopChildMeasure","react","Component","getSnapshotBeforeUpdate","prevProps","element","props","childRef","current","isPresent","size","sizeRef","height","offsetHeight","width","offsetWidth","top","offsetTop","left","offsetLeft","componentDidUpdate","render","children","PopChild","useId","ref","useRef","nonce","useContext","MotionConfigContext","_","useInsertionEffect","dataset","motionPopId","style","document","createElement","head","appendChild","sheet","insertRule","removeChild","cloneElement","PresenceChild","initial","onExitComplete","custom","presenceAffectsLayout","mode","presenceChildren","use_constant","h","newChildrenMap","context","isComplete","set","childId","values","register","delete","Math","random","forEach","key","useEffect","PresenceContext","O","Provider","value","Map","getChildKey","child","AnimatePresence","exitBeforeEnter","callback","k","forceRender","LayoutGroupContext","use_force_update","N","isMounted","use_is_mounted","t","filteredChildren","onlyElements","filtered","Children","isValidElement","push","childrenToRender","exitingChildren","presentChildren","allChildren","isInitialRender","use_isomorphic_effect","L","updateChildLookup","clear","Fragment","undefined","presentKeys","targetKeys","numPresent","i","indexOf","has","component","get","insertionIndex","exitingComponent","leftOverKeys","Array","from","keys","childKey","leftOverKey","presentChildKey","presentChild","splice","useForceUpdate","_use_is_mounted_mjs__WEBPACK_IMPORTED_MODULE_1__","forcedRenderCount","setForcedRenderCount","react__WEBPACK_IMPORTED_MODULE_0__","deferredForceRender","_frameloop_frame_mjs__WEBPACK_IMPORTED_MODULE_2__","Wi","postRender","useIsMounted","_use_isomorphic_effect_mjs__WEBPACK_IMPORTED_MODULE_1__"],"sourceRoot":""}