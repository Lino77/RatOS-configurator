{"version":3,"file":"static/chunks/app/page-aae166c2c6170e2b.js","mappings":"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","sources":["webpack://_N_E/?c34c","webpack://_N_E/./app/historyTable.tsx","webpack://_N_E/./app/page.tsx","webpack://_N_E/./components/common/badge.tsx","webpack://_N_E/./hooks/useMainsail.tsx","webpack://_N_E/<anon>"],"sourcesContent":["import(/* webpackMode: \"eager\" */ \"/home/runner/work/RatOS-configurator/RatOS-configurator/src/app/page.tsx\")","'use client';\nimport {\n\tColumnDef,\n\tflexRender,\n\tgetCoreRowModel,\n\tgetSortedRowModel,\n\tOnChangeFn,\n\tRow,\n\tSortingState,\n\tuseReactTable,\n} from '@tanstack/react-table';\nimport { useWindowVirtualizer } from '@tanstack/react-virtual';\nimport { MoonrakerHistoryJob, MoonrakerHistoryListResponse } from '@/moonraker/types';\nimport { useEffect, useMemo, useRef, useState } from 'react';\nimport { DateTime, Duration, DurationLikeObject } from 'luxon';\nimport { twMerge } from 'tailwind-merge';\nimport { useMoonraker } from '@/moonraker/hooks';\nimport { useInfiniteQuery } from '@tanstack/react-query';\nimport { getHost } from '@/helpers/util';\nimport { ChevronUpDownIcon, ChevronUpIcon } from '@heroicons/react/24/outline';\nimport { ChevronDownIcon } from '@heroicons/react/24/solid';\nimport { Spinner } from '@/components/common/spinner';\nimport CountUp from 'react-countup';\n\nconst findThumbnail = (thumbnails: MoonrakerHistoryJob['metadata']['thumbnails'], size: number) => {\n\tconst thumbnail = thumbnails?.find((t) => t.size >= size);\n\tif (thumbnail == null) {\n\t\treturn null;\n\t}\n\treturn thumbnail;\n};\n\nconst thumbUrl = (thumbnail: NonNullable<MoonrakerHistoryJob['metadata']['thumbnails']>[0]) => {\n\treturn `http://${getHost()}/server/files/gcodes/${thumbnail.relative_path}?timestamp=${thumbnail}`;\n};\n\nconst getHistoryStateFillColor = (status: MoonrakerHistoryJob['status']) => {\n\tswitch (status) {\n\t\tcase 'error':\n\t\tcase 'klippy_disconnect':\n\t\tcase 'klippy_shutdown':\n\t\tcase 'server_exit':\n\t\t\treturn 'bg-rose-500/10 text-rose-500 dark:bg-rose-400/10 dark:text-rose-400';\n\t\tcase 'interrupted':\n\t\t\treturn 'bg-amber-500/10 text-amber-500 dark:bg-amber-400/10 dark:text-amber-400';\n\t\tcase 'in_progress':\n\t\t\treturn 'bg-sky-500/10 text-sky-500 dark:bg-sky-400/10 dark:text-sky-400';\n\t\tdefault:\n\t\t\treturn 'bg-brand-500/10 text-brand-500 dark:bg-brand-400/10 dark:text-brand-400';\n\t}\n};\nconst getHistoryStateTextColor = (status: MoonrakerHistoryJob['status']) => {\n\tswitch (status) {\n\t\tcase 'error':\n\t\tcase 'klippy_disconnect':\n\t\tcase 'klippy_shutdown':\n\t\tcase 'server_exit':\n\t\t\treturn 'text-rose-900/80 dark:text-rose-100/80';\n\t\tcase 'interrupted':\n\t\t\treturn 'text-amber-900/80 dark:text-amber-100/80';\n\t\tcase 'in_progress':\n\t\t\treturn 'text-sky-900/80 dark:text-sky-100/80';\n\t\tdefault:\n\t\t\treturn 'text-brand-900/80 dark:text-brand-100/80';\n\t}\n};\n\nconst columns: ColumnDef<MoonrakerHistoryJob>[] = [\n\t{\n\t\theader: () => <span>Filename</span>,\n\t\taccessorKey: 'filename',\n\t\tenableSorting: false,\n\t\tsize: 280,\n\t\tcell: (info) => {\n\t\t\tconst thumbnail = findThumbnail(info.row.original.metadata.thumbnails, 32);\n\t\t\treturn (\n\t\t\t\t<div className=\"flex min-w-0 items-center gap-x-4\">\n\t\t\t\t\t{thumbnail == null ? null : (\n\t\t\t\t\t\t// eslint-disable-next-line @next/next/no-img-element\n\t\t\t\t\t\t<img src={thumbUrl(thumbnail)} alt=\"\" className=\"h-8 w-8 rounded-full bg-zinc-800\" />\n\t\t\t\t\t)}\n\t\t\t\t\t<div className=\"truncate text-sm font-medium leading-6 text-white\">{info.getValue() as string}</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t},\n\t},\n\t{\n\t\theader: () => <span>Started at</span>,\n\t\tsortDescFirst: true,\n\t\tenableSorting: true,\n\t\tenableMultiSort: false,\n\t\taccessorKey: 'start_time',\n\t\tcell: (info) => {\n\t\t\tconst time = DateTime.fromSeconds(info.getValue<MoonrakerHistoryJob['start_time']>()).setLocale('en-GB');\n\t\t\treturn (\n\t\t\t\t<div className=\"flex min-w-0 items-center gap-x-3\">\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName=\"text-sm leading-6 text-zinc-400\"\n\t\t\t\t\t\ttitle={time.toLocaleString({ dateStyle: 'full', timeStyle: 'medium' })}\n\t\t\t\t\t>\n\t\t\t\t\t\t{time.toRelative()}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t},\n\t},\n\t{\n\t\theader: () => <span>Status</span>,\n\t\tsize: 200,\n\t\tenableSorting: false,\n\t\taccessorKey: 'status',\n\t\tcell: (info) => {\n\t\t\tconst status = info.getValue<MoonrakerHistoryJob['status']>();\n\t\t\treturn (\n\t\t\t\t<div className=\"flex min-w-0 items-center justify-end gap-x-2  @screen-sm:justify-start\">\n\t\t\t\t\t<div className={twMerge(getHistoryStateFillColor(status), 'flex-none rounded-full p-1')}>\n\t\t\t\t\t\t<div className=\"h-1.5 w-1.5 rounded-full bg-current\" />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName={twMerge(\n\t\t\t\t\t\t\t'truncate capitalize text-white',\n\t\t\t\t\t\t\tgetHistoryStateTextColor(status),\n\t\t\t\t\t\t\tstatus === 'completed' ? 'text-green-100/80' : ' text-rose-100/80',\n\t\t\t\t\t\t)}\n\t\t\t\t\t>\n\t\t\t\t\t\t{status.replace('_', ' ')}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t},\n\t},\n\t{\n\t\theader: () => <span>Duration</span>,\n\t\taccessorKey: 'print_duration',\n\t\tenableSorting: false,\n\t\tcell: (info) => (\n\t\t\t<div className=\"flex min-w-0 items-center text-sm leading-6 text-zinc-400\">\n\t\t\t\t{Duration.fromObject({ hours: info.getValue<number>() / 60 / 60 }, { locale: 'en-GB' })\n\t\t\t\t\t.normalize()\n\t\t\t\t\t.shiftTo(\n\t\t\t\t\t\t...(['minutes', info.getValue<number>() / 60 / 60 > 1 ? 'hours' : null].filter(\n\t\t\t\t\t\t\tBoolean,\n\t\t\t\t\t\t) as (keyof DurationLikeObject)[]),\n\t\t\t\t\t)\n\t\t\t\t\t.toHuman({ unitDisplay: 'short', listStyle: 'narrow', maximumFractionDigits: 0 })}\n\t\t\t</div>\n\t\t),\n\t},\n\t{\n\t\theader: () => <span>Slicer</span>,\n\t\taccessorKey: 'slicer',\n\t\tenableSorting: false,\n\t\tcell: (info) => {\n\t\t\treturn (\n\t\t\t\t<span className=\"inline-flex items-center rounded-md bg-zinc-400/10 px-2 py-1 text-xs font-medium text-zinc-400 ring-1 ring-inset ring-zinc-400/20\">\n\t\t\t\t\t{info.row.original.metadata.slicer}\n\t\t\t\t</span>\n\t\t\t);\n\t\t},\n\t},\n\t{\n\t\theader: () => <span>Filament used</span>,\n\t\taccessorKey: 'filament_used',\n\t\tenableSorting: false,\n\t\tcell: (info) => {\n\t\t\tconst filamentUsed = info.getValue<MoonrakerHistoryJob['filament_used']>() / 1000;\n\t\t\treturn (\n\t\t\t\t<div className=\"flex min-w-0 items-center text-sm leading-6 text-zinc-400\">\n\t\t\t\t\t<CountUp start={0} end={filamentUsed} preserveValue={true} decimals={2} /> meters\n\t\t\t\t</div>\n\t\t\t);\n\t\t},\n\t},\n];\n\nconst PAGE_SIZE = 25;\n\nconst getColumnSizeClass = (key: string) => {\n\tconst big = ['filament_used', 'slicer'].includes(key);\n\tconst medium = ['status', 'print_duration'].includes(key);\n\tconst small = [''].includes(key);\n\tconst shrink = ['filename'].includes(key);\n\treturn twMerge(\n\t\tsmall && '@screen-sm:flex hidden',\n\t\tmedium && '@screen-md:flex hidden',\n\t\tbig && '@screen-xl:flex hidden',\n\t\t!small && !medium && !big && 'flex',\n\t\tshrink && 'flex-shrink flex-grow-[5]',\n\t);\n};\n\nexport const HistoryTable = () => {\n\tconst moon = useMoonraker();\n\tconst [sorting, setSorting] = useState<SortingState>([{ id: 'start_time', desc: true }]);\n\tconst tableRef = useRef<HTMLTableElement>(null);\n\tconst { data, fetchNextPage, isFetching, isFetchingNextPage, hasNextPage, isLoading } =\n\t\tuseInfiniteQuery<MoonrakerHistoryListResponse>({\n\t\t\tqueryKey: [\n\t\t\t\t'history',\n\t\t\t\tsorting, //refetch when sorting changes\n\t\t\t],\n\t\t\tqueryFn: async ({ pageParam = 0 }) => {\n\t\t\t\tconst start = (pageParam as number) * PAGE_SIZE;\n\t\t\t\tconst fetchedData = await moon.query('server.history.list', {\n\t\t\t\t\tlimit: PAGE_SIZE,\n\t\t\t\t\tstart: start,\n\t\t\t\t\torder: sorting[0].desc ? 'desc' : 'asc',\n\t\t\t\t}); //pretend api call\n\t\t\t\treturn fetchedData;\n\t\t\t},\n\t\t\tgetNextPageParam: (lastPage, allPages) => {\n\t\t\t\treturn lastPage.count <= allPages.length ? undefined : allPages.length;\n\t\t\t},\n\t\t\tkeepPreviousData: true,\n\t\t\trefetchOnWindowFocus: false,\n\t\t});\n\t//flatten the array of arrays from the useInfiniteQuery hook\n\tconst flatData = useMemo(() => data?.pages?.flatMap((page) => page.jobs) ?? [], [data]);\n\tconst totalFetched = flatData.length;\n\n\tconst table = useReactTable({\n\t\tdata: flatData,\n\t\tcolumns,\n\t\tstate: {\n\t\t\tsorting,\n\t\t},\n\t\tgetCoreRowModel: getCoreRowModel(),\n\t\tgetSortedRowModel: getSortedRowModel(),\n\t\tmanualSorting: true,\n\t\tdebugTable: true,\n\t});\n\n\t//scroll to top of table when sorting changes\n\tconst handleSortingChange: OnChangeFn<SortingState> = (updater) => {\n\t\tsetSorting(updater);\n\t\tif (!!table.getRowModel().rows.length) {\n\t\t\trowVirtualizer.scrollToIndex?.(0);\n\t\t}\n\t};\n\n\t//since this table option is derived from table row model state, we're using the table.setOptions utility\n\ttable.setOptions((prev) => ({\n\t\t...prev,\n\t\tonSortingChange: handleSortingChange,\n\t}));\n\n\tconst { rows } = table.getRowModel();\n\n\tconst rowVirtualizer = useWindowVirtualizer({\n\t\tcount: totalFetched,\n\t\testimateSize: () => 64, //estimate row height for accurate scrollbar dragging\n\t\t//measure dynamic row height, except in firefox because it measures table border height incorrectly\n\t\tmeasureElement:\n\t\t\ttypeof window !== 'undefined' && navigator.userAgent.indexOf('Firefox') === -1\n\t\t\t\t? (element) => element?.getBoundingClientRect().height\n\t\t\t\t: undefined,\n\t\toverscan: 3,\n\t\tscrollMargin: tableRef.current?.offsetTop ?? 0,\n\t\tpaddingEnd: (tableRef.current?.offsetParent as HTMLElement)?.offsetTop ?? 0,\n\t});\n\n\tuseEffect(() => {\n\t\tconst [lastItem] = [...rowVirtualizer.getVirtualItems()].reverse();\n\t\tif (!lastItem) {\n\t\t\treturn;\n\t\t}\n\t\tif (lastItem.index >= totalFetched - 1 && hasNextPage && !isFetchingNextPage) {\n\t\t\tfetchNextPage();\n\t\t}\n\t}, [hasNextPage, fetchNextPage, totalFetched, isFetchingNextPage, rowVirtualizer]);\n\n\tif (isLoading) {\n\t\treturn (\n\t\t\t<div className=\"mt-6 flex h-48 w-full flex-col items-center justify-center space-y-2\">\n\t\t\t\t<Spinner />\n\t\t\t\t<h3 className=\"animate-pulse font-normal text-zinc-100\">Loading print history...</h3>\n\t\t\t</div>\n\t\t);\n\t}\n\treturn (\n\t\t<table\n\t\t\tclassName=\"mt-6 w-full whitespace-nowrap text-left\"\n\t\t\tstyle={{ display: 'grid', height: `${rowVirtualizer.getTotalSize()}px`, width: '100%', position: 'relative' }}\n\t\t\tref={tableRef}\n\t\t>\n\t\t\t<thead\n\t\t\t\tclassName=\"border-b border-white/10 bg-background text-sm leading-6 text-white\"\n\t\t\t\tstyle={{\n\t\t\t\t\tdisplay: 'grid',\n\t\t\t\t\tposition: 'sticky',\n\t\t\t\t\ttop: 0,\n\t\t\t\t\tzIndex: 1,\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{table.getHeaderGroups().map((headerGroup) => (\n\t\t\t\t\t<tr key={headerGroup.id} style={{ display: 'flex', width: '100%' }}>\n\t\t\t\t\t\t{headerGroup.headers.map((header) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<th\n\t\t\t\t\t\t\t\t\tscope=\"col\"\n\t\t\t\t\t\t\t\t\tclassName={twMerge(\n\t\t\t\t\t\t\t\t\t\t'flex flex-grow items-center truncate px-4 py-2 font-semibold @screen-sm:px-6 @screen-lg:px-8',\n\t\t\t\t\t\t\t\t\t\tgetColumnSizeClass(header.column.id),\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\tkey={header.id}\n\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\twidth: header.getSize(),\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t{...{\n\t\t\t\t\t\t\t\t\t\t\tclassName: twMerge(\n\t\t\t\t\t\t\t\t\t\t\t\theader.column.getCanSort() && 'cursor-pointer select-none',\n\t\t\t\t\t\t\t\t\t\t\t\t'space-x-2 flex items-center',\n\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\tonClick: header.column.getToggleSortingHandler(),\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{flexRender(header.column.columnDef.header, header.getContext())}\n\t\t\t\t\t\t\t\t\t\t{{\n\t\t\t\t\t\t\t\t\t\t\tasc: <ChevronUpIcon className=\"h-4 w-4\" />,\n\t\t\t\t\t\t\t\t\t\t\tdesc: <ChevronDownIcon className=\"h-4 w-4\" />,\n\t\t\t\t\t\t\t\t\t\t}[header.column.getIsSorted() as string] ??\n\t\t\t\t\t\t\t\t\t\t\t(header.column.getCanSort() ? <ChevronUpDownIcon className=\"h-4 w-4\" /> : null)}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</tr>\n\t\t\t\t))}\n\t\t\t</thead>\n\t\t\t<tbody\n\t\t\t\tclassName=\"divide-y divide-white/5\"\n\t\t\t\tstyle={{\n\t\t\t\t\tdisplay: 'grid',\n\t\t\t\t\theight: `${rowVirtualizer.getTotalSize()}px`, //tells scrollbar how big the table is\n\t\t\t\t\tposition: 'relative', //needed for absolute positioning of rows\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{rowVirtualizer.getVirtualItems().map((virtualRow) => {\n\t\t\t\t\tconst row = rows[virtualRow.index] as Row<MoonrakerHistoryJob>;\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<tr\n\t\t\t\t\t\t\tdata-index={virtualRow.index} //needed for dynamic row height measurement\n\t\t\t\t\t\t\tref={(node) => rowVirtualizer.measureElement(node)} //measure dynamic row height\n\t\t\t\t\t\t\tkey={row.id}\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\t\t\theight: `${virtualRow.size}px`, //this should always be a `style` as it changes on scroll\n\t\t\t\t\t\t\t\ttransform: `translateY(${virtualRow.start - rowVirtualizer.options.scrollMargin}px)`, //this should always be a `style` as it changes on scroll\n\t\t\t\t\t\t\t\twidth: '100%',\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{row.getVisibleCells().map((cell) => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<td\n\t\t\t\t\t\t\t\t\t\tclassName={twMerge(\n\t\t\t\t\t\t\t\t\t\t\t'flex-grow p-4 @screen-sm:px-6 @screen-lg:px-8',\n\t\t\t\t\t\t\t\t\t\t\tgetColumnSizeClass(cell.column.id),\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\tkey={cell.id}\n\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\twidth: cell.column.getSize(),\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{flexRender(cell.column.columnDef.cell, cell.getContext())}\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t\t{totalFetched === 0 && (\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td\n\t\t\t\t\t\t\tcolSpan={columns.length}\n\t\t\t\t\t\t\tclassName=\"flex h-96 flex-grow flex-col items-center justify-center p-4 text-center text-zinc-100 @screen-sm:px-6 @screen-lg:px-8\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<h4 className=\"mb-4 text-4xl font-bold\">No print history found</h4>\n\t\t\t\t\t\t\t<div className=\"text-xl text-zinc-400\">What are you waiting for? Go print something!</div>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t)}\n\t\t\t</tbody>\n\t\t</table>\n\t);\n};\n","// `app/page.tsx` is the UI for the `/` URL\n'use client';\n\nimport { twMerge } from 'tailwind-merge';\nimport { Badge } from '@/components/common/badge';\nimport { useMainsailQuery } from '@/hooks/useMainsail';\nimport { trpc } from '@/utils/trpc';\nimport { HistoryTable } from '@/app/historyTable';\nimport { useMoonrakerQuery, usePrinterObjectQuery } from '@/moonraker/hooks';\nimport { useMemo } from 'react';\nimport { Duration, DurationLikeObject } from 'luxon';\nimport CountUp from 'react-countup';\n\nconst secondaryNavigation = [\n\t{ name: 'History', href: '#', current: true },\n\t// { name: 'Console', href: '#', current: false },\n];\n\nexport default function Page() {\n\tconst printerName = useMainsailQuery('general.printername', { initialData: 'Loading...' });\n\tconst savedPrinterName = trpc.printer.getSavedPrinterName.useQuery(undefined, { initialData: 'Loading...' });\n\tconst jobTotals = useMoonrakerQuery('server.history.totals');\n\tconst klippyState = useMoonrakerQuery('server.info');\n\tconst printerStateQuery = usePrinterObjectQuery('print_stats');\n\tconst printerState = printerStateQuery.data?.print_stats.state;\n\tconst stats = useMemo(() => {\n\t\tif (jobTotals.data == null) {\n\t\t\treturn [\n\t\t\t\t{\n\t\t\t\t\tname: 'Total Print Time',\n\t\t\t\t\tvalue: 0,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'Longest Print',\n\t\t\t\t\tvalue: 0,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'Avg. Print',\n\t\t\t\t\tvalue: 0,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'Total Filament Used',\n\t\t\t\t\tvalue: 0,\n\t\t\t\t\tunit: 'meters',\n\t\t\t\t},\n\t\t\t];\n\t\t}\n\t\tconst totalPrintTime = Duration.fromObject(\n\t\t\t{\n\t\t\t\thours:\n\t\t\t\t\tjobTotals.data.job_totals.total_print_time === 0 ? 0 : jobTotals.data.job_totals.total_print_time / 60 / 60,\n\t\t\t},\n\t\t\t{ locale: 'en-GB' },\n\t\t)\n\t\t\t.shiftTo(...(['seconds', 'minutes', 'hours', 'days'].filter(Boolean) as (keyof DurationLikeObject)[]))\n\t\t\t.normalize()\n\t\t\t.toObject();\n\t\tconst longestPrint = Duration.fromObject(\n\t\t\t{ hours: jobTotals.data.job_totals.longest_print === 0 ? 0 : jobTotals.data.job_totals.longest_print / 60 / 60 },\n\t\t\t{ locale: 'en-GB' },\n\t\t)\n\t\t\t.shiftTo(...(['seconds', 'minutes', 'hours'].filter(Boolean) as (keyof DurationLikeObject)[]))\n\t\t\t.normalize()\n\t\t\t.toObject();\n\t\tconst avg = jobTotals.data.job_totals.total_print_time / jobTotals.data.job_totals.total_jobs;\n\t\tconst avgPrint = Duration.fromObject({ hours: isNaN(avg) ? 0 : avg / 60 / 60 }, { locale: 'en-GB' })\n\t\t\t.shiftTo(...(['seconds', 'minutes', 'hours'].filter(Boolean) as (keyof DurationLikeObject)[]))\n\t\t\t.normalize()\n\t\t\t.toObject();\n\t\treturn [\n\t\t\t{\n\t\t\t\tname: 'Total Print Time',\n\t\t\t\tvalue: [\n\t\t\t\t\ttotalPrintTime.days && { val: totalPrintTime.days, unit: 'days' },\n\t\t\t\t\ttotalPrintTime.hours && { val: totalPrintTime.hours, unit: 'hrs' },\n\t\t\t\t\t!totalPrintTime.days && { val: totalPrintTime.minutes, unit: 'mins' },\n\t\t\t\t].filter(Boolean),\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Longest Print',\n\t\t\t\tvalue: [\n\t\t\t\t\tlongestPrint.hours && { val: longestPrint.hours, unit: 'hrs' },\n\t\t\t\t\t{ val: longestPrint.minutes, unit: 'mins' },\n\t\t\t\t].filter(Boolean),\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Avg. Print',\n\t\t\t\tvalue: [avgPrint.hours && { val: avgPrint.hours, unit: 'hrs' }, { val: avgPrint.minutes, unit: 'mins' }].filter(\n\t\t\t\t\tBoolean,\n\t\t\t\t),\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Total Filament Used',\n\t\t\t\tvalue: jobTotals.data.job_totals.total_filament_used / 1000,\n\t\t\t\tunit: 'meters',\n\t\t\t},\n\t\t];\n\t}, [jobTotals.data]);\n\treturn (\n\t\t<main className=\"@container\">\n\t\t\t<header>\n\t\t\t\t{/* Secondary navigation */}\n\t\t\t\t<div className=\"border-b border-white/10\">\n\t\t\t\t\t<nav className=\"mx-auto flex max-w-7xl overflow-x-auto py-4\">\n\t\t\t\t\t\t<ul\n\t\t\t\t\t\t\trole=\"list\"\n\t\t\t\t\t\t\tclassName=\"flex min-w-full flex-none gap-x-6 px-4 text-sm font-semibold leading-6 text-zinc-400 @screen-sm:px-6 @screen-lg:px-8\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{secondaryNavigation.map((item) => (\n\t\t\t\t\t\t\t\t<li key={item.name}>\n\t\t\t\t\t\t\t\t\t<a href={item.href} className={item.current ? 'text-brand-400' : ''}>\n\t\t\t\t\t\t\t\t\t\t{item.name}\n\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</nav>\n\t\t\t\t</div>\n\n\t\t\t\t{/* Heading */}\n\t\t\t\t<div className=\"bg-zinc-700/15 backdrop-blur-sm\">\n\t\t\t\t\t<div className=\"mx-auto flex max-w-7xl flex-col items-start justify-between gap-x-8 gap-y-4 px-4 py-4 @screen-sm:flex-row @screen-sm:items-center @screen-sm:px-6 @screen-lg:px-8\">\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<div className=\"flex items-center gap-x-3\">\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tclassName={twMerge(\n\t\t\t\t\t\t\t\t\t\t'flex-none rounded-full bg-green-400/10 p-1 text-zinc-400',\n\t\t\t\t\t\t\t\t\t\tklippyState.data?.klippy_state === 'error' && 'bg-red-400/10 text-red-400',\n\t\t\t\t\t\t\t\t\t\tklippyState.data?.klippy_state === 'startup' && 'bg-amber-400/10 text-amber-400',\n\t\t\t\t\t\t\t\t\t\tklippyState.data?.klippy_state === 'ready' && 'bg-green-400/10 text-green-400',\n\t\t\t\t\t\t\t\t\t\tklippyState.data?.klippy_state === 'shutdown' && 'bg-red-400/10 text-red-400',\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<div className=\"h-2 w-2 rounded-full bg-current\" />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<h1 className=\"flex gap-x-3 text-base leading-7\">\n\t\t\t\t\t\t\t\t\t<span className=\"font-semibold text-white\">{printerName.data}</span>\n\t\t\t\t\t\t\t\t\t<span className=\"text-zinc-600\">/</span>\n\t\t\t\t\t\t\t\t\t<span className=\"font-semibold text-white\">{savedPrinterName.data}</span>\n\t\t\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<Badge\n\t\t\t\t\t\t\tclassName=\"order-first capitalize @screen-sm:order-none\"\n\t\t\t\t\t\t\tcolor={\n\t\t\t\t\t\t\t\tprinterState === undefined\n\t\t\t\t\t\t\t\t\t? 'gray'\n\t\t\t\t\t\t\t\t\t: printerState == 'canceled'\n\t\t\t\t\t\t\t\t\t\t? 'pink'\n\t\t\t\t\t\t\t\t\t\t: printerState == 'complete'\n\t\t\t\t\t\t\t\t\t\t\t? 'green'\n\t\t\t\t\t\t\t\t\t\t\t: printerState == 'error'\n\t\t\t\t\t\t\t\t\t\t\t\t? 'red'\n\t\t\t\t\t\t\t\t\t\t\t\t: printerState === 'paused'\n\t\t\t\t\t\t\t\t\t\t\t\t\t? 'sky'\n\t\t\t\t\t\t\t\t\t\t\t\t\t: printerState === 'printing'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t? 'yellow'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t: printerState === 'standby'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? 'brand'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: 'gray'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{printerState === undefined ? 'Offline' : printerState ?? 'Loading...'}\n\t\t\t\t\t\t</Badge>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t{/* Stats */}\n\t\t\t\t<div className=\"border-t border-white/5 bg-zinc-700/10 backdrop-blur-sm\">\n\t\t\t\t\t<div className=\"mx-auto grid max-w-7xl grid-cols-1 @screen-sm:grid-cols-2 @screen-lg:grid-cols-4\">\n\t\t\t\t\t\t{stats.map((stat, statIdx) => (\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tkey={stat.name}\n\t\t\t\t\t\t\t\tclassName={twMerge(\n\t\t\t\t\t\t\t\t\tstatIdx % 2 === 1 ? '@screen-sm:border-l' : statIdx === 2 ? 'lg:border-l' : '',\n\t\t\t\t\t\t\t\t\t'border-white/5 px-4 py-6 @screen-sm:px-6 @screen-lg:px-8',\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<p className=\"text-sm font-medium leading-6 text-zinc-400\">{stat.name}</p>\n\t\t\t\t\t\t\t\t<p className=\"mt-2 flex items-baseline gap-x-2\">\n\t\t\t\t\t\t\t\t\t{!Array.isArray(stat.value) ? (\n\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-4xl font-semibold tracking-tight text-white\">\n\t\t\t\t\t\t\t\t\t\t\t\t<CountUp start={0} end={stat.value} decimals={2} preserveValue={true} />\n\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t{stat.unit ? <span className=\"text-sm text-zinc-400\">{stat.unit}</span> : null}\n\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\tstat.value.map(({ val, unit }, idx) => (\n\t\t\t\t\t\t\t\t\t\t\t<span key={idx} className=\"flex items-baseline gap-x-2\">\n\t\t\t\t\t\t\t\t\t\t\t\t<span key={idx} className=\"text-4xl font-semibold tracking-tight text-white\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<CountUp start={0} end={val ?? 0} decimals={0} preserveValue={true}></CountUp>\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t{unit ? <span className=\"truncate text-sm text-zinc-400\">{unit}</span> : null}\n\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</header>\n\n\t\t\t{/* Activity list */}\n\t\t\t<div className=\"border-t border-white/10 pt-11\">\n\t\t\t\t<div className=\"mx-auto max-w-7xl\">\n\t\t\t\t\t<h2 className=\"px-4 text-base font-semibold leading-7 text-white @screen-sm:px-6 @screen-lg:px-8\">\n\t\t\t\t\t\tLatest jobs\n\t\t\t\t\t</h2>\n\t\t\t\t\t<HistoryTable />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</main>\n\t);\n}\n","import { VariantProps, cva } from 'class-variance-authority';\nimport { twMerge } from 'tailwind-merge';\nimport { z } from 'zod';\n\nexport const badgeColorOptions = z.union([\n\tz.literal('rose'),\n\tz.literal('red'),\n\tz.literal('yellow'),\n\tz.literal('orange'),\n\tz.literal('green'),\n\tz.literal('lime'),\n\tz.literal('blue'),\n\tz.literal('sky'),\n\tz.literal('indigo'),\n\tz.literal('purple'),\n\tz.literal('pink'),\n\tz.literal('brand'),\n\tz.literal('gray'),\n\tz.literal('plain'),\n]);\nexport const badgeTextColorStyle = cva('', {\n\tvariants: {\n\t\tcolor: {\n\t\t\trose: 'text-rose-700 dark:text-rose-400',\n\t\t\tred: 'text-red-700 dark:text-red-400',\n\t\t\tyellow: 'text-yellow-800 dark:text-yellow-500',\n\t\t\torange: 'text-orange-800 dark:text-orange-500',\n\t\t\tgreen: 'text-green-700 dark:text-green-400',\n\t\t\tlime: 'text-lime-700 dark:text-lime-400',\n\t\t\tblue: 'text-blue-700 dark:text-blue-400',\n\t\t\tsky: 'text-sky-700 dark:text-sky-400',\n\t\t\tindigo: 'text-indigo-700 dark:text-indigo-400',\n\t\t\tpurple: 'text-purple-700 dark:text-purple-400',\n\t\t\tpink: 'text-pink-700 dark:text-pink-400',\n\t\t\tbrand: 'text-brand-700 dark:text-brand-400',\n\t\t\tgray: 'text-zinc-600 dark:text-zinc-400',\n\t\t\tplain: 'text-zinc-900 dark:text-zinc-100',\n\t\t} satisfies { [key in z.infer<typeof badgeColorOptions>]: string },\n\t},\n});\n\nexport const badgeBackgroundColorStyle = cva('', {\n\tvariants: {\n\t\tcolor: {\n\t\t\trose: 'bg-rose-50 dark:bg-rose-400/10',\n\t\t\tred: 'bg-red-50 dark:bg-red-400/10',\n\t\t\tyellow: 'bg-yellow-50 dark:bg-yellow-400/10',\n\t\t\torange: 'bg-orange-50 dark:bg-orange-400/10',\n\t\t\tgreen: 'bg-green-50 dark:bg-green-500/10',\n\t\t\tlime: 'bg-lime-50 dark:bg-lime-500/10',\n\t\t\tblue: 'bg-blue-50 dark:bg-blue-400/10',\n\t\t\tsky: 'bg-sky-50 dark:bg-sky-400/10',\n\t\t\tindigo: 'bg-indigo-50 dark:bg-indigo-400/10',\n\t\t\tpurple: 'bg-purple-50 dark:bg-purple-400/10',\n\t\t\tpink: 'bg-pink-50 dark:bg-pink-400/10',\n\t\t\tbrand: 'bg-brand-100 dark:bg-brand-400/10',\n\t\t\tgray: 'bg-zinc-50 dark:bg-zinc-400/10',\n\t\t\tplain: 'bg-zinc-900/10 dark:bg-zinc-100/10',\n\t\t} satisfies { [key in z.infer<typeof badgeColorOptions>]: string },\n\t},\n});\n\nexport const badgeBorderColorStyle = cva('', {\n\tvariants: {\n\t\tcolor: {\n\t\t\trose: 'border-rose-600/10 dark:border-rose-400/20 ring-rose-600/10 dark:ring-rose-400/20',\n\t\t\tred: 'border-red-600/10 dark:border-red-400/20 ring-red-600/10 dark:ring-red-400/20',\n\t\t\tyellow: 'border-yellow-600/20 dark:border-yellow-400/20 ring-yellow-600/20 dark:ring-yellow-400/20',\n\t\t\torange: 'border-orange-600/20 dark:border-orange-400/20 ring-orange-600/20 dark:ring-orange-400/20',\n\t\t\tgreen: 'border-green-600/20 dark:border-green-500/20 ring-green-600/20 dark:ring-green-500/20',\n\t\t\tlime: 'border-lime-600/20 dark:border-lime-500/20 ring-lime-600/20 dark:ring-lime-500/20',\n\t\t\tblue: 'border-blue-700/10 dark:border-blue-400/30 ring-blue-700/10 dark:ring-blue-400/30',\n\t\t\tsky: 'border-sky-700/10 dark:border-sky-400/30 ring-sky-700/10 dark:ring-sky-400/30',\n\t\t\tindigo: 'border-indigo-700/10 dark:border-indigo-400/30 ring-indigo-700/10 dark:ring-indigo-400/30',\n\t\t\tpurple: 'border-purple-700/10 dark:border-purple-400/30 ring-purple-700/10 dark:ring-purple-400/30',\n\t\t\tpink: 'border-pink-700/10 dark:border-pink-400/20 ring-pink-700/10 dark:ring-pink-400/20',\n\t\t\tbrand: 'border-brand-600/40 dark:border-brand-400/30 ring-brand-600/40 dark:ring-brand-400/30',\n\t\t\tgray: 'border-zinc-500/10 dark:border-zinc-400/20 ring-zinc-500/10 dark:ring-zinc-400/20',\n\t\t\tplain: 'border-zinc-900 dark:border-zinc-100 ring-zinc-900 dark:ring-zinc-100',\n\t\t} satisfies { [key in z.infer<typeof badgeColorOptions>]: string },\n\t},\n});\n\nconst badgeStyle = cva('flex-0 inline-flex w-auto items-center rounded-md font-medium ring-1 ring-inset', {\n\tvariants: {\n\t\tsize: {\n\t\t\tsm: 'px-1.5 gap-1.5 py-1 text-2xs leading-3',\n\t\t\tmd: 'px-2 gap-2 py-1 text-xs leading-4',\n\t\t\tlg: 'px-2 gap-2 py-1 text-xs leading-6',\n\t\t},\n\t\tcolor: {\n\t\t\trose: [\n\t\t\t\tbadgeBackgroundColorStyle({ color: 'rose' }),\n\t\t\t\tbadgeBorderColorStyle({ color: 'rose' }),\n\t\t\t\tbadgeTextColorStyle({ color: 'rose' }),\n\t\t\t],\n\t\t\tred: [\n\t\t\t\tbadgeBackgroundColorStyle({ color: 'red' }),\n\t\t\t\tbadgeBorderColorStyle({ color: 'red' }),\n\t\t\t\tbadgeTextColorStyle({ color: 'red' }),\n\t\t\t],\n\t\t\tyellow: [\n\t\t\t\tbadgeBackgroundColorStyle({ color: 'yellow' }),\n\t\t\t\tbadgeBorderColorStyle({ color: 'yellow' }),\n\t\t\t\tbadgeTextColorStyle({ color: 'yellow' }),\n\t\t\t],\n\t\t\torange: [\n\t\t\t\tbadgeBackgroundColorStyle({ color: 'orange' }),\n\t\t\t\tbadgeBorderColorStyle({ color: 'orange' }),\n\t\t\t\tbadgeTextColorStyle({ color: 'orange' }),\n\t\t\t],\n\t\t\tgreen: [\n\t\t\t\tbadgeBackgroundColorStyle({ color: 'green' }),\n\t\t\t\tbadgeBorderColorStyle({ color: 'green' }),\n\t\t\t\tbadgeTextColorStyle({ color: 'green' }),\n\t\t\t],\n\t\t\tlime: [\n\t\t\t\tbadgeBackgroundColorStyle({ color: 'lime' }),\n\t\t\t\tbadgeBorderColorStyle({ color: 'lime' }),\n\t\t\t\tbadgeTextColorStyle({ color: 'lime' }),\n\t\t\t],\n\t\t\tblue: [\n\t\t\t\tbadgeBackgroundColorStyle({ color: 'blue' }),\n\t\t\t\tbadgeBorderColorStyle({ color: 'blue' }),\n\t\t\t\tbadgeTextColorStyle({ color: 'blue' }),\n\t\t\t],\n\t\t\tsky: [\n\t\t\t\tbadgeBackgroundColorStyle({ color: 'sky' }),\n\t\t\t\tbadgeBorderColorStyle({ color: 'sky' }),\n\t\t\t\tbadgeTextColorStyle({ color: 'sky' }),\n\t\t\t],\n\t\t\tindigo: [\n\t\t\t\tbadgeBackgroundColorStyle({ color: 'indigo' }),\n\t\t\t\tbadgeBorderColorStyle({ color: 'indigo' }),\n\t\t\t\tbadgeTextColorStyle({ color: 'indigo' }),\n\t\t\t],\n\t\t\tpurple: [\n\t\t\t\tbadgeBackgroundColorStyle({ color: 'purple' }),\n\t\t\t\tbadgeBorderColorStyle({ color: 'purple' }),\n\t\t\t\tbadgeTextColorStyle({ color: 'purple' }),\n\t\t\t],\n\t\t\tpink: [\n\t\t\t\tbadgeBackgroundColorStyle({ color: 'pink' }),\n\t\t\t\tbadgeBorderColorStyle({ color: 'pink' }),\n\t\t\t\tbadgeTextColorStyle({ color: 'pink' }),\n\t\t\t],\n\t\t\tbrand: [\n\t\t\t\tbadgeBackgroundColorStyle({ color: 'brand' }),\n\t\t\t\tbadgeBorderColorStyle({ color: 'brand' }),\n\t\t\t\tbadgeTextColorStyle({ color: 'brand' }),\n\t\t\t],\n\t\t\tgray: [\n\t\t\t\tbadgeBackgroundColorStyle({ color: 'gray' }),\n\t\t\t\tbadgeBorderColorStyle({ color: 'gray' }),\n\t\t\t\tbadgeTextColorStyle({ color: 'gray' }),\n\t\t\t],\n\t\t\tplain: [\n\t\t\t\tbadgeBackgroundColorStyle({ color: 'plain' }),\n\t\t\t\tbadgeBorderColorStyle({ color: 'plain' }),\n\t\t\t\tbadgeTextColorStyle({ color: 'plain' }),\n\t\t\t],\n\t\t} satisfies { [key in z.infer<typeof badgeColorOptions>]: string[] },\n\t},\n\tdefaultVariants: {\n\t\tsize: 'md',\n\t\tcolor: 'gray',\n\t},\n});\n\nexport type BadgeProps = JSX.IntrinsicElements['span'] &\n\tVariantProps<typeof badgeStyle> & {\n\t\tchildren: React.ReactNode;\n\t\tclassName?: string;\n\t};\n\nexport const Badge: React.FC<BadgeProps> = (props) => {\n\tconst { size, color, className, children, ...forwardProps } = props;\n\treturn (\n\t\t<span className={twMerge(badgeStyle({ size, color }), className)} {...forwardProps}>\n\t\t\t{children}\n\t\t</span>\n\t);\n};\n","import { useCallback } from 'react';\nimport { useMoonraker, useNamespacedItemMutation, useNamespacedItemQuery } from '@/moonraker/hooks';\nimport { UseMutationOptions, UseQueryOptions } from '@tanstack/react-query';\nimport { MoonrakerDBItemResponse, MoonrakerDBValue, MoonrakerNamespaceKeys } from '@/moonraker/types';\n\nexport const useMainsailQuery = <\n\tK extends MoonrakerNamespaceKeys<'mainsail'>,\n\tV extends MoonrakerDBValue<'mainsail', K>,\n>(\n\tkey: K,\n\toptions?: Omit<UseQueryOptions<V, unknown, V, 'mainsail'[]>, 'queryKey' | 'queryFn'>,\n) => useNamespacedItemQuery('mainsail', key, options);\n\nexport const useMainsailMutation = <\n\tK extends MoonrakerNamespaceKeys<'mainsail'>,\n\tV extends MoonrakerDBValue<'mainsail', K>,\n>(\n\tkey: K,\n\toptions?: Omit<UseMutationOptions<MoonrakerDBItemResponse<V>, unknown, V>, 'mutationKey' | 'mutationFn'>,\n) => useNamespacedItemMutation('mainsail', key, options);\n\nexport function useMainsail() {\n\tconst moonraker = useMoonraker();\n\tconst getMainsailItem = useCallback(\n\t\tasync <K extends MoonrakerNamespaceKeys<'mainsail'>, V extends MoonrakerDBValue<'mainsail', K>>(\n\t\t\tkey: MoonrakerNamespaceKeys<'mainsail'>,\n\t\t): Promise<V> => {\n\t\t\treturn (await moonraker.getItem('mainsail', key)) as V;\n\t\t},\n\t\t[moonraker],\n\t);\n\tconst saveMainsailItem = useCallback(\n\t\tasync <K extends MoonrakerNamespaceKeys<'mainsail'>, V extends MoonrakerDBValue<'mainsail', K>>(\n\t\t\tkey: K,\n\t\t\tvalue: V,\n\t\t): Promise<MoonrakerDBItemResponse<V>> => {\n\t\t\treturn await moonraker.saveItem('mainsail', key, value as V);\n\t\t},\n\t\t[moonraker],\n\t);\n\n\treturn {\n\t\tgetItem: getMainsailItem,\n\t\tsaveItem: saveMainsailItem,\n\t};\n}\n"],"names":["Promise","resolve","then","__webpack_require__","bind","findThumbnail","thumbnails","size","thumbnail","find","t","thumbUrl","getHost","relative_path","concat","getHistoryStateFillColor","status","getHistoryStateTextColor","columns","header","jsx_runtime","jsx","span","accessorKey","enableSorting","cell","info","row","original","metadata","jsxs","div","className","img","src","alt","getValue","sortDescFirst","enableMultiSort","time","DateTime","fromSeconds","setLocale","title","toLocaleString","dateStyle","timeStyle","toRelative","twMerge","replace","Duration","fromObject","hours","locale","normalize","shiftTo","filter","Boolean","toHuman","unitDisplay","listStyle","maximumFractionDigits","slicer","filamentUsed","CountUp","start","end","preserveValue","decimals","getColumnSizeClass","big","includes","key","medium","small","shrink","HistoryTable","tableRef","_this","_offsetTop","moon","useMoonraker","sorting","setSorting","useState","id","desc","useRef","data","fetchNextPage","isFetching","isFetchingNextPage","hasNextPage","isLoading","useInfiniteQuery","queryKey","queryFn","param","pageParam","fetchedData","query","limit","order","getNextPageParam","lastPage","allPages","count","length","undefined","keepPreviousData","refetchOnWindowFocus","flatData","useMemo","pages","flatMap","page","jobs","totalFetched","table","useReactTable","state","getCoreRowModel","getSortedRowModel","manualSorting","debugTable","handleSortingChange","updater","getRowModel","rows","rowVirtualizer","scrollToIndex","setOptions","prev","onSortingChange","useWindowVirtualizer","estimateSize","measureElement","navigator","userAgent","indexOf","element","getBoundingClientRect","height","overscan","scrollMargin","current","offsetTop","paddingEnd","offsetParent","useEffect","lastItem","getVirtualItems","reverse","index","Spinner","h3","style","display","getTotalSize","width","position","ref","thead","top","zIndex","getHeaderGroups","map","tr","headerGroup","headers","_header_column_getIsSorted","th","scope","column","getSize","getCanSort","onClick","getToggleSortingHandler","flexRender","columnDef","getContext","asc","ChevronUpIcon","ChevronDownIcon","getIsSorted","ChevronUpDownIcon","tbody","virtualRow","data-index","node","transform","options","getVisibleCells","td","colSpan","h4","secondaryNavigation","name","href","Page","printerStateQuery","klippyState","printerName","useMainsailQuery","initialData","savedPrinterName","trpc","printer","getSavedPrinterName","useQuery","jobTotals","useMoonrakerQuery","usePrinterObjectQuery","printerState","print_stats","stats","value","unit","totalPrintTime","job_totals","total_print_time","toObject","longestPrint","longest_print","avg","total_jobs","avgPrint","isNaN","days","val","minutes","total_filament_used","main","nav","ul","role","li","a","item","klippy_state","h1","Badge","color","stat","statIdx","p","isArray","idx","Fragment","h2","badgeColorOptions","z","union","literal","badgeTextColorStyle","cva","variants","rose","red","yellow","orange","green","lime","blue","sky","indigo","purple","pink","brand","gray","plain","badgeBackgroundColorStyle","badgeBorderColorStyle","badgeStyle","sm","md","lg","defaultVariants","children","forwardProps","props","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","useNamespacedItemQuery"],"sourceRoot":""}