{"version":3,"file":"static/chunks/app/analysis/macros/[id]/recordings/[runId]/page-4bf98cf2fe7b1a3d.js","mappings":"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","sources":["webpack://_N_E/ignored|/home/runner/work/RatOS-configurator/RatOS-configurator/src/node_modules/.pnpm/pump@3.0.0/node_modules/pump|fs","webpack://_N_E/?e06b","webpack://_N_E/./helpers/logger.ts","webpack://_N_E/./zods/util.tsx","webpack://_N_E/./app/_helpers/logger.ts","webpack://_N_E/./app/analysis/macros/[id]/recordings/[runId]/macro-run-chart.tsx","webpack://_N_E/./app/analysis/macros/[id]/recordings/[runId]/macro-run.tsx","webpack://_N_E/./helpers/trpc.ts","webpack://_N_E/<anon>"],"sourcesContent":["/* (ignored) */","import(/* webpackMode: \"eager\" */ \"/home/runner/work/RatOS-configurator/RatOS-configurator/src/app/analysis/macros/[id]/recordings/[runId]/macro-run.tsx\");\nimport(/* webpackMode: \"eager\" */ \"/home/runner/work/RatOS-configurator/RatOS-configurator/src/components/common/no-ssr.tsx\")","import { LoggerOptions } from 'pino';\n\nexport const globalPinoOpts: LoggerOptions = {\n\ttimestamp: true,\n};\n","import { z } from 'zod';\n\nexport const PinoLogLevel = z.enum(['trace', 'debug', 'info', 'warn', 'error', 'fatal']);\n\nexport const PinoLogEvent = z.object({\n\tts: z.number(),\n\tmessages: z.array(z.any()),\n\tbindings: z.array(z.record(z.string(), z.any())),\n\tlevel: z.object({\n\t\tlabel: PinoLogLevel,\n\t\tvalue: z.number(),\n\t}),\n});\n","import pino from 'pino';\nimport { globalPinoOpts } from '@/helpers/logger';\nimport { trpcClient } from '@/helpers/trpc';\nimport { PinoLogEvent } from '@/zods/util';\nimport { write } from 'pino-pretty-browser';\n\nconst send = async function (level: pino.Level, logEvent: pino.LogEvent) {\n\ttrpcClient.clientLog.mutate({ level, logEvent: PinoLogEvent.parse(logEvent) });\n};\n\nlet logger: pino.Logger | null = null;\nexport const getLogger = () => {\n\tif (logger != null) {\n\t\treturn logger;\n\t}\n\tlogger = pino({\n\t\t...globalPinoOpts,\n\t\tbrowser: {\n\t\t\tasObject: true,\n\t\t\tserialize: true,\n\t\t\ttransmit: {\n\t\t\t\tsend,\n\t\t\t},\n\t\t\twrite: write,\n\t\t},\n\t});\n\treturn logger;\n};\n","'use client';\nimport { macroRecordingSchema, macroSequenceSchema } from '@/zods/analysis';\nimport {\n\tPSDChardNoSeriesDefinition,\n\tPSD_CHART_AXIS_AMPLITUDE_ID,\n\tgetPSDTooltipLegendTemplate,\n\tpsdRolloverTooltipTemplate,\n} from '@/app/analysis/charts';\nimport { useChart } from '@/app/analysis/hooks';\nimport { z } from 'zod';\nimport React, { useCallback, useEffect, useRef } from 'react';\nimport {\n\tCursorModifier,\n\tEDataSeriesType,\n\tFastBandRenderableSeries,\n\tFastLineRenderableSeries,\n\tNumberRange,\n\tRolloverModifier,\n\tSciChartSurface,\n\tSeriesInfo,\n\tWaveAnimation,\n\tXyDataSeries,\n\tXyyDataSeries,\n\tXyySeriesInfo,\n} from 'scichart';\nimport { shadableTWColors } from '@/app/_helpers/colors';\nimport { SciChartReact } from 'scichart-react';\nimport deepEqual from 'deep-equal';\n\nSciChartSurface.configure({\n\twasmUrl: '/configure/scichart2d.wasm',\n\tdataUrl: '/configure/scichart2d.data',\n});\n\ninterface MacroRunChartProps {\n\trecordings: z.infer<typeof macroRecordingSchema>[];\n\tsequences: z.infer<typeof macroSequenceSchema>[];\n}\n\nconst getBandTooltipDataTemplate = (\n\tseriesInfo: SeriesInfo,\n\ttooltipTitle: string,\n\ttooltipLabelX: string,\n\ttooltipLabelY: string,\n) => {\n\t// Lines here are returned to the tooltip and displayed as text-line per tooltip\n\tconst lines: string[] = [];\n\tlines.push(tooltipTitle);\n\tlines.push(\n\t\t`<tspan class=\"opacity-70 font-medium\">${seriesInfo.formattedYValue} @ ${seriesInfo.formattedXValue}</tspan>`,\n\t);\n\tif (seriesInfo.dataSeriesType === EDataSeriesType.Xyy) {\n\t\tconst xyyInfo = seriesInfo as XyySeriesInfo;\n\t\tlines.push(\n\t\t\t`<tspan class=\"opacity-70 font-medium\">${xyyInfo.formattedY1Value} @ ${xyyInfo.formattedXValue}</tspan>`,\n\t\t);\n\t}\n\treturn lines;\n};\nconst getTooltipDataTemplate = (\n\tseriesInfo: SeriesInfo,\n\ttooltipTitle: string,\n\ttooltipLabelX: string,\n\ttooltipLabelY: string,\n) => {\n\t// Lines here are returned to the tooltip and displayed as text-line per tooltip\n\tconst lines: string[] = [];\n\tlines.push(tooltipTitle);\n\tlines.push(\n\t\t`<tspan class=\"opacity-70 font-medium\">${seriesInfo.formattedYValue} @ ${seriesInfo.formattedXValue}</tspan>`,\n\t);\n\treturn lines;\n};\n\nexport const MacroRunChart: React.FC<MacroRunChartProps> = ({ recordings, sequences }) => {\n\tconst sequenceData = recordings\n\t\t.map((rec) => {\n\t\t\tconst sequence = sequences.find((seq) => seq.id === rec.sequenceId);\n\t\t\treturn sequence?.recording\n\t\t\t\t? {\n\t\t\t\t\t\tcolor: sequence?.recording?.color,\n\t\t\t\t\t\tname: rec.name,\n\t\t\t\t\t\tpsd: rec.psd.total,\n\t\t\t\t\t}\n\t\t\t\t: null;\n\t\t})\n\t\t.filter(Boolean);\n\tconst prevSequenceData = useRef(sequenceData);\n\n\tconst setupChart = useCallback(\n\t\t(surface: SciChartSurface) => {\n\t\t\tlet bandSeries = false;\n\t\t\tif (sequenceData.length === 2) {\n\t\t\t\tbandSeries = true;\n\t\t\t\tfor (let i = 0; i < sequenceData[0].psd.frequencies.length; i++) {\n\t\t\t\t\tif (Math.abs(sequenceData[0].psd.frequencies[i] - sequenceData[1].psd.frequencies[i]) > 1) {\n\t\t\t\t\t\tbandSeries = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (bandSeries) {\n\t\t\t\tconst rs = new FastBandRenderableSeries(surface.webAssemblyContext2D, {\n\t\t\t\t\tdataSeries: new XyyDataSeries(surface.webAssemblyContext2D, {\n\t\t\t\t\t\tcontainsNaN: false,\n\t\t\t\t\t\tisSorted: true,\n\t\t\t\t\t\txValues: sequenceData[0].psd.frequencies,\n\t\t\t\t\t\tyValues: sequenceData[0].psd.estimates,\n\t\t\t\t\t\ty1Values: sequenceData[1].psd.estimates,\n\t\t\t\t\t}),\n\t\t\t\t\tfill: shadableTWColors[(sequenceData[1].color ?? 'sky') as keyof typeof shadableTWColors][600] + 22,\n\t\t\t\t\tfillY1: shadableTWColors[(sequenceData[0].color ?? 'rose') as keyof typeof shadableTWColors][600] + 22,\n\t\t\t\t\tstroke: shadableTWColors[(sequenceData[0].color ?? 'rose') as keyof typeof shadableTWColors][400],\n\t\t\t\t\tstrokeY1: shadableTWColors[(sequenceData[1].color ?? 'sky') as keyof typeof shadableTWColors][400],\n\t\t\t\t\tstrokeThickness: 3,\n\t\t\t\t\tyAxisId: PSD_CHART_AXIS_AMPLITUDE_ID,\n\t\t\t\t});\n\t\t\t\trs.rolloverModifierProps.tooltipColor = sequenceData[0].color ?? 'zinc';\n\t\t\t\trs.rolloverModifierProps.tooltipTitle = sequenceData[0].name + ' Power';\n\t\t\t\trs.rolloverModifierProps1.tooltipColor = sequenceData[1].color ?? 'zinc';\n\t\t\t\trs.rolloverModifierProps1.tooltipTitle = sequenceData[1].name + ' Power';\n\t\t\t\trs.animation = new WaveAnimation({\n\t\t\t\t\tduration: 500,\n\t\t\t\t});\n\t\t\t\tsurface.renderableSeries.add(rs);\n\t\t\t} else {\n\t\t\t\tsequenceData.forEach((seq) => {\n\t\t\t\t\tconst rs = new FastLineRenderableSeries(surface.webAssemblyContext2D, {\n\t\t\t\t\t\tdataSeries: new XyDataSeries(surface.webAssemblyContext2D, {\n\t\t\t\t\t\t\tcontainsNaN: false,\n\t\t\t\t\t\t\tisSorted: true,\n\t\t\t\t\t\t\txValues: seq.psd.frequencies,\n\t\t\t\t\t\t\tyValues: seq.psd.estimates,\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tstroke: shadableTWColors[(seq.color ?? 'brand') as keyof typeof shadableTWColors][400],\n\t\t\t\t\t\tstrokeThickness: 3,\n\t\t\t\t\t\tyAxisId: PSD_CHART_AXIS_AMPLITUDE_ID,\n\t\t\t\t\t});\n\t\t\t\t\trs.rolloverModifierProps.tooltipColor = seq.color ?? 'zinc';\n\t\t\t\t\trs.rolloverModifierProps.tooltipTitle = seq.name + ' Power';\n\t\t\t\t\trs.animation = new WaveAnimation({\n\t\t\t\t\t\tduration: 500,\n\t\t\t\t\t});\n\t\t\t\t\tsurface.renderableSeries.add(rs);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tconst yAxis = surface.yAxes.getById(PSD_CHART_AXIS_AMPLITUDE_ID);\n\t\t\tif (yAxis) {\n\t\t\t\tyAxis.visibleRange = new NumberRange(\n\t\t\t\t\tMath.min(...sequenceData.map((seq) => seq.psd.powerRange.min)),\n\t\t\t\t\tMath.max(...sequenceData.map((seq) => seq.psd.powerRange.max)),\n\t\t\t\t).growBy(new NumberRange(0.0, 0.1));\n\t\t\t}\n\n\t\t\tsurface.chartModifiers.add(\n\t\t\t\tnew RolloverModifier({\n\t\t\t\t\t// Defines if rollover vertical line is shown\n\t\t\t\t\tshowRolloverLine: true,\n\t\t\t\t\t// Shows the default tooltip\n\t\t\t\t\tshowTooltip: false,\n\t\t\t\t\tyAxisId: PSD_CHART_AXIS_AMPLITUDE_ID,\n\t\t\t\t\t// Optional: Overrides the content of the tooltip\n\t\t\t\t}),\n\t\t\t);\n\n\t\t\tsurface.chartModifiers.add(\n\t\t\t\tnew CursorModifier({\n\t\t\t\t\t// Defines if crosshair is shown\n\t\t\t\t\tcrosshairStroke: shadableTWColors.sky[400],\n\t\t\t\t\tcrosshairStrokeThickness: 1,\n\t\t\t\t\tshowXLine: true,\n\t\t\t\t\tshowYLine: true,\n\t\t\t\t\ttooltipLegendTemplate: getPSDTooltipLegendTemplate,\n\t\t\t\t\ttooltipLegendOffsetX: 16,\n\t\t\t\t\ttooltipLegendOffsetY: 16,\n\t\t\t\t\tyAxisId: PSD_CHART_AXIS_AMPLITUDE_ID,\n\t\t\t\t\t// Shows the default tooltip\n\t\t\t\t\tshowTooltip: false,\n\t\t\t\t\taxisLabelFill: shadableTWColors.zinc[900],\n\t\t\t\t\taxisLabelStroke: shadableTWColors.zinc[100],\n\t\t\t\t}),\n\t\t\t);\n\t\t},\n\t\t[sequenceData],\n\t);\n\n\tconst chart = useChart(PSDChardNoSeriesDefinition, setupChart);\n\n\tuseEffect(() => {\n\t\tif (sequenceData.length != 0 && deepEqual(sequenceData, prevSequenceData.current) === false) {\n\t\t\tif (chart.surface.current) {\n\t\t\t\tchart.surface.current?.renderableSeries.clear();\n\t\t\t\tchart.surface.current?.chartModifiers.clear();\n\t\t\t\tsetupChart(chart.surface.current);\n\t\t\t\tchart.surface.current.invalidateElement();\n\t\t\t}\n\t\t\tprevSequenceData.current = sequenceData;\n\t\t}\n\t}, [chart.surface, sequenceData, setupChart]);\n\n\treturn <SciChartReact {...chart.forwardProps} className=\"flex-1 bg-zinc-900/50\"></SciChartReact>;\n};\n","'use client';\nimport { MacroRunChart } from '@/app/analysis/macros/[id]/recordings/[runId]/macro-run-chart';\nimport { trpc } from '@/utils/trpc';\n\nexport const MacroRun = ({ id, runId }: { id: string; runId: string }) => {\n\tconst [macro] = trpc.analysis.findMacro.useSuspenseQuery({ id });\n\tconst [recordings] = trpc.analysis.getRunRecordings.useSuspenseQuery({ runId: runId, macroId: id });\n\treturn <MacroRunChart sequences={macro.sequences} recordings={recordings} />;\n};\n","import { proxyClient, trpc } from '@/utils/trpc';\nexport { trpc, proxyClient as trpcClient };\n"],"names":["Promise","resolve","then","__webpack_require__","bind","globalPinoOpts","timestamp","PinoLogLevel","z","enum","PinoLogEvent","object","ts","number","messages","array","any","bindings","record","string","level","label","value","send","logEvent","trpcClient","clientLog","mutate","parse","logger","getLogger","pino","browser","asObject","serialize","transmit","write","SciChartSurface","configure","wasmUrl","dataUrl","MacroRunChart","recordings","sequences","param","sequenceData","map","sequence","find","seq","id","rec","sequenceId","recording","color","name","psd","total","filter","Boolean","prevSequenceData","useRef","setupChart","useCallback","bandSeries","length","i","frequencies","Math","abs","rs","FastBandRenderableSeries","surface","webAssemblyContext2D","dataSeries","XyyDataSeries","containsNaN","isSorted","xValues","yValues","estimates","y1Values","fill","shadableTWColors","fillY1","stroke","strokeY1","strokeThickness","yAxisId","PSD_CHART_AXIS_AMPLITUDE_ID","rolloverModifierProps","tooltipColor","tooltipTitle","rolloverModifierProps1","animation","WaveAnimation","duration","renderableSeries","add","forEach","FastLineRenderableSeries","XyDataSeries","yAxis","yAxes","getById","visibleRange","NumberRange","min","powerRange","max","growBy","chartModifiers","RolloverModifier","showRolloverLine","showTooltip","CursorModifier","crosshairStroke","sky","crosshairStrokeThickness","showXLine","showYLine","tooltipLegendTemplate","getPSDTooltipLegendTemplate","tooltipLegendOffsetX","tooltipLegendOffsetY","axisLabelFill","zinc","axisLabelStroke","chart","useChart","PSDChardNoSeriesDefinition","useEffect","deepEqual","current","clear","invalidateElement","jsx_runtime","jsx","SciChartReact","forwardProps","className","MacroRun","runId","macro","trpc","analysis","findMacro","useSuspenseQuery","getRunRecordings","macroId"],"sourceRoot":""}