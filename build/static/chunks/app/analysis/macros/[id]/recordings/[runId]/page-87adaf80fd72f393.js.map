{"version":3,"file":"static/chunks/app/analysis/macros/[id]/recordings/[runId]/page-87adaf80fd72f393.js","mappings":"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","sources":["webpack://_N_E/?e06b","webpack://_N_E/./app/analysis/macros/[id]/recordings/[runId]/macro-run-chart.tsx","webpack://_N_E/./app/analysis/macros/[id]/recordings/[runId]/macro-run.tsx","webpack://_N_E/./components/common/spinner.tsx","webpack://_N_E/./data/endstops.ts","webpack://_N_E/./hooks/isClient.tsx","webpack://_N_E/./hooks/useToolheadConfiguration.tsx","webpack://_N_E/<anon>"],"sourcesContent":["import(/* webpackMode: \"eager\" */ \"/home/runner/work/RatOS-configurator/RatOS-configurator/src/app/analysis/macros/[id]/recordings/[runId]/macro-run.tsx\");\nimport(/* webpackMode: \"eager\" */ \"/home/runner/work/RatOS-configurator/RatOS-configurator/src/components/common/no-ssr.tsx\")","'use client';\nimport { macroRecordingSchema, macroSequenceSchema } from '@/zods/analysis';\nimport {\n\tPSDChardNoSeriesDefinition,\n\tPSD_CHART_AXIS_AMPLITUDE_ID,\n\tgetPSDTooltipLegendTemplate,\n\tpsdRolloverTooltipTemplate,\n} from '@/app/analysis/charts';\nimport { useChart } from '@/app/analysis/hooks';\nimport { z } from 'zod';\nimport React, { useCallback, useEffect, useRef } from 'react';\nimport {\n\tCursorModifier,\n\tEDataSeriesType,\n\tFastBandRenderableSeries,\n\tFastLineRenderableSeries,\n\tNumberRange,\n\tRolloverModifier,\n\tSciChartSurface,\n\tSeriesInfo,\n\tWaveAnimation,\n\tXyDataSeries,\n\tXyyDataSeries,\n\tXyySeriesInfo,\n} from 'scichart';\nimport { shadableTWColors } from '@/app/_helpers/colors';\nimport { SciChartReact } from 'scichart-react';\nimport deepEqual from 'deep-equal';\n\nSciChartSurface.configure({\n\twasmUrl: '/configure/scichart2d.wasm',\n\tdataUrl: '/configure/scichart2d.data',\n});\n\ninterface MacroRunChartProps {\n\trecordings: z.infer<typeof macroRecordingSchema>[];\n\tsequences: z.infer<typeof macroSequenceSchema>[];\n}\n\nconst getBandTooltipDataTemplate = (\n\tseriesInfo: SeriesInfo,\n\ttooltipTitle: string,\n\ttooltipLabelX: string,\n\ttooltipLabelY: string,\n) => {\n\t// Lines here are returned to the tooltip and displayed as text-line per tooltip\n\tconst lines: string[] = [];\n\tlines.push(tooltipTitle);\n\tlines.push(\n\t\t`<tspan class=\"opacity-70 font-medium\">${seriesInfo.formattedYValue} @ ${seriesInfo.formattedXValue}</tspan>`,\n\t);\n\tif (seriesInfo.dataSeriesType === EDataSeriesType.Xyy) {\n\t\tconst xyyInfo = seriesInfo as XyySeriesInfo;\n\t\tlines.push(\n\t\t\t`<tspan class=\"opacity-70 font-medium\">${xyyInfo.formattedY1Value} @ ${xyyInfo.formattedXValue}</tspan>`,\n\t\t);\n\t}\n\treturn lines;\n};\nconst getTooltipDataTemplate = (\n\tseriesInfo: SeriesInfo,\n\ttooltipTitle: string,\n\ttooltipLabelX: string,\n\ttooltipLabelY: string,\n) => {\n\t// Lines here are returned to the tooltip and displayed as text-line per tooltip\n\tconst lines: string[] = [];\n\tlines.push(tooltipTitle);\n\tlines.push(\n\t\t`<tspan class=\"opacity-70 font-medium\">${seriesInfo.formattedYValue} @ ${seriesInfo.formattedXValue}</tspan>`,\n\t);\n\treturn lines;\n};\n\nexport const MacroRunChart: React.FC<MacroRunChartProps> = ({ recordings, sequences }) => {\n\tconst sequenceData = recordings\n\t\t.map((rec) => {\n\t\t\tconst sequence = sequences.find((seq) => seq.id === rec.sequenceId);\n\t\t\treturn sequence?.recording\n\t\t\t\t? {\n\t\t\t\t\t\tcolor: sequence?.recording?.color,\n\t\t\t\t\t\tname: rec.name,\n\t\t\t\t\t\tpsd: rec.psd.total,\n\t\t\t\t\t}\n\t\t\t\t: null;\n\t\t})\n\t\t.filter(Boolean);\n\tconst prevSequenceData = useRef(sequenceData);\n\n\tconst setupChart = useCallback(\n\t\t(surface: SciChartSurface) => {\n\t\t\tlet bandSeries = false;\n\t\t\tif (sequenceData.length === 2) {\n\t\t\t\tbandSeries = true;\n\t\t\t\tfor (let i = 0; i < sequenceData[0].psd.frequencies.length; i++) {\n\t\t\t\t\tif (Math.abs(sequenceData[0].psd.frequencies[i] - sequenceData[1].psd.frequencies[i]) > 1) {\n\t\t\t\t\t\tbandSeries = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (bandSeries) {\n\t\t\t\tconst rs = new FastBandRenderableSeries(surface.webAssemblyContext2D, {\n\t\t\t\t\tdataSeries: new XyyDataSeries(surface.webAssemblyContext2D, {\n\t\t\t\t\t\tcontainsNaN: false,\n\t\t\t\t\t\tisSorted: true,\n\t\t\t\t\t\txValues: sequenceData[0].psd.frequencies,\n\t\t\t\t\t\tyValues: sequenceData[0].psd.estimates,\n\t\t\t\t\t\ty1Values: sequenceData[1].psd.estimates,\n\t\t\t\t\t}),\n\t\t\t\t\tfill: shadableTWColors[(sequenceData[1].color ?? 'sky') as keyof typeof shadableTWColors][600] + 22,\n\t\t\t\t\tfillY1: shadableTWColors[(sequenceData[0].color ?? 'rose') as keyof typeof shadableTWColors][600] + 22,\n\t\t\t\t\tstroke: shadableTWColors[(sequenceData[0].color ?? 'rose') as keyof typeof shadableTWColors][400],\n\t\t\t\t\tstrokeY1: shadableTWColors[(sequenceData[1].color ?? 'sky') as keyof typeof shadableTWColors][400],\n\t\t\t\t\tstrokeThickness: 3,\n\t\t\t\t\tyAxisId: PSD_CHART_AXIS_AMPLITUDE_ID,\n\t\t\t\t});\n\t\t\t\trs.rolloverModifierProps.tooltipColor = sequenceData[0].color ?? 'zinc';\n\t\t\t\trs.rolloverModifierProps.tooltipTitle = sequenceData[0].name + ' Power';\n\t\t\t\trs.rolloverModifierProps1.tooltipColor = sequenceData[1].color ?? 'zinc';\n\t\t\t\trs.rolloverModifierProps1.tooltipTitle = sequenceData[1].name + ' Power';\n\t\t\t\trs.animation = new WaveAnimation({\n\t\t\t\t\tduration: 500,\n\t\t\t\t});\n\t\t\t\tsurface.renderableSeries.add(rs);\n\t\t\t} else {\n\t\t\t\tsequenceData.forEach((seq) => {\n\t\t\t\t\tconst rs = new FastLineRenderableSeries(surface.webAssemblyContext2D, {\n\t\t\t\t\t\tdataSeries: new XyDataSeries(surface.webAssemblyContext2D, {\n\t\t\t\t\t\t\tcontainsNaN: false,\n\t\t\t\t\t\t\tisSorted: true,\n\t\t\t\t\t\t\txValues: seq.psd.frequencies,\n\t\t\t\t\t\t\tyValues: seq.psd.estimates,\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tstroke: shadableTWColors[(seq.color ?? 'brand') as keyof typeof shadableTWColors][400],\n\t\t\t\t\t\tstrokeThickness: 3,\n\t\t\t\t\t\tyAxisId: PSD_CHART_AXIS_AMPLITUDE_ID,\n\t\t\t\t\t});\n\t\t\t\t\trs.rolloverModifierProps.tooltipColor = seq.color ?? 'zinc';\n\t\t\t\t\trs.rolloverModifierProps.tooltipTitle = seq.name + ' Power';\n\t\t\t\t\trs.animation = new WaveAnimation({\n\t\t\t\t\t\tduration: 500,\n\t\t\t\t\t});\n\t\t\t\t\tsurface.renderableSeries.add(rs);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tconst yAxis = surface.yAxes.getById(PSD_CHART_AXIS_AMPLITUDE_ID);\n\t\t\tif (yAxis) {\n\t\t\t\tyAxis.visibleRange = new NumberRange(\n\t\t\t\t\tMath.min(...sequenceData.map((seq) => seq.psd.powerRange.min)),\n\t\t\t\t\tMath.max(...sequenceData.map((seq) => seq.psd.powerRange.max)),\n\t\t\t\t).growBy(new NumberRange(0.0, 0.1));\n\t\t\t}\n\n\t\t\tsurface.chartModifiers.add(\n\t\t\t\tnew RolloverModifier({\n\t\t\t\t\t// Defines if rollover vertical line is shown\n\t\t\t\t\tshowRolloverLine: true,\n\t\t\t\t\t// Shows the default tooltip\n\t\t\t\t\tshowTooltip: false,\n\t\t\t\t\tyAxisId: PSD_CHART_AXIS_AMPLITUDE_ID,\n\t\t\t\t\t// Optional: Overrides the content of the tooltip\n\t\t\t\t}),\n\t\t\t);\n\n\t\t\tsurface.chartModifiers.add(\n\t\t\t\tnew CursorModifier({\n\t\t\t\t\t// Defines if crosshair is shown\n\t\t\t\t\tcrosshairStroke: shadableTWColors.sky[400],\n\t\t\t\t\tcrosshairStrokeThickness: 1,\n\t\t\t\t\tshowXLine: true,\n\t\t\t\t\tshowYLine: true,\n\t\t\t\t\ttooltipLegendTemplate: getPSDTooltipLegendTemplate,\n\t\t\t\t\ttooltipLegendOffsetX: 16,\n\t\t\t\t\ttooltipLegendOffsetY: 16,\n\t\t\t\t\tyAxisId: PSD_CHART_AXIS_AMPLITUDE_ID,\n\t\t\t\t\t// Shows the default tooltip\n\t\t\t\t\tshowTooltip: false,\n\t\t\t\t\taxisLabelFill: shadableTWColors.zinc[900],\n\t\t\t\t\taxisLabelStroke: shadableTWColors.zinc[100],\n\t\t\t\t}),\n\t\t\t);\n\t\t},\n\t\t[sequenceData],\n\t);\n\n\tconst chart = useChart(PSDChardNoSeriesDefinition, setupChart);\n\n\tuseEffect(() => {\n\t\tif (sequenceData.length != 0 && deepEqual(sequenceData, prevSequenceData.current) === false) {\n\t\t\tif (chart.surface.current) {\n\t\t\t\tchart.surface.current?.renderableSeries.clear();\n\t\t\t\tchart.surface.current?.chartModifiers.clear();\n\t\t\t\tsetupChart(chart.surface.current);\n\t\t\t\tchart.surface.current.invalidateElement();\n\t\t\t}\n\t\t\tprevSequenceData.current = sequenceData;\n\t\t}\n\t}, [chart.surface, sequenceData, setupChart]);\n\n\treturn <SciChartReact {...chart.forwardProps} className=\"flex-1 bg-zinc-900/50\"></SciChartReact>;\n};\n","'use client';\nimport { MacroRunChart } from '@/app/analysis/macros/[id]/recordings/[runId]/macro-run-chart';\nimport { trpc } from '@/utils/trpc';\n\nexport const MacroRun = ({ id, runId }: { id: string; runId: string }) => {\n\tconst [macro] = trpc.analysis.findMacro.useSuspenseQuery({ id });\n\tconst [recordings] = trpc.analysis.getRunRecordings.useSuspenseQuery({ runId: runId, macroId: id });\n\treturn <MacroRunChart sequences={macro.sequences} recordings={recordings} />;\n};\n","import { twMerge } from 'tailwind-merge';\n\nexport const Spinner: React.FC<{ className?: string; noMargin?: boolean }> = (props) => {\n\treturn (\n\t\t<svg\n\t\t\tclassName={twMerge(\n\t\t\t\t'h-5 w-5 animate-spin text-black dark:text-white',\n\t\t\t\t!props.noMargin ? '-ml-1 mr-3' : '',\n\t\t\t\tprops.className,\n\t\t\t)}\n\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\tfill=\"none\"\n\t\t\tviewBox=\"0 0 24 24\"\n\t\t>\n\t\t\t<circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n\t\t\t<path\n\t\t\t\tclassName=\"opacity-75\"\n\t\t\t\tfill=\"currentColor\"\n\t\t\t\td=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n\t\t\t></path>\n\t\t</svg>\n\t);\n};\n","import { z } from 'zod';\nimport { Endstop } from '@/zods/hardware';\nimport { PrinterAxis } from '@/zods/motion';\nimport { PartialToolheadConfiguration } from '@/zods/toolhead';\nimport { PartialPrinterConfiguration } from '@/zods/printer-configuration';\n\nexport const xEndstopOptions = (\n\tconfig?: PartialPrinterConfiguration | null,\n\ttoolheadConfig?: (PartialToolheadConfiguration & { axis: null | PrinterAxis }) | null,\n): z.infer<typeof Endstop>[] => {\n\tconst endstops: z.infer<typeof Endstop>[] = [];\n\tif (toolheadConfig?.toolboard != null) {\n\t\tendstops.push({\n\t\t\tid: 'endstop-toolboard' as const,\n\t\t\ttitle: 'Physical Endstop',\n\t\t\tbadge: [{ color: 'sky', children: `${toolheadConfig.toolboard.name} T${toolheadConfig.toolNumber}` }],\n\t\t});\n\t}\n\tif (toolheadConfig?.axis === PrinterAxis.x) {\n\t\tendstops.push({\n\t\t\tid: 'endstop' as const,\n\t\t\ttitle: 'Physical Endstop',\n\t\t\tbadge: [{ color: 'purple', children: config?.controlboard?.name ?? 'Control Board' }],\n\t\t});\n\t\tendstops.push({\n\t\t\tid: 'sensorless' as const,\n\t\t\ttitle: 'Sensorless Homing',\n\t\t\tbadge: [{ color: 'purple', children: config?.controlboard?.name ?? 'Control Board' }],\n\t\t});\n\t}\n\treturn endstops;\n};\n\nexport const defaultXEndstop = {\n\tid: 'endstop' as const,\n\ttitle: 'Physical Endstop',\n\tbadge: [{ color: 'purple' as const, children: 'Control Board' }],\n};\n\nexport const yEndstopOptions = (\n\tconfig?: PartialPrinterConfiguration | null,\n\ttoolheadConfig?: (PartialToolheadConfiguration & { axis: null | PrinterAxis }) | null,\n): z.infer<typeof Endstop>[] => [\n\t{\n\t\tid: 'endstop' as const,\n\t\ttitle: 'Physical Endstop',\n\t\tbadge: [{ color: 'purple', children: config?.controlboard?.name ?? 'Control Board' }],\n\t},\n\t{\n\t\tid: 'sensorless' as const,\n\t\ttitle: 'Sensorless Homing',\n\t\tbadge: [{ color: 'purple', children: config?.controlboard?.name ?? 'Control Board' }],\n\t},\n];\n","'use client';\nimport { useEffect, useState } from 'react';\n\nexport const useIsClient = () => {\n\tconst [isClient, setIsClient] = useState(false);\n\tuseEffect(() => {\n\t\tif (typeof window !== 'undefined') {\n\t\t\tsetIsClient(true);\n\t\t}\n\t}, []);\n\treturn isClient;\n};\n","import { ToolheadHelper } from '@/helpers/toolhead';\nimport { deserializeStepper } from '@/utils/serialization';\nimport { useRecoilCallback, useRecoilValue } from 'recoil';\nimport { useMemo, useRef, useState } from 'react';\nimport { PrinterRailState } from '@/recoil/printer';\nimport { PrinterAxis } from '@/zods/motion';\nimport { LoadablePrinterToolheadsState, PrinterToolheadState, PrinterToolheadsState } from '@/recoil/toolhead';\nimport { BaseToolheadConfiguration, ToolheadConfiguration, ToolNumber, ToolOrAxis } from '@/zods/toolhead';\nimport { defaultXEndstop } from '@/data/endstops';\nimport { hotendFanOptions, partFanOptions } from '@/data/fans';\n\nexport const useToolhead = (toolOrAxis: ToolOrAxis | PrinterAxis | undefined) => {\n\tconst toolheadConfigs = useRecoilValue(PrinterToolheadsState);\n\tconst toolhead = useMemo(() => {\n\t\tif (toolOrAxis == null) {\n\t\t\treturn null;\n\t\t}\n\t\tconst toolheads = toolheadConfigs?.filter(Boolean).map((th) => new ToolheadHelper(th));\n\t\tconst th = toolheads?.find(\n\t\t\t(th) => th.getTool() === toolOrAxis || th.getMotionAxis() === toolOrAxis || th.getExtruderAxis() === toolOrAxis,\n\t\t);\n\t\treturn th;\n\t}, [toolOrAxis, toolheadConfigs]);\n\treturn toolhead;\n};\n\nexport const useToolheads = () => {\n\tconst toolheadConfigs = useRecoilValue(PrinterToolheadsState);\n\tconst toolheads = useMemo(() => {\n\t\treturn toolheadConfigs?.filter(Boolean).map((th) => new ToolheadHelper(th));\n\t}, [toolheadConfigs]);\n\treturn toolheads;\n};\n\ntype MaybeToolhead<T extends boolean> = T extends true ? ToolheadHelper<any> : ToolheadHelper<any> | null;\n\nexport const useToolheadConfiguration = <T extends boolean = true>(\n\ttoolOrAxis: ToolOrAxis | PrinterAxis | undefined,\n\terrorIfNotExist: T = true as T,\n) => {\n\tconst toolheadConfigs = useRecoilValue(LoadablePrinterToolheadsState);\n\tconst toolheadConfigsRef = useRef(toolheadConfigs);\n\tif (toolheadConfigsRef.current !== toolheadConfigs && toolheadConfigs.length > 0) {\n\t\ttoolheadConfigsRef.current = toolheadConfigs.slice();\n\t}\n\tconst toolhead = useMemo(() => {\n\t\tconst toolheads = toolheadConfigsRef.current?.filter(Boolean).map((th) => new ToolheadHelper(th));\n\t\tconst th = toolheads?.find(\n\t\t\t(th) => th.getTool() === toolOrAxis || th.getMotionAxis() === toolOrAxis || th.getExtruderAxis() === toolOrAxis,\n\t\t);\n\t\tif (th == null && errorIfNotExist) {\n\t\t\tthrow new Error(`Toolhead with number or axis ${toolOrAxis} not found`);\n\t\t}\n\t\treturn th ?? null;\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [errorIfNotExist, toolOrAxis, toolheadConfigsRef.current]);\n\tconst [hasManuallySelectedThermistor, setHasManuallySelectedThermistor] = useState(false);\n\n\tconst setToolhead = useRecoilCallback(\n\t\t({ set, snapshot }) =>\n\t\t\tasync (th: ToolheadConfiguration<any>) => {\n\t\t\t\tconst helper = new ToolheadHelper(th);\n\t\t\t\tconst currentConfig = await snapshot.getPromise(PrinterToolheadState(helper.getTool()));\n\t\t\t\tif (currentConfig == null) {\n\t\t\t\t\tthrow new Error(`Toolhead ${helper.getToolCommand()} not found`);\n\t\t\t\t}\n\t\t\t\tconst current = new ToolheadHelper(currentConfig);\n\t\t\t\tif (th.extruder.id != current.getExtruder().id) {\n\t\t\t\t\tif (th.extruder.stepper != null) {\n\t\t\t\t\t\tconst stepper = deserializeStepper(th.extruder.stepper);\n\t\t\t\t\t\tif (stepper != null) {\n\t\t\t\t\t\t\tset(PrinterRailState(helper.getExtruderAxis()), (rail) => {\n\t\t\t\t\t\t\t\treturn rail == null\n\t\t\t\t\t\t\t\t\t? null\n\t\t\t\t\t\t\t\t\t: {\n\t\t\t\t\t\t\t\t\t\t\t...rail,\n\t\t\t\t\t\t\t\t\t\t\tstepper: stepper.id,\n\t\t\t\t\t\t\t\t\t\t\tcurrent: th.extruder.current ?? stepper.maxPeakCurrent * 0.71,\n\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (th.toolboard?.id !== current.getToolboard()?.id) {\n\t\t\t\t\t// Reset toolboard dependent options\n\t\t\t\t\tif (th.toolboard == null && th.xEndstop.id === 'endstop-toolboard') {\n\t\t\t\t\t\tth.xEndstop = defaultXEndstop;\n\t\t\t\t\t}\n\t\t\t\t\tif (th.partFan?.id.endsWith('-toolboard')) {\n\t\t\t\t\t\tconst newFan = partFanOptions(null, th).shift();\n\t\t\t\t\t\tif (newFan == null) {\n\t\t\t\t\t\t\tthrow new Error(`No part fan options available for current T${th.toolNumber} configuration`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tth.partFan = newFan;\n\t\t\t\t\t}\n\t\t\t\t\tif (th.hotendFan?.id.endsWith('-toolboard')) {\n\t\t\t\t\t\tconst newFan = hotendFanOptions(null, th).shift();\n\t\t\t\t\t\tif (newFan == null) {\n\t\t\t\t\t\t\tthrow new Error(`No hotend fan options available for current T${th.toolNumber} configuration`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tth.hotendFan = newFan;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (th.thermistor !== current.getThermistor() && th.thermistor !== th.hotend.thermistor) {\n\t\t\t\t\tsetHasManuallySelectedThermistor(true);\n\t\t\t\t} else if (th.hotend.id != current.getHotend().id && !hasManuallySelectedThermistor) {\n\t\t\t\t\tth.thermistor = th.hotend.thermistor;\n\t\t\t\t}\n\t\t\t\tconst val = BaseToolheadConfiguration.extend({ toolNumber: ToolNumber })\n\t\t\t\t\t.nullable()\n\t\t\t\t\t.safeParse({ ...th, toolNumber: current.getTool() });\n\t\t\t\tif (val.success) {\n\t\t\t\t\tset(PrinterToolheadState(current.getTool()), val.data);\n\t\t\t\t}\n\t\t\t\treturn val;\n\t\t\t},\n\t\t[hasManuallySelectedThermistor],\n\t);\n\treturn {\n\t\ttoolhead: toolhead as MaybeToolhead<T>,\n\t\tsetToolhead,\n\t};\n};\n"],"names":["Promise","resolve","then","__webpack_require__","bind","SciChartSurface","configure","wasmUrl","dataUrl","MacroRunChart","recordings","sequences","param","sequenceData","map","sequence","find","seq","id","rec","sequenceId","recording","color","name","psd","total","filter","Boolean","prevSequenceData","useRef","setupChart","useCallback","bandSeries","length","i","frequencies","Math","abs","rs","FastBandRenderableSeries","surface","webAssemblyContext2D","dataSeries","XyyDataSeries","containsNaN","isSorted","xValues","yValues","estimates","y1Values","fill","shadableTWColors","fillY1","stroke","strokeY1","strokeThickness","yAxisId","PSD_CHART_AXIS_AMPLITUDE_ID","rolloverModifierProps","tooltipColor","tooltipTitle","rolloverModifierProps1","animation","WaveAnimation","duration","renderableSeries","add","forEach","FastLineRenderableSeries","XyDataSeries","yAxis","yAxes","getById","visibleRange","NumberRange","min","powerRange","max","growBy","chartModifiers","RolloverModifier","showRolloverLine","showTooltip","CursorModifier","crosshairStroke","sky","crosshairStrokeThickness","showXLine","showYLine","tooltipLegendTemplate","getPSDTooltipLegendTemplate","tooltipLegendOffsetX","tooltipLegendOffsetY","axisLabelFill","zinc","axisLabelStroke","chart","useChart","PSDChardNoSeriesDefinition","useEffect","deepEqual","current","clear","invalidateElement","jsx_runtime","jsx","SciChartReact","forwardProps","className","MacroRun","runId","macro","trpc","analysis","findMacro","useSuspenseQuery","getRunRecordings","macroId","Spinner","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsxs","svg","twMerge","noMargin","props","xmlns","viewBox","circle","cx","cy","r","strokeWidth","path","d","xEndstopOptions","config","toolheadConfig","endstops","toolboard","push","title","badge","children","concat","toolNumber","axis","PrinterAxis","x","controlboard","defaultXEndstop","useIsClient","isClient","setIsClient","useState","useToolheads","toolheadConfigs","useRecoilValue","PrinterToolheadsState","toolheads","useMemo","ToolheadHelper","th","useToolheadConfiguration","toolOrAxis","errorIfNotExist","LoadablePrinterToolheadsState","toolheadConfigsRef","slice","toolhead","getTool","getMotionAxis","getExtruderAxis","hasManuallySelectedThermistor","setHasManuallySelectedThermistor","setToolhead","useRecoilCallback","set","snapshot","helper","currentConfig","getPromise","PrinterToolheadState","getToolCommand","extruder","getExtruder","stepper","deserializeStepper","PrinterRailState","rail","maxPeakCurrent","getToolboard","xEndstop","partFan","endsWith","newFan","partFanOptions","shift","hotendFan","hotendFanOptions","thermistor","getThermistor","hotend","getHotend","val","BaseToolheadConfiguration","extend","ToolNumber","nullable","safeParse","success","data"],"sourceRoot":""}