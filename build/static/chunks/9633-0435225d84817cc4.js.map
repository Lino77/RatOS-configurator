{"version":3,"file":"static/chunks/9633-0435225d84817cc4.js","mappings":"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","sources":["webpack://_N_E/./components/common/badge.tsx","webpack://_N_E/./components/sync-with-moonraker.tsx","webpack://_N_E/./data/drivers.ts","webpack://_N_E/./components/ui/typography.tsx","webpack://_N_E/./data/fans.tsx","webpack://_N_E/./data/nozzles.ts","webpack://_N_E/./data/steppers.ts","webpack://_N_E/./helpers/toolhead.ts","webpack://_N_E/./helpers/utils.ts","webpack://_N_E/./recoil/printer.ts","webpack://_N_E/./recoil/toolhead.ts","webpack://_N_E/./utils/serialization.ts","webpack://_N_E/./zods/boards.tsx","webpack://_N_E/./zods/hardware.tsx","webpack://_N_E/./zods/motion.tsx","webpack://_N_E/./zods/printer-configuration.tsx","webpack://_N_E/./zods/printer.tsx","webpack://_N_E/./zods/toolhead.tsx","webpack://_N_E/./env/schema.mjs","webpack://_N_E/<anon>"],"sourcesContent":["import { VariantProps, cva } from 'class-variance-authority';\nimport { twMerge } from 'tailwind-merge';\nimport { z } from 'zod';\n\nexport const badgeColorOptions = z.union([\n\tz.literal('rose'),\n\tz.literal('red'),\n\tz.literal('yellow'),\n\tz.literal('orange'),\n\tz.literal('green'),\n\tz.literal('lime'),\n\tz.literal('blue'),\n\tz.literal('sky'),\n\tz.literal('indigo'),\n\tz.literal('purple'),\n\tz.literal('pink'),\n\tz.literal('brand'),\n\tz.literal('gray'),\n\tz.literal('plain'),\n]);\nexport const badgeTextColorStyle = cva('', {\n\tvariants: {\n\t\tcolor: {\n\t\t\trose: 'text-rose-700 dark:text-rose-400',\n\t\t\tred: 'text-red-700 dark:text-red-400',\n\t\t\tyellow: 'text-yellow-800 dark:text-yellow-500',\n\t\t\torange: 'text-orange-800 dark:text-orange-500',\n\t\t\tgreen: 'text-green-700 dark:text-green-400',\n\t\t\tlime: 'text-lime-700 dark:text-lime-400',\n\t\t\tblue: 'text-blue-700 dark:text-blue-400',\n\t\t\tsky: 'text-sky-700 dark:text-sky-400',\n\t\t\tindigo: 'text-indigo-700 dark:text-indigo-400',\n\t\t\tpurple: 'text-purple-700 dark:text-purple-400',\n\t\t\tpink: 'text-pink-700 dark:text-pink-400',\n\t\t\tbrand: 'text-brand-700 dark:text-brand-400',\n\t\t\tgray: 'text-zinc-600 dark:text-zinc-400',\n\t\t\tplain: 'text-zinc-900 dark:text-zinc-100',\n\t\t} satisfies { [key in z.infer<typeof badgeColorOptions>]: string },\n\t},\n});\n\nexport const badgeBackgroundColorStyle = cva('', {\n\tvariants: {\n\t\tcolor: {\n\t\t\trose: 'bg-rose-50 dark:bg-rose-400/10',\n\t\t\tred: 'bg-red-50 dark:bg-red-400/10',\n\t\t\tyellow: 'bg-yellow-50 dark:bg-yellow-400/10',\n\t\t\torange: 'bg-orange-50 dark:bg-orange-400/10',\n\t\t\tgreen: 'bg-green-50 dark:bg-green-500/10',\n\t\t\tlime: 'bg-lime-50 dark:bg-lime-500/10',\n\t\t\tblue: 'bg-blue-50 dark:bg-blue-400/10',\n\t\t\tsky: 'bg-sky-50 dark:bg-sky-400/10',\n\t\t\tindigo: 'bg-indigo-50 dark:bg-indigo-400/10',\n\t\t\tpurple: 'bg-purple-50 dark:bg-purple-400/10',\n\t\t\tpink: 'bg-pink-50 dark:bg-pink-400/10',\n\t\t\tbrand: 'bg-brand-100 dark:bg-brand-400/10',\n\t\t\tgray: 'bg-zinc-50 dark:bg-zinc-400/10',\n\t\t\tplain: 'bg-zinc-900/10 dark:bg-zinc-100/10',\n\t\t} satisfies { [key in z.infer<typeof badgeColorOptions>]: string },\n\t},\n});\n\nexport const badgeBorderColorStyle = cva('', {\n\tvariants: {\n\t\tcolor: {\n\t\t\trose: 'border-rose-600/10 dark:border-rose-400/20 ring-rose-600/10 dark:ring-rose-400/20',\n\t\t\tred: 'border-red-600/10 dark:border-red-400/20 ring-red-600/10 dark:ring-red-400/20',\n\t\t\tyellow: 'border-yellow-600/20 dark:border-yellow-400/20 ring-yellow-600/20 dark:ring-yellow-400/20',\n\t\t\torange: 'border-orange-600/20 dark:border-orange-400/20 ring-orange-600/20 dark:ring-orange-400/20',\n\t\t\tgreen: 'border-green-600/20 dark:border-green-500/20 ring-green-600/20 dark:ring-green-500/20',\n\t\t\tlime: 'border-lime-600/20 dark:border-lime-500/20 ring-lime-600/20 dark:ring-lime-500/20',\n\t\t\tblue: 'border-blue-700/10 dark:border-blue-400/30 ring-blue-700/10 dark:ring-blue-400/30',\n\t\t\tsky: 'border-sky-700/10 dark:border-sky-400/30 ring-sky-700/10 dark:ring-sky-400/30',\n\t\t\tindigo: 'border-indigo-700/10 dark:border-indigo-400/30 ring-indigo-700/10 dark:ring-indigo-400/30',\n\t\t\tpurple: 'border-purple-700/10 dark:border-purple-400/30 ring-purple-700/10 dark:ring-purple-400/30',\n\t\t\tpink: 'border-pink-700/10 dark:border-pink-400/20 ring-pink-700/10 dark:ring-pink-400/20',\n\t\t\tbrand: 'border-brand-600/40 dark:border-brand-400/30 ring-brand-600/40 dark:ring-brand-400/30',\n\t\t\tgray: 'border-zinc-500/10 dark:border-zinc-400/20 ring-zinc-500/10 dark:ring-zinc-400/20',\n\t\t\tplain: 'border-zinc-900 dark:border-zinc-100 ring-zinc-900 dark:ring-zinc-100',\n\t\t} satisfies { [key in z.infer<typeof badgeColorOptions>]: string },\n\t},\n});\n\nconst badgeStyle = cva('flex-0 inline-flex w-auto items-center rounded-md font-medium ring-1 ring-inset', {\n\tvariants: {\n\t\tsize: {\n\t\t\tsm: 'px-1.5 gap-1.5 py-1 text-2xs leading-3',\n\t\t\tmd: 'px-2 gap-2 py-1 text-xs leading-4',\n\t\t\tlg: 'px-2 gap-2 py-1 text-xs leading-6',\n\t\t},\n\t\tcolor: {\n\t\t\trose: [\n\t\t\t\tbadgeBackgroundColorStyle({ color: 'rose' }),\n\t\t\t\tbadgeBorderColorStyle({ color: 'rose' }),\n\t\t\t\tbadgeTextColorStyle({ color: 'rose' }),\n\t\t\t],\n\t\t\tred: [\n\t\t\t\tbadgeBackgroundColorStyle({ color: 'red' }),\n\t\t\t\tbadgeBorderColorStyle({ color: 'red' }),\n\t\t\t\tbadgeTextColorStyle({ color: 'red' }),\n\t\t\t],\n\t\t\tyellow: [\n\t\t\t\tbadgeBackgroundColorStyle({ color: 'yellow' }),\n\t\t\t\tbadgeBorderColorStyle({ color: 'yellow' }),\n\t\t\t\tbadgeTextColorStyle({ color: 'yellow' }),\n\t\t\t],\n\t\t\torange: [\n\t\t\t\tbadgeBackgroundColorStyle({ color: 'orange' }),\n\t\t\t\tbadgeBorderColorStyle({ color: 'orange' }),\n\t\t\t\tbadgeTextColorStyle({ color: 'orange' }),\n\t\t\t],\n\t\t\tgreen: [\n\t\t\t\tbadgeBackgroundColorStyle({ color: 'green' }),\n\t\t\t\tbadgeBorderColorStyle({ color: 'green' }),\n\t\t\t\tbadgeTextColorStyle({ color: 'green' }),\n\t\t\t],\n\t\t\tlime: [\n\t\t\t\tbadgeBackgroundColorStyle({ color: 'lime' }),\n\t\t\t\tbadgeBorderColorStyle({ color: 'lime' }),\n\t\t\t\tbadgeTextColorStyle({ color: 'lime' }),\n\t\t\t],\n\t\t\tblue: [\n\t\t\t\tbadgeBackgroundColorStyle({ color: 'blue' }),\n\t\t\t\tbadgeBorderColorStyle({ color: 'blue' }),\n\t\t\t\tbadgeTextColorStyle({ color: 'blue' }),\n\t\t\t],\n\t\t\tsky: [\n\t\t\t\tbadgeBackgroundColorStyle({ color: 'sky' }),\n\t\t\t\tbadgeBorderColorStyle({ color: 'sky' }),\n\t\t\t\tbadgeTextColorStyle({ color: 'sky' }),\n\t\t\t],\n\t\t\tindigo: [\n\t\t\t\tbadgeBackgroundColorStyle({ color: 'indigo' }),\n\t\t\t\tbadgeBorderColorStyle({ color: 'indigo' }),\n\t\t\t\tbadgeTextColorStyle({ color: 'indigo' }),\n\t\t\t],\n\t\t\tpurple: [\n\t\t\t\tbadgeBackgroundColorStyle({ color: 'purple' }),\n\t\t\t\tbadgeBorderColorStyle({ color: 'purple' }),\n\t\t\t\tbadgeTextColorStyle({ color: 'purple' }),\n\t\t\t],\n\t\t\tpink: [\n\t\t\t\tbadgeBackgroundColorStyle({ color: 'pink' }),\n\t\t\t\tbadgeBorderColorStyle({ color: 'pink' }),\n\t\t\t\tbadgeTextColorStyle({ color: 'pink' }),\n\t\t\t],\n\t\t\tbrand: [\n\t\t\t\tbadgeBackgroundColorStyle({ color: 'brand' }),\n\t\t\t\tbadgeBorderColorStyle({ color: 'brand' }),\n\t\t\t\tbadgeTextColorStyle({ color: 'brand' }),\n\t\t\t],\n\t\t\tgray: [\n\t\t\t\tbadgeBackgroundColorStyle({ color: 'gray' }),\n\t\t\t\tbadgeBorderColorStyle({ color: 'gray' }),\n\t\t\t\tbadgeTextColorStyle({ color: 'gray' }),\n\t\t\t],\n\t\t\tplain: [\n\t\t\t\tbadgeBackgroundColorStyle({ color: 'plain' }),\n\t\t\t\tbadgeBorderColorStyle({ color: 'plain' }),\n\t\t\t\tbadgeTextColorStyle({ color: 'plain' }),\n\t\t\t],\n\t\t} satisfies { [key in z.infer<typeof badgeColorOptions>]: string[] },\n\t},\n\tdefaultVariants: {\n\t\tsize: 'md',\n\t\tcolor: 'gray',\n\t},\n});\n\nexport type BadgeProps = JSX.IntrinsicElements['span'] &\n\tVariantProps<typeof badgeStyle> & {\n\t\tchildren: React.ReactNode;\n\t\tclassName?: string;\n\t};\n\nexport const Badge: React.FC<BadgeProps> = (props) => {\n\tconst { size, color, className, children, ...forwardProps } = props;\n\treturn (\n\t\t<span className={twMerge(badgeStyle({ size, color }), className)} {...forwardProps}>\n\t\t\t{children}\n\t\t</span>\n\t);\n};\n","'use client';\n\nimport React, { useCallback, useEffect } from 'react';\nimport { useMoonraker } from '@/moonraker/hooks';\nimport { ReadItem, RecoilSync } from 'recoil-sync';\nimport { AtomEffect, DefaultValue } from 'recoil';\nimport { getLogger } from '@/app/_helpers/logger';\n\nconst moonrakerSyncEventEmitter = new EventTarget();\n\nexport const DispatchSaveAtomEvent = (itemKey: string, value: unknown) => {\n\tmoonrakerSyncEventEmitter.dispatchEvent(\n\t\tnew CustomEvent('saveAtom', {\n\t\t\tdetail: {\n\t\t\t\titemKey,\n\t\t\t\tvalue,\n\t\t\t},\n\t\t}) satisfies SaveAtomEvent,\n\t);\n};\n\nexport const moonrakerWriteEffect = <T extends any = unknown>(): AtomEffect<T> => {\n\treturn (params) => {\n\t\tparams.onSet((newValue) => {\n\t\t\t// getLogger().debug(\n\t\t\t// \t{\n\t\t\t// \t\tkey: params.node.key,\n\t\t\t// \t\tvalue: newValue,\n\t\t\t// \t},\n\t\t\t// \t`RatOS Atom Sync Effect: new value was saved to moonraker \"${params.trigger}\"`,\n\t\t\t// );\n\t\t\tDispatchSaveAtomEvent(params.node.key, newValue == null ? 'null' : newValue); // Moonraker doesn't save null values..\n\t\t});\n\t};\n};\n\ntype SaveAtomEvent = CustomEvent<{ itemKey: string; value: unknown }>;\n\nexport const SyncWithMoonraker: React.FC<React.PropsWithChildren> = ({ children }) => {\n\tconst moonraker = useMoonraker();\n\tconst read: ReadItem = useCallback(\n\t\tasync (itemKey) => {\n\t\t\tconst value = await moonraker.getItem('RatOS', itemKey as '__recoil');\n\t\t\treturn value != null && value != 'null' ? value : new DefaultValue();\n\t\t},\n\t\t[moonraker],\n\t);\n\n\tconst saveAtom = useCallback(\n\t\tasync (event: Event) => {\n\t\t\tconst { itemKey, value } = (event as SaveAtomEvent).detail;\n\t\t\tawait moonraker.saveItem('RatOS', itemKey as '__recoil', value);\n\t\t},\n\t\t[moonraker],\n\t);\n\n\tuseEffect(() => {\n\t\tmoonrakerSyncEventEmitter.addEventListener('saveAtom', saveAtom);\n\t\treturn () => {\n\t\t\tmoonrakerSyncEventEmitter.removeEventListener('saveAtom', saveAtom);\n\t\t};\n\t}, [saveAtom]);\n\treturn <RecoilSync read={read}>{children}</RecoilSync>;\n};\n","import { z } from 'zod';\nimport { Driver } from '@/zods/motion';\n\nexport const Drivers = z.array(Driver).parse([\n\t{\n\t\tid: 'LDO-TMC2209',\n\t\ttitle: 'TMC2209',\n\t\ttype: 'TMC2209',\n\t\tprotocol: 'UART',\n\t\tsenseResistor: 0.11,\n\t\tcoolingCurrentThreshold: 1.1,\n\t\tvoltages: [24],\n\t\tmaxCurrent: 2.0,\n\t},\n\t{\n\t\tid: 'BTT-TMC2209-13',\n\t\ttitle: 'BTT TMC2209 v1.3',\n\t\ttype: 'TMC2209',\n\t\tprotocol: 'UART',\n\t\tsenseResistor: 0.11,\n\t\tcoolingCurrentThreshold: 1.1,\n\t\tvoltages: [24],\n\t\tmaxCurrent: 2.0,\n\t},\n\t{\n\t\tid: 'BTT-TMC2226-10',\n\t\ttitle: 'BTT TMC2226 v1.0',\n\t\ttype: 'TMC2209',\n\t\tprotocol: 'UART',\n\t\tsenseResistor: 0.11,\n\t\tcoolingCurrentThreshold: 1.1,\n\t\tvoltages: [24],\n\t\tmaxCurrent: 2.0,\n\t},\n\t{\n\t\tid: 'BTT-TMC5160-PRO-11',\n\t\ttitle: 'BTT TMC5160(T) Pro v1.1',\n\t\ttype: 'TMC5160',\n\t\tprotocol: 'SPI',\n\t\tsenseResistor: 0.075,\n\t\tvoltages: [24, 36, 48, 56],\n\t\tmaxCurrent: 3,\n\t\tcoolingCurrentThreshold: 1.5,\n\t},\n\t{\n\t\tid: 'BTT-TMC5160T-PLUS-10',\n\t\ttitle: 'BTT TMC5160T Plus v1.0',\n\t\ttype: 'TMC5160',\n\t\tprotocol: 'SPI',\n\t\tsenseResistor: 0.022,\n\t\tvoltages: [24, 36, 48, 56, 60],\n\t\tmaxCurrent: 10.6,\n\t\tcoolingCurrentThreshold: 3,\n\t\texternal: true,\n\t},\n\t{\n\t\tid: 'BTT-EZ2209',\n\t\ttitle: 'BTT EZ2209',\n\t\ttype: 'TMC2209',\n\t\tprotocol: 'UART',\n\t\tsenseResistor: 0.11,\n\t\tcoolingCurrentThreshold: 1.3,\n\t\tvoltages: [24],\n\t\tmaxCurrent: 2.0,\n\t},\n\t{\n\t\tid: 'BTT-EZ2226',\n\t\ttitle: 'BTT EZ2226',\n\t\ttype: 'TMC2209',\n\t\tprotocol: 'UART',\n\t\tsenseResistor: 0.11,\n\t\tcoolingCurrentThreshold: 1.3,\n\t\tvoltages: [24],\n\t\tmaxCurrent: 2.0,\n\t},\n\t{\n\t\tid: 'BTT-EZ2130',\n\t\ttitle: 'BTT EZ2130',\n\t\ttype: 'TMC2130',\n\t\tprotocol: 'SPI',\n\t\tsenseResistor: 0.11,\n\t\tcoolingCurrentThreshold: 0.9,\n\t\tvoltages: [24],\n\t\tmaxCurrent: 2.0,\n\t},\n\t{\n\t\tid: 'BTT-EZ5160-PRO',\n\t\ttitle: 'BTT EZ5160 Pro',\n\t\ttype: 'TMC5160',\n\t\tprotocol: 'SPI',\n\t\tsenseResistor: 0.075,\n\t\tcoolingCurrentThreshold: 1.6,\n\t\tvoltages: [24, 36, 48],\n\t\tmaxCurrent: 2.5,\n\t},\n\t{\n\t\tid: 'BTT-EZ5160-RGB',\n\t\ttitle: 'BTT EZ5160 RGB',\n\t\ttype: 'TMC5160',\n\t\tprotocol: 'SPI',\n\t\tsenseResistor: 0.05,\n\t\tcoolingCurrentThreshold: 3,\n\t\tvoltages: [24, 48, 36, 56],\n\t\tmaxCurrent: 4.7,\n\t},\n\t{\n\t\tid: 'MELLOW-FLY-HV-TMC5160-PRO-12',\n\t\ttitle: 'Mellow FLY HV TMC5160 Pro v1.2',\n\t\ttype: 'TMC5160',\n\t\tprotocol: 'SPI',\n\t\tsenseResistor: 0.033,\n\t\tcoolingCurrentThreshold: 3,\n\t\tvoltages: [24, 36, 48],\n\t\tmaxCurrent: 4.25,\n\t\texternal: true,\n\t},\n\t{\n\t\tid: 'MELLOW-FLY-TMC2209',\n\t\ttitle: 'Mellow FLY TMC2209',\n\t\ttype: 'TMC2209',\n\t\tprotocol: 'UART',\n\t\tsenseResistor: 0.11,\n\t\tcoolingCurrentThreshold: 1.1,\n\t\tvoltages: [24],\n\t\tmaxCurrent: 2.0,\n\t},\n\t{\n\t\tid: 'PRUSA-EINSY-RAMBO-TMC2130',\n\t\ttitle: 'Prusa Einsy Rambo TMC2130',\n\t\ttype: 'TMC2130',\n\t\tprotocol: 'SPI',\n\t\tsenseResistor: 0.22,\n\t\tcoolingCurrentThreshold: 0.9,\n\t\tvoltages: [24],\n\t\tmaxCurrent: 2.0,\n\t},\n\t{\n\t\tid: 'PRUSA-BUDDY-TMC2209',\n\t\ttitle: 'Prusa Buddy TMC2209',\n\t\ttype: 'TMC2209',\n\t\tprotocol: 'UART',\n\t\tsenseResistor: 0.11,\n\t\tcoolingCurrentThreshold: 1.1,\n\t\tvoltages: [24],\n\t\tmaxCurrent: 2.0,\n\t},\n] satisfies z.input<typeof Driver>[]);\n","import { cn, setDisplayName } from '@/helpers/utils';\nimport React from 'react';\n\nexport const Strong = React.forwardRef<HTMLElement, JSX.IntrinsicElements['strong']>(({ className, ...props }, ref) => (\n\t<strong ref={ref} className={cn('font-semibold', className)} {...props} />\n));\nsetDisplayName(Strong, 'Strong');\n","import { z } from 'zod';\nimport { Fan } from '@/zods/hardware';\nimport { PrinterAxis } from '@/zods/motion';\nimport type { PartialPrinterConfiguration } from '@/zods/printer-configuration';\nimport type { PartialToolheadConfiguration } from '@/zods/toolhead';\nimport { Strong } from '@/components/ui/typography';\nimport React from 'react';\n\nexport const fanHelp = (\n\t<>\n\t\t<p>\n\t\t\t<Strong className=\"dark:text-sky-300/70\">Input Voltage PWM</Strong> is used on fans that have no dedicated pwm pin\n\t\t\t(2 and 3-pin fans).\n\t\t</p>\n\t\t<p>\n\t\t\t<Strong className=\"dark:text-sky-300/70\">Digital PWM</Strong> is used for fans that have a dedicated PWM signal\n\t\t\twire (requires a 4-pin fan).\n\t\t</p>\n\t</>\n);\n\nexport const partFanOptions = (\n\tconfig?: PartialPrinterConfiguration | null,\n\ttoolheadConfig?: (PartialToolheadConfiguration & { axis: null | PrinterAxis }) | null,\n): z.infer<typeof Fan>[] => {\n\tconst fans: z.infer<typeof Fan>[] = [];\n\tif (toolheadConfig == null || toolheadConfig?.axis === PrinterAxis.x || toolheadConfig?.axis === null) {\n\t\tfans.push({\n\t\t\tid: '2pin' as const,\n\t\t\ttitle: 'Input Voltage PWM',\n\t\t\tbadge: [{ color: 'purple', children: config?.controlboard?.name ?? 'Control Board' }],\n\t\t});\n\t\tfans.push({\n\t\t\tid: '4pin' as const,\n\t\t\ttitle: 'Digital PWM on 2-pin port',\n\t\t\tbadge: [{ color: 'purple', children: config?.controlboard?.name ?? 'Control Board' }],\n\t\t});\n\t}\n\tif (config?.controlboard?.fourPinFanConnectorCount != null && config.controlboard.fourPinFanConnectorCount > 0) {\n\t\tfans.push({\n\t\t\tid: '4pin-dedicated' as const,\n\t\t\ttitle: 'Digital PWM on 4-pin port',\n\t\t\tbadge: [{ color: 'purple', children: config.controlboard.name }],\n\t\t});\n\t}\n\tif (toolheadConfig?.toolboard != null) {\n\t\tfans.push({\n\t\t\tid: '2pin-toolboard' as const,\n\t\t\ttitle: 'Input Voltage PWM',\n\t\t\tbadge: [\n\t\t\t\t{\n\t\t\t\t\tcolor: 'sky',\n\t\t\t\t\tchildren: `${toolheadConfig.toolboard.name}${toolheadConfig.toolNumber != null && ` T${toolheadConfig.toolNumber}`}`,\n\t\t\t\t},\n\t\t\t],\n\t\t});\n\t\tfans.push({\n\t\t\tid: '4pin-toolboard' as const,\n\t\t\ttitle: 'Digital PWM on 2-pin port',\n\t\t\tbadge: [\n\t\t\t\t{\n\t\t\t\t\tcolor: 'sky',\n\t\t\t\t\tchildren: `${toolheadConfig.toolboard.name}${toolheadConfig.toolNumber != null && ` T${toolheadConfig.toolNumber}`}`,\n\t\t\t\t},\n\t\t\t],\n\t\t});\n\t\tif (\n\t\t\ttoolheadConfig?.toolboard.fourPinFanConnectorCount != null &&\n\t\t\ttoolheadConfig.toolboard.fourPinFanConnectorCount > 0\n\t\t) {\n\t\t\tfans.push({\n\t\t\t\tid: '4pin-dedicated-toolboard' as const,\n\t\t\t\ttitle: 'Digital PWM on 4-pin port',\n\t\t\t\tbadge: [\n\t\t\t\t\t{\n\t\t\t\t\t\tcolor: 'sky',\n\t\t\t\t\t\tchildren: `${toolheadConfig.toolboard.name}${toolheadConfig.toolNumber != null && ` T${toolheadConfig.toolNumber}`}`,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t});\n\t\t}\n\t}\n\treturn fans;\n};\n\nexport const hotendFanOptions = (\n\tconfig?: z.infer<typeof PartialPrinterConfiguration> | null,\n\ttoolheadConfig?: (PartialToolheadConfiguration & { axis: null | PrinterAxis }) | null,\n): z.infer<typeof Fan>[] => {\n\tconst fans: z.infer<typeof Fan>[] = [];\n\tif (toolheadConfig == null || toolheadConfig?.axis === PrinterAxis.x) {\n\t\tfans.push({\n\t\t\tid: '2pin' as const,\n\t\t\ttitle: 'Input Voltage PWM',\n\t\t\tbadge: [{ color: 'purple', children: config?.controlboard?.name ?? 'Control Board' }],\n\t\t});\n\t\tfans.push({\n\t\t\tid: '4pin' as const,\n\t\t\ttitle: 'Digital PWM on 2-pin port',\n\t\t\tbadge: [{ color: 'purple', children: config?.controlboard?.name ?? 'Control Board' }],\n\t\t});\n\t}\n\tif (\n\t\t(config?.controlboard?.fourPinFanConnectorCount != null && config.controlboard.fourPinFanConnectorCount > 2) ||\n\t\t(config?.controlboard?.fourPinFanConnectorCount != null &&\n\t\t\tconfig.controlboard.fourPinFanConnectorCount > 1 &&\n\t\t\tconfig.controllerFan?.id !== '4pin-dedicated')\n\t) {\n\t\tfans.push({\n\t\t\tid: '4pin-dedicated' as const,\n\t\t\ttitle: 'Digital PWM on 4-pin port',\n\t\t\tbadge: [{ color: 'purple', children: config?.controlboard?.name ?? 'Control Board' }],\n\t\t});\n\t}\n\tif (toolheadConfig?.toolboard != null) {\n\t\tfans.push({\n\t\t\tid: '2pin-toolboard' as const,\n\t\t\ttitle: 'Input Voltage PWM',\n\t\t\tbadge: [\n\t\t\t\t{\n\t\t\t\t\tcolor: 'sky',\n\t\t\t\t\tchildren: `${toolheadConfig.toolboard.name}${toolheadConfig.toolNumber != null && ` T${toolheadConfig.toolNumber}`}`,\n\t\t\t\t},\n\t\t\t],\n\t\t});\n\t\tfans.push({\n\t\t\tid: '4pin-toolboard' as const,\n\t\t\ttitle: 'Digital PWM on 2-pin port',\n\t\t\tbadge: [\n\t\t\t\t{\n\t\t\t\t\tcolor: 'sky',\n\t\t\t\t\tchildren: `${toolheadConfig.toolboard.name}${toolheadConfig.toolNumber != null && ` T${toolheadConfig.toolNumber}`}`,\n\t\t\t\t},\n\t\t\t],\n\t\t});\n\t\tif (\n\t\t\ttoolheadConfig?.toolboard.fourPinFanConnectorCount != null &&\n\t\t\ttoolheadConfig.toolboard.fourPinFanConnectorCount > 1\n\t\t) {\n\t\t\tfans.push({\n\t\t\t\tid: '4pin-dedicated-toolboard' as const,\n\t\t\t\ttitle: 'Digital PWM on 4-pin port',\n\t\t\t\tbadge: [\n\t\t\t\t\t{\n\t\t\t\t\t\tcolor: 'sky',\n\t\t\t\t\t\tchildren: `${toolheadConfig.toolboard.name}${toolheadConfig.toolNumber != null && ` T${toolheadConfig.toolNumber}`}`,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t});\n\t\t}\n\t}\n\treturn fans;\n};\n\nexport const controllerFanOptions = (\n\tconfig?: z.infer<typeof PartialPrinterConfiguration> | null,\n\ttoolheadConfigs?: PartialToolheadConfiguration[] | null,\n): z.infer<typeof Fan>[] => {\n\tconst fans: z.infer<typeof Fan>[] = [\n\t\t{\n\t\t\tid: '2pin' as const,\n\t\t\ttitle: 'Input Voltage PWM',\n\t\t\tbadge: [{ color: 'purple', children: config?.controlboard?.name ?? 'Control Board' }],\n\t\t},\n\t\t{\n\t\t\tid: '4pin' as const,\n\t\t\ttitle: 'Digital PWM on 2-pin port',\n\t\t\tbadge: [{ color: 'purple', children: config?.controlboard?.name ?? 'Control Board' }],\n\t\t},\n\t];\n\tif (\n\t\t(config?.controlboard?.fourPinFanConnectorCount != null && config.controlboard.fourPinFanConnectorCount > 2) ||\n\t\t(config?.controlboard?.fourPinFanConnectorCount != null &&\n\t\t\tconfig.controlboard.fourPinFanConnectorCount > 1 &&\n\t\t\t!toolheadConfigs?.some((th) => th?.hotendFan?.id === '4pin-dedicated'))\n\t) {\n\t\tfans.push({\n\t\t\tid: '4pin-dedicated' as const,\n\t\t\ttitle: 'Digital PWM on 4-pin port',\n\t\t\tbadge: [{ color: 'purple', children: config?.controlboard?.name ?? 'Control Board' }],\n\t\t});\n\t}\n\tfans.push({ id: 'none', title: 'No fan' });\n\treturn fans;\n};\n\nexport const defaultControllerFan = {\n\tid: '2pin' as const,\n\ttitle: 'Input Voltage PWM',\n\tbadge: [{ color: 'purple' as const, children: 'Control Board' }],\n};\n","import { z } from 'zod';\nimport { Nozzle } from '@/zods/hardware';\n\nexport const getDefaultNozzle = () => {\n\treturn { diameter: 0.4, type: 'Regular' } satisfies z.infer<typeof Nozzle>;\n};\n","import { z } from 'zod';\nimport { Drivers } from '@/data/drivers';\nimport { Stepper, StepperVoltage } from '@/zods/motion';\n\nexport const findPreset = (\n\tstepper: (typeof Steppers)[number],\n\tdriver: (typeof Drivers)[number],\n\tvoltage: StepperVoltage,\n\tcurrent?: number,\n\tperformanceMode?: boolean | null,\n) => {\n\treturn stepper.presets\n\t\t?.slice()\n\t\t.sort((a, b) => (performanceMode ? b.run_current - a.run_current : a.run_current - b.run_current))\n\t\t.find(\n\t\t\t(p) =>\n\t\t\t\tp.driver === driver.type &&\n\t\t\t\tp.voltage === voltage &&\n\t\t\t\tp.sense_resistor === driver.senseResistor &&\n\t\t\t\t(current == null || p.run_current === current),\n\t\t);\n};\n\nexport const Steppers = z.array(Stepper).parse([\n\t{\n\t\tid: 'generic',\n\t\ttitle: 'Generic Stepper',\n\t\tmaxPeakCurrent: 2.8,\n\t},\n\t{\n\t\tid: 'BONDTECH-42H025H-0704-002',\n\t\ttitle: 'Bondtech LGX Stepper',\n\t\tmaxPeakCurrent: 0.7,\n\t},\n\t{\n\t\tid: 'LDO-42STH48-2504AC',\n\t\ttitle: 'LDO-42STH48-2504AC',\n\t\tmaxPeakCurrent: 2.5,\n\t\tpresets: [\n\t\t\t{\n\t\t\t\trun_current: 1.1,\n\t\t\t\tvoltage: 24,\n\t\t\t\tdriver: 'TMC2209',\n\t\t\t\tsense_resistor: 0.11,\n\t\t\t\tdriver_TBL: 1,\n\t\t\t\tdriver_TOFF: 3,\n\t\t\t\tdriver_HEND: 0,\n\t\t\t\tdriver_HSTRT: 0,\n\t\t\t},\n\t\t\t{\n\t\t\t\trun_current: 1.6,\n\t\t\t\tvoltage: 24,\n\t\t\t\tdriver: 'TMC2209',\n\t\t\t\tsense_resistor: 0.11,\n\t\t\t\tdriver_TBL: 2,\n\t\t\t\tdriver_TOFF: 3,\n\t\t\t\tdriver_HEND: 0,\n\t\t\t\tdriver_HSTRT: 6,\n\t\t\t},\n\t\t\t{\n\t\t\t\trun_current: 1.6,\n\t\t\t\tvoltage: 24,\n\t\t\t\tdriver: 'TMC5160',\n\t\t\t\tsense_resistor: 0.075,\n\t\t\t\tdriver_TBL: 2,\n\t\t\t\tdriver_TOFF: 3,\n\t\t\t\tdriver_HEND: 0,\n\t\t\t\tdriver_HSTRT: 6,\n\t\t\t},\n\t\t\t{\n\t\t\t\trun_current: 1.768,\n\t\t\t\tvoltage: 48,\n\t\t\t\tdriver: 'TMC5160',\n\t\t\t\tsense_resistor: 0.075,\n\t\t\t\tdriver_TBL: 0,\n\t\t\t\tdriver_TOFF: 4,\n\t\t\t\tdriver_HEND: 0,\n\t\t\t\tdriver_HSTRT: 4,\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tid: 'LDO-42STH40-1684AC',\n\t\ttitle: 'LDO-42STH40-1684AC',\n\t\tmaxPeakCurrent: 1.68,\n\t\tpresets: [\n\t\t\t{\n\t\t\t\trun_current: 0.4,\n\t\t\t\tvoltage: 24,\n\t\t\t\tdriver: 'TMC2130',\n\t\t\t\tsense_resistor: 0.22,\n\t\t\t\tdriver_IHOLDDELAY: 8,\n\t\t\t\tdriver_TPOWERDOWN: 0,\n\t\t\t\tdriver_TBL: 2,\n\t\t\t\tdriver_TOFF: 3,\n\t\t\t\tdriver_HEND: 1,\n\t\t\t\tdriver_HSTRT: 5,\n\t\t\t\tdriver_PWM_FREQ: 2,\n\t\t\t\tdriver_PWM_GRAD: 2,\n\t\t\t\tdriver_PWM_AMPL: 230,\n\t\t\t\tdriver_PWM_AUTOSCALE: true,\n\t\t\t\tdriver_SGT: 5,\n\t\t\t},\n\t\t\t{\n\t\t\t\trun_current: 0.52,\n\t\t\t\tvoltage: 24,\n\t\t\t\tdriver: 'TMC2130',\n\t\t\t\tsense_resistor: 0.22,\n\t\t\t\tdriver_IHOLDDELAY: 8,\n\t\t\t\tdriver_TPOWERDOWN: 0,\n\t\t\t\tdriver_TBL: 2,\n\t\t\t\tdriver_TOFF: 3,\n\t\t\t\tdriver_HEND: 1,\n\t\t\t\tdriver_HSTRT: 5,\n\t\t\t\tdriver_PWM_FREQ: 2,\n\t\t\t\tdriver_PWM_GRAD: 4,\n\t\t\t\tdriver_PWM_AMPL: 240,\n\t\t\t\tdriver_PWM_AUTOSCALE: true,\n\t\t\t\tdriver_SGT: 3,\n\t\t\t},\n\t\t\t{\n\t\t\t\trun_current: 0.8,\n\t\t\t\tvoltage: 24,\n\t\t\t\tdriver: 'TMC2209',\n\t\t\t\tsense_resistor: 0.11,\n\t\t\t\tdriver_TBL: 1,\n\t\t\t\tdriver_TOFF: 3,\n\t\t\t\tdriver_HEND: 3,\n\t\t\t\tdriver_HSTRT: 0,\n\t\t\t},\n\t\t\t{\n\t\t\t\trun_current: 1.188,\n\t\t\t\tvoltage: 24,\n\t\t\t\tdriver: 'TMC2209',\n\t\t\t\tsense_resistor: 0.11,\n\t\t\t\tdriver_TBL: 0,\n\t\t\t\tdriver_TOFF: 3,\n\t\t\t\tdriver_HEND: 0,\n\t\t\t\tdriver_HSTRT: 0,\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tid: 'LDO-42STH48-2004MAH',\n\t\ttitle: 'LDO-42STH48-2004MAH',\n\t\tmaxPeakCurrent: 2.0,\n\t\tfullStepsPerRotation: 400,\n\t},\n\t{\n\t\tid: 'LDO-42STH48-2004AC',\n\t\ttitle: 'LDO-42STH48-2004AC',\n\t\tmaxPeakCurrent: 2.0,\n\t},\n\t{\n\t\tid: 'LDO-42STH25-1404MAC',\n\t\ttitle: 'LDO-42STH25-1404MAC',\n\t\tmaxPeakCurrent: 1.4,\n\t\tfullStepsPerRotation: 400,\n\t\tpresets: [\n\t\t\t{\n\t\t\t\tvoltage: 24,\n\t\t\t\tdriver: 'TMC2209',\n\t\t\t\tsense_resistor: 0.11,\n\t\t\t\trun_current: 0.85,\n\t\t\t\tdriver_TBL: 1,\n\t\t\t\tdriver_TOFF: 3,\n\t\t\t\tdriver_HEND: 2,\n\t\t\t\tdriver_HSTRT: 0,\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tid: 'LDO-42STH25-1004CL200E',\n\t\ttitle: 'LDO-42STH25-1004CL200E',\n\t\tmaxPeakCurrent: 1.0,\n\t},\n\t{\n\t\tid: 'LDO-36STH20-1004AHG',\n\t\ttitle: 'LDO-36STH20-1004AHG',\n\t\tmaxPeakCurrent: 1.0,\n\t\tpresets: [\n\t\t\t{\n\t\t\t\tvoltage: 24,\n\t\t\t\tdriver: 'TMC2209',\n\t\t\t\tsense_resistor: 0.11,\n\t\t\t\trun_current: 0.707,\n\t\t\t\tdriver_TBL: 0,\n\t\t\t\tdriver_HEND: 6,\n\t\t\t\tdriver_HSTRT: 7,\n\t\t\t\tdriver_TOFF: 4,\n\t\t\t},\n\t\t\t// {\n\t\t\t// \tvoltage: 24,\n\t\t\t// \tdriver: 'TMC2209',\n\t\t\t// \tsense_resistor: 0.11,\n\t\t\t// \trun_current: 0.85,\n\t\t\t// \tdriver_TBL: 0,\n\t\t\t// \tdriver_HEND: 6,\n\t\t\t// \tdriver_HSTRT: 7,\n\t\t\t// \tdriver_TOFF: 4,\n\t\t\t// },\n\t\t],\n\t},\n\t{\n\t\tid: 'LDO-36STH17-1004AHG',\n\t\ttitle: 'LDO-36STH17-1004AHG',\n\t\tmaxPeakCurrent: 1.0,\n\t},\n\t{\n\t\tid: 'LDO-35STH48-1684AH',\n\t\ttitle: 'LDO-35STH48-1684AH',\n\t\tmaxPeakCurrent: 1.68,\n\t},\n] satisfies z.input<typeof Stepper>[]);\n","import { serializeToolheadConfiguration } from '@/utils/serialization';\nimport { PrinterAxis } from '@/zods/motion';\nimport {\n\tPartialToolheadConfiguration,\n\tSerializedToolheadConfiguration,\n\tToolheadConfiguration,\n\tToolNumber,\n} from '@/zods/toolhead';\nimport { getDefaultNozzle } from '@/data/nozzles';\nimport deepEqual from 'deep-equal';\nimport { KlipperAccelSensorName } from '@/zods/hardware';\n\ntype ToolheadSuffix = `t${ToolNumber}`;\ntype ToolheadCommand = `T${ToolNumber}`;\ntype ToolboardAxisString = 'x' | 'dc';\ntype ToolboardShortName = ToolheadSuffix;\n\nexport class ToolheadHelper<IsToolboard extends boolean> {\n\tprotected config: ToolheadConfiguration<IsToolboard>;\n\tconstructor(toolhead: ToolheadConfiguration<IsToolboard>) {\n\t\tthis.config = toolhead;\n\t}\n\tpublic hasToolboard(): boolean {\n\t\treturn this.config.toolboard != null;\n\t}\n\tpublic getToolboard() {\n\t\treturn this.config.toolboard;\n\t}\n\tpublic getMotionStepperName() {\n\t\tif (this.config.axis === PrinterAxis.dual_carriage) {\n\t\t\treturn 'dual_carriage';\n\t\t}\n\t\treturn `stepper_${this.getMotionAxis()}`;\n\t}\n\tpublic getToolboardName(): `toolboard_${ToolboardShortName}` {\n\t\tif (this.config.toolboard == null) {\n\t\t\tthrow new Error(`Toolhead T${this.getTool()} does not have a toolboard`);\n\t\t}\n\t\treturn `toolboard_${this.getShortToolName()}`;\n\t}\n\tpublic getShortToolName(): ToolboardShortName {\n\t\treturn `t${this.getTool()}`;\n\t}\n\tpublic getDescription(): string {\n\t\treturn this.config.description ?? `the printer's toolhead`;\n\t}\n\tpublic getMotionAxis(): PrinterAxis.x | PrinterAxis.dual_carriage {\n\t\tif (this.config.axis === PrinterAxis.dual_carriage) {\n\t\t\treturn PrinterAxis.dual_carriage;\n\t\t}\n\t\treturn PrinterAxis.x;\n\t}\n\tpublic getExtruderAxis(): PrinterAxis.extruder | PrinterAxis.extruder1 {\n\t\tif (this.config.axis === PrinterAxis.dual_carriage) {\n\t\t\treturn PrinterAxis.extruder1;\n\t\t}\n\t\treturn PrinterAxis.extruder;\n\t}\n\tpublic getToolCommand(): ToolheadCommand {\n\t\treturn `T${this.getTool()}`;\n\t}\n\tpublic getTool(): ToolNumber {\n\t\tif (this.config.axis === PrinterAxis.dual_carriage) {\n\t\t\treturn 1;\n\t\t}\n\t\treturn 0;\n\t}\n\tpublic getSerialSuffix(): ToolheadSuffix {\n\t\treturn `t${this.getTool()}`;\n\t}\n\tpublic getExtruder() {\n\t\treturn this.config.extruder;\n\t}\n\tpublic getHotend() {\n\t\treturn this.config.hotend;\n\t}\n\tpublic getNozzle() {\n\t\treturn this.config.nozzle ?? getDefaultNozzle();\n\t}\n\tpublic getThermistor() {\n\t\treturn this.config.thermistor;\n\t}\n\tpublic getXEndstop() {\n\t\treturn this.config.xEndstop;\n\t}\n\tpublic getYEndstop() {\n\t\treturn this.config.yEndstop;\n\t}\n\tpublic getXAccelerometer() {\n\t\treturn this.config.xAccelerometer;\n\t}\n\tpublic getYAccelerometer() {\n\t\treturn this.config.yAccelerometer;\n\t}\n\tpublic getXAccelerometerName(): KlipperAccelSensorName {\n\t\tswitch (this.getXAccelerometer()?.id) {\n\t\t\tcase 'controlboard':\n\t\t\t\treturn 'controlboard';\n\t\t\tcase 'toolboard':\n\t\t\t\tif (this.hasToolboard()) {\n\t\t\t\t\treturn this.getToolboardName();\n\t\t\t\t}\n\t\t\tcase 'sbc':\n\t\t\t\treturn 'rpi';\n\t\t\tcase 'beacon':\n\t\t\t\treturn 'beacon';\n\t\t\tdefault:\n\t\t\t\treturn 'controlboard';\n\t\t}\n\t}\n\tpublic getYAccelerometerName(): KlipperAccelSensorName {\n\t\tswitch (this.getYAccelerometer()?.id) {\n\t\t\tcase 'controlboard':\n\t\t\t\treturn 'controlboard';\n\t\t\tcase 'toolboard':\n\t\t\t\tif (this.hasToolboard()) {\n\t\t\t\t\treturn this.getToolboardName();\n\t\t\t\t}\n\t\t\tcase 'sbc':\n\t\t\t\treturn 'rpi';\n\t\t\tcase 'beacon':\n\t\t\t\treturn 'beacon';\n\t\t\tdefault:\n\t\t\t\treturn 'controlboard';\n\t\t}\n\t}\n\tpublic getChangeSet(changes: PartialToolheadConfiguration) {\n\t\tif (changes == null) {\n\t\t\treturn null;\n\t\t}\n\t\tconst changeSet: any = {};\n\t\tObject.keys(changes).forEach((key) => {\n\t\t\tconst current = this.getConfig()[key as keyof ToolheadConfiguration<IsToolboard>];\n\t\t\tconst change = changes[key as keyof ToolheadConfiguration<IsToolboard>];\n\t\t\tif ((current != null && change == null) || (current == null && change != null)) {\n\t\t\t\tchangeSet[key] = change;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (current && change) {\n\t\t\t\tif (typeof current === 'object' && 'id' in current && typeof change === 'object' && 'id' in change) {\n\t\t\t\t\tif (current.id !== change.id) {\n\t\t\t\t\t\tchangeSet[key] = change;\n\t\t\t\t\t}\n\t\t\t\t} else if (!deepEqual(current, change)) {\n\t\t\t\t\tchangeSet[key] = change;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tconst parsed = PartialToolheadConfiguration.safeParse(changeSet);\n\t\treturn parsed;\n\t}\n\tpublic getProbe() {\n\t\treturn this.config.probe;\n\t}\n\tpublic getPartFan() {\n\t\treturn this.config.partFan;\n\t}\n\tpublic getHotendFan() {\n\t\treturn this.config.hotendFan;\n\t}\n\tpublic serialize(): SerializedToolheadConfiguration {\n\t\treturn serializeToolheadConfiguration(this.config);\n\t}\n\tpublic getConfig(): ToolheadConfiguration<IsToolboard> {\n\t\treturn { ...this.config };\n\t}\n}\n","import { type ClassValue, clsx } from 'clsx';\nimport { twMerge } from 'tailwind-merge';\n\nexport function cn(...inputs: ClassValue[]) {\n\treturn twMerge(clsx(inputs));\n}\n\nexport function setDisplayName(Component: React.ComponentType<any>, name: string | undefined) {\n\t(Component as any).displayName = name;\n}\n","import { ReadAtomInterface, syncEffect } from 'recoil-sync';\nimport { PrinterDefinitionWithResolvedToolheads } from '@/zods/printer';\nimport { trpcClient } from '@/helpers/trpc';\nimport { atomFamily, selector, DefaultValue, atom, noWait } from 'recoil';\nimport { z } from 'zod';\nimport { getRefineCheckerForZodSchema } from 'zod-refine';\nimport { deserializePrinterRail, serializePrinterRail } from '@/utils/serialization';\nimport { SerializedPrinterRail, PrinterAxis, PrinterRail } from '@/zods/motion';\nimport { Board, BoardPath } from '@/zods/boards';\nimport { moonrakerWriteEffect } from '@/components/sync-with-moonraker';\nimport { PrinterSize } from '@/zods/printer-configuration';\n\nlet cachedPrinters: { [id: string]: z.infer<typeof PrinterDefinitionWithResolvedToolheads> } = {};\n\n// SyncEffect read methods\nexport const readPrinterAtom = async ({\n\tread,\n}: ReadAtomInterface): Promise<z.infer<typeof PrinterDefinitionWithResolvedToolheads> | null> => {\n\tconst printer = await read(PrinterState.key);\n\tif (printer != null) {\n\t\tlet printerId = z.object({ id: PrinterDefinitionWithResolvedToolheads.shape.id }).safeParse(printer);\n\t\tif (!printerId.success) {\n\t\t\tprinterId = z.object({ id: PrinterDefinitionWithResolvedToolheads.shape.id }).safeParse({ id: printer });\n\t\t}\n\t\tif (printerId.success) {\n\t\t\tlet newPrinter: null | PrinterDefinitionWithResolvedToolheads = cachedPrinters[printerId.data.id];\n\t\t\tif (newPrinter == null) {\n\t\t\t\tnewPrinter = await trpcClient.printer.printer.query(printerId.data.id, {});\n\t\t\t\tif (newPrinter) {\n\t\t\t\t\tcachedPrinters[printerId.data.id] = newPrinter;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn newPrinter ?? null;\n\t\t}\n\t}\n\treturn null;\n};\n\nexport const readPrinterRailAtom =\n\t(param: PrinterAxis) =>\n\tasync ({ read }: ReadAtomInterface): Promise<z.infer<typeof SerializedPrinterRail> | null> => {\n\t\tconst printerRailState = await read(PrinterRailState(param).key);\n\t\tif (printerRailState != null) {\n\t\t\tconst parsedRail = SerializedPrinterRail.safeParse(printerRailState);\n\t\t\tif (parsedRail.success) {\n\t\t\t\treturn parsedRail.data;\n\t\t\t}\n\t\t\tconst printer = await readPrinterAtom({ read });\n\t\t\tconst printerRailDefault = printer?.defaults.rails.find((r) => r.axis === param);\n\t\t\tif (printerRailDefault != null) {\n\t\t\t\tconst parsedRailRepaired = SerializedPrinterRail.safeParse({ ...printerRailDefault, ...printerRailState });\n\t\t\t\tif (parsedRailRepaired.success) {\n\t\t\t\t\treturn parsedRailRepaired.data;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t};\n\nexport const PrinterState = atom<z.infer<typeof PrinterDefinitionWithResolvedToolheads> | null>({\n\tkey: 'Printer',\n\tdefault: null,\n\teffects: [\n\t\tmoonrakerWriteEffect(),\n\t\tsyncEffect({\n\t\t\tread: readPrinterAtom,\n\t\t\twrite: async ({ write }, newValue) => {\n\t\t\t\tawait new Promise((resolve) => {\n\t\t\t\t\tif (newValue instanceof DefaultValue) {\n\t\t\t\t\t\twrite(PrinterState.key, null);\n\t\t\t\t\t} else {\n\t\t\t\t\t\twrite(PrinterState.key, newValue ?? null);\n\t\t\t\t\t}\n\t\t\t\t\tsetTimeout(() => {}, 500);\n\t\t\t\t});\n\t\t\t},\n\t\t\trefine: getRefineCheckerForZodSchema(PrinterDefinitionWithResolvedToolheads.nullable()),\n\t\t}),\n\t],\n});\n\nexport const LoadablePrinterState = selector<z.infer<typeof PrinterDefinitionWithResolvedToolheads> | null>({\n\tkey: 'LoadablePrinterState',\n\tget: async ({ get }) => {\n\t\tconst loadable = get(noWait(PrinterState));\n\t\treturn {\n\t\t\thasValue: () => loadable.contents,\n\t\t\thasError: () => [],\n\t\t\tloading: () => [],\n\t\t}[loadable.state]();\n\t},\n});\n\nexport const PrinterSizeState = atom<z.output<typeof PrinterSize> | null>({\n\tkey: 'PrinterOption',\n\tdefault: null,\n\teffects: [\n\t\tmoonrakerWriteEffect(),\n\t\tsyncEffect({\n\t\t\trefine: getRefineCheckerForZodSchema(PrinterSize.nullable()),\n\t\t}),\n\t],\n});\n\nexport const ControlboardState = atom<Board | null>({\n\tkey: 'Controlboard',\n\tdefault: null,\n\teffects: [\n\t\tmoonrakerWriteEffect(),\n\t\tsyncEffect({\n\t\t\tread: async ({ read }) => {\n\t\t\t\tconst board = await read(ControlboardState.key);\n\t\t\t\tif (board != null) {\n\t\t\t\t\tconst boardId = z.object({ path: BoardPath }).safeParse(board);\n\t\t\t\t\tif (boardId.success) {\n\t\t\t\t\t\tconst boardReq = await trpcClient.mcu.boards.query({ boardFilters: { toolboard: false } });\n\t\t\t\t\t\tconst newBoard = boardReq.find((b) => b.path === boardId.data.path);\n\t\t\t\t\t\treturn newBoard ?? null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t},\n\t\t\trefine: getRefineCheckerForZodSchema(Board.nullable()),\n\t\t}),\n\t],\n});\n\nexport const PrinterRailState = atomFamily<z.infer<typeof SerializedPrinterRail> | null, PrinterAxis>({\n\tkey: 'PrinterRail',\n\tdefault: null,\n\teffects: (param) => [\n\t\tmoonrakerWriteEffect(),\n\t\tsyncEffect({\n\t\t\tread: readPrinterRailAtom(param),\n\t\t\trefine: getRefineCheckerForZodSchema(SerializedPrinterRail.nullable()),\n\t\t}),\n\t],\n});\n\nexport const PrinterRailsState = selector<z.infer<typeof PrinterRail>[]>({\n\tkey: 'PrinterRails',\n\tget: ({ get }) => {\n\t\tconst printer = get(PrinterState);\n\t\tconst rails = printer?.defaults.rails.map((rail) => {\n\t\t\tconst railState = get(PrinterRailState(rail.axis));\n\t\t\treturn deserializePrinterRail(railState ?? rail);\n\t\t});\n\t\treturn rails ?? [];\n\t},\n\tset: ({ set }, newValue) => {\n\t\tif (newValue instanceof DefaultValue) {\n\t\t\tObject.values(PrinterAxis).forEach((axis) => {\n\t\t\t\tset(PrinterRailState(axis), null);\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\tnewValue.forEach((rail) => {\n\t\t\tset(PrinterRailState(rail.axis), serializePrinterRail(rail));\n\t\t});\n\t},\n});\n\nexport const LoadablePrinterRailsState = selector<z.infer<typeof PrinterRail>[]>({\n\tkey: 'LoadablePrinterRailsState',\n\tget: async ({ get }) => {\n\t\tconst loadable = get(noWait(PrinterRailsState));\n\t\treturn {\n\t\t\thasValue: () => loadable.contents,\n\t\t\thasError: () => [],\n\t\t\tloading: () => [],\n\t\t}[loadable.state]();\n\t},\n});\n","import { atomFamily, DefaultValue, selector, selectorFamily, noWait, waitForAll } from 'recoil';\nimport { ReadAtomInterface, syncEffect } from 'recoil-sync';\nimport { z } from 'zod';\nimport { getRefineCheckerForZodSchema } from 'zod-refine';\nimport { trpcClient } from '@/helpers/trpc';\nimport { BoardPath, Toolboard } from '@/zods/boards';\nimport { PrinterAxis } from '@/zods/motion';\nimport {\n\tBaseToolheadConfiguration,\n\tSerializedToolheadConfiguration,\n\tToolheadConfiguration,\n\tToolNumber,\n} from '@/zods/toolhead';\nimport { PrinterState } from '@/recoil/printer';\nimport { moonrakerWriteEffect } from '@/components/sync-with-moonraker';\nimport { getLogger } from '@/app/_helpers/logger';\n\nexport const isAxisValidForTool = (axis: PrinterAxis, tool: ToolNumber) => {\n\tif (axis === PrinterAxis.dual_carriage && tool === 1) {\n\t\treturn true;\n\t}\n\tif (axis === PrinterAxis.x) {\n\t\treturn true;\n\t}\n\treturn false;\n};\n\nexport const PrinterToolheadState = atomFamily<\n\t(ToolheadConfiguration<any> & { toolNumber: ToolNumber }) | null,\n\tToolNumber\n>({\n\tkey: 'PrinterToolhead',\n\tdefault: null,\n\teffects: (param) => [\n\t\tmoonrakerWriteEffect(),\n\t\tsyncEffect({\n\t\t\tread: async ({\n\t\t\t\tread,\n\t\t\t}: ReadAtomInterface): Promise<(ToolheadConfiguration<any> & { toolNumber: ToolNumber }) | null> => {\n\t\t\t\tconst state = await read(PrinterToolheadState(param).key);\n\t\t\t\tif (typeof state !== 'object') {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tif (state == null) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tconst { toolNumber: tNum, ...printerToolheadState } = state as ToolheadConfiguration<any> & {\n\t\t\t\t\ttoolNumber: ToolNumber;\n\t\t\t\t};\n\t\t\t\tif (printerToolheadState != null) {\n\t\t\t\t\tconst parsedToolhead = ToolheadConfiguration.safeParse(printerToolheadState);\n\t\t\t\t\tif (parsedToolhead.success) {\n\t\t\t\t\t\tlet freshToolboard = parsedToolhead.data.toolboard;\n\t\t\t\t\t\tif (freshToolboard) {\n\t\t\t\t\t\t\tif (freshToolboard != null) {\n\t\t\t\t\t\t\t\tconst toolboardPath = z.object({ path: BoardPath }).safeParse(freshToolboard);\n\t\t\t\t\t\t\t\tif (toolboardPath.success) {\n\t\t\t\t\t\t\t\t\tconst boardReq = await trpcClient.mcu.boards.query({ boardFilters: { toolboard: true } });\n\t\t\t\t\t\t\t\t\tconst maybeToolboard = boardReq.find((b) => b.path === toolboardPath.data.path);\n\t\t\t\t\t\t\t\t\tif (maybeToolboard) {\n\t\t\t\t\t\t\t\t\t\tfreshToolboard = Toolboard.parse(maybeToolboard);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn { ...parsedToolhead.data, toolboard: freshToolboard, toolNumber: param };\n\t\t\t\t\t}\n\t\t\t\t\tgetLogger().debug(\n\t\t\t\t\t\t'RecoilSync: failed to read toolhead!',\n\t\t\t\t\t\tPrinterToolheadState(param).key,\n\t\t\t\t\t\tparsedToolhead.error,\n\t\t\t\t\t\tprinterToolheadState,\n\t\t\t\t\t);\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t},\n\t\t\trefine: getRefineCheckerForZodSchema(BaseToolheadConfiguration.extend({ toolNumber: ToolNumber }).nullable()),\n\t\t}),\n\t],\n});\n\nexport const DeserializeToolheadQuery = selectorFamily<\n\t(ToolheadConfiguration<any> & { toolNumber: ToolNumber }) | null,\n\t{ th: SerializedToolheadConfiguration; boardId: string; toolNumber: ToolNumber }\n>({\n\tkey: 'DeserializeToolheadQuery',\n\tget:\n\t\t(param) =>\n\t\tasync ({ get }) => {\n\t\t\tconst parsedToolhead = ToolheadConfiguration.safeParse(\n\t\t\t\tawait trpcClient.printer.deserializeToolheadConfiguration.query({\n\t\t\t\t\tconfig: param.th,\n\t\t\t\t\tprinterConfig: { controlboard: param.boardId },\n\t\t\t\t}),\n\t\t\t);\n\t\t\tif (!parsedToolhead.success) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn { ...parsedToolhead.data, toolNumber: param.toolNumber };\n\t\t},\n});\n\nexport const PrinterToolheadsState = selector<(ToolheadConfiguration<any> & { toolNumber: ToolNumber })[]>({\n\tkey: 'PrinterToolheadsState',\n\tget: ({ get }) => {\n\t\tconst printer = get(PrinterState);\n\t\tif (printer == null) {\n\t\t\treturn [];\n\t\t}\n\t\treturn get(waitForAll(printer.defaults.toolheads.map((th, i) => PrinterToolheadState(i as ToolNumber)))).filter(\n\t\t\tBoolean,\n\t\t);\n\t},\n\tset: ({ set, reset }, newValue) => {\n\t\tif (newValue instanceof DefaultValue) {\n\t\t\tthrow new Error('ToolheadsState cannot be reset, please reset the individual ToolheadState instead');\n\t\t}\n\t\tnewValue.forEach((th) => {\n\t\t\tset(PrinterToolheadState(th.toolNumber), { ...th, toolNumber: th.toolNumber });\n\t\t});\n\t},\n});\n\nexport const LoadablePrinterToolheadsState = selector<(ToolheadConfiguration<any> & { toolNumber: ToolNumber })[]>({\n\tkey: 'LoadablePrinterToolheadsState',\n\tget: async ({ get }) => {\n\t\tconst loadable = get(noWait(PrinterToolheadsState));\n\t\tgetLogger().debug('LoadableToolheadState', loadable);\n\t\treturn {\n\t\t\thasValue: () => loadable.contents,\n\t\t\thasError: () => [],\n\t\t\tloading: () => [],\n\t\t}[loadable.state]();\n\t},\n});\n","import type { z } from 'zod';\nimport { Drivers } from '@/data/drivers';\nimport {\n\tBasePrinterRail,\n\tDriver,\n\tPrinterRail,\n\tPrinterRailDefinition,\n\tSerializedPrinterRail,\n\tSerializedPrinterRailDefinition,\n\tStepper,\n\tPrinterAxis,\n} from '@/zods/motion';\nimport { Steppers } from '@/data/steppers';\nimport {\n\tToolheadConfiguration,\n\tSerializedToolheadConfiguration,\n\tPartialToolheadConfiguration,\n\tSerializedPartialToolheadConfiguration,\n\tToolOrAxis,\n} from '@/zods/toolhead';\nimport { PartialPrinterConfiguration } from '@/zods/printer-configuration';\nimport { ToolheadHelper } from '@/helpers/toolhead';\n\nexport const deserializeDriver = (driverId: z.input<typeof Driver.shape.id>): z.infer<typeof Driver> | null => {\n\treturn Drivers.find((d) => d.id === driverId) ?? null;\n};\n\nexport const deserializeStepper = (stepperId: z.input<typeof Stepper.shape.id>): z.infer<typeof Stepper> | null => {\n\treturn Steppers.find((d) => d.id === stepperId) ?? null;\n};\n\nexport const deserializePrinterRail = (rail: z.input<typeof SerializedPrinterRail>): z.infer<typeof PrinterRail> => {\n\tconst stepper = deserializeStepper(rail.stepper);\n\tconst driver = deserializeDriver(rail.driver);\n\tif (stepper == null) {\n\t\tthrow new Error(`Stepper ${rail.stepper} not found in database`);\n\t}\n\tif (driver == null) {\n\t\tthrow new Error(`Driver ${rail.driver} not found in database`);\n\t}\n\treturn BasePrinterRail.parse({\n\t\t...rail,\n\t\tstepper,\n\t\tdriver,\n\t});\n};\n\nexport const deserializePrinterRailDefinition = (\n\trail: z.input<typeof SerializedPrinterRailDefinition>,\n): z.infer<typeof PrinterRailDefinition> => {\n\tconst stepper = deserializeStepper(rail.stepper);\n\tconst driver = deserializeDriver(rail.driver);\n\tif (stepper == null) {\n\t\tthrow new Error(`Stepper ${rail.stepper} not found in database`);\n\t}\n\tif (driver == null) {\n\t\tthrow new Error(`Driver ${rail.driver} not found in database`);\n\t}\n\treturn PrinterRailDefinition.parse({\n\t\t...rail,\n\t\tstepper,\n\t\tdriver,\n\t});\n};\n\nexport const stringToTitleObject = <Item extends string>(data: Item): { id: Item; title: Item } => {\n\treturn { id: data, title: data };\n};\n\nexport const serializePrinterRail = (rail: z.input<typeof PrinterRail>): z.infer<typeof SerializedPrinterRail> => {\n\treturn SerializedPrinterRail.parse({\n\t\t...rail,\n\t\tdriver: rail.driver.id,\n\t\tstepper: rail.stepper.id,\n\t});\n};\n\nexport const serializeToolheadConfiguration = (th: ToolheadConfiguration<any>): SerializedToolheadConfiguration => {\n\treturn {\n\t\t...th,\n\t\ttoolboard: th.toolboard?.id,\n\t\thotend: th.hotend.id,\n\t\tthermistor: th.thermistor,\n\t\textruder: th.extruder.id,\n\t\tprobe: th.probe?.id,\n\t\txEndstop: th.xEndstop.id,\n\t\tyEndstop: th.yEndstop.id,\n\t\tpartFan: th.partFan.id,\n\t\thotendFan: th.hotendFan.id,\n\t\txAccelerometer: th.xAccelerometer?.id,\n\t\tyAccelerometer: th.yAccelerometer?.id,\n\t};\n};\n\nexport const serializePartialToolheadConfiguration = (\n\tth: PartialToolheadConfiguration,\n): SerializedPartialToolheadConfiguration => {\n\treturn th == null\n\t\t? undefined\n\t\t: {\n\t\t\t\t...th,\n\t\t\t\ttoolboard: th.toolboard?.id,\n\t\t\t\thotend: th.hotend?.id,\n\t\t\t\tthermistor: th.thermistor,\n\t\t\t\textruder: th.extruder?.id,\n\t\t\t\tprobe: th.probe?.id,\n\t\t\t\txEndstop: th.xEndstop?.id,\n\t\t\t\tyEndstop: th.yEndstop?.id,\n\t\t\t\tpartFan: th.partFan?.id,\n\t\t\t\thotendFan: th.hotendFan?.id,\n\t\t\t\txAccelerometer: th.xAccelerometer?.id,\n\t\t\t\tyAccelerometer: th.yAccelerometer?.id,\n\t\t\t};\n};\n\nexport const extractToolheadsFromPrinterConfiguration = (config: PartialPrinterConfiguration) => {\n\tconst toolheads = config?.toolheads\n\t\t?.map((th) => {\n\t\t\tif (th == null) {\n\t\t\t\tthrow new Error('Toolhead can not be null');\n\t\t\t}\n\t\t\treturn new ToolheadHelper(ToolheadConfiguration.parse(th));\n\t\t})\n\t\t.filter(Boolean);\n\tif (toolheads == null) {\n\t\tthrow new Error('No toolheads found');\n\t}\n\treturn toolheads;\n};\n\nexport const extractToolheadFromPrinterConfiguration = (\n\ttoolOrAxis: ToolOrAxis | PrinterAxis,\n\tconfig: PartialPrinterConfiguration,\n) => {\n\tif (config?.toolheads == null || config.toolheads.length === 0) {\n\t\tthrow new Error('No toolheads preset in supplied printer config');\n\t}\n\tconst toolheads = extractToolheadsFromPrinterConfiguration(config);\n\tconst th =\n\t\ttypeof toolOrAxis === 'number'\n\t\t\t? toolheads.find((th) => th.getTool() === toolOrAxis)\n\t\t\t: toolheads.find((th) => th.getExtruderAxis() === toolOrAxis || th.getMotionAxis() === toolOrAxis);\n\treturn th;\n};\n","import { z } from 'zod';\nimport { PrinterAxis, Voltage } from '@/zods/motion';\n\n// Complete map of all available RatOS pin aliases.\nexport const AllPins = {\n\tx_step_pin: z.string().optional(),\n\tx_dir_pin: z.string().optional(),\n\tx_enable_pin: z.string().optional(),\n\tx_uart_pin: z.string().optional(),\n\tx_diag_pin: z.string().optional(),\n\tx_endstop_pin: z.string().optional(),\n\tx1_step_pin: z.string().optional(),\n\tx1_dir_pin: z.string().optional(),\n\tx1_enable_pin: z.string().optional(),\n\tx1_uart_pin: z.string().optional(),\n\tx1_diag_pin: z.string().optional(),\n\tx1_endstop_pin: z.string().optional(),\n\tdual_carriage_step_pin: z.string().optional(),\n\tdual_carriage_dir_pin: z.string().optional(),\n\tdual_carriage_enable_pin: z.string().optional(),\n\tdual_carriage_uart_pin: z.string().optional(),\n\tdual_carriage_diag_pin: z.string().optional(),\n\tdual_carriage_endstop_pin: z.string().optional(),\n\ty_step_pin: z.string().optional(),\n\ty_dir_pin: z.string().optional(),\n\ty_enable_pin: z.string().optional(),\n\ty_uart_pin: z.string().optional(),\n\ty_diag_pin: z.string().optional(),\n\ty_endstop_pin: z.string().optional(),\n\ty1_step_pin: z.string().optional(),\n\ty1_dir_pin: z.string().optional(),\n\ty1_enable_pin: z.string().optional(),\n\ty1_uart_pin: z.string().optional(),\n\ty1_diag_pin: z.string().optional(),\n\ty1_endstop_pin: z.string().optional(),\n\ty2_step_pin: z.string().optional(),\n\ty2_dir_pin: z.string().optional(),\n\ty2_enable_pin: z.string().optional(),\n\ty2_uart_pin: z.string().optional(),\n\ty2_diag_pin: z.string().optional(),\n\ty2_endstop_pin: z.string().optional(),\n\tz0_step_pin: z.string().optional(),\n\tz0_dir_pin: z.string().optional(),\n\tz0_enable_pin: z.string().optional(),\n\tz0_uart_pin: z.string().optional(),\n\tz0_diag_pin: z.string().optional(),\n\tz1_step_pin: z.string().optional(),\n\tz1_dir_pin: z.string().optional(),\n\tz1_enable_pin: z.string().optional(),\n\tz1_uart_pin: z.string().optional(),\n\tz1_diag_pin: z.string().optional(),\n\tz2_step_pin: z.string().optional(),\n\tz2_dir_pin: z.string().optional(),\n\tz2_enable_pin: z.string().optional(),\n\tz2_uart_pin: z.string().optional(),\n\tz2_diag_pin: z.string().optional(),\n\tz3_step_pin: z.string().optional(),\n\tz3_dir_pin: z.string().optional(),\n\tz3_enable_pin: z.string().optional(),\n\tz3_uart_pin: z.string().optional(),\n\tz3_diag_pin: z.string().optional(),\n\te_step_pin: z.string().optional(),\n\te_dir_pin: z.string().optional(),\n\te_enable_pin: z.string().optional(),\n\te_uart_pin: z.string().optional(),\n\te_diag_pin: z.string().optional(),\n\te_heater_pin: z.string().optional(),\n\te_sensor_pin: z.string().optional(),\n\tstepper_spi_mosi_pin: z.string().optional(),\n\tstepper_spi_miso_pin: z.string().optional(),\n\tstepper_spi_sclk_pin: z.string().optional(),\n\tadxl345_cs_pin: z.string().optional(),\n\tbltouch_sensor_pin: z.string().optional(),\n\tbltouch_control_pin: z.string().optional(),\n\tprobe_pin: z.string().optional(),\n\tfan_part_cooling_pin: z.string().optional(),\n\tfan_toolhead_cooling_pin: z.string().optional(),\n\tfan_controller_board_pin: z.string().optional(),\n\theater_bed_heating_pin: z.string().optional(),\n\theater_bed_sensor_pin: z.string().optional(),\n\t'4p_fan_part_cooling_pin': z.string().optional(),\n\t'4p_fan_part_cooling_tach_pin': z.string().optional(),\n\t'4p_toolhead_cooling_pin': z.string().optional(),\n\t'4p_toolhead_cooling_tach_pin': z.string().optional(),\n\t'4p_controller_board_pin': z.string().optional(),\n\t'4p_controller_board_tach_pin': z.string().optional(),\n};\nexport const PinMap = z.object(AllPins);\n\nexport enum AxisPinPrefix {\n\tx = 'x',\n\tx1 = 'x1',\n\ty = 'y',\n\ty1 = 'y1',\n\ty2 = 'y2',\n\tz0 = 'z0',\n\tz1 = 'z1',\n\tz2 = 'z2',\n\tz3 = 'z3',\n\te = 'e',\n\te1 = 'e1',\n\tdual_carriage = 'dual_carriage',\n}\n\nexport const pinAliasPrefixToPrinterAxis: { [key in AxisPinPrefix]: PrinterAxis } = {\n\tx: PrinterAxis['x'],\n\tx1: PrinterAxis['x1'],\n\ty: PrinterAxis['y'],\n\ty1: PrinterAxis['y1'],\n\ty2: PrinterAxis['y2'],\n\tz0: PrinterAxis['z'],\n\tz1: PrinterAxis['z1'],\n\tz2: PrinterAxis['z2'],\n\tz3: PrinterAxis['z3'],\n\te: PrinterAxis['extruder'],\n\te1: PrinterAxis['extruder1'],\n\tdual_carriage: PrinterAxis['dual_carriage'],\n};\n\nexport const pinPrefixToAxis = z.nativeEnum(AxisPinPrefix).transform((v) => pinAliasPrefixToPrinterAxis[v] ?? null);\nexport const axisToPinPrefix = z\n\t.nativeEnum(PrinterAxis)\n\t.transform(\n\t\t(pa) =>\n\t\t\t(Object.keys(pinAliasPrefixToPrinterAxis) as AxisPinPrefix[]).find(\n\t\t\t\t(p) => pinAliasPrefixToPrinterAxis[p] === pa,\n\t\t\t) ?? null,\n\t);\n\nexport const ControlBoardPinMap = PinMap.extend({\n\tx_step_pin: z.string(),\n\tx_dir_pin: z.string(),\n\tx_enable_pin: z.string(),\n\tx_uart_pin: z.string(),\n\tx_endstop_pin: z.string(),\n\ty_step_pin: z.string(),\n\ty_dir_pin: z.string(),\n\ty_enable_pin: z.string(),\n\ty_uart_pin: z.string(),\n\ty_endstop_pin: z.string(),\n\tz0_step_pin: z.string(),\n\tz0_dir_pin: z.string(),\n\tz0_enable_pin: z.string(),\n\tz0_uart_pin: z.string(),\n\te_step_pin: z.string(),\n\te_dir_pin: z.string(),\n\te_enable_pin: z.string(),\n\te_uart_pin: z.string(),\n\te_heater_pin: z.string(),\n\te_sensor_pin: z.string(),\n\tprobe_pin: z.string(),\n\theater_bed_heating_pin: z.string(),\n\theater_bed_sensor_pin: z.string(),\n}).and(\n\tz\n\t\t.object({\n\t\t\tfan_part_cooling_pin: z.string(),\n\t\t\tfan_toolhead_cooling_pin: z.string(),\n\t\t})\n\t\t.or(\n\t\t\tz.object({\n\t\t\t\t'4p_fan_part_cooling_pin': z.string(),\n\t\t\t\t'4p_fan_part_cooling_tach_pin': z.string(),\n\t\t\t\t'4p_toolhead_cooling_pin': z.string(),\n\t\t\t\t'4p_toolhead_cooling_tach_pin': z.string(),\n\t\t\t}),\n\t\t),\n);\n\nexport const ExtruderlessControlBoardPinMap = PinMap.extend({\n\tx_step_pin: z.string(),\n\tx_dir_pin: z.string(),\n\tx_enable_pin: z.string(),\n\tx_uart_pin: z.string(),\n\tx_endstop_pin: z.string(),\n\ty_step_pin: z.string(),\n\ty_dir_pin: z.string(),\n\ty_enable_pin: z.string(),\n\ty_uart_pin: z.string(),\n\ty_endstop_pin: z.string(),\n\tz0_step_pin: z.string(),\n\tz0_dir_pin: z.string(),\n\tz0_enable_pin: z.string(),\n\tz0_uart_pin: z.string(),\n\tz1_step_pin: z.string(),\n\tz1_dir_pin: z.string(),\n\tz1_enable_pin: z.string(),\n\tz1_uart_pin: z.string(),\n\tz2_step_pin: z.string(),\n\tz2_dir_pin: z.string(),\n\tz2_enable_pin: z.string(),\n\tz2_uart_pin: z.string(),\n\tprobe_pin: z.string(),\n\theater_bed_heating_pin: z.string(),\n\theater_bed_sensor_pin: z.string(),\n}).and(\n\tz\n\t\t.object({\n\t\t\tfan_part_cooling_pin: z.string(),\n\t\t\tfan_toolhead_cooling_pin: z.string(),\n\t\t})\n\t\t.or(\n\t\t\tz.object({\n\t\t\t\t'4p_fan_part_cooling_pin': z.string(),\n\t\t\t\t'4p_fan_part_cooling_tach_pin': z.string(),\n\t\t\t\t'4p_toolhead_cooling_pin': z.string(),\n\t\t\t\t'4p_toolhead_cooling_tach_pin': z.string(),\n\t\t\t}),\n\t\t),\n);\nexport const ToolboardPinMap = PinMap.extend({\n\te_step_pin: z.string(),\n\te_dir_pin: z.string(),\n\te_enable_pin: z.string(),\n\te_uart_pin: z.string(),\n\te_heater_pin: z.string(),\n\te_sensor_pin: z.string(),\n\tadxl345_cs_pin: z.string(),\n\tprobe_pin: z.string(),\n}).and(\n\tz\n\t\t.object({\n\t\t\tfan_part_cooling_pin: z.string(),\n\t\t\tfan_toolhead_cooling_pin: z.string(),\n\t\t})\n\t\t.or(\n\t\t\tz.object({\n\t\t\t\t'4p_fan_part_cooling_pin': z.string(),\n\t\t\t\t'4p_fan_part_cooling_tach_pin': z.string(),\n\t\t\t\t'4p_toolhead_cooling_pin': z.string(),\n\t\t\t\t'4p_toolhead_cooling_tach_pin': z.string(),\n\t\t\t}),\n\t\t),\n);\n\nexport const UARTPins = z.object({\n\tuart_pin: z.string(),\n\tuart_address: z.string().optional(),\n\trx_pin: z.string().optional(),\n\ttx_pin: z.string().optional(),\n});\n\nexport const SPIPins = z\n\t.object({\n\t\tcs_pin: z.string(),\n\t})\n\t.and(\n\t\tz.object({ spi_bus: z.string() }).or(\n\t\t\tz.object({\n\t\t\t\tspi_software_mosi_pin: z.string().optional(),\n\t\t\t\tspi_software_miso_pin: z.string().optional(),\n\t\t\t\tspi_software_sclk_pin: z.string().optional(),\n\t\t\t}),\n\t\t),\n\t);\n\nexport const hasSPI = (slot: unknown) => {\n\treturn SPIPins.safeParse(slot).success;\n};\n\nexport const hasUART = (slot: unknown) => {\n\treturn UARTPins.safeParse(slot).success;\n};\n\nexport const MotorSlotPins = z.object({\n\tstep_pin: z.string(),\n\tdir_pin: z.string(),\n\tenable_pin: z.string(),\n\tdiag_pin: z.string().optional(),\n\tendstop_pin: z.string().optional(),\n\t// UART\n\tuart_pin: z.string().optional(),\n\trx_pin: z.string().optional(),\n\ttx_pin: z.string().optional(),\n\t// SPI\n\tcs_pin: z.string().optional(),\n});\n\nexport const MotorSlot = MotorSlotPins.extend({\n\ttitle: z.string(),\n\t// UART\n\tuart_address: z.string().optional(),\n\t// SPI\n\tspi_bus: z.string().optional(),\n\tspi_software_mosi_pin: z.string().optional(),\n\tspi_software_miso_pin: z.string().optional(),\n\tspi_software_sclk_pin: z.string().optional(),\n}).refine(\n\t(slot) => {\n\t\treturn hasSPI(slot) || hasUART(slot);\n\t},\n\t{ message: 'Motor slot must have either SPI or UART pins' },\n);\n\nexport type MotorSlot = z.output<typeof MotorSlot>;\n\nconst AnySlotPin = MotorSlot.innerType().omit({ title: true }).partial();\nexport type AnySlotPin = z.infer<typeof AnySlotPin>;\n\nexport const MotorSlotKey = z.string();\n\nexport const reversePinLookup: (pins: AnySlotPin, board: Board) => z.infer<typeof MotorSlotKey> | undefined = (\n\tpins,\n\tboard,\n) => {\n\tconst slots = Object.entries(board.motorSlots ?? {});\n\tfor (const [key, slot] of slots) {\n\t\tif (Object.entries(pins).every(([pin, value]) => slot[pin as keyof typeof slot] === value)) {\n\t\t\treturn key;\n\t\t}\n\t}\n\treturn undefined;\n};\n\nexport const BoardID = z.string().brand('BoardID');\nexport const BoardPath = z.string().brand('BoardPath');\nexport const BoardSerialPath = z.string().brand('BoardSerialPath');\n\nconst integratedDrivers = z.record(z.nativeEnum(PrinterAxis), z.string());\nconst motorSlots = z.record(MotorSlotKey, MotorSlot);\n\nexport const Board = z\n\t.object({\n\t\tid: BoardID,\n\t\tisToolboard: z.boolean().optional(),\n\t\tisHost: z.boolean().optional(),\n\t\tserialPath: BoardSerialPath.optional(),\n\t\tname: z.string(),\n\t\tmanufacturer: z.string(),\n\t\tfirmwareBinaryName: z.string(),\n\t\tcompileScript: z.string(),\n\t\tflashScript: z.string().optional(),\n\t\tflashInstructions: z.string().optional(),\n\t\tdisableAutoFlash: z.boolean().optional(),\n\t\tdocumentationLink: z.string().optional(),\n\t\thasQuirksFiles: z.boolean().optional(),\n\t\tdriverCount: z.number(),\n\t\tintegratedDrivers: integratedDrivers.optional(),\n\t\textruderlessConfig: z.string().optional(),\n\t\tfourPinFanConnectorCount: z.number().optional(),\n\t\tdriverVoltages: Voltage.array().default([24]),\n\t\thasMcuTempSensor: z.boolean().default(true),\n\t\talternativePT1000Resistor: z.number().optional(),\n\t\tmotorSlots: z.record(MotorSlotKey, MotorSlot).optional(),\n\t\toutputPins: z\n\t\t\t.array(\n\t\t\t\tz.object({\n\t\t\t\t\tpin: z.string(),\n\t\t\t\t\tname: z.string(),\n\t\t\t\t\tvalue: z.number().min(0).max(1),\n\t\t\t\t}),\n\t\t\t)\n\t\t\t.optional(),\n\t\tdfu: z\n\t\t\t.object({\n\t\t\t\tdfuBootImage: z.string(),\n\t\t\t\tflashDevice: z.string(),\n\t\t\t\tinstructions: z.array(z.string()),\n\t\t\t\treminder: z.string().optional(),\n\t\t\t\thasBoot0Jumper: z.boolean(),\n\t\t\t})\n\t\t\t.optional(),\n\t\tstepperSPI: z\n\t\t\t.object({\n\t\t\t\tsoftware: z.object({\n\t\t\t\t\tsclk: z.string(),\n\t\t\t\t\tmosi: z.string(),\n\t\t\t\t\tmiso: z.string(),\n\t\t\t\t}),\n\t\t\t})\n\t\t\t.or(\n\t\t\t\tz.object({\n\t\t\t\t\thardware: z.object({\n\t\t\t\t\t\tbus: z.string(),\n\t\t\t\t\t}),\n\t\t\t\t}),\n\t\t\t)\n\t\t\t.optional(),\n\t\tADXL345SPI: z\n\t\t\t.object({\n\t\t\t\tcs_pin: z.string(),\n\t\t\t})\n\t\t\t.and(\n\t\t\t\tz\n\t\t\t\t\t.object({\n\t\t\t\t\t\tsoftware: z.object({\n\t\t\t\t\t\t\tsclk: z.string(),\n\t\t\t\t\t\t\tmosi: z.string(),\n\t\t\t\t\t\t\tmiso: z.string(),\n\t\t\t\t\t\t}),\n\t\t\t\t\t})\n\t\t\t\t\t.or(\n\t\t\t\t\t\tz.object({\n\t\t\t\t\t\t\thardware: z.object({\n\t\t\t\t\t\t\t\tbus: z.string(),\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t}),\n\t\t\t\t\t),\n\t\t\t)\n\t\t\t.optional(),\n\t\tLIS2DW: z\n\t\t\t.object({\n\t\t\t\tcs_pin: z.string(),\n\t\t\t})\n\t\t\t.and(\n\t\t\t\tz\n\t\t\t\t\t.object({\n\t\t\t\t\t\tsoftware: z.object({\n\t\t\t\t\t\t\tsclk: z.string(),\n\t\t\t\t\t\t\tmosi: z.string(),\n\t\t\t\t\t\t\tmiso: z.string(),\n\t\t\t\t\t\t}),\n\t\t\t\t\t})\n\t\t\t\t\t.or(\n\t\t\t\t\t\tz.object({\n\t\t\t\t\t\t\thardware: z.object({\n\t\t\t\t\t\t\t\tbus: z.string(),\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t}),\n\t\t\t\t\t),\n\t\t\t)\n\t\t\t.optional(),\n\t\tpath: BoardPath,\n\t})\n\t.and(\n\t\tz\n\t\t\t.object({ isToolboard: z.literal(true), motorSlots: z.undefined() })\n\t\t\t.or(z.object({ motorSlots: motorSlots }))\n\t\t\t.or(z.object({ isHost: z.literal(true), motorSlots: z.undefined() })),\n\t);\n\nexport const BoardWithDetectionStatus = Board.and(\n\tz.object({\n\t\tdetected: z.boolean(),\n\t}),\n);\n\nexport const AutoFlashableBoard = z.object({\n\tid: z.string(),\n\tdisableAutoFlash: z.literal(false).optional(),\n\tisToolboard: z.boolean().optional(),\n\tcompileScript: z.string(),\n\tflashScript: z.string(),\n\tpath: BoardPath,\n});\n\nexport const Toolboard = Board.and(\n\tz.object({\n\t\tisToolboard: z.literal(true),\n\t\tisHost: z.literal(false).optional(),\n\t\tintegratedDrivers: integratedDrivers.and(\n\t\t\tz.object({\n\t\t\t\t[PrinterAxis.extruder]: z.string(),\n\t\t\t}),\n\t\t),\n\t}),\n);\n\nexport const ToolboardWithDetectionStatus = Toolboard.and(\n\tz.object({\n\t\tdetected: z.boolean(),\n\t}),\n);\n\nexport type Board = z.infer<typeof Board>;\nexport type BoardWithDetectionStatus = z.infer<typeof BoardWithDetectionStatus>;\nexport type Toolboard = z.infer<typeof Toolboard>;\nexport type ToolboardWithDetectionStatus = z.infer<typeof ToolboardWithDetectionStatus>;\nexport type AutoFlashableBoard = z.infer<typeof AutoFlashableBoard>;\nexport type ToolboardPinMap = z.infer<typeof ToolboardPinMap>;\nexport type ControlBoardPinMap = z.infer<typeof ControlBoardPinMap>;\nexport type ExtruderlessControlBoardPinMap = z.infer<typeof ExtruderlessControlBoardPinMap>;\n","import { z } from 'zod';\nimport { serverSchema } from '@/env/schema.mjs';\nimport { PrinterRailDefinition, Stepper } from '@/zods/motion';\nimport { badgeColorOptions } from '@/components/common/badge';\n\nexport const thermistors = [\n\t'EPCOS 100K B57560G104F',\n\t'ATC Semitec 104GT-2',\n\t'ATC Semitec 104NT-4-R025H42G',\n\t'Generic 3950',\n\t'Honeywell 100K 135-104LAG-J01',\n\t'NTC 100K MGB18-104F39050L32',\n\t'SliceEngineering 450',\n\t'TDK NTCG104LH104JT1',\n\t'PT1000',\n] as const;\n\nlet startsWithServerValidation = '';\nif (process.env.RATOS_CONFIGURATION_PATH) {\n\tconst environment = serverSchema.parse(process.env);\n\tstartsWithServerValidation = environment.RATOS_CONFIGURATION_PATH;\n}\nconst hardwareType = z.object({\n\tpath: z.string().startsWith(startsWithServerValidation).endsWith('.cfg'),\n\tid: z.string(),\n});\n\nexport const Thermistor = z.enum(thermistors);\n\nexport const Hotend = hardwareType.extend({\n\ttype: z.literal('hotend'),\n\ttitle: z.string(),\n\tthermistor: z.enum(thermistors),\n\tflowType: z.union([z.literal('sf'), z.literal('hf'), z.literal('uhf')]),\n});\n\nexport const Nozzle = z.object({\n\ttype: z.enum(['Regular', 'CHT']),\n\tdiameter: z.number().min(0.2).max(1.8),\n});\n\nexport const Extruder = hardwareType.extend({\n\ttype: z.literal('extruder'),\n\tstepper: Stepper.shape.id.optional(),\n\tcurrent: PrinterRailDefinition.shape.current.optional(),\n\ttitle: z.string(),\n});\n\nexport const Probe = hardwareType.extend({\n\ttype: z.literal('static-probe').or(z.literal('stowable-probe')),\n\ttitle: z.string(),\n});\n\nexport const Endstop = z.object({\n\tid: z.enum(['endstop', 'endstop-toolboard', 'sensorless']),\n\ttitle: z.string(),\n\tbadge: z\n\t\t.array(\n\t\t\tz.object({\n\t\t\t\tchildren: z.string(),\n\t\t\t\tcolor: badgeColorOptions,\n\t\t\t}),\n\t\t)\n\t\t.optional(),\n});\n\nexport const KlipperAccelSensorNameSchame = z.union([\n\tz.literal('toolboard_t0'),\n\tz.literal('toolboard_t1'),\n\tz.literal('controlboard'),\n\tz.literal('rpi'),\n\tz.literal('beacon'),\n]);\n\nexport const AccelerometerType = z.union([z.literal('adxl345'), z.literal('lis2dw'), z.literal('beacon')]);\n\nexport const Accelerometer = z.object({\n\tid: z.enum(['toolboard', 'controlboard', 'sbc', 'none', 'beacon']),\n\ttitle: z.string(),\n\taccelerometerType: AccelerometerType.default('adxl345').optional(),\n});\n\nexport type KlipperAccelSensorName = z.infer<typeof KlipperAccelSensorNameSchame>;\n\nexport const klipperAccelSensorSchema = z.object({\n\tname: KlipperAccelSensorNameSchame,\n\ttype: AccelerometerType,\n});\n\nexport type KlipperAccelSensorSchema = z.infer<typeof klipperAccelSensorSchema>;\n\nexport const AccelerometerWithType = Accelerometer.extend({\n\taccelerometerType: AccelerometerType,\n});\n\nexport type AccelerometerWithType = z.infer<typeof AccelerometerWithType>;\n\nexport const Fan = z.object({\n\tid: z.enum([\n\t\t'2pin',\n\t\t'4pin',\n\t\t'4pin-dedicated',\n\t\t'2pin-toolboard',\n\t\t'4pin-toolboard',\n\t\t'4pin-dedicated-toolboard',\n\t\t'none',\n\t]),\n\ttitle: z.string(),\n\tbadge: z\n\t\t.array(\n\t\t\tz.object({\n\t\t\t\tchildren: z.string(),\n\t\t\t\tcolor: badgeColorOptions,\n\t\t\t}),\n\t\t)\n\t\t.optional(),\n});\n","import * as z from 'zod';\nimport type { Board, Toolboard } from '@/zods/boards';\nexport enum StepperVoltage {\n\t'24V' = 24,\n\t'36V' = 36,\n\t'48V' = 48,\n\t'56V' = 56,\n\t'60V' = 60,\n}\n\nexport const Voltages: { id: StepperVoltage; title: string }[] = [\n\t{ id: StepperVoltage['24V'], title: '24V' },\n\t{ id: StepperVoltage['36V'], title: '36V' },\n\t{ id: StepperVoltage['48V'], title: '48V' },\n\t{ id: StepperVoltage['56V'], title: '56V' },\n\t{ id: StepperVoltage['60V'], title: '60V' },\n];\n\nexport const getSupportedVoltages = (\n\tboard: Board | Toolboard | null,\n\tdriver?: z.infer<typeof Driver>,\n): typeof Voltages => {\n\tif (driver?.external) {\n\t\treturn Voltages.filter((v) => driver?.voltages?.includes(v.id) || v.id === StepperVoltage['24V']);\n\t}\n\treturn Voltages.filter((v) => board?.driverVoltages?.includes(v.id) || v.id === StepperVoltage['24V']).filter(\n\t\t(v) => driver?.voltages?.includes(v.id) || v.id === StepperVoltage['24V'],\n\t);\n};\n\nexport const matchesDefaultRail = (\n\trail: Zod.infer<typeof BasePrinterRail>,\n\tdefaultRail: Zod.infer<typeof PrinterRailDefinition>,\n\tperformanceMode: boolean,\n) => {\n\treturn (\n\t\trail.axis === defaultRail.axis &&\n\t\trail.driver.id === defaultRail.driver.id &&\n\t\trail.stepper.id === defaultRail.stepper.id &&\n\t\t((performanceMode &&\n\t\t\tdefaultRail.performanceMode &&\n\t\t\trail.voltage === defaultRail.performanceMode?.voltage &&\n\t\t\trail.current === defaultRail.performanceMode?.current) ||\n\t\t\t(!performanceMode && rail.voltage === defaultRail.voltage && rail.current === defaultRail.current))\n\t);\n};\n\nexport const Voltage = z.nativeEnum(StepperVoltage);\n\nexport const Driver = z.object({\n\tid: z.string(),\n\ttitle: z.string(),\n\ttype: z.enum(['TMC2209', 'TMC2226', 'TMC5160', 'TMC2130', 'TMC2240']),\n\tprotocol: z.enum(['SPI', 'UART']),\n\tsenseResistor: z.number().min(0),\n\tcoolingCurrentThreshold: z.number(),\n\tvoltages: Voltage.array(),\n\tmaxCurrent: z.number().min(0),\n\texternal: z.boolean().optional(),\n});\n\nconst BaseStepperPreset = z.object({\n\tvoltage: Voltage,\n\trun_current: z.number(),\n\tdriver: Driver.shape.id,\n\tsense_resistor: z.number(),\n});\n\nexport const Stepper = z.object({\n\tid: z.string(),\n\ttitle: z.string(),\n\tfullStepsPerRotation: z.number().default(200),\n\tmaxPeakCurrent: z.number().min(0),\n\tpresets: z\n\t\t.array(\n\t\t\tz.discriminatedUnion('driver', [\n\t\t\t\tBaseStepperPreset.extend({\n\t\t\t\t\tdriver: z.enum(['TMC2130', 'TMC5160', 'TMC2240']),\n\t\t\t\t\tdriver_MSLUT0: z.number().optional(),\n\t\t\t\t\tdriver_MSLUT1: z.number().optional(),\n\t\t\t\t\tdriver_MSLUT2: z.number().optional(),\n\t\t\t\t\tdriver_MSLUT3: z.number().optional(),\n\t\t\t\t\tdriver_MSLUT4: z.number().optional(),\n\t\t\t\t\tdriver_MSLUT5: z.number().optional(),\n\t\t\t\t\tdriver_MSLUT6: z.number().optional(),\n\t\t\t\t\tdriver_MSLUT7: z.number().optional(),\n\t\t\t\t\tdriver_W0: z.number().optional(),\n\t\t\t\t\tdriver_W1: z.number().optional(),\n\t\t\t\t\tdriver_W2: z.number().optional(),\n\t\t\t\t\tdriver_W3: z.number().optional(),\n\t\t\t\t\tdriver_X1: z.number().optional(),\n\t\t\t\t\tdriver_X2: z.number().optional(),\n\t\t\t\t\tdriver_X3: z.number().optional(),\n\t\t\t\t\tdriver_START_SIN: z.number().optional(),\n\t\t\t\t\tdriver_START_SIN90: z.number().optional(),\n\t\t\t\t\tdriver_IHOLDDELAY: z.number().optional(),\n\t\t\t\t\tdriver_TPOWERDOWN: z.number().optional(),\n\t\t\t\t\tdriver_TBL: z.number().optional(),\n\t\t\t\t\tdriver_TOFF: z.number().optional(),\n\t\t\t\t\tdriver_HEND: z.number().optional(),\n\t\t\t\t\tdriver_HSTRT: z.number().optional(),\n\t\t\t\t\tdriver_PWM_AUTOSCALE: z.boolean().optional(),\n\t\t\t\t\tdriver_PWM_FREQ: z.number().optional(),\n\t\t\t\t\tdriver_PWM_GRAD: z.number().optional(),\n\t\t\t\t\tdriver_PWM_AMPL: z.number().optional(),\n\t\t\t\t\tdriver_SGT: z.number().optional(),\n\t\t\t\t}),\n\t\t\t\tBaseStepperPreset.extend({\n\t\t\t\t\tdriver: z.enum(['TMC2209']),\n\t\t\t\t\tdriver_TBL: z.number().optional(),\n\t\t\t\t\tdriver_TOFF: z.number().optional(),\n\t\t\t\t\tdriver_HEND: z.number().optional(),\n\t\t\t\t\tdriver_HSTRT: z.number().optional(),\n\t\t\t\t}),\n\t\t\t]),\n\t\t)\n\t\t.optional()\n\t\t.describe('Stepper presets are tightly coupled to the driver type, sense_resistor, stepper, voltage and current.'),\n});\n\nexport enum PrinterAxis {\n\t'x' = 'x',\n\t'dual_carriage' = 'dual_carriage',\n\t'x1' = 'x1',\n\t'y' = 'y',\n\t'y1' = 'y1',\n\t'y2' = 'y2',\n\t'z' = 'z',\n\t'z1' = 'z1',\n\t'z2' = 'z2',\n\t'z3' = 'z3',\n\t'extruder' = 'extruder',\n\t'extruder1' = 'extruder1',\n}\n\nexport const BasePrinterRail = z.object({\n\taxis: z.nativeEnum(PrinterAxis).describe('Axis of the rail'),\n\taxisDescription: z.string().optional().describe('Description of the axis'),\n\tdriver: Driver.describe('Stepper driver used on this axis'),\n\tvoltage: Voltage.default(StepperVoltage['24V']).describe('Voltage of the stepper driver'),\n\tstepper: Stepper.describe('Stepper motor connected to this axis'),\n\tmotorSlot: z.string().optional().describe('Optional board motor slot of the stepper driver'),\n\tcurrent: z.number().min(0),\n\trotationDistance: z.number().min(0).describe('Distance in mm the axis travels per stepper rotation'),\n\tgearRatio: z\n\t\t.string()\n\t\t.regex(/^\\d+:\\d+$/)\n\t\t.optional()\n\t\t.describe('Optional gear ratio of the axis'),\n\thomingSpeed: z.number().min(0).default(10).describe('Axis speed during homing in mm/s'),\n\tmicrostepping: z\n\t\t.number()\n\t\t.min(16)\n\t\t.max(256)\n\t\t.default(64)\n\t\t.describe(\n\t\t\t'Microstepping of the stepper driver, higher values increase resolution and lower noise but increases load on the MCU',\n\t\t),\n});\n\nexport const PrinterRailDefinition = BasePrinterRail.extend({\n\tmotorSlot: z.undefined(),\n\tperformanceMode: z\n\t\t.object({\n\t\t\tcurrent: z.number().min(0),\n\t\t\tvoltage: Voltage.default(StepperVoltage['24V']).describe('Voltage of the stepper driver in performance mode'),\n\t\t\thomingSpeed: z.number().min(0).optional().describe('Axis speed during homing in mm/s in performance mode'),\n\t\t})\n\t\t.optional(),\n});\n\nexport const SerializedPrinterRailDefinition = PrinterRailDefinition.extend({\n\tdriver: Driver.shape.id,\n\tstepper: Stepper.shape.id,\n});\n\nexport const PrinterRail = BasePrinterRail\n\t// Don't enforce this, warn about temperatures in the frontend instead.\n\t// .refine(\n\t// \t(data) => data.current <= data.stepper.maxPeakCurrent / 1.41,\n\t// \t'Current must be less than max peak current of the stepper divided by 1.41',\n\t// )\n\t.refine((data) => data.current <= data.driver.maxCurrent, 'Current must be less than max current of the driver');\n\nexport const SerializedPrinterRail = BasePrinterRail.extend({\n\tdriver: Driver.shape.id,\n\tstepper: Stepper.shape.id,\n});\n\nexport const Limits = z.object({\n\tmin: z.number(),\n\tmax: z.number(),\n\tendstop: z.number(),\n});\nexport type Limits = z.infer<typeof Limits>;\n","import { Board, BoardID } from '@/zods/boards';\nimport { Fan } from '@/zods/hardware';\nimport { PrinterDefinition, PrinterSizeDefinition } from '@/zods/printer';\nimport { PrinterAxis, PrinterRail, SerializedPrinterRail } from '@/zods/motion';\nimport {\n\tPartialToolheadConfiguration,\n\tSerializedPartialToolheadConfiguration,\n\tSerializedToolheadConfiguration,\n\tToolheadConfiguration,\n} from '@/zods/toolhead';\nimport { ToolheadHelper } from '@/helpers/toolhead';\nimport { z } from 'zod';\n\nexport const PrinterSize = z.union([PrinterSizeDefinition, z.number(), z.string()]).nullable().optional();\n\nconst BasePrinterConfiguration = z\n\t.object({\n\t\tprinter: PrinterDefinition,\n\t\tcontrolboard: Board,\n\t\ttoolheads: z.array(ToolheadConfiguration).min(1).max(2),\n\t\tsize: PrinterSize,\n\t\tcontrollerFan: Fan,\n\t\tperformanceMode: z.boolean().default(false),\n\t\tstealthchop: z.boolean().default(false),\n\t\tstandstillStealth: z.boolean().default(false),\n\t\trails: z.array(PrinterRail),\n\t})\n\t.strict()\n\t.transform((data, ctx) => {\n\t\tif (data.size == null) {\n\t\t\tdata.size = data.printer.sizes[Object.keys(data.printer.sizes)[0]];\n\t\t} else if (typeof data.size === 'number' || typeof data.size === 'string') {\n\t\t\tconst size = data.printer.sizes[data.size.toString()];\n\t\t\tif (size == null) {\n\t\t\t\tctx.addIssue({\n\t\t\t\t\tcode: z.ZodIssueCode.custom,\n\t\t\t\t\tmessage: `Size ${data.size} is not a valid size for a ${data.printer.name} config`,\n\t\t\t\t});\n\t\t\t\treturn z.NEVER;\n\t\t\t}\n\t\t\tdata.size = size;\n\t\t}\n\t\treturn data as Omit<typeof data, 'size'> & { size: z.output<typeof PrinterSizeDefinition> };\n\t});\n\nexport const PrinterConfiguration = BasePrinterConfiguration.superRefine((arg, ctx) => {\n\t// Driver count validation\n\tconst toolboardCount = arg.toolheads.map((t) => t.toolboard).filter(Boolean).length;\n\tif (toolboardCount + arg.controlboard.driverCount < arg.printer.driverCountRequired) {\n\t\tctx.addIssue({\n\t\t\tcode: z.ZodIssueCode.too_small,\n\t\t\tmessage: `Your combination of controlboard and toolboards do not have enough stepper drivers for a ${arg.printer.name} config`,\n\t\t\tminimum: arg.printer.driverCountRequired,\n\t\t\tinclusive: true,\n\t\t\ttype: 'number',\n\t\t});\n\t}\n}).superRefine((arg, ctx) => {\n\t// Rail motor slot validation\n\tconst toolheads = arg.toolheads.map((t) => new ToolheadHelper(t));\n\tconst errors = arg.rails\n\t\t.map((r, i) => {\n\t\t\tconst toolhead = toolheads.find((th) => th.getExtruderAxis() === r.axis);\n\t\t\tif (r.motorSlot != null) {\n\t\t\t\tconst conflicts = arg.rails.filter((pr) => {\n\t\t\t\t\tconst conflictingToolhead = toolheads.find((th) => th.getExtruderAxis() === pr.axis);\n\t\t\t\t\tif (pr.axis === r.axis || toolhead?.hasToolboard() != null) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\tif (conflictingToolhead?.hasToolboard != null) {\n\t\t\t\t\t\t// The rail is an extruder rail and the toolhead has a toolboard, no chance of conflict.\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\treturn pr.motorSlot === r.motorSlot;\n\t\t\t\t});\n\t\t\t\tconst railName = (axis: PrinterAxis) =>\n\t\t\t\t\taxis === 'extruder'\n\t\t\t\t\t\t? 'Extruder T0'\n\t\t\t\t\t\t: axis === PrinterAxis.extruder1\n\t\t\t\t\t\t\t? 'Extruder T1'\n\t\t\t\t\t\t\t: 'Stepper ' + axis.toLocaleUpperCase();\n\t\t\t\tif (conflicts.length === 1) {\n\t\t\t\t\tctx.addIssue({\n\t\t\t\t\t\tcode: z.ZodIssueCode.custom,\n\t\t\t\t\t\tmessage: `Motor slot ${r.motorSlot} is already in use on ${railName(conflicts[0].axis)}`,\n\t\t\t\t\t\tpath: ['rails', i, 'motorSlot'],\n\t\t\t\t\t});\n\t\t\t\t} else if (conflicts.length > 1) {\n\t\t\t\t\tctx.addIssue({\n\t\t\t\t\t\tcode: z.ZodIssueCode.custom,\n\t\t\t\t\t\tmessage: `Motor slot ${r.motorSlot} is already in use on ${conflicts\n\t\t\t\t\t\t\t.slice(0, -1)\n\t\t\t\t\t\t\t.map((cr) => railName(cr.axis))\n\t\t\t\t\t\t\t.join(', ')} and ${railName(conflicts[conflicts.length - 1].axis)}`,\n\t\t\t\t\t\tpath: ['rails', i, 'motorSlot'],\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn conflicts.length > 0 ? { rail: r, conflicts } : 0;\n\t\t\t}\n\t\t\treturn null;\n\t\t})\n\t\t.filter(Boolean);\n\tif (errors.length > 0) {\n\t\tctx.addIssue({\n\t\t\tcode: z.ZodIssueCode.custom,\n\t\t\tmessage: 'Motor slot conflicts detected',\n\t\t});\n\t}\n});\n\nexport const SerializedPrinterConfiguration = BasePrinterConfiguration.innerType()\n\t.extend({\n\t\tprinter: PrinterDefinition.shape.id,\n\t\tcontrolboard: BoardID,\n\t\ttoolheads: z.array(SerializedToolheadConfiguration).min(1).max(2),\n\t\tcontrollerFan: Fan.shape.id,\n\t\trails: z.array(SerializedPrinterRail),\n\t})\n\t.strict();\n\nexport const PartialPrinterConfiguration = BasePrinterConfiguration.innerType()\n\t.extend({\n\t\ttoolheads: z.array(PartialToolheadConfiguration).min(1).max(2),\n\t})\n\t.strict()\n\t.partial()\n\t.optional();\n\nexport const SerializedPartialPrinterConfiguration = SerializedPrinterConfiguration.extend({\n\ttoolheads: z.array(SerializedPartialToolheadConfiguration).min(1).max(2),\n})\n\t.strict()\n\t.partial();\n\nexport type PrinterConfiguration = z.infer<typeof PrinterConfiguration>;\nexport type PartialPrinterConfiguration = z.infer<typeof PartialPrinterConfiguration>;\nexport type SerializedPrinterConfiguration = z.infer<typeof SerializedPrinterConfiguration>;\nexport type SerializedPartialPrinterConfiguration = z.infer<typeof SerializedPartialPrinterConfiguration>;\n","import { z } from 'zod';\nimport { serverSchema } from '@/env/schema.mjs';\nimport path from 'path';\nimport { SerializedPrinterRailDefinition } from '@/zods/motion';\nimport { SerializedToolheadConfiguration, ToolheadConfiguration } from '@/zods/toolhead';\nimport { Fan } from '@/zods/hardware';\nimport { BoardID } from '@/zods/boards';\n\nlet startsWithServerValidation = '';\nif (process.env.RATOS_CONFIGURATION_PATH) {\n\tconst environment = serverSchema.parse(process.env);\n\tstartsWithServerValidation = path.join(environment.RATOS_CONFIGURATION_PATH, 'printers');\n}\n\nconst SpeedLimits = z\n\t.object({\n\t\tvelocity: z.number().min(0).describe('Maximum velocity for this printer'),\n\t\taccel: z.number().min(0).describe('Maximum acceleration for this printer'),\n\t\tz_velocity: z.number().min(0).describe('Maximum z velocity for this printer'),\n\t\tz_accel: z.number().min(0).describe('Maximum z acceleration for this printer'),\n\t\tsquare_corner_velocity: z.number().min(0).default(5).describe('Maximum square corner velocity for this printer'),\n\t\ttravel_velocity: z.number().min(0).default(200).describe('Maximum travel velocity for this printer'),\n\t\ttravel_accel: z.number().min(0).default(3000).describe('Maximum travel velocity for this printer'),\n\t})\n\t.strict();\n\nexport const PrinterSizeDefinition = z\n\t.object({\n\t\tx: z.number().min(0).describe('The print volume in X'),\n\t\ty: z.number().min(0).describe('The print volume in Y'),\n\t\tz: z.number().min(0).describe('The print volume in Z'),\n\t})\n\t.describe('The print volume of a printer');\n\nexport const PrinterDefinition = z\n\t.object({\n\t\tid: z.string().transform((data) => {\n\t\t\treturn data === 'caramba-chonk'\n\t\t\t\t? 'v-chonk'\n\t\t\t\t: data.startsWith('caramba-')\n\t\t\t\t\t? data.replace('caramba-', 'v-core-4-')\n\t\t\t\t\t: data;\n\t\t}),\n\t\tname: z.string().describe('The name of the printer'),\n\t\treleaseDate: z.string().optional().describe('The release date of the printer in ISO 8601/RFC3339 eg. 2023-12-31'),\n\t\tdescription: z.string().describe('A description of the printer'),\n\t\tmanufacturer: z.string().describe('The name of the manufacturer of this printer'),\n\t\tdocumentationLink: z.string().describe('Link to the RatOS documentation for this printer'),\n\t\timage: z.string().describe('Link to an image of the printer'),\n\t\tsizes: z.record(z.string(), PrinterSizeDefinition).describe('Size options for this printer'),\n\t\ttemplate: z.string().describe('Printer.cfg template for this printer'),\n\t\tpath: z.string().startsWith(startsWithServerValidation),\n\t\tdriverCountRequired: z.number().describe('Number of drivers required for this printer'),\n\t\tkinematics: z\n\t\t\t.union([z.literal('cartesian'), z.literal('corexy'), z.literal('hybrid-corexy'), z.literal('hybrid-corexy-idex')])\n\t\t\t.optional(),\n\t\tbedMargin: z\n\t\t\t.object({\n\t\t\t\tx: z.tuple([z.number().default(0), z.number().default(0)]),\n\t\t\t\ty: z.tuple([z.number().default(0), z.number().default(0)]),\n\t\t\t})\n\t\t\t.describe('Margin of available movement around the bed for this printer')\n\t\t\t.default({ x: [0, 0], y: [0, 0] }),\n\t\tspeedLimits: z\n\t\t\t.object({\n\t\t\t\tbasic: SpeedLimits,\n\t\t\t\tperformance: SpeedLimits.optional(),\n\t\t\t})\n\t\t\t.strict()\n\t\t\t.describe('Speed limits for this printer'),\n\t\tdefaults: z\n\t\t\t.object({\n\t\t\t\ttoolheads: z.array(SerializedToolheadConfiguration).describe('Default toolheads for this printer'),\n\t\t\t\tboard: BoardID.describe('Default board for this printer. Should be the name of the board directory.'),\n\t\t\t\trails: z.array(SerializedPrinterRailDefinition).describe('Default rails for this printer'),\n\t\t\t\tcontrollerFan: Fan.shape.id.optional().describe('Default controller fan for this printer'),\n\t\t\t})\n\t\t\t.strict()\n\t\t\t.describe('Default hardware for this printer'),\n\t})\n\t.describe('A RatOS supported 3d printer');\n\nexport const PrinterDefinitionWithResolvedToolheads = PrinterDefinition.extend({\n\tdefaults: PrinterDefinition.shape.defaults\n\t\t.extend({\n\t\t\ttoolheads: z.array(ToolheadConfiguration),\n\t\t})\n\t\t.strict(),\n});\n\nexport type PrinterDefinition = z.infer<typeof PrinterDefinition>;\nexport type PrinterDefinitionWithResolvedToolheads = z.infer<typeof PrinterDefinitionWithResolvedToolheads>;\n","import { z } from 'zod';\nimport { BoardID, Toolboard } from '@/zods/boards';\nimport { Hotend, Thermistor, Extruder, Probe, Endstop, Fan, Accelerometer, Nozzle } from '@/zods/hardware';\nimport { PrinterAxis } from '@/zods/motion';\nimport { getDefaultNozzle } from '@/data/nozzles';\n\nexport const BaseToolheadConfiguration = z\n\t.object({\n\t\thotend: Hotend,\n\t\tthermistor: Thermistor,\n\t\textruder: Extruder,\n\t\txEndstop: Endstop,\n\t\tyEndstop: Endstop,\n\t\thotendFan: Fan,\n\t\tpartFan: Fan,\n\t\tnozzle: Nozzle.default(getDefaultNozzle()),\n\t\txAccelerometer: Accelerometer.optional().nullable(),\n\t\tyAccelerometer: Accelerometer.optional().nullable(),\n\t\ttoolboard: Toolboard.nullable(),\n\t\tprobe: Probe.optional(),\n\t\taxis: z.literal(PrinterAxis.x).or(z.literal(PrinterAxis.dual_carriage)),\n\t\tdescription: z.string().optional(),\n\t\ttoolNumber: z.number().optional(),\n\t})\n\t.strict();\n\nexport const ToolNumber = z.union([z.literal(0), z.literal(1)]);\nexport const ToolAxis = z.union([\n\tz.literal(PrinterAxis.x),\n\tz.literal(PrinterAxis.dual_carriage),\n\tz.literal(PrinterAxis.extruder),\n\tz.literal(PrinterAxis.extruder1),\n]);\nexport const ToolOrAxis = z.union([ToolAxis, ToolNumber]);\nexport type ToolNumber = z.infer<typeof ToolNumber>;\nexport type ToolAxis = z.infer<typeof ToolAxis>;\nexport type ToolOrAxis = z.infer<typeof ToolOrAxis>;\n\nexport const ToolheadConfiguration = BaseToolheadConfiguration.refine(\n\t(data) => data.toolboard !== null || data.xEndstop.id !== 'endstop-toolboard',\n\t'Cannot use toolboard endstop without a toolboard',\n)\n\t.refine(\n\t\t(data) =>\n\t\t\tdata.toolboard !== null ||\n\t\t\t!['2pin-toolboard', '4pin-toolboard', '4pin-dedicated-toolboard'].includes(data.hotendFan.id),\n\t\t'Cannot use toolboard hotend fan without a toolboard',\n\t)\n\t.refine(\n\t\t(data) =>\n\t\t\tdata.toolboard !== null ||\n\t\t\t!['2pin-toolboard', '4pin-toolboard', '4pin-dedicated-toolboard'].includes(data.partFan.id),\n\t\t'Cannot use toolboard part cooling fan without a toolboard',\n\t);\n\nexport const PartialToolheadConfiguration = BaseToolheadConfiguration.partial().optional();\nexport const SerializedToolheadConfiguration = BaseToolheadConfiguration.extend({\n\thotend: Hotend.shape.id,\n\textruder: Extruder.shape.id,\n\tthermistor: Thermistor,\n\txEndstop: Endstop.shape.id,\n\tyEndstop: Endstop.shape.id,\n\thotendFan: Fan.shape.id,\n\tpartFan: Fan.shape.id,\n\txAccelerometer: Accelerometer.shape.id.optional().nullable(),\n\tyAccelerometer: Accelerometer.shape.id.optional().nullable(),\n\ttoolboard: BoardID.optional().nullable(),\n\tprobe: Probe.shape.id.optional().nullable(),\n}).strict();\nexport const SerializedPartialToolheadConfiguration = SerializedToolheadConfiguration.partial().optional();\n\nexport type ToolheadConfiguration<T extends boolean> = z.infer<typeof ToolheadConfiguration> & {\n\ttoolboard: T extends true ? Toolboard : null;\n};\nexport type PartialToolheadConfiguration = z.infer<typeof PartialToolheadConfiguration>;\nexport type SerializedToolheadConfiguration = z.infer<typeof SerializedToolheadConfiguration>;\nexport type SerializedPartialToolheadConfiguration = z.infer<typeof SerializedPartialToolheadConfiguration>;\n","// @ts-check\nimport { z } from 'zod';\n\n/**\n * Specify your server-side environment variables schema here.\n * This way you can ensure the app isn't built with invalid env vars.\n */\nexport const serverSchema = z.object({\n\tNODE_ENV: z.enum(['development', 'test', 'production']),\n\tRATOS_CONFIGURATION_PATH: z.string(),\n\tRATOS_SCRIPT_DIR: z.string(),\n\tKLIPPER_CONFIG_PATH: z.string(),\n\tKLIPPER_DIR: z.string(),\n\tKLIPPER_ENV: z.string(),\n\tMOONRAKER_DIR: z.string(),\n\tLOG_FILE: z.string(),\n\tRATOS_DATA_DIR: z.string(),\n});\n\n/**\n * Specify your client-side environment variables schema here.\n * This way you can ensure the app isn't built with invalid env vars.\n * To expose them to the client, prefix them with `NEXT_PUBLIC_`.\n */\nexport const clientSchema = z.object({\n\tNEXT_PUBLIC_KLIPPER_HOSTNAME: z.string().optional(),\n});\n\n/**\n * You can't destruct `process.env` as a regular object, so you have to do\n * it manually here. This is because Next.js evaluates this at build time,\n * and only used environment variables are included in the build.\n * @type {{ [k in keyof z.infer<typeof clientSchema>]: z.infer<typeof clientSchema>[k] | undefined }}\n */\nexport const clientEnv = {\n\tNEXT_PUBLIC_KLIPPER_HOSTNAME: process.env.NEXT_PUBLIC_KLIPPER_HOSTNAME,\n};\n"],"names":["badgeColorOptions","z","union","literal","badgeTextColorStyle","cva","variants","color","rose","red","yellow","orange","green","lime","blue","sky","indigo","purple","pink","brand","gray","plain","badgeBackgroundColorStyle","badgeBorderColorStyle","badgeStyle","size","sm","md","lg","defaultVariants","Badge","className","children","forwardProps","props","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsx","span","twMerge","moonrakerSyncEventEmitter","EventTarget","DispatchSaveAtomEvent","itemKey","value","dispatchEvent","CustomEvent","detail","moonrakerWriteEffect","params","onSet","node","key","newValue","SyncWithMoonraker","param","moonraker","useMoonraker","read","useCallback","getItem","DefaultValue","saveAtom","event","saveItem","useEffect","addEventListener","removeEventListener","RecoilSync","Drivers","array","Driver","parse","id","title","type","protocol","senseResistor","coolingCurrentThreshold","voltages","maxCurrent","external","Strong","React","ref","jsx_runtime","strong","cn","setDisplayName","fanHelp","jsxs","Fragment","p","partFanOptions","config","toolheadConfig","fans","axis","PrinterAxis","x","push","badge","controlboard","name","fourPinFanConnectorCount","toolboard","concat","toolNumber","hotendFanOptions","controllerFan","defaultControllerFan","getDefaultNozzle","diameter","findPreset","stepper","driver","voltage","current","performanceMode","presets","slice","sort","a","b","run_current","find","sense_resistor","Steppers","Stepper","maxPeakCurrent","driver_TBL","driver_TOFF","driver_HEND","driver_HSTRT","driver_IHOLDDELAY","driver_TPOWERDOWN","driver_PWM_FREQ","driver_PWM_GRAD","driver_PWM_AMPL","driver_PWM_AUTOSCALE","driver_SGT","fullStepsPerRotation","ToolheadHelper","hasToolboard","getToolboard","getMotionStepperName","dual_carriage","getMotionAxis","getToolboardName","getTool","getShortToolName","getDescription","_this_config_description","description","getExtruderAxis","extruder1","extruder","getToolCommand","getSerialSuffix","getExtruder","getHotend","hotend","getNozzle","_this_config_nozzle","nozzle","getThermistor","thermistor","getXEndstop","xEndstop","getYEndstop","yEndstop","getXAccelerometer","xAccelerometer","getYAccelerometer","yAccelerometer","getXAccelerometerName","_this_getXAccelerometer","getYAccelerometerName","_this_getYAccelerometer","getChangeSet","changes","changeSet","Object","keys","forEach","getConfig","change","deepEqual","parsed","PartialToolheadConfiguration","safeParse","getProbe","probe","getPartFan","partFan","getHotendFan","hotendFan","serialize","serializeToolheadConfiguration","constructor","toolhead","_len","arguments","length","inputs","_key","clsx","Component","displayName","cachedPrinters","readPrinterAtom","printer","PrinterState","printerId","object","PrinterDefinitionWithResolvedToolheads","shape","success","newPrinter","data","trpcClient","query","readPrinterRailAtom","param1","printerRailState","PrinterRailState","parsedRail","SerializedPrinterRail","printerRailDefault","defaults","rails","r","parsedRailRepaired","atom","default","effects","syncEffect","write","Promise","setTimeout","refine","getRefineCheckerForZodSchema","nullable","LoadablePrinterState","selector","get","loadable","noWait","hasValue","contents","hasError","loading","state","PrinterSizeState","PrinterSize","ControlboardState","board","boardId","path","BoardPath","boardReq","mcu","boards","boardFilters","newBoard","Board","atomFamily","PrinterRailsState","map","railState","rail","deserializePrinterRail","set","values","serializePrinterRail","PrinterToolheadState","tNum","printerToolheadState","parsedToolhead","ToolheadConfiguration","freshToolboard","toolboardPath","maybeToolboard","Toolboard","getLogger","debug","error","BaseToolheadConfiguration","extend","ToolNumber","selectorFamily","deserializeToolheadConfiguration","th","printerConfig","PrinterToolheadsState","waitForAll","toolheads","i","filter","Boolean","reset","LoadablePrinterToolheadsState","deserializeDriver","d","driverId","deserializeStepper","stepperId","BasePrinterRail","deserializePrinterRailDefinition","PrinterRailDefinition","stringToTitleObject","serializePartialToolheadConfiguration","undefined","AxisPinPrefix","AllPins","x_step_pin","string","optional","x_dir_pin","x_enable_pin","x_uart_pin","x_diag_pin","x_endstop_pin","x1_step_pin","x1_dir_pin","x1_enable_pin","x1_uart_pin","x1_diag_pin","x1_endstop_pin","dual_carriage_step_pin","dual_carriage_dir_pin","dual_carriage_enable_pin","dual_carriage_uart_pin","dual_carriage_diag_pin","dual_carriage_endstop_pin","y_step_pin","y_dir_pin","y_enable_pin","y_uart_pin","y_diag_pin","y_endstop_pin","y1_step_pin","y1_dir_pin","y1_enable_pin","y1_uart_pin","y1_diag_pin","y1_endstop_pin","y2_step_pin","y2_dir_pin","y2_enable_pin","y2_uart_pin","y2_diag_pin","y2_endstop_pin","z0_step_pin","z0_dir_pin","z0_enable_pin","z0_uart_pin","z0_diag_pin","z1_step_pin","z1_dir_pin","z1_enable_pin","z1_uart_pin","z1_diag_pin","z2_step_pin","z2_dir_pin","z2_enable_pin","z2_uart_pin","z2_diag_pin","z3_step_pin","z3_dir_pin","z3_enable_pin","z3_uart_pin","z3_diag_pin","e_step_pin","e_dir_pin","e_enable_pin","e_uart_pin","e_diag_pin","e_heater_pin","e_sensor_pin","stepper_spi_mosi_pin","stepper_spi_miso_pin","stepper_spi_sclk_pin","adxl345_cs_pin","bltouch_sensor_pin","bltouch_control_pin","probe_pin","fan_part_cooling_pin","fan_toolhead_cooling_pin","fan_controller_board_pin","heater_bed_heating_pin","heater_bed_sensor_pin","PinMap","pinAliasPrefixToPrinterAxis","x1","y","y1","y2","z0","z1","z2","z3","e","e1","nativeEnum","transform","v","_Object_keys_find","pa","and","or","UARTPins","uart_pin","uart_address","rx_pin","tx_pin","SPIPins","cs_pin","spi_bus","spi_software_mosi_pin","spi_software_miso_pin","spi_software_sclk_pin","hasSPI","slot","hasUART","MotorSlotPins","step_pin","dir_pin","enable_pin","diag_pin","endstop_pin","MotorSlot","message","innerType","omit","partial","MotorSlotKey","BoardID","BoardSerialPath","integratedDrivers","record","motorSlots","isToolboard","boolean","isHost","serialPath","manufacturer","firmwareBinaryName","compileScript","flashScript","flashInstructions","disableAutoFlash","documentationLink","hasQuirksFiles","driverCount","number","extruderlessConfig","driverVoltages","Voltage","hasMcuTempSensor","alternativePT1000Resistor","outputPins","pin","min","max","dfu","dfuBootImage","flashDevice","instructions","reminder","hasBoot0Jumper","stepperSPI","software","sclk","mosi","miso","hardware","bus","ADXL345SPI","LIS2DW","detected","thermistors","startsWithServerValidation","process","env","RATOS_CONFIGURATION_PATH","environment","serverSchema","hardwareType","startsWith","endsWith","Thermistor","enum","Hotend","flowType","Nozzle","Extruder","Probe","Endstop","KlipperAccelSensorNameSchame","AccelerometerType","Accelerometer","accelerometerType","klipperAccelSensorSchema","Fan","StepperVoltage","Voltages","getSupportedVoltages","includes","matchesDefaultRail","defaultRail","BaseStepperPreset","driver_MSLUT0","driver_MSLUT1","driver_MSLUT2","driver_MSLUT3","driver_MSLUT4","driver_MSLUT5","driver_MSLUT6","driver_MSLUT7","driver_W0","driver_W1","driver_W2","driver_W3","driver_X1","driver_X2","driver_X3","driver_START_SIN","driver_START_SIN90","describe","axisDescription","motorSlot","rotationDistance","gearRatio","regex","homingSpeed","microstepping","SerializedPrinterRailDefinition","PrinterRail","endstop","PrinterSizeDefinition","BasePrinterConfiguration","PrinterDefinition","stealthchop","standstillStealth","strict","ctx","sizes","toString","addIssue","code","ZodIssueCode","custom","NEVER","PrinterConfiguration","superRefine","arg","toolboardCount","t","driverCountRequired","too_small","minimum","inclusive","errors","conflicts","conflictingToolhead","pr","railName","toLocaleUpperCase","cr","join","SerializedPrinterConfiguration","SerializedToolheadConfiguration","PartialPrinterConfiguration","SerializedPartialPrinterConfiguration","SerializedPartialToolheadConfiguration","SpeedLimits","velocity","accel","z_velocity","z_accel","square_corner_velocity","travel_velocity","travel_accel","replace","releaseDate","image","template","kinematics","bedMargin","tuple","speedLimits","basic","performance","ToolAxis","NODE_ENV","RATOS_SCRIPT_DIR","KLIPPER_CONFIG_PATH","KLIPPER_DIR","KLIPPER_ENV","MOONRAKER_DIR","LOG_FILE","RATOS_DATA_DIR","NEXT_PUBLIC_KLIPPER_HOSTNAME"],"sourceRoot":""}