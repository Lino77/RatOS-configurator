{"version":3,"file":"static/chunks/9980-1c396c5a6465319b.js","mappings":"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","sources":["webpack://_N_E/ignored|/home/runner/work/RatOS-configurator/RatOS-configurator/src/node_modules/.pnpm/@tensorflow+tfjs-backend-wasm@4.18.0_@tensorflow+tfjs-core@4.18.0/node_modules/@tensorflow/tfjs-backend-wasm/wasm-out|fs","webpack://_N_E/ignored|/home/runner/work/RatOS-configurator/RatOS-configurator/src/node_modules/.pnpm/@tensorflow+tfjs-backend-wasm@4.18.0_@tensorflow+tfjs-core@4.18.0/node_modules/@tensorflow/tfjs-backend-wasm/wasm-out|os","webpack://_N_E/ignored|/home/runner/work/RatOS-configurator/RatOS-configurator/src/node_modules/.pnpm/@tensorflow+tfjs-backend-wasm@4.18.0_@tensorflow+tfjs-core@4.18.0/node_modules/@tensorflow/tfjs-backend-wasm/wasm-out|path","webpack://_N_E/ignored|/home/runner/work/RatOS-configurator/RatOS-configurator/src/node_modules/.pnpm/@tensorflow+tfjs-backend-wasm@4.18.0_@tensorflow+tfjs-core@4.18.0/node_modules/@tensorflow/tfjs-backend-wasm/wasm-out|perf_hooks","webpack://_N_E/ignored|/home/runner/work/RatOS-configurator/RatOS-configurator/src/node_modules/.pnpm/@tensorflow+tfjs-backend-wasm@4.18.0_@tensorflow+tfjs-core@4.18.0/node_modules/@tensorflow/tfjs-backend-wasm/wasm-out|worker_threads","webpack://_N_E/ignored|/home/runner/work/RatOS-configurator/RatOS-configurator/src/node_modules/.pnpm/@tensorflow+tfjs-core@4.18.0_encoding@0.1.13/node_modules/@tensorflow/tfjs-core/dist/platforms|node-fetch","webpack://_N_E/ignored|/home/runner/work/RatOS-configurator/RatOS-configurator/src/node_modules/.pnpm/@tensorflow+tfjs-core@4.18.0_encoding@0.1.13/node_modules/@tensorflow/tfjs-core/dist/platforms|util","webpack://_N_E/./tailwind.config.ts","webpack://_N_E/./app/_helpers/colors.ts","webpack://_N_E/./app/analysis/chart-theme.ts","webpack://_N_E/./app/analysis/charts.tsx","webpack://_N_E/./app/analysis/hooks.tsx","webpack://_N_E/./app/analysis/periodogram.ts","webpack://_N_E/./components/common/full-load-screen.tsx","webpack://_N_E/./components/common/no-ssr.tsx","webpack://_N_E/./components/common/spinner.tsx","webpack://_N_E/./data/endstops.ts","webpack://_N_E/./hooks/isClient.tsx","webpack://_N_E/./hooks/useKlippyStateHandler.tsx","webpack://_N_E/./hooks/useToolheadConfiguration.tsx","webpack://_N_E/./zods/analysis.tsx","webpack://_N_E/<anon>"],"sourcesContent":["/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","import defaultTheme from 'tailwindcss/defaultTheme';\nimport { Config } from 'tailwindcss/types/config';\n\nimport flattenColorPalette from 'tailwindcss/lib/util/flattenColorPalette';\nimport convert from 'color-convert';\nimport svgToDataUri from 'mini-svg-data-uri';\n\nexport default {\n\tdarkMode: 'class',\n\tcontent: [\n\t\t'./pages/**/*.{js,ts,jsx,tsx}',\n\t\t'./components/**/*.{js,ts,jsx,tsx}',\n\t\t'./helpers/**/*.{js,ts,jsx,tsx}',\n\t\t'./app/**/*.{js,ts,jsx,tsx}',\n\t\t'./data/**/*.{js,ts,jsx,tsx}',\n\t],\n\ttheme: {\n\t\tcontainer: {\n\t\t\tcenter: true,\n\t\t\tpadding: '2rem',\n\t\t\tscreens: {\n\t\t\t\t'2xl': '1400px',\n\t\t\t},\n\t\t},\n\t\textend: {\n\t\t\tfontFamily: {\n\t\t\t\tsans: ['var(--inter-font)', ...defaultTheme.fontFamily.sans],\n\t\t\t},\n\t\t\tkeyframes: {\n\t\t\t\tping: {\n\t\t\t\t\t'0%': {\n\t\t\t\t\t\topacity: '100',\n\t\t\t\t\t},\n\t\t\t\t\t'75%, 100%': {\n\t\t\t\t\t\ttransform: 'scale(2)',\n\t\t\t\t\t\topacity: '0',\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t'accordion-down': {\n\t\t\t\t\tfrom: { height: '0' },\n\t\t\t\t\tto: { height: 'var(--radix-accordion-content-height)' },\n\t\t\t\t},\n\t\t\t\t'accordion-up': {\n\t\t\t\t\tfrom: { height: 'var(--radix-accordion-content-height)' },\n\t\t\t\t\tto: { height: '0' },\n\t\t\t\t},\n\t\t\t},\n\t\t\tanimation: {\n\t\t\t\t'spin-fast': 'spin 0.5s linear infinite',\n\t\t\t\t'accordion-down': 'accordion-down 0.2s ease-out',\n\t\t\t\t'accordion-up': 'accordion-up 0.2s ease-out',\n\t\t\t},\n\t\t\tcolors: {\n\t\t\t\tbrand: {\n\t\t\t\t\t50: '#f2ffe1',\n\t\t\t\t\t100: '#deffcc',\n\t\t\t\t\t200: '#bdff99',\n\t\t\t\t\t300: '#9cff66',\n\t\t\t\t\t400: '#7bff33',\n\t\t\t\t\t500: '#5aff00',\n\t\t\t\t\t600: '#48cc00',\n\t\t\t\t\t700: '#369900',\n\t\t\t\t\t800: '#246600',\n\t\t\t\t\t900: '#123300',\n\t\t\t\t},\n\t\t\t\tborder: 'hsl(var(--border))',\n\t\t\t\tinput: 'hsl(var(--input))',\n\t\t\t\tring: 'hsl(var(--ring))',\n\t\t\t\tbackground: 'hsl(var(--background))',\n\t\t\t\tforeground: 'hsl(var(--foreground))',\n\t\t\t\tprimary: {\n\t\t\t\t\tDEFAULT: 'hsl(var(--brand-400) / 50%)',\n\t\t\t\t\tforeground: 'hsl(var(--white))',\n\t\t\t\t},\n\t\t\t\tsecondary: {\n\t\t\t\t\tDEFAULT: 'hsl(var(--secondary))',\n\t\t\t\t\tforeground: 'hsl(var(--white))',\n\t\t\t\t},\n\t\t\t\tdestructive: {\n\t\t\t\t\tDEFAULT: 'hsl(var(--red-400))',\n\t\t\t\t\tforeground: 'hsl(var(--black))',\n\t\t\t\t},\n\t\t\t\tmuted: {\n\t\t\t\t\tDEFAULT: 'hsl(var(--muted))',\n\t\t\t\t\tforeground: 'hsl(var(--muted-foreground))',\n\t\t\t\t},\n\t\t\t\taccent: {\n\t\t\t\t\tDEFAULT: 'hsl(var(--accent))',\n\t\t\t\t\tforeground: 'hsl(var(--white))',\n\t\t\t\t},\n\t\t\t\tpopover: {\n\t\t\t\t\tDEFAULT: 'hsl(var(--popover))',\n\t\t\t\t\tforeground: 'hsl(var(--popover-foreground))',\n\t\t\t\t},\n\t\t\t\tcard: {\n\t\t\t\t\tDEFAULT: 'hsl(var(--card))',\n\t\t\t\t\tforeground: 'hsl(var(--card-foreground))',\n\t\t\t\t},\n\t\t\t},\n\t\t\tborderRadius: {\n\t\t\t\tlg: 'var(--radius)',\n\t\t\t\tmd: 'calc(var(--radius) - 2px)',\n\t\t\t\tsm: 'calc(var(--radius) - 4px)',\n\t\t\t},\n\t\t\tfontSize: {\n\t\t\t\t'2xs': '0.6rem',\n\t\t\t\ts: '0.8125rem',\n\t\t\t},\n\t\t\tcontainers: {\n\t\t\t\t'screen-sm': '640px',\n\t\t\t\t'screen-md': '768px',\n\t\t\t\t'screen-lg': '1024px',\n\t\t\t\t'screen-xl': '1280px',\n\t\t\t\t'screen-2xl': '1536px',\n\t\t\t},\n\t\t},\n\t},\n\tplugins: [\n\t\trequire('@tailwindcss/forms'),\n\t\trequire('@tailwindcss/container-queries'),\n\t\trequire('tailwindcss-animate'),\n\t\trequire('tailwind-scrollbar')({ nocompatible: true }),\n\t\taddVariablesForColors,\n\t\tfunction ({ matchUtilities, theme }: any) {\n\t\t\tmatchUtilities(\n\t\t\t\t{\n\t\t\t\t\t'bg-grid': (value: any) => ({\n\t\t\t\t\t\tbackgroundImage: `url(\"${svgToDataUri(\n\t\t\t\t\t\t\t`<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\" width=\"32\" height=\"32\" fill=\"none\" stroke=\"${value}\"><path d=\"M0 .5H31.5V32\"/></svg>`,\n\t\t\t\t\t\t)}\")`,\n\t\t\t\t\t}),\n\t\t\t\t\t'bg-grid-small': (value: any) => ({\n\t\t\t\t\t\tbackgroundImage: `url(\"${svgToDataUri(\n\t\t\t\t\t\t\t`<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\" width=\"8\" height=\"8\" fill=\"none\" stroke=\"${value}\"><path d=\"M0 .5H31.5V32\"/></svg>`,\n\t\t\t\t\t\t)}\")`,\n\t\t\t\t\t}),\n\t\t\t\t\t'bg-dot': (value: any) => ({\n\t\t\t\t\t\tbackgroundImage: `url(\"${svgToDataUri(\n\t\t\t\t\t\t\t`<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\" width=\"16\" height=\"16\" fill=\"none\"><circle fill=\"${value}\" id=\"pattern-circle\" cx=\"10\" cy=\"10\" r=\"1.6257413380501518\"></circle></svg>`,\n\t\t\t\t\t\t)}\")`,\n\t\t\t\t\t}),\n\t\t\t\t},\n\t\t\t\t{ values: flattenColorPalette(theme('backgroundColor')), type: 'color' },\n\t\t\t);\n\t\t},\n\t],\n} satisfies Config;\n\nfunction addVariablesForColors({ addBase, theme }: any) {\n\tlet allColors = flattenColorPalette(theme('colors'));\n\tlet newVars = Object.fromEntries(\n\t\tObject.entries(allColors).map(([key, val]) => {\n\t\t\tconst parsed = convert.hex.hsl(val);\n\t\t\treturn [`--${key}`, val.startsWith('#') ? `${parsed[0]} ${parsed[1]}% ${parsed[2]}%` : val];\n\t\t}),\n\t);\n\n\taddBase({\n\t\t':root': newVars,\n\t});\n}\n","import resolveConfig from 'tailwindcss/resolveConfig';\nimport tailwindConfig from '@/tailwind.config';\nconst fullConfig = resolveConfig(tailwindConfig);\ntype TWShade<T extends keyof typeof fullConfig.theme.colors> = {\n\t[Color in T]: ExplicitObject<typeof fullConfig.theme.colors>[Color] extends string | { DEFAULT: string }\n\t\t? never\n\t\t: Color;\n}[T];\nexport type TWShadeableColorName = TWShade<keyof typeof fullConfig.theme.colors>;\nexport const twColors = fullConfig.theme.colors;\nexport const isShadableColor = (color: string): color is TWShadeableColorName => {\n\tconst twColor = twColors[color as keyof typeof twColors];\n\treturn twColor != null && typeof twColor !== 'string' && !('DEFAULT' in twColor);\n};\nexport const shadableTWColors = Object.fromEntries(\n\tObject.keys(twColors)\n\t\t.filter(isShadableColor)\n\t\t.map((c) => [c, twColors[c]]),\n) as { [color in TWShadeableColorName]: (typeof twColors)[TWShadeableColorName] };\n","import { SciChartJSDarkv2Theme } from 'scichart';\n\nexport class ChartTheme extends SciChartJSDarkv2Theme {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.sciChartBackground = 'transparent';\n\t\tthis.loadingAnimationBackground = 'transparent';\n\t\tthis.axisBandsFill = '#20212333';\n\t\tthis.majorGridLineBrush = '#AAAAAA37';\n\t\tthis.minorGridLineBrush = '#77777719';\n\t\tthis.strokePalette = ['#F48420', '#AE408E', '#209FD9', '#264B93'];\n\t\tthis.fillPalette = ['#F4842077', '#AE408E77', '#209FD977', '#264B9377'];\n\t\tthis.isLightBackground = false;\n\t}\n}\n","'use client';\nimport {\n\tXyDataSeries,\n\tSciChartSurface,\n\tThickness,\n\tNumericAxis,\n\tEAutoRange,\n\tNumberRange,\n\tEAxisAlignment,\n\tFastLineRenderableSeries,\n\tENumericFormat,\n\teasing,\n\tFastMountainRenderableSeries,\n\tPaletteFactory,\n\tGradientParams,\n\tPoint,\n\tISciChart2DDefinition,\n\tEAxisType,\n\tESeriesType,\n\tWaveAnimation,\n\tCategoryAxis,\n\tGlowEffect,\n\tSeriesInfo,\n\tRolloverModifier,\n\tCursorModifier,\n\tTRolloverTooltipSvgTemplate,\n\tparseColorToTArgb,\n\tparseTArgbToHtmlColor,\n\tCursorTooltipSvgAnnotation,\n\tEDataSeriesType,\n\tXyySeriesInfo,\n\tBaseDataSeries,\n\tXyyDataSeries,\n\tIDataSeries,\n} from 'scichart';\nimport { useChart } from '@/app/analysis/hooks';\nimport { ChartTheme } from '@/app/analysis/chart-theme';\n\nimport { inter } from '@/app/fonts';\nimport { TWShadeableColorName, shadableTWColors, twColors } from '@/app/_helpers/colors';\nimport { useCallback } from 'react';\n\nexport const ADXL_STREAM_BUFFER_SIZE = 128;\nconst historyCount = 200;\n\nSciChartSurface.configure({\n\twasmUrl: '/configure/scichart2d.wasm',\n\tdataUrl: '/configure/scichart2d.data',\n});\nSciChartSurface.UseCommunityLicense();\nconst theme = new ChartTheme();\n\nexport const SIGNAL_CHART_AXIS_SIGNAL_ID = 'signal';\nexport const SIGNAL_CHART_AXIS_HISTORY_ID = 'history';\nexport const SIGNAL_CHART_SERIES_SIGNAL_ID = 'signal-series';\nexport const SIGNAL_CHART_SERIES_HISTORY_ID = 'history-series';\nexport const SIGNAL_CHART_AXIS_AMPLITUDE_ID = 'amplitude';\n\ntype ADXLAxes = 'x' | 'y' | 'z';\n\nexport const isXyyDataSeries = (ds: IDataSeries): ds is XyyDataSeries => {\n\treturn ds.type === EDataSeriesType.Xyy;\n};\n\nexport const isXyDataSeries = (ds: IDataSeries): ds is XyDataSeries => {\n\treturn ds.type === EDataSeriesType.Xy;\n};\n\nexport const isXyySeriesInfo = (si: SeriesInfo): si is XyySeriesInfo => {\n\treturn si.dataSeriesType === EDataSeriesType.Xyy;\n};\n\nexport const isXySeriesInfo = (si: SeriesInfo): si is SeriesInfo => {\n\treturn si.dataSeriesType === EDataSeriesType.Xy;\n};\n\nexport const getAxisColorName = (axis: ADXLAxes): TWShadeableColorName => {\n\tswitch (axis) {\n\t\tcase 'x':\n\t\t\treturn `yellow`;\n\t\tcase 'y':\n\t\t\treturn `sky`;\n\t\tcase 'z':\n\t\t\treturn `rose`;\n\t\tdefault:\n\t\t\treturn `brand`;\n\t}\n};\n\nexport const getAxisColor = (axis: ADXLAxes) => {\n\treturn twColors[getAxisColorName(axis)];\n};\n\nexport const SignalChartMinimumRange = new NumberRange(-10000, 10000);\n\nexport const useADXLSignalChart = (axis: ADXLAxes) => {\n\treturn useChart(\n\t\tnull,\n\t\tuseCallback(\n\t\t\t(surface: SciChartSurface) => {\n\t\t\t\tconst color = getAxisColor(axis);\n\t\t\t\t// Category axis as the actual time doesn't matter (samples are evenly spaced).\n\t\t\t\tconst xAxis = new CategoryAxis(surface.webAssemblyContext2D, {\n\t\t\t\t\tid: SIGNAL_CHART_AXIS_SIGNAL_ID + axis,\n\t\t\t\t\tautoRange: EAutoRange.Always,\n\t\t\t\t\tmaxAutoTicks: ADXL_STREAM_BUFFER_SIZE,\n\t\t\t\t\tdrawLabels: false,\n\t\t\t\t\tdrawMinorTickLines: false,\n\t\t\t\t\tdrawMajorTickLines: false,\n\t\t\t\t\tdrawMajorBands: false,\n\t\t\t\t\tdrawMinorGridLines: false,\n\t\t\t\t\tdrawMajorGridLines: false,\n\t\t\t\t});\n\t\t\t\tsurface.xAxes.add(xAxis);\n\n\t\t\t\t// Category axis as the actual time doesn't matter (samples are evenly spaced).\n\t\t\t\tconst xHistoryAxis = new CategoryAxis(surface.webAssemblyContext2D, {\n\t\t\t\t\tid: SIGNAL_CHART_AXIS_HISTORY_ID + axis,\n\t\t\t\t\tautoRange: EAutoRange.Always,\n\t\t\t\t\tdrawLabels: false,\n\t\t\t\t\tdrawMinorGridLines: false,\n\t\t\t\t\tdrawMajorTickLines: false,\n\t\t\t\t});\n\t\t\t\tsurface.xAxes.add(xHistoryAxis);\n\n\t\t\t\tconst yAxis = new NumericAxis(surface.webAssemblyContext2D, {\n\t\t\t\t\tautoRange: EAutoRange.Never,\n\t\t\t\t\tvisibleRange: new NumberRange(-1000, 1000),\n\t\t\t\t\tdrawLabels: false,\n\t\t\t\t\tid: SIGNAL_CHART_AXIS_AMPLITUDE_ID + axis,\n\t\t\t\t\tdrawMinorTickLines: false,\n\t\t\t\t\tdrawMajorTickLines: false,\n\t\t\t\t\tdrawMajorBands: false,\n\t\t\t\t\tdrawMinorGridLines: false,\n\t\t\t\t\tdrawMajorGridLines: false,\n\t\t\t\t\taxisAlignment: EAxisAlignment.Left,\n\t\t\t\t});\n\t\t\t\tsurface.yAxes.add(yAxis);\n\n\t\t\t\tconst signalData = new XyDataSeries(surface.webAssemblyContext2D, {\n\t\t\t\t\tfifoCapacity: ADXL_STREAM_BUFFER_SIZE,\n\t\t\t\t\tcontainsNaN: false,\n\t\t\t\t\tisSorted: true,\n\t\t\t\t\tdataSeriesName: axis.toLocaleUpperCase(),\n\t\t\t\t\tdataIsSortedInX: true,\n\t\t\t\t\txValues: Array(ADXL_STREAM_BUFFER_SIZE)\n\t\t\t\t\t\t.fill(0)\n\t\t\t\t\t\t.map((_, i) => i),\n\t\t\t\t\tyValues: Array(ADXL_STREAM_BUFFER_SIZE).fill(0),\n\t\t\t\t});\n\n\t\t\t\t// Line series to render the live signal data.\n\t\t\t\tconst signalSeries = new FastLineRenderableSeries(surface.webAssemblyContext2D, {\n\t\t\t\t\txAxisId: SIGNAL_CHART_AXIS_SIGNAL_ID + axis,\n\t\t\t\t\tyAxisId: SIGNAL_CHART_AXIS_AMPLITUDE_ID + axis,\n\t\t\t\t\tstroke: color[400],\n\t\t\t\t\tstrokeThickness: 2,\n\t\t\t\t\tdataSeries: signalData,\n\t\t\t\t\teffect: new GlowEffect(surface.webAssemblyContext2D, {\n\t\t\t\t\t\tintensity: 1,\n\t\t\t\t\t\trange: 1,\n\t\t\t\t\t}),\n\t\t\t\t});\n\n\t\t\t\tsurface.renderableSeries.add(signalSeries);\n\n\t\t\t\tconst historyData = new XyDataSeries(surface.webAssemblyContext2D, {\n\t\t\t\t\tfifoCapacity: ADXL_STREAM_BUFFER_SIZE * historyCount,\n\t\t\t\t\tcontainsNaN: false,\n\t\t\t\t\tisSorted: true,\n\t\t\t\t\tdataSeriesName: axis.toLocaleUpperCase() + ' History',\n\t\t\t\t\tdataIsSortedInX: true,\n\t\t\t\t\txValues: Array(ADXL_STREAM_BUFFER_SIZE * historyCount)\n\t\t\t\t\t\t.fill(0)\n\t\t\t\t\t\t.map((_, i) => i),\n\t\t\t\t\tyValues: Array(ADXL_STREAM_BUFFER_SIZE * historyCount).fill(0),\n\t\t\t\t});\n\n\t\t\t\t// Line series to render the historical signal data (last 200 buffers)\n\t\t\t\tconst historySeries = new FastLineRenderableSeries(surface.webAssemblyContext2D, {\n\t\t\t\t\tstroke: color[500] + '22',\n\t\t\t\t\tstrokeThickness: 1,\n\t\t\t\t\topacity: 0.6,\n\t\t\t\t\tyAxisId: SIGNAL_CHART_AXIS_AMPLITUDE_ID + axis,\n\t\t\t\t\txAxisId: SIGNAL_CHART_AXIS_HISTORY_ID + axis,\n\t\t\t\t\tdataSeries: historyData,\n\t\t\t\t});\n\t\t\t\tsurface.renderableSeries.add(historySeries);\n\n\t\t\t\tsignalSeries.animation = new WaveAnimation({\n\t\t\t\t\tduration: 500,\n\t\t\t\t});\n\t\t\t\thistorySeries.animation = new WaveAnimation({\n\t\t\t\t\tduration: 500,\n\t\t\t\t});\n\n\t\t\t\treturn {\n\t\t\t\t\tsignalData: signalData,\n\t\t\t\t\tsignalSeries: signalSeries,\n\t\t\t\t\thistoryData: historyData,\n\t\t\t\t\thistorySeries: historySeries,\n\t\t\t\t\txAxis,\n\t\t\t\t\txHistoryAxis,\n\t\t\t\t\tyAxis,\n\t\t\t\t};\n\t\t\t},\n\t\t\t[axis],\n\t\t),\n\t);\n};\n\nexport const PSD_CHART_AXIS_AMPLITUDE_ID = 'amplitude';\nexport const PSDChartMinimumYVisibleRange = new NumberRange(0, 1500);\nexport const PSDChartNoSeriesDefinition: ISciChart2DDefinition = {\n\tsurface: {\n\t\ttheme: theme,\n\t\tpadding: Thickness.fromNumber(0),\n\t},\n\txAxes: [\n\t\t{\n\t\t\ttype: EAxisType.NumericAxis,\n\t\t\toptions: {\n\t\t\t\tvisibleRange: new NumberRange(0, 200),\n\t\t\t\tlabelStyle: {\n\t\t\t\t\t...inter.style,\n\t\t\t\t\tfontSize: 13,\n\t\t\t\t\tfontWeight: '600',\n\t\t\t\t\tpadding: new Thickness(15, 15, 15, 15),\n\t\t\t\t},\n\t\t\t\tlabelPostfix: 'Hz',\n\t\t\t\tdrawMinorGridLines: true,\n\t\t\t\tminorsPerMajor: 10,\n\t\t\t\tdrawMinorTickLines: false,\n\t\t\t\tdrawMajorTickLines: false,\n\t\t\t\tdrawMajorBands: false,\n\t\t\t},\n\t\t},\n\t],\n\tyAxes: [\n\t\t{\n\t\t\ttype: EAxisType.NumericAxis,\n\t\t\toptions: {\n\t\t\t\tid: PSD_CHART_AXIS_AMPLITUDE_ID,\n\t\t\t\taxisAlignment: EAxisAlignment.Left,\n\t\t\t\tgrowBy: new NumberRange(0, 0.1),\n\t\t\t\tvisibleRange: PSDChartMinimumYVisibleRange,\n\t\t\t\tlabelFormat: ENumericFormat.Exponential,\n\t\t\t\tlabelStyle: {\n\t\t\t\t\t...inter.style,\n\t\t\t\t\tfontSize: 13,\n\t\t\t\t\tfontWeight: '600',\n\t\t\t\t\tpadding: new Thickness(15, 15, 15, 15),\n\t\t\t\t},\n\t\t\t\tautoRangeAnimation: {\n\t\t\t\t\tduration: 140,\n\t\t\t\t\tanimateInitialRanging: false,\n\t\t\t\t\tanimateSubsequentRanging: true,\n\t\t\t\t\teasing: easing.inOutCubic,\n\t\t\t\t},\n\t\t\t\tdrawMinorGridLines: true,\n\t\t\t\tdrawMinorTickLines: false,\n\t\t\t\tdrawMajorTickLines: false,\n\t\t\t\tdrawMajorBands: false,\n\t\t\t\taxisTitleStyle: { fontSize: 10 },\n\t\t\t},\n\t\t},\n\t],\n};\nexport const PSDChartDefinition: ISciChart2DDefinition = {\n\t...PSDChartNoSeriesDefinition,\n\tseries: [\n\t\t{\n\t\t\ttype: ESeriesType.MountainSeries,\n\t\t\toptions: {\n\t\t\t\tid: 'total',\n\t\t\t\tyAxisId: PSD_CHART_AXIS_AMPLITUDE_ID,\n\t\t\t\tstrokeThickness: 3,\n\t\t\t\tfill: twColors.brand[500] + '22',\n\t\t\t\tstroke: twColors.brand[400],\n\t\t\t},\n\t\t\txyData: {\n\t\t\t\tcontainsNaN: false,\n\t\t\t\tisSorted: true,\n\t\t\t\txValues: Array(ADXL_STREAM_BUFFER_SIZE)\n\t\t\t\t\t.fill(0)\n\t\t\t\t\t.map((_, i) => Math.floor((i / ADXL_STREAM_BUFFER_SIZE) * 200)),\n\t\t\t\tyValues: Array(ADXL_STREAM_BUFFER_SIZE)\n\t\t\t\t\t.fill(0)\n\t\t\t\t\t.map((_, i) => 0),\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\ttype: ESeriesType.LineSeries,\n\t\t\toptions: {\n\t\t\t\tid: 'z',\n\t\t\t\tyAxisId: PSD_CHART_AXIS_AMPLITUDE_ID,\n\t\t\t\tstrokeThickness: 3,\n\t\t\t\tstroke: getAxisColor('z')[400],\n\t\t\t},\n\t\t\txyData: {\n\t\t\t\tcontainsNaN: false,\n\t\t\t\tisSorted: true,\n\t\t\t\txValues: Array(ADXL_STREAM_BUFFER_SIZE)\n\t\t\t\t\t.fill(0)\n\t\t\t\t\t.map((_, i) => Math.floor((i / ADXL_STREAM_BUFFER_SIZE) * 200)),\n\t\t\t\tyValues: Array(ADXL_STREAM_BUFFER_SIZE)\n\t\t\t\t\t.fill(0)\n\t\t\t\t\t.map((_, i) => 0),\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\ttype: ESeriesType.LineSeries,\n\t\t\toptions: {\n\t\t\t\tid: 'y',\n\t\t\t\tyAxisId: PSD_CHART_AXIS_AMPLITUDE_ID,\n\t\t\t\tstrokeThickness: 3,\n\t\t\t\tstroke: getAxisColor('y')[400],\n\t\t\t},\n\t\t\txyData: {\n\t\t\t\tcontainsNaN: false,\n\t\t\t\tisSorted: true,\n\t\t\t\txValues: Array(ADXL_STREAM_BUFFER_SIZE)\n\t\t\t\t\t.fill(0)\n\t\t\t\t\t.map((_, i) => Math.floor((i / ADXL_STREAM_BUFFER_SIZE) * 200)),\n\t\t\t\tyValues: Array(ADXL_STREAM_BUFFER_SIZE)\n\t\t\t\t\t.fill(0)\n\t\t\t\t\t.map((_, i) => 0),\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\ttype: ESeriesType.LineSeries,\n\t\t\toptions: {\n\t\t\t\tid: 'x',\n\t\t\t\tyAxisId: PSD_CHART_AXIS_AMPLITUDE_ID,\n\t\t\t\tstrokeThickness: 3,\n\t\t\t\tstroke: getAxisColor('x')[400],\n\t\t\t},\n\t\t\txyData: {\n\t\t\t\tcontainsNaN: false,\n\t\t\t\tisSorted: true,\n\t\t\t\txValues: Array(ADXL_STREAM_BUFFER_SIZE)\n\t\t\t\t\t.fill(0)\n\t\t\t\t\t.map((_, i) => Math.floor((i / ADXL_STREAM_BUFFER_SIZE) * 200)),\n\t\t\t\tyValues: Array(ADXL_STREAM_BUFFER_SIZE)\n\t\t\t\t\t.fill(0)\n\t\t\t\t\t.map((_, i) => 0),\n\t\t\t},\n\t\t},\n\t],\n};\n\n// Override the standard tooltip displayed by CursorModifier\nexport const getPSDTooltipLegendTemplate = (seriesInfos: SeriesInfo[], svgAnnotation: CursorTooltipSvgAnnotation) => {\n\tlet outputSvgString = '';\n\n\t// Foreach series there will be a seriesInfo supplied by SciChart. This contains info about the series under the house\n\tconst padding = 16;\n\tlet y = padding * 2;\n\tconst valuesWithLabels: string[] = [];\n\tseriesInfos.forEach((seriesInfo, index) => {\n\t\tlet separator = ':';\n\t\tlet textColor = seriesInfo.renderableSeries.rolloverModifierProps.tooltipColor as TWShadeableColorName;\n\t\tvaluesWithLabels.push(\n\t\t\t`${seriesInfo.renderableSeries.rolloverModifierProps.tooltipTitle}${separator} ${(seriesInfo.yValue / 1000).toFixed(2)} g^2/Hz @ ${seriesInfo.formattedXValue}`,\n\t\t);\n\t\toutputSvgString += `<text x=\"${padding}\" y=\"${y}\" class=\"text-sm text-medium font-sans\" fill=\"${shadableTWColors[textColor][400]}\">\n\t\t<tspan class=\"font-bold\">${seriesInfo.renderableSeries.rolloverModifierProps.tooltipTitle}</tspan>${separator} ${(seriesInfo.yValue / 1000).toFixed(2)} g<tspan y=\"${y - 4}\" class=\"sup\">2</tspan><tspan y=${y}>/Hz</tspan> @ ${seriesInfo.formattedXValue}\n\t\t</text>`;\n\t\ty += 20;\n\t\tif (seriesInfo.dataSeriesType === EDataSeriesType.Xyy) {\n\t\t\tconst si = seriesInfo as XyySeriesInfo;\n\t\t\tlet textColor = seriesInfo.renderableSeries.rolloverModifierProps1.tooltipColor as TWShadeableColorName;\n\t\t\tvaluesWithLabels.push(\n\t\t\t\t`${si.renderableSeries.rolloverModifierProps1.tooltipTitle}${separator} ${(si.y1Value / 1000).toFixed(2)} g^2/Hz @ ${si.formattedXValue}`,\n\t\t\t);\n\t\t\toutputSvgString += `<text x=\"${padding}\" y=\"${y}\" class=\"text-sm text-medium font-sans\" fill=\"${shadableTWColors[textColor][400]}\">\n\t\t\t\t<tspan class=\"font-bold\">${si.renderableSeries.rolloverModifierProps1.tooltipTitle}</tspan>${separator} ${(si.y1Value / 1000).toFixed(2)} g<tspan y=\"${y - 4}\" class=\"sup\">2</tspan><tspan y=${y}>/Hz</tspan> @ ${si.formattedXValue}\n\t\t\t</text>`;\n\t\t\ty += 20;\n\n\t\t\toutputSvgString += `<text x=\"${padding}\" y=\"${y}\" class=\"text-sm text-medium font-sans\" fill=\"${shadableTWColors['zinc'][400]}\">\n\t\t\t\t<tspan class=\"font-bold\">Amplitude Difference</tspan>${separator} ${Math.abs((si.y1Value - si.yValue) / 1000).toFixed(2)} g<tspan y=\"${y - 4}\" class=\"sup\">2</tspan><tspan y=${y}>/Hz</tspan>\n\t\t\t</text>`;\n\t\t\ty += 20;\n\t\t}\n\t});\n\tconst width =\n\t\tseriesInfos.length === 0\n\t\t\t? 0\n\t\t\t: padding +\n\t\t\t\tcalcTooltipWidth(\n\t\t\t\t\tvaluesWithLabels.reduce(function (prev, cur) {\n\t\t\t\t\t\treturn cur.length > prev ? cur.length : prev;\n\t\t\t\t\t}, 0),\n\t\t\t\t) *\n\t\t\t\t\t1.7;\n\t// tooltip height\n\tconst height = seriesInfos.length === 0 ? 0 : y;\n\n\treturn `<svg width=\"${width}\" height=\"${height}\">\n\t\t\t\t<rect rx=\"8\" ry=\"8\" width=\"100%\" height=\"100%\" class=\"stroke-zinc-400/10 fill-zinc-900/70 stroke-1\" />\n                ${outputSvgString}\n            </svg>`;\n};\n\n// Override the standard tooltip displayed by CursorModifier\nexport const psdRolloverTooltipTemplate: TRolloverTooltipSvgTemplate = (id, seriesInfo, rolloverTooltip) => {\n\tlet valuesBlock = '';\n\tconst tooltipProps = rolloverTooltip.tooltipProps;\n\tconst tooltipTitle = tooltipProps.tooltipTitle,\n\t\ttooltipColor = tooltipProps.tooltipColor as TWShadeableColorName,\n\t\ttooltipTextColor = twColors[tooltipColor][100],\n\t\ttooltipBorderColor = parseColorToTArgb(twColors[tooltipColor][400]),\n\t\ttooltipBGColor = parseColorToTArgb(twColors[tooltipColor][600]),\n\t\ttooltipLabelX = tooltipProps.tooltipLabelX,\n\t\ttooltipLabelY = tooltipProps.tooltipLabelY,\n\t\tshadowColor = twColors[tooltipColor][900];\n\n\ttooltipBorderColor.opacity = Math.round(255 * 0.8);\n\ttooltipBGColor.opacity = Math.round(255 * 0.2);\n\tconst tooltipDataTemplate =\n\t\trolloverTooltip.tooltipProps.tooltipDataTemplate ??\n\t\trolloverTooltip.tooltipProps.rolloverModifier.tooltipDataTemplate;\n\tconst valuesWithLabels = tooltipDataTemplate(seriesInfo, tooltipTitle, tooltipLabelX, tooltipLabelY);\n\t// tooltip width\n\tconst width =\n\t\ttooltipProps.width ??\n\t\tcalcTooltipWidth(\n\t\t\tvaluesWithLabels.reduce(function (prev, cur) {\n\t\t\t\treturn cur.length > prev ? cur.length : prev;\n\t\t\t}, 0),\n\t\t);\n\t// tooltip height\n\tconst height = tooltipProps.height ?? calcTooltipHeight(valuesWithLabels.length);\n\trolloverTooltip.updateSize(width, height);\n\tvaluesWithLabels.forEach(function (val, index) {\n\t\tvaluesBlock += `<tspan x=\"8\" dy=\"1.2em\">${val}</tspan>`;\n\t});\n\tlet blur = `<feGaussianBlur result=\"blurOut\" in=\"offOut\" stdDeviation=\"3\" />`;\n\tif (shadowColor !== undefined) {\n\t\tvar shadowRGBA = parseColorToTArgb(shadowColor);\n\t\tblur = `\n\t\t\t<feColorMatrix result=\"matrixOut\" in=\"offOut\" type=\"matrix\"\n\t\t\t\tvalues=\"0 0 0 0 \n\t\t\t\t${shadowRGBA.red / 255}\n\t\t\t\t0 0 0 0\n\t\t\t\t${shadowRGBA.green / 255}\n\t\t\t\t0 0 0 0\n\t\t\t\t${shadowRGBA.blue / 255}\n\t\t\t\t0 0 0 \n\t\t\t\t${shadowRGBA.opacity / 255}\n\t\t\t\t0 0\" \n\t\t\t/>\n\t\t\t<feGaussianBlur result=\"blurOut\" in=\"matrixOut\" stdDeviation=\"3\" />`;\n\t}\n\treturn `\n\t\t<svg class=\"scichart__rollover-tooltip transition-all\" width=\"${width}\" height=\"${height}\">\n\t\t\t<defs>\n\t\t\t\t<filter id=\"${id}\" x=\"0\" y=\"0\" width=\"200%\" height=\"200%\">\n\t\t\t\t\t<feOffset result=\"offOut\" in=\"SourceAlpha\" dx=\"3\" dy=\"3\" />\n\t\t\t\t\t\t\n\t\t\t\t\t\t${blur}\n\t\t\t\t\t<feBlend in=\"SourceGraphic\" in2=\"blurOut\" mode=\"normal\" />\n\t\t\t\t</filter>\n\t\t\t</defs>\n\t\t\t<rect rx=\"8\" ry=\"8\" width=\"100%\" height=\"100%\" fill=\"${parseTArgbToHtmlColor(tooltipBGColor)}\" stroke=\"${parseTArgbToHtmlColor(tooltipBorderColor)}\" stroke-width=\"2\"  filter=\"url(#${id}\" />\n\t\t\t<svg width=\"100%\">\n\t\t\t\t<text x=\"8\" y=\"3\" class=\"text-sm font-sans font-semibold\" dy=\"0\" fill=\"${tooltipTextColor}\">\n\t\t\t\t${valuesBlock}\n\t\t\t\t</text>\n\t\t\t</svg>\n\t\t</svg>`;\n};\n\nexport const usePSDChart = () => {\n\treturn useChart(\n\t\tPSDChartDefinition,\n\t\tuseCallback((surface: SciChartSurface) => {\n\t\t\tconst xAnimationSeries = new XyDataSeries(surface.webAssemblyContext2D, {\n\t\t\t\tid: 'xAnimationSeries',\n\t\t\t\tcontainsNaN: false,\n\t\t\t\tisSorted: true,\n\t\t\t\tdataIsSortedInX: true,\n\t\t\t});\n\t\t\tsurface.addDeletable(xAnimationSeries);\n\t\t\tconst yAnimationSeries = new XyDataSeries(surface.webAssemblyContext2D, {\n\t\t\t\tid: 'yAnimationSeries',\n\t\t\t\tcontainsNaN: false,\n\t\t\t\tisSorted: true,\n\t\t\t\tdataIsSortedInX: true,\n\t\t\t});\n\t\t\tsurface.addDeletable(yAnimationSeries);\n\t\t\tconst zAnimationSeries = new XyDataSeries(surface.webAssemblyContext2D, {\n\t\t\t\tid: 'zAnimationSeries',\n\t\t\t\tcontainsNaN: false,\n\t\t\t\tisSorted: true,\n\t\t\t\tdataIsSortedInX: true,\n\t\t\t});\n\t\t\tsurface.addDeletable(zAnimationSeries);\n\t\t\tconst totalAnimationSeries = new XyDataSeries(surface.webAssemblyContext2D, {\n\t\t\t\tid: 'totalAnimationSeries',\n\t\t\t\tcontainsNaN: false,\n\t\t\t\tisSorted: true,\n\t\t\t\tdataIsSortedInX: true,\n\t\t\t});\n\t\t\tsurface.addDeletable(totalAnimationSeries);\n\t\t\t(surface.renderableSeries.asArray() as FastMountainRenderableSeries[]).forEach((rs) => {\n\t\t\t\tif (rs.id === 'total') {\n\t\t\t\t\trs.paletteProvider = PaletteFactory.createGradient(\n\t\t\t\t\t\tsurface.webAssemblyContext2D,\n\t\t\t\t\t\tnew GradientParams(new Point(0, 0), new Point(1, 1), [\n\t\t\t\t\t\t\t{ offset: 0, color: twColors.brand[400] },\n\t\t\t\t\t\t\t{ offset: 0.8, color: twColors.brand[600] },\n\t\t\t\t\t\t]),\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tenableStroke: true,\n\t\t\t\t\t\t\tenableFill: true,\n\t\t\t\t\t\t\tfillOpacity: 0.17,\n\t\t\t\t\t\t\tpointMarkerOpacity: 0.5,\n\t\t\t\t\t\t},\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\trs.rolloverModifierProps.tooltipColor = getAxisColorName(rs.id as ADXLAxes);\n\t\t\t\trs.rolloverModifierProps.tooltipTemplate = psdRolloverTooltipTemplate;\n\t\t\t\trs.rolloverModifierProps.tooltipTitle =\n\t\t\t\t\trs.id.substring(0, 1).toUpperCase() + rs.id.substring(1) + ' Power Spectral Density';\n\t\t\t\trs.animation = new WaveAnimation({\n\t\t\t\t\tduration: 500,\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tsurface.chartModifiers.add(\n\t\t\t\tnew CursorModifier({\n\t\t\t\t\t// Defines if crosshair is shown\n\t\t\t\t\tcrosshairStroke: twColors.sky[400],\n\t\t\t\t\tcrosshairStrokeThickness: 1,\n\t\t\t\t\tshowXLine: true,\n\t\t\t\t\tshowYLine: true,\n\t\t\t\t\t// Shows the default tooltip\n\t\t\t\t\tshowTooltip: false,\n\t\t\t\t\ttooltipLegendTemplate: getPSDTooltipLegendTemplate,\n\t\t\t\t\ttooltipLegendOffsetX: 16,\n\t\t\t\t\ttooltipLegendOffsetY: 16,\n\t\t\t\t\tyAxisId: PSD_CHART_AXIS_AMPLITUDE_ID,\n\t\t\t\t\taxisLabelFill: twColors.zinc[900],\n\t\t\t\t\taxisLabelStroke: twColors.zinc[100],\n\t\t\t\t}),\n\t\t\t);\n\n\t\t\treturn {\n\t\t\t\tanimationSeries: {\n\t\t\t\t\tx: xAnimationSeries,\n\t\t\t\t\ty: yAnimationSeries,\n\t\t\t\t\tz: zAnimationSeries,\n\t\t\t\t\ttotal: totalAnimationSeries,\n\t\t\t\t},\n\t\t\t};\n\t\t}, []),\n\t);\n};\nvar calcTooltipWidth = function (textLength: number = 20, charWidth = 4) {\n\treturn textLength * charWidth + 20;\n};\n/** @ignore */\nvar calcTooltipHeight = function (lines: number = 2, lineHeight = 15) {\n\treturn lineHeight * lines + 16;\n};\n","'use client';\nimport useWebSocket from 'react-use-websocket';\nimport { getHost } from '@/helpers/util';\nimport {\n\tInFlightRequestCallbacks,\n\tInFlightRequestTimeouts,\n\tMoonrakerResponse,\n\tMoonrakerResponseSuccess,\n} from '@/moonraker/types';\nimport { MutableRefObject, useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { getLogger } from '@/app/_helpers/logger';\nimport { useKlippyStateHandler } from '@/hooks/useKlippyStateHandler';\nimport {\n\tAxisBase2D,\n\tEDataSeriesType,\n\tEWatermarkPosition,\n\tISciChart2DDefinition,\n\tNumberRange,\n\tSciChartSurface,\n\tTSciChart,\n\tThickness,\n\tXyDataSeries,\n\tbuild2DChart,\n\teasing,\n} from 'scichart';\nimport {\n\tTensor1D,\n\tTensor2D,\n\taddN,\n\tconcat,\n\tconcat2d,\n\tgather,\n\treshape,\n\tsetBackend,\n\tsplit,\n\ttensor1d,\n} from '@tensorflow/tfjs-core';\nimport '@tensorflow/tfjs-backend-wasm';\nimport { powerSpectralDensity, sumPSDs, welch } from '@/app/analysis/periodogram';\nimport { ADXL_STREAM_BUFFER_SIZE } from '@/app/analysis/charts';\nimport { TChartComponentProps } from 'scichart-react/types';\nimport { ChartTheme } from '@/app/analysis/chart-theme';\nimport {\n\tAccumulatedPSD,\n\tKlipperAccelSubscriptionData,\n\tKlipperAccelSubscriptionResponse,\n\tPSD,\n\tklipperADXL345SubscriptionDataSchema,\n\tklipperADXL345SubscriptionResponseSchema,\n} from '@/zods/analysis';\nimport { twJoin } from 'tailwind-merge';\nimport { FullLoadScreen } from '@/components/common/full-load-screen';\nimport { toast } from 'sonner';\nimport { AccelerometerType, KlipperAccelSensorName, klipperAccelSensorSchema } from '@/zods/hardware';\nimport { z } from 'zod';\nimport { useRecoilValue } from 'recoil';\nimport { ControlboardState } from '@/recoil/printer';\nimport { useToolheads } from '@/hooks/useToolheadConfiguration';\n\nconst getWsURL = () => {\n\tconst host = getHost();\n\tif (host == null || host.trim() == '') {\n\t\treturn null;\n\t}\n\tif (typeof window == 'undefined') {\n\t\treturn null;\n\t}\n\treturn `ws://${host}:7125/klippysocket`;\n};\n\nlet REQ_ID = 0;\n\nexport interface RealtimeADXLOptions {\n\tonDataUpdate?: (status: KlipperAccelSubscriptionData) => void;\n\tonSubscriptionFailure?: ReactCallback<(err: Error) => void>;\n\tonSubscriptionSuccess?: ReactCallback<(header: KlipperAccelSubscriptionResponse['header']) => void>;\n\tenabled?: boolean;\n\tsensor: KlipperAccelSensorName;\n}\n\nconst isSuccessResponse = (res: MoonrakerResponse): res is MoonrakerResponseSuccess => {\n\treturn !('error' in res);\n};\n\nexport const useAccelerometerWithType = (accelerometerName: KlipperAccelSensorName) => {\n\tconst controlBoard = useRecoilValue(ControlboardState);\n\tconst toolheads = useToolheads();\n\tlet accelType: z.infer<typeof AccelerometerType> = 'adxl345';\n\n\tif (accelerometerName === 'controlboard') {\n\t\tif (controlBoard?.ADXL345SPI != null) {\n\t\t\taccelType = 'adxl345';\n\t\t}\n\t\tif (controlBoard?.LIS2DW != null) {\n\t\t\taccelType = 'lis2dw';\n\t\t}\n\t}\n\tif (accelerometerName === 'toolboard_t0' || accelerometerName === 'toolboard_t1') {\n\t\tconst toolboard = toolheads.find((t) => t.getToolboardName() === accelerometerName)?.getToolboard();\n\t\tif (toolboard == null) {\n\t\t\tthrow new Error(`No toolboard found for T0`);\n\t\t}\n\t\tif (toolboard.ADXL345SPI != null) {\n\t\t\taccelType = 'adxl345';\n\t\t}\n\t\tif (toolboard.LIS2DW != null) {\n\t\t\taccelType = 'lis2dw';\n\t\t}\n\t}\n\tif (accelerometerName === 'beacon') {\n\t\taccelType = 'beacon';\n\t}\n\treturn useMemo(\n\t\t() =>\n\t\t\tklipperAccelSensorSchema.parse({\n\t\t\t\tname: accelerometerName,\n\t\t\t\ttype: accelType,\n\t\t\t}),\n\t\t[accelerometerName, accelType],\n\t);\n};\n\nexport const useRealtimeSensor = <\n\tResponseType extends MoonrakerResponse,\n\tSuccessResponseType extends MoonrakerResponseSuccess,\n>(\n\toptions: RealtimeADXLOptions,\n) => {\n\tconst [wsUrl, setWsUrl] = useState(getWsURL());\n\tconst inFlightRequests = useRef<InFlightRequestCallbacks<SuccessResponseType['result']>>({});\n\tconst inFlightRequestTimeouts = useRef<InFlightRequestTimeouts>({});\n\tconst [isSubscribed, setIsSubscribed] = useState(false);\n\tconst { onSubscriptionFailure, onDataUpdate, sensor, enabled, onSubscriptionSuccess } = options;\n\tconst parsedSensor = useAccelerometerWithType(sensor);\n\tconst isSubscribedRef = useRef(isSubscribed);\n\tisSubscribedRef.current = isSubscribed;\n\tconst kippyState = useKlippyStateHandler();\n\tuseEffect(() => {\n\t\tsetWsUrl(getWsURL());\n\t}, []);\n\tconst { lastJsonMessage, sendJsonMessage, readyState } = useWebSocket<ResponseType>(\n\t\tenabled === false ? null : wsUrl,\n\t\t{\n\t\t\tshouldReconnect: (closeEvent) => {\n\t\t\t\treturn true;\n\t\t\t},\n\t\t\tonMessage: (message) => {\n\t\t\t\tif (onDataUpdate && isSubscribedRef.current) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst parsed = JSON.parse(message.data) as ResponseType;\n\t\t\t\t\t\tif (isSuccessResponse(parsed) && parsed.params != null && 'data' in parsed.params) {\n\t\t\t\t\t\t\tconst res = klipperADXL345SubscriptionDataSchema.parse(parsed.params);\n\t\t\t\t\t\t\tonDataUpdate?.(res);\n\t\t\t\t\t\t} else if (!isSuccessResponse(parsed)) {\n\t\t\t\t\t\t\tgetLogger().error('Error in response from klipper socket', parsed);\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tconsole.warn('OnMessage: Failed to parse message', e, message.data);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\treconnectAttempts: Infinity,\n\t\t\treconnectInterval: 3000,\n\t\t\tshare: false,\n\t\t},\n\t);\n\n\tconst subscribe = useCallback(async () => {\n\t\tconst id = ++REQ_ID;\n\t\treturn new Promise<SuccessResponseType['result']>(async (resolve, reject) => {\n\t\t\tinFlightRequests.current[id] = (err, result) => {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn reject(err);\n\t\t\t\t}\n\t\t\t\tif (result && typeof result === 'object' && 'error' in result && result.error) {\n\t\t\t\t\treturn reject(result.error);\n\t\t\t\t}\n\t\t\t\tif (result == null) {\n\t\t\t\t\treturn reject(new Error('No result. Unknown response format.'));\n\t\t\t\t}\n\t\t\t\tresolve(result);\n\t\t\t};\n\t\t\tlet timeout = 10 * 1000;\n\t\t\tinFlightRequestTimeouts.current[id] = window.setTimeout(() => {\n\t\t\t\tinFlightRequests.current[id]?.(new Error('Request timed out'), null);\n\t\t\t\tdelete inFlightRequests.current[id];\n\t\t\t\tdelete inFlightRequestTimeouts.current[id];\n\t\t\t}, timeout); // 10 second timeout.\n\t\t\tsendJsonMessage({\n\t\t\t\tjsonrpc: '2.0',\n\t\t\t\tmethod:\n\t\t\t\t\tparsedSensor.type === 'lis2dw'\n\t\t\t\t\t\t? 'lis2dw/dump_lis2dw'\n\t\t\t\t\t\t: parsedSensor.type === 'beacon'\n\t\t\t\t\t\t\t? 'beacon/dump_accel'\n\t\t\t\t\t\t\t: 'adxl345/dump_adxl345',\n\t\t\t\tparams: {\n\t\t\t\t\tsensor: parsedSensor.name,\n\t\t\t\t\tresponse_template: {},\n\t\t\t\t},\n\t\t\t\tid: id,\n\t\t\t});\n\t\t});\n\t}, [sendJsonMessage, parsedSensor]);\n\n\tuseEffect(() => {\n\t\tif (readyState === 1 && kippyState === 'ready' && !isSubscribedRef.current) {\n\t\t\tsubscribe()\n\t\t\t\t.then((res) => {\n\t\t\t\t\tconst result = klipperADXL345SubscriptionResponseSchema.parse(res);\n\t\t\t\t\tgetLogger().info(result, 'Subscribed to ADXL345');\n\t\t\t\t\tsetIsSubscribed(true);\n\t\t\t\t\tonSubscriptionSuccess?.(result.header);\n\t\t\t\t})\n\t\t\t\t.catch((err) => {\n\t\t\t\t\tgetLogger().error(err);\n\t\t\t\t\tsetIsSubscribed(false);\n\t\t\t\t\tif (onSubscriptionFailure) {\n\t\t\t\t\t\tonSubscriptionFailure(err);\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttoast.error('Failed to start accelerometer stream', { description: err.message });\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t} else if (isSubscribedRef.current) {\n\t\t\tsetIsSubscribed(false);\n\t\t}\n\t}, [kippyState, readyState, subscribe, onSubscriptionFailure, onSubscriptionSuccess]);\n\n\tuseEffect(() => {\n\t\tif (lastJsonMessage?.id && inFlightRequests.current[lastJsonMessage.id]) {\n\t\t\twindow.clearTimeout(inFlightRequestTimeouts.current[lastJsonMessage.id]);\n\t\t\tif (isSuccessResponse(lastJsonMessage)) {\n\t\t\t\tinFlightRequests.current[lastJsonMessage.id](null, lastJsonMessage.result);\n\t\t\t} else {\n\t\t\t\tinFlightRequests.current[lastJsonMessage.id](new Error(lastJsonMessage.error.message), null);\n\t\t\t}\n\t\t\tdelete inFlightRequestTimeouts.current[lastJsonMessage.id];\n\t\t\tdelete inFlightRequests.current[lastJsonMessage.id];\n\t\t}\n\t}, [lastJsonMessage]);\n\n\tuseEffect(() => {\n\t\t// cleanup\n\t\treturn () => {\n\t\t\tisSubscribedRef.current = false;\n\t\t\tfor (const reqId in inFlightRequestTimeouts.current) {\n\t\t\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t\t\t\tdelete inFlightRequestTimeouts.current[reqId];\n\t\t\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t\t\t\tdelete inFlightRequests.current[reqId];\n\t\t\t}\n\t\t};\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, []);\n\n\treturn {\n\t\tisSubscribed,\n\t};\n};\n\nconst theme = new ChartTheme();\nexport const useChart = <T,>(\n\tdefinition: ISciChart2DDefinition | null,\n\tinitializer?: ReactCallback<(surface: SciChartSurface) => T>,\n\tindent = true,\n) => {\n\tconst surface = useRef<SciChartSurface | null>(null);\n\tconst [isInitialized, setIsInitialized] = useState(false);\n\tconst data = useRef<T | null>(null);\n\treturn useMemo(\n\t\t() => ({\n\t\t\tforwardProps: {\n\t\t\t\tinitChart: async (rootElement: string | HTMLDivElement) => {\n\t\t\t\t\tlet chart: null | { wasmContext: TSciChart; sciChartSurface: SciChartSurface } = null;\n\t\t\t\t\tif (definition != null) {\n\t\t\t\t\t\tconst orgPadding = definition.surface?.padding;\n\t\t\t\t\t\tconst def = {\n\t\t\t\t\t\t\t...definition,\n\t\t\t\t\t\t\tsurface: {\n\t\t\t\t\t\t\t\t...definition.surface,\n\t\t\t\t\t\t\t\tpadding: new Thickness(\n\t\t\t\t\t\t\t\t\torgPadding?.top ?? 0,\n\t\t\t\t\t\t\t\t\torgPadding?.right ?? 0,\n\t\t\t\t\t\t\t\t\torgPadding?.bottom ?? 0,\n\t\t\t\t\t\t\t\t\t(orgPadding?.left ?? 0) + (indent ? 300 : 0),\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t};\n\t\t\t\t\t\tchart = await build2DChart(rootElement, def);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tchart = await SciChartSurface.create(rootElement, {\n\t\t\t\t\t\t\ttheme: theme,\n\t\t\t\t\t\t\tpadding: new Thickness(0, 0, 0, indent ? 300 : 0),\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tchart.sciChartSurface.watermarkPosition = EWatermarkPosition.BottomLeft;\n\t\t\t\t\tchart.sciChartSurface.watermarkRelativeToCanvas = true;\n\t\t\t\t\tsurface.current = chart.sciChartSurface;\n\t\t\t\t\tif (initializer) {\n\t\t\t\t\t\tdata.current = initializer(chart.sciChartSurface);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn { sciChartSurface: chart.sciChartSurface };\n\t\t\t\t},\n\t\t\t\tonInit: () => setIsInitialized(true),\n\t\t\t\tstyle: {\n\t\t\t\t\tmarginLeft: indent ? -300 : 0,\n\t\t\t\t},\n\n\t\t\t\tfallback: <FullLoadScreen className={twJoin(indent && 'ml-[150px]', 'bg-zinc-900')} />,\n\t\t\t} satisfies TChartComponentProps,\n\t\t\tsurface,\n\t\t\tisInitialized,\n\t\t\tdata,\n\t\t}),\n\t\t[indent, isInitialized, definition, initializer],\n\t);\n};\n\nconst defaultAxisMap: KlipperAccelSubscriptionResponse['header'] = [\n\t`time`,\n\t`x_acceleration`,\n\t`y_acceleration`,\n\t`z_acceleration`,\n];\n\nexport const useADXLFifoTensor = (\n\tdataHeader: KlipperAccelSubscriptionResponse['header'] = defaultAxisMap,\n\tfifoCapacity: number = 8192,\n) => {\n\tconst buffer = useRef<Tensor2D | null>(null);\n\tconst sampleRate = useRef<number>(0);\n\tconst [dropped, setDropped] = useState(0);\n\tconst take = useCallback((count: number) => {\n\t\tif (buffer.current == null) {\n\t\t\treturn null;\n\t\t}\n\t\tconst max = Math.min(count, buffer.current.shape[0]);\n\t\tconst [out, keep] = split<Tensor2D>(buffer.current, [max, buffer.current.shape[0] - max], 0);\n\t\tbuffer.current.dispose();\n\t\tbuffer.current = keep;\n\t\treturn out;\n\t}, []);\n\tconst axisMap = useMemo(() => {\n\t\treturn [\n\t\t\tdataHeader.findIndex((v) => v.startsWith(`time`)),\n\t\t\tdataHeader.findIndex((v) => v.startsWith(`x_acceleration`)),\n\t\t\tdataHeader.findIndex((v) => v.startsWith(`y_acceleration`)),\n\t\t\tdataHeader.findIndex((v) => v.startsWith(`z_acceleration`)),\n\t\t];\n\t}, [dataHeader]);\n\tconst onData = useCallback(\n\t\t(status: KlipperAccelSubscriptionData) => {\n\t\t\tconst incoming = gather<Tensor2D>(status.data, axisMap, 1);\n\t\t\tconst newBuffer = buffer.current ? concat2d([buffer.current, incoming], 0) : incoming;\n\t\t\tif (newBuffer !== incoming) {\n\t\t\t\tincoming.dispose();\n\t\t\t}\n\t\t\tbuffer.current?.dispose();\n\t\t\tbuffer.current = newBuffer;\n\t\t\tsampleRate.current = status.data.length / (status.data[status.data.length - 1][0] - status.data[0][0]);\n\t\t\tif (buffer.current.shape[0] > fifoCapacity) {\n\t\t\t\tconsole.debug('Fifo capacity exceeded, dropping frames', buffer.current.shape[0]);\n\t\t\t\tconst drop = buffer.current.shape[0] - fifoCapacity;\n\t\t\t\ttake(drop)?.dispose();\n\t\t\t\tsetDropped((prev) => prev + drop);\n\t\t\t}\n\t\t},\n\t\t[axisMap, fifoCapacity, take],\n\t);\n\tuseEffect(() => {\n\t\treturn () => {\n\t\t\tbuffer.current?.dispose();\n\t\t\tbuffer.current = null;\n\t\t};\n\t}, []);\n\treturn {\n\t\tonData: onData,\n\t\ttake: take,\n\t\tbuffer: buffer,\n\t\tdropped: dropped,\n\t\tsampleRate: sampleRate,\n\t};\n};\n\nexport const isXySeries = (series: any): series is XyDataSeries => {\n\treturn series.type === EDataSeriesType.Xy;\n};\n\nexport const useBufferedADXLSignal = (\n\tfifoTensor: ReturnType<typeof useADXLFifoTensor>,\n\t/**\n\t * NOTE: Make absolutely sure to dispose of the tensors passed to this function\n\t */\n\tupdateFn: null | ((time: Tensor1D, x: Tensor1D, y: Tensor1D, z: Tensor1D) => void),\n) => {\n\tconst lastUpdate = useRef<number>(new Date().getTime());\n\tconst update = useRef(updateFn);\n\tupdate.current = updateFn;\n\tconst tick = useCallback(async () => {\n\t\tconst sinceLast = new Date().getTime() - lastUpdate.current;\n\t\tconst samples = Math.min(Math.ceil(fifoTensor.sampleRate.current * (sinceLast / 1000)), ADXL_STREAM_BUFFER_SIZE);\n\t\t// const samples = Math.ceil(fifoTensor.sampleRate.current / 50);\n\t\tif (fifoTensor.buffer.current == null || fifoTensor.buffer.current.shape[0] < 5) {\n\t\t\treturn;\n\t\t}\n\t\tlet toTake = samples;\n\t\tif (fifoTensor.buffer.current.shape[0] > ADXL_STREAM_BUFFER_SIZE * 12) {\n\t\t\ttoTake += ADXL_STREAM_BUFFER_SIZE;\n\t\t}\n\t\tconst data = fifoTensor.take(toTake);\n\t\tlastUpdate.current = new Date().getTime();\n\t\tif (data == null) {\n\t\t\treturn;\n\t\t}\n\t\tconst [time, x, y, z] = split<Tensor2D>(data, 4, 1);\n\t\tupdate.current?.(\n\t\t\treshape(time, [time.shape[0]]),\n\t\t\treshape(x, [x.shape[0]]),\n\t\t\treshape(y, [y.shape[0]]),\n\t\t\treshape(z, [z.shape[0]]),\n\t\t);\n\t\ttime.dispose();\n\t\tdata.dispose();\n\t\tx.dispose();\n\t\ty.dispose();\n\t\tz.dispose();\n\t}, [fifoTensor]);\n\treturn tick;\n};\n\nexport const useBufferedPSD = (\n\tsampleRate: MutableRefObject<number>,\n\tupdateFn: null | ((x: PSD, y: PSD, z: PSD, total: PSD) => void),\n) => {\n\tconst xref = useRef<Tensor1D>(tensor1d([]));\n\tconst yref = useRef<Tensor1D>(tensor1d([]));\n\tconst zref = useRef<Tensor1D>(tensor1d([]));\n\tconst update = useRef(updateFn);\n\tupdate.current = updateFn;\n\n\tconst onData = useCallback(\n\t\tasync (time: Tensor1D, x: Tensor1D, y: Tensor1D, z: Tensor1D, isDetrended?: boolean) => {\n\t\t\tconst rate = sampleRate.current;\n\t\t\tconst newX = concat([x, xref.current]);\n\t\t\tconst newY = concat([y, yref.current]);\n\t\t\tconst newZ = concat([z, zref.current]);\n\t\t\tx.dispose();\n\t\t\ty.dispose();\n\t\t\tz.dispose();\n\t\t\ttime.dispose();\n\t\t\txref.current.dispose();\n\t\t\tyref.current.dispose();\n\t\t\tzref.current.dispose();\n\t\t\txref.current = newX;\n\t\t\tyref.current = newY;\n\t\t\tzref.current = newZ;\n\t\t\tif (xref.current.shape[0] > rate) {\n\t\t\t\tconst xData = xref.current.clone();\n\t\t\t\tconst yData = yref.current.clone();\n\t\t\t\tconst zData = zref.current.clone();\n\t\t\t\tconst totalData = addN([xData, yData, zData]);\n\t\t\t\txref.current.dispose();\n\t\t\t\tyref.current.dispose();\n\t\t\t\tzref.current.dispose();\n\t\t\t\txref.current = tensor1d([]);\n\t\t\t\tyref.current = tensor1d([]);\n\t\t\t\tzref.current = tensor1d([]);\n\t\t\t\tconst [xpsd, ypsd, zpsd] = await Promise.all([\n\t\t\t\t\tpowerSpectralDensity(xData, rate, { isDetrended: isDetrended }),\n\t\t\t\t\tpowerSpectralDensity(yData, rate, { isDetrended: isDetrended }),\n\t\t\t\t\tpowerSpectralDensity(zData, rate, { isDetrended: isDetrended }),\n\t\t\t\t]);\n\t\t\t\tconst totalpsd = sumPSDs([xpsd, ypsd, zpsd]);\n\t\t\t\txData.dispose();\n\t\t\t\tyData.dispose();\n\t\t\t\tzData.dispose();\n\t\t\t\ttotalData.dispose();\n\t\t\t\tupdate.current?.(xpsd, ypsd, zpsd, totalpsd);\n\t\t\t}\n\t\t},\n\t\t[sampleRate],\n\t);\n\treturn onData;\n};\n\nexport const useAccumulatedPSD = (updateFn?: (result: AccumulatedPSD) => void) => {\n\tconst [isAccumulating, setIsAccumulating] = useState(false);\n\tconst psds = useRef<{ x: PSD[]; y: PSD[]; z: PSD[]; total: PSD[] }>({ x: [], y: [], z: [], total: [] });\n\tconst update = useRef(updateFn);\n\tupdate.current = updateFn;\n\n\tconst start = useCallback(async () => {\n\t\tpsds.current = { x: [], y: [], z: [], total: [] };\n\t\tsetIsAccumulating(true);\n\t}, []);\n\n\tconst stop = useCallback(async () => {\n\t\tconst old = psds.current;\n\t\tconst [x, y, z, total] = await Promise.all([welch(old.x), welch(old.y), welch(old.z), welch(old.total)]);\n\t\tpsds.current = { x: [], y: [], z: [], total: [] };\n\t\tsetIsAccumulating(false);\n\t\treturn { x, y, z, total, source: old };\n\t}, []);\n\n\tconst onData = useCallback(\n\t\tasync (newX: PSD, newY: PSD, newZ: PSD, newTotal: PSD) => {\n\t\t\tif (!isAccumulating) {\n\t\t\t\tconst result = {\n\t\t\t\t\tx: newX,\n\t\t\t\t\ty: newY,\n\t\t\t\t\tz: newZ,\n\t\t\t\t\ttotal: newTotal,\n\t\t\t\t\tsource: {\n\t\t\t\t\t\tx: [newX],\n\t\t\t\t\t\ty: [newY],\n\t\t\t\t\t\tz: [newZ],\n\t\t\t\t\t\ttotal: [newTotal],\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t\tupdate.current?.(result);\n\t\t\t\treturn result;\n\t\t\t}\n\t\t\tpsds.current.x.push(newX);\n\t\t\tpsds.current.y.push(newY);\n\t\t\tpsds.current.z.push(newZ);\n\t\t\tpsds.current.total.push(newTotal);\n\t\t\tconst [x, y, z, total] = await Promise.all([\n\t\t\t\twelch(psds.current.x),\n\t\t\t\twelch(psds.current.y),\n\t\t\t\twelch(psds.current.z),\n\t\t\t\twelch(psds.current.total),\n\t\t\t]);\n\t\t\tconst result = { x, y, z, total, source: psds.current };\n\t\t\tupdate.current?.(result);\n\t\t\treturn result;\n\t\t},\n\t\t[isAccumulating],\n\t);\n\n\treturn useMemo(\n\t\t() => ({\n\t\t\tstartAccumulation: start,\n\t\t\tstopAccumulation: stop,\n\t\t\tonData: onData,\n\t\t\tisAccumulating,\n\t\t}),\n\t\t[isAccumulating, onData, start, stop],\n\t);\n};\nconst DEFAULT_FPS = 24;\nexport function useTicker(tickOrTargetFps?: () => Promise<void>, tick?: undefined): void;\nexport function useTicker(tickOrTargetFps?: number, tick?: () => Promise<void>): void;\nexport function useTicker(tickOrTargetFps?: number | (() => Promise<void>), tick?: () => Promise<void>) {\n\tif (typeof tickOrTargetFps === 'function') {\n\t\ttick = tickOrTargetFps;\n\t}\n\tconst fnRef = useRef(tick);\n\tfnRef.current = tick;\n\tconst interval = Math.floor(\n\t\t1000 / (typeof tickOrTargetFps === 'function' ? DEFAULT_FPS : tickOrTargetFps ?? DEFAULT_FPS),\n\t);\n\tconst isEnabled = tick != null;\n\tuseEffect(() => {\n\t\tif (isEnabled === false) {\n\t\t\treturn;\n\t\t}\n\t\tlet id = 0;\n\t\tconst update = async () => {\n\t\t\tif (fnRef.current == null) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tawait fnRef.current();\n\t\t\tid = window.setTimeout(update, interval);\n\t\t};\n\t\tid = window.setTimeout(update, interval);\n\t\treturn () => {\n\t\t\twindow.clearTimeout(id);\n\t\t};\n\t}, [interval, isEnabled]);\n}\n\nconst maximumRangeUnion = (axis: AxisBase2D | (AxisBase2D | null)[]) => {\n\tif (Array.isArray(axis)) {\n\t\treturn axis.reduce((prev, cur) => {\n\t\t\tif (cur == null) {\n\t\t\t\treturn prev;\n\t\t\t}\n\t\t\tconst max = cur.getMaximumRange();\n\t\t\treturn prev.union(max);\n\t\t}, new NumberRange());\n\t}\n\treturn axis.getMaximumRange();\n};\nconst visibleRangeUnion = (axis: AxisBase2D | (AxisBase2D | null)[]) => {\n\tif (Array.isArray(axis)) {\n\t\treturn axis.reduce((prev, cur) => {\n\t\t\tif (cur == null) {\n\t\t\t\treturn prev;\n\t\t\t}\n\t\t\tconst max = cur.visibleRange;\n\t\t\treturn prev.union(max);\n\t\t}, new NumberRange());\n\t}\n\treturn axis.visibleRange;\n};\nconst growByUnion = (axis: AxisBase2D | (AxisBase2D | null)[]) => {\n\tif (Array.isArray(axis)) {\n\t\treturn axis.reduce((prev, cur) => {\n\t\t\tif (cur == null) {\n\t\t\t\treturn prev;\n\t\t\t}\n\t\t\tconst max = cur.growBy ?? new NumberRange();\n\t\t\treturn prev.union(max);\n\t\t}, new NumberRange());\n\t}\n\treturn axis.growBy;\n};\n\nexport function useDynamicAxisRange(\n\taxis: AxisBase2D | (AxisBase2D | null)[] | null,\n\tminimum: NumberRange = new NumberRange(0, 0),\n) {\n\tconst maxRef = useRef<NumberRange | null>(axis ? maximumRangeUnion(axis) : null);\n\tconst lastUpdate = useRef<number>(new Date().getTime());\n\tconst lastChange = useRef<number>(new Date().getTime());\n\n\tconst update = useCallback(\n\t\t(dataRange: NumberRange = minimum) => {\n\t\t\tif (axis == null) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst axes = Array.isArray(axis) ? axis : [axis];\n\t\t\tif (maxRef.current == null) {\n\t\t\t\tmaxRef.current = visibleRangeUnion(axis);\n\t\t\t}\n\t\t\tconst sinceLastUpdate = new Date().getTime() - lastUpdate.current;\n\t\t\tconst sinceLastChange = new Date().getTime() - lastChange.current;\n\t\t\tlastUpdate.current = new Date().getTime();\n\t\t\tlet max = maximumRangeUnion(axis);\n\t\t\tif (dataRange) {\n\t\t\t\tmax = max.union(dataRange);\n\t\t\t}\n\t\t\tconst growBy = growByUnion(axis);\n\t\t\tif (growBy) {\n\t\t\t\tmax.growBy(growBy);\n\t\t\t}\n\t\t\tlet newMax: null | number = null;\n\t\t\tlet newMin: null | number = null;\n\t\t\tif (max.max > maxRef.current.max) {\n\t\t\t\tnewMax = max.max;\n\t\t\t}\n\t\t\tif (max.min < maxRef.current.min) {\n\t\t\t\tnewMin = max.min;\n\t\t\t}\n\t\t\tif (newMax != null || newMin != null) {\n\t\t\t\taxes.forEach((a) => {\n\t\t\t\t\tif (maxRef.current == null || a == null) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\ta.animateVisibleRange(\n\t\t\t\t\t\tnew NumberRange(\n\t\t\t\t\t\t\tMath.min(newMin ?? maxRef.current.min, minimum.min),\n\t\t\t\t\t\t\tMath.max(newMax ?? maxRef.current.max, minimum.max),\n\t\t\t\t\t\t),\n\t\t\t\t\t\tsinceLastUpdate,\n\t\t\t\t\t\teasing.inOutCirc,\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t\tlastChange.current = new Date().getTime();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (sinceLastChange > sinceLastUpdate * 3) {\n\t\t\t\tif (max.max < maxRef.current.max) {\n\t\t\t\t\tnewMax = maxRef.current.max - (maxRef.current.max - max.max);\n\t\t\t\t}\n\t\t\t\tif (max.min > maxRef.current.min) {\n\t\t\t\t\tnewMin = maxRef.current.min + (max.min - maxRef.current.min);\n\t\t\t\t}\n\t\t\t\tif (newMax != null || newMin != null) {\n\t\t\t\t\taxes.forEach((a) => {\n\t\t\t\t\t\tif (maxRef.current == null || a == null) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ta.animateVisibleRange(\n\t\t\t\t\t\t\tnew NumberRange(\n\t\t\t\t\t\t\t\tMath.min(newMin ?? maxRef.current.min, minimum.min),\n\t\t\t\t\t\t\t\tMath.max(newMax ?? maxRef.current.max, minimum.max),\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tsinceLastUpdate / 2,\n\t\t\t\t\t\t\teasing.inOutCirc,\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\t\tlastChange.current = new Date().getTime();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t[axis, minimum],\n\t);\n\n\treturn update;\n}\n","import { signal as tfSignal, Tensor1D, sum, pow, div, mean, sub, tidy, setBackend, ready } from '@tensorflow/tfjs-core';\nimport '@tensorflow/tfjs-backend-webgl';\nimport { NumberRange } from 'scichart';\nimport { PSD } from '@/zods/analysis';\nimport { getLogger } from '@/app/_helpers/logger';\n\n/**\n * Returns the ceil of the log2 of the absolute value of the passed number\n * @memberof module:bcijs\n * @function\n * @name nextpow2\n * @param {number} num\n * @returns {number} The ceil of the log2 of the absolute value of the passed number\n * @example\n * nextpow2(8); // 3\n * nextpow2(9); // 4\n * nextpow2(16); // 4\n * nextpow2(30); // 5\n * nextpow2(0); // -Infinity\n */\nexport function nextpow2(num: number): number {\n\treturn Math.ceil(Math.log2(Math.abs(num)));\n}\n\nexport const detrendSignal = (signal: Tensor1D) => tidy(() => sub<Tensor1D>(signal, mean(signal, 0, true)));\n\nconst WINDOW_T_SEC = 0.5;\nconst MAX_FREQ = 200;\n\n/**\n * Estimates the power spectral density of a real-valued input signal using the periodogram method and a hann window.\n * Output units are based on that of the input signal, of the form X^2/Hz, where X is the units of the input signal.\n *\n * @memberof module:bcijs\n * @function\n * @name periodogram\n * @param {number[]} signal - The signal.\n * @param {number} sampleRate - sample rate in Hz\n * @param {Object} [options]\n * @param {number} [options.fftSize=1 << nextpow2(sample_rate * WINDOW_T_SEC - 1)] - Size of the fft to be used. Should be a power of 2.\n * @returns {Object} Object with keys 'estimates' (the psd estimates) and 'frequencies' (the corresponding frequencies in Hz)\n */\nexport async function powerSpectralDensity(\n\tsignal: Tensor1D,\n\tsampleRate: number,\n\toptions?: { fftSize?: number; _scaling?: string; isDetrended?: boolean },\n): Promise<PSD> {\n\tlet { fftSize, _scaling } = Object.assign(\n\t\t{\n\t\t\tfftSize: 1 << nextpow2(sampleRate * WINDOW_T_SEC - 1),\n\t\t\t_scaling: 'psd',\n\t\t},\n\t\toptions,\n\t);\n\t// Validate _scaling\n\tif (_scaling != 'psd' && _scaling != 'none') {\n\t\tthrow new Error('Unknown scaling');\n\t}\n\n\tlet scaling_factor: number = _scaling === 'none' ? 1 : 2;\n\tconst win = tfSignal.hannWindow(fftSize);\n\tlet klipScale = (await tidy(() => div(div(1.0, sum(pow(win, 2))), sampleRate)).array()) as number;\n\n\tconst detrended = options?.isDetrended ? signal : detrendSignal(signal);\n\tawait setBackend('webgl');\n\tlet f = tfSignal.stft(detrended, fftSize, Math.floor(fftSize / 2), fftSize, tfSignal.hannWindow);\n\n\tlet x = (await f.array()) as number[][];\n\tf.dispose();\n\tdetrended.dispose();\n\twin.dispose();\n\n\tconst data = x.map((series) => {\n\t\t// Get the power of each FFT bin value\n\t\tlet powers: number[] = [];\n\t\tlet frequencies: number[] = [];\n\t\tlet maxPower = 0;\n\t\tlet minPower = 0;\n\t\tlet skipped = 0;\n\t\tconst fftRatio = sampleRate / fftSize;\n\t\tfor (var i = 0; i < series.length - 1; i += 2) {\n\t\t\tconst frequency = (i === 0 ? 0 : i / 2) * fftRatio;\n\t\t\tif (frequency > MAX_FREQ) {\n\t\t\t\tskipped++;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst nextFrequency = ((i + 2) / 2) * fftRatio;\n\t\t\t// apply scaling\n\t\t\t// magnitude is sqrt(real^2 + imag^2), power is magnitude^2\n\t\t\tlet power: number = series[i] ** 2 + series[i + 1] ** 2;\n\t\t\tpower *= klipScale;\n\t\t\t// Don't scale DC or Nyquist by 2\n\t\t\tif (_scaling == 'psd' && i > 0 && nextFrequency < MAX_FREQ) {\n\t\t\t\tpower *= scaling_factor;\n\t\t\t}\n\t\t\tif (power > maxPower) {\n\t\t\t\tmaxPower = power;\n\t\t\t}\n\t\t\tif (power < minPower) {\n\t\t\t\tminPower = power;\n\t\t\t}\n\t\t\tpowers.push(power);\n\t\t\tfrequencies.push(frequency);\n\t\t}\n\n\t\treturn {\n\t\t\testimates: powers,\n\t\t\tfrequencies: frequencies,\n\t\t\tpowerRange: new NumberRange(minPower, maxPower),\n\t\t};\n\t});\n\n\tawait setBackend('wasm');\n\n\treturn welch(data);\n}\n\n// Keep this async so that we can potentially move it to the GPU\nexport const welch = async (PSDs: PSD[]): Promise<PSD> => {\n\tif (PSDs.length == 0) throw new Error('Unable to calculate any PSD estimates');\n\tif (PSDs.length == 1) {\n\t\tgetLogger().warn('Not enough data to compute more than one segment, returning single modified periodogram.');\n\t\treturn PSDs[0];\n\t}\n\n\t// Compute average PSD\n\tlet num_estimates = PSDs[0].estimates.length;\n\tlet avg = new Array(num_estimates).fill(0);\n\tfor (let p = 0; p < PSDs.length; p++) {\n\t\tfor (let i = 0; i < num_estimates; i++) {\n\t\t\tavg[i] += PSDs[p].estimates[i];\n\t\t}\n\t}\n\tlet maxPower = 0;\n\tlet minPower = 0;\n\tfor (let i = 0; i < num_estimates; i++) {\n\t\tavg[i] = avg[i] / PSDs.length;\n\t\tif (avg[i] > maxPower) {\n\t\t\tmaxPower = avg[i];\n\t\t}\n\t\tif (avg[i] < minPower) {\n\t\t\tminPower = avg[i];\n\t\t}\n\t}\n\n\treturn {\n\t\testimates: avg,\n\t\tfrequencies: PSDs[0].frequencies,\n\t\tpowerRange: new NumberRange(minPower, maxPower),\n\t};\n};\n\nexport const sumPSDs = (PSDs: PSD[]): PSD => {\n\tlet num_estimates = PSDs[0].estimates.length;\n\tlet sum = new Array(num_estimates).fill(0);\n\tfor (let p = 0; p < PSDs.length; p++) {\n\t\tfor (let i = 0; i < num_estimates; i++) {\n\t\t\tsum[i] += PSDs[p].estimates[i];\n\t\t}\n\t}\n\tconst { minPower, maxPower } = PSDs.reduce(\n\t\t(acc, psd) => {\n\t\t\tif (psd.powerRange.min < acc.minPower) {\n\t\t\t\tacc.minPower = psd.powerRange.min;\n\t\t\t}\n\t\t\tif (psd.powerRange.max > acc.maxPower) {\n\t\t\t\tacc.maxPower = psd.powerRange.max;\n\t\t\t}\n\t\t\treturn acc;\n\t\t},\n\t\t{ minPower: 0, maxPower: 0 },\n\t);\n\treturn {\n\t\testimates: sum,\n\t\tfrequencies: PSDs[0].frequencies,\n\t\tpowerRange: new NumberRange(minPower, maxPower),\n\t};\n};\n","import { Spinner } from '@/components/common/spinner';\nimport { twJoin } from 'tailwind-merge';\n\nexport const FullLoadScreen = (props: { className?: string }) => {\n\treturn (\n\t\t<div className={twJoin('flex h-full w-full flex-1 items-center justify-center', props.className)}>\n\t\t\t<Spinner className=\"h-8 w-8\" />\n\t\t</div>\n\t);\n};\n","'use client';\nimport { useIsClient } from '@/hooks/isClient';\nimport dynamic from 'next/dynamic';\nimport React, { lazy } from 'react';\nimport { FullLoadScreen } from '@/components/common/full-load-screen';\nexport const NoSSR = (props: React.PropsWithChildren<{ fallback?: React.ReactNode }>) => {\n\tconst isClient = useIsClient();\n\treturn isClient ? <DynamicImport>{props.children}</DynamicImport> : props.fallback ?? <FullLoadScreen />;\n};\nconst DynamicImport = lazy(() =>\n\tPromise.resolve({ default: (props: React.PropsWithChildren) => <>{props.children}</> }),\n);\n","import { twMerge } from 'tailwind-merge';\n\nexport const Spinner: React.FC<{ className?: string; noMargin?: boolean }> = (props) => {\n\treturn (\n\t\t<svg\n\t\t\tclassName={twMerge(\n\t\t\t\t'h-5 w-5 animate-spin text-black dark:text-white',\n\t\t\t\t!props.noMargin ? '-ml-1 mr-3' : '',\n\t\t\t\tprops.className,\n\t\t\t)}\n\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\tfill=\"none\"\n\t\t\tviewBox=\"0 0 24 24\"\n\t\t>\n\t\t\t<circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n\t\t\t<path\n\t\t\t\tclassName=\"opacity-75\"\n\t\t\t\tfill=\"currentColor\"\n\t\t\t\td=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n\t\t\t></path>\n\t\t</svg>\n\t);\n};\n","import { z } from 'zod';\nimport { Endstop } from '@/zods/hardware';\nimport { PrinterAxis } from '@/zods/motion';\nimport { PartialToolheadConfiguration } from '@/zods/toolhead';\nimport { PartialPrinterConfiguration } from '@/zods/printer-configuration';\n\nexport const xEndstopOptions = (\n\tconfig?: PartialPrinterConfiguration | null,\n\ttoolheadConfig?: (PartialToolheadConfiguration & { axis: null | PrinterAxis }) | null,\n): z.infer<typeof Endstop>[] => {\n\tconst endstops: z.infer<typeof Endstop>[] = [];\n\tif (toolheadConfig?.toolboard != null) {\n\t\tendstops.push({\n\t\t\tid: 'endstop-toolboard' as const,\n\t\t\ttitle: 'Physical Endstop',\n\t\t\tbadge: [{ color: 'sky', children: `${toolheadConfig.toolboard.name} T${toolheadConfig.toolNumber}` }],\n\t\t});\n\t}\n\tif (toolheadConfig?.axis === PrinterAxis.x) {\n\t\tendstops.push({\n\t\t\tid: 'endstop' as const,\n\t\t\ttitle: 'Physical Endstop',\n\t\t\tbadge: [{ color: 'purple', children: config?.controlboard?.name ?? 'Control Board' }],\n\t\t});\n\t\tendstops.push({\n\t\t\tid: 'sensorless' as const,\n\t\t\ttitle: 'Sensorless Homing',\n\t\t\tbadge: [{ color: 'purple', children: config?.controlboard?.name ?? 'Control Board' }],\n\t\t});\n\t}\n\treturn endstops;\n};\n\nexport const defaultXEndstop = {\n\tid: 'endstop' as const,\n\ttitle: 'Physical Endstop',\n\tbadge: [{ color: 'purple' as const, children: 'Control Board' }],\n};\n\nexport const yEndstopOptions = (\n\tconfig?: PartialPrinterConfiguration | null,\n\ttoolheadConfig?: (PartialToolheadConfiguration & { axis: null | PrinterAxis }) | null,\n): z.infer<typeof Endstop>[] => [\n\t{\n\t\tid: 'endstop' as const,\n\t\ttitle: 'Physical Endstop',\n\t\tbadge: [{ color: 'purple', children: config?.controlboard?.name ?? 'Control Board' }],\n\t},\n\t{\n\t\tid: 'sensorless' as const,\n\t\ttitle: 'Sensorless Homing',\n\t\tbadge: [{ color: 'purple', children: config?.controlboard?.name ?? 'Control Board' }],\n\t},\n];\n","'use client';\nimport { useEffect, useState } from 'react';\n\nexport const useIsClient = () => {\n\tconst [isClient, setIsClient] = useState(false);\n\tuseEffect(() => {\n\t\tif (typeof window !== 'undefined') {\n\t\t\tsetIsClient(true);\n\t\t}\n\t}, []);\n\treturn isClient;\n};\n","'use client';\n\nimport { useCallback, useEffect, useState } from 'react';\nimport { atom, useSetRecoilState } from 'recoil';\nimport { useMoonraker } from '@/moonraker/hooks';\n\nexport type KlippyReadyStates = 'ready' | 'error' | 'shutdown' | 'startup' | 'unknown';\n\nexport const useKlippyStateHandler = () => {\n\tconst { query, lastMessage } = useMoonraker({\n\t\tpassThroughUpdateMethods: ['notify_klippy_ready', 'notify_klippy_shutdown', 'notify_klippy_disconnected'],\n\t});\n\tconst [klippyReadyState, setKlippyReadyState] = useState<KlippyReadyStates>('unknown');\n\n\tconst queryKlippyState = useCallback(async () => {\n\t\tif (query != null) {\n\t\t\ttry {\n\t\t\t\tconst serverInfo = await query('server.info');\n\t\t\t\tif (serverInfo?.klippy_state == null) return;\n\t\t\t\tconst klippyState: KlippyReadyStates = serverInfo.klippy_state;\n\t\t\t\tsetKlippyReadyState(klippyState);\n\t\t\t\tif (klippyState === 'startup') {\n\t\t\t\t\t// Query for server info in two seconds as instructed by the moonraker docs.\n\t\t\t\t\t// Seems unnecessary with globally published events?\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tqueryKlippyState();\n\t\t\t\t\t}, 2000);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tsetKlippyReadyState('unknown');\n\t\t\t}\n\t\t}\n\t}, [query, setKlippyReadyState]);\n\n\tuseEffect(() => {\n\t\tif (query != null) {\n\t\t\tqueryKlippyState();\n\t\t}\n\t}, [query, queryKlippyState]);\n\n\tuseEffect(() => {\n\t\tif (lastMessage && 'method' in lastMessage && lastMessage.method === 'notify_klippy_ready') {\n\t\t\tsetKlippyReadyState('ready');\n\t\t}\n\t\tif (lastMessage && 'method' in lastMessage && lastMessage.method === 'notify_klippy_shutdown') {\n\t\t\tsetKlippyReadyState('shutdown');\n\t\t}\n\t\tif (lastMessage && 'method' in lastMessage && lastMessage.method === 'notify_klippy_disconnected') {\n\t\t\tsetKlippyReadyState('unknown');\n\t\t\tqueryKlippyState();\n\t\t}\n\t}, [lastMessage, queryKlippyState, setKlippyReadyState]);\n\n\treturn klippyReadyState;\n};\n","import { ToolheadHelper } from '@/helpers/toolhead';\nimport { deserializeStepper } from '@/utils/serialization';\nimport { useRecoilCallback, useRecoilValue } from 'recoil';\nimport { useMemo, useRef, useState } from 'react';\nimport { PrinterRailState } from '@/recoil/printer';\nimport { PrinterAxis } from '@/zods/motion';\nimport { LoadablePrinterToolheadsState, PrinterToolheadState, PrinterToolheadsState } from '@/recoil/toolhead';\nimport { BaseToolheadConfiguration, ToolheadConfiguration, ToolNumber, ToolOrAxis } from '@/zods/toolhead';\nimport { defaultXEndstop } from '@/data/endstops';\nimport { hotendFanOptions, partFanOptions } from '@/data/fans';\n\nexport const useToolhead = (toolOrAxis: ToolOrAxis | PrinterAxis | undefined) => {\n\tconst toolheadConfigs = useRecoilValue(PrinterToolheadsState);\n\tconst toolhead = useMemo(() => {\n\t\tif (toolOrAxis == null) {\n\t\t\treturn null;\n\t\t}\n\t\tconst toolheads = toolheadConfigs?.filter(Boolean).map((th) => new ToolheadHelper(th));\n\t\tconst th = toolheads?.find(\n\t\t\t(th) => th.getTool() === toolOrAxis || th.getMotionAxis() === toolOrAxis || th.getExtruderAxis() === toolOrAxis,\n\t\t);\n\t\treturn th;\n\t}, [toolOrAxis, toolheadConfigs]);\n\treturn toolhead;\n};\n\nexport const useToolheads = () => {\n\tconst toolheadConfigs = useRecoilValue(PrinterToolheadsState);\n\tconst toolheads = useMemo(() => {\n\t\treturn toolheadConfigs?.filter(Boolean).map((th) => new ToolheadHelper(th));\n\t}, [toolheadConfigs]);\n\treturn toolheads;\n};\n\ntype MaybeToolhead<T extends boolean> = T extends true ? ToolheadHelper<any> : ToolheadHelper<any> | null;\n\nexport const useToolheadConfiguration = <T extends boolean = true>(\n\ttoolOrAxis: ToolOrAxis | PrinterAxis | undefined,\n\terrorIfNotExist: T = true as T,\n) => {\n\tconst toolheadConfigs = useRecoilValue(LoadablePrinterToolheadsState);\n\tconst toolheadConfigsRef = useRef(toolheadConfigs);\n\tif (toolheadConfigsRef.current !== toolheadConfigs && toolheadConfigs.length > 0) {\n\t\ttoolheadConfigsRef.current = toolheadConfigs.slice();\n\t}\n\tconst toolhead = useMemo(() => {\n\t\tconst toolheads = toolheadConfigsRef.current?.filter(Boolean).map((th) => new ToolheadHelper(th));\n\t\tconst th = toolheads?.find(\n\t\t\t(th) => th.getTool() === toolOrAxis || th.getMotionAxis() === toolOrAxis || th.getExtruderAxis() === toolOrAxis,\n\t\t);\n\t\tif (th == null && errorIfNotExist) {\n\t\t\tthrow new Error(`Toolhead with number or axis ${toolOrAxis} not found`);\n\t\t}\n\t\treturn th ?? null;\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [errorIfNotExist, toolOrAxis, toolheadConfigsRef.current]);\n\tconst [hasManuallySelectedThermistor, setHasManuallySelectedThermistor] = useState(false);\n\n\tconst setToolhead = useRecoilCallback(\n\t\t({ set, snapshot }) =>\n\t\t\tasync (th: ToolheadConfiguration<any>) => {\n\t\t\t\tconst helper = new ToolheadHelper(th);\n\t\t\t\tconst currentConfig = await snapshot.getPromise(PrinterToolheadState(helper.getTool()));\n\t\t\t\tif (currentConfig == null) {\n\t\t\t\t\tthrow new Error(`Toolhead ${helper.getToolCommand()} not found`);\n\t\t\t\t}\n\t\t\t\tconst current = new ToolheadHelper(currentConfig);\n\t\t\t\tif (th.extruder.id != current.getExtruder().id) {\n\t\t\t\t\tif (th.extruder.stepper != null) {\n\t\t\t\t\t\tconst stepper = deserializeStepper(th.extruder.stepper);\n\t\t\t\t\t\tif (stepper != null) {\n\t\t\t\t\t\t\tset(PrinterRailState(helper.getExtruderAxis()), (rail) => {\n\t\t\t\t\t\t\t\treturn rail == null\n\t\t\t\t\t\t\t\t\t? null\n\t\t\t\t\t\t\t\t\t: {\n\t\t\t\t\t\t\t\t\t\t\t...rail,\n\t\t\t\t\t\t\t\t\t\t\tstepper: stepper.id,\n\t\t\t\t\t\t\t\t\t\t\tcurrent: th.extruder.current ?? stepper.maxPeakCurrent * 0.71,\n\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (th.toolboard?.id !== current.getToolboard()?.id) {\n\t\t\t\t\t// Reset toolboard dependent options\n\t\t\t\t\tif (th.toolboard == null && th.xEndstop.id === 'endstop-toolboard') {\n\t\t\t\t\t\tth.xEndstop = defaultXEndstop;\n\t\t\t\t\t}\n\t\t\t\t\tif (th.partFan?.id.endsWith('-toolboard')) {\n\t\t\t\t\t\tconst newFan = partFanOptions(null, th).shift();\n\t\t\t\t\t\tif (newFan == null) {\n\t\t\t\t\t\t\tthrow new Error(`No part fan options available for current T${th.toolNumber} configuration`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tth.partFan = newFan;\n\t\t\t\t\t}\n\t\t\t\t\tif (th.hotendFan?.id.endsWith('-toolboard')) {\n\t\t\t\t\t\tconst newFan = hotendFanOptions(null, th).shift();\n\t\t\t\t\t\tif (newFan == null) {\n\t\t\t\t\t\t\tthrow new Error(`No hotend fan options available for current T${th.toolNumber} configuration`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tth.hotendFan = newFan;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (th.thermistor !== current.getThermistor() && th.thermistor !== th.hotend.thermistor) {\n\t\t\t\t\tsetHasManuallySelectedThermistor(true);\n\t\t\t\t} else if (th.hotend.id != current.getHotend().id && !hasManuallySelectedThermistor) {\n\t\t\t\t\tth.thermistor = th.hotend.thermistor;\n\t\t\t\t}\n\t\t\t\tconst val = BaseToolheadConfiguration.extend({ toolNumber: ToolNumber })\n\t\t\t\t\t.nullable()\n\t\t\t\t\t.safeParse({ ...th, toolNumber: current.getTool() });\n\t\t\t\tif (val.success) {\n\t\t\t\t\tset(PrinterToolheadState(current.getTool()), val.data);\n\t\t\t\t}\n\t\t\t\treturn val;\n\t\t\t},\n\t\t[hasManuallySelectedThermistor],\n\t);\n\treturn {\n\t\ttoolhead: toolhead as MaybeToolhead<T>,\n\t\tsetToolhead,\n\t};\n};\n","import { z } from 'zod';\nimport { KlipperAccelSensorNameSchame } from '@/zods/hardware';\n\nexport const aDXL345ResponseHeaderSchema = z.union([\n\tz.literal('time'),\n\tz.literal('x_acceleration'),\n\tz.literal('y_acceleration'),\n\tz.literal('z_acceleration'),\n]);\n\nexport const klipperADXL345SubscriptionResponseSchema = z.object({\n\theader: z.tuple([\n\t\taDXL345ResponseHeaderSchema,\n\t\taDXL345ResponseHeaderSchema,\n\t\taDXL345ResponseHeaderSchema,\n\t\taDXL345ResponseHeaderSchema,\n\t]),\n});\n\nexport const klipperADXL345SubscriptionDataSchema = z.object({\n\tdata: z.array(z.tuple([z.number(), z.number(), z.number(), z.number()])),\n\toverflows: z.number().optional(),\n});\n\nexport const psdSchema = z.object({\n\tfrequencies: z.array(z.number()),\n\testimates: z.array(z.number()),\n\tpowerRange: z.object({\n\t\tmax: z.number(),\n\t\tmin: z.number(),\n\t}),\n});\n\nexport const accumulatedPSDSchema = z.object({\n\tx: psdSchema,\n\ty: psdSchema,\n\tz: psdSchema,\n\ttotal: psdSchema,\n\tsource: z.object({\n\t\tx: z.array(psdSchema),\n\t\ty: z.array(psdSchema),\n\t\tz: z.array(psdSchema),\n\t\ttotal: z.array(psdSchema),\n\t}),\n});\n\n// Macro data structure\nexport const macroIDSchema = z.string().brand('MacroID');\n\nexport const macroSequenceIDSchema = z.string().brand('MacroSequenceID');\n\nexport const macroRecordingIdSchema = z.string().brand('MacroRecordingID');\n\nexport const macroRecordingRunIdSchema = z.string().brand('MacroRecordingRunID');\n\nexport const macroRecordingSettingsSchema = z\n\t.object({\n\t\tcapturePSD: z.boolean().default(false),\n\t\taccelerometer: KlipperAccelSensorNameSchame.optional(),\n\t\tcolor: z.string().optional(),\n\t})\n\t.superRefine((val, ctx) => {\n\t\tif (val.capturePSD && val.accelerometer == null) {\n\t\t\tctx.addIssue({\n\t\t\t\tcode: z.ZodIssueCode.custom,\n\t\t\t\tmessage: 'Required when recording resonance data',\n\t\t\t\tpath: ['accelerometer'],\n\t\t\t});\n\t\t}\n\t\treturn val;\n\t});\n\nexport const macroRecordingSchema = z.object({\n\tid: macroRecordingIdSchema,\n\tmacroRecordingRunId: macroRecordingRunIdSchema,\n\tmacroId: macroIDSchema,\n\tsequenceId: macroSequenceIDSchema,\n\tstartTimeStamp: z.number(),\n\tendTimeStamp: z.number(),\n\taccelerometer: KlipperAccelSensorNameSchame,\n\trecordingHardwareName: z.string(),\n\tpsd: accumulatedPSDSchema,\n\tname: z.string(),\n});\n\nexport const macroRecordingSchemaWithoutSourcePSDs = macroRecordingSchema.extend({\n\tpsd: accumulatedPSDSchema.omit({ source: true }),\n});\n\nexport const macroSequenceSchema = z.object({\n\tid: macroSequenceIDSchema,\n\tname: z.string(),\n\trecording: macroRecordingSettingsSchema.nullable(),\n\tgcode: z.string().min(2),\n});\n\nexport const macroSchema = z.object({\n\tid: macroIDSchema,\n\tname: z.string(),\n\tdescription: z.string(),\n\tcreatedAtTimeStamp: z.number(),\n\tupdatedAtTimeStamp: z.number().nullable(),\n\trecordingCount: z.record(macroSequenceIDSchema, z.number()),\n\tsequences: z.array(macroSequenceSchema),\n});\n\nexport const createMacroSchema = macroSchema.omit({\n\trecordingCount: true,\n\tcreatedAtTimeStamp: true,\n\tupdatedAtTimeStamp: true,\n});\n\n// inferred types:\n\nexport type KlipperAccelResponseHeader = z.infer<typeof aDXL345ResponseHeaderSchema>;\n\nexport type KlipperAccelSubscriptionResponse = z.infer<typeof klipperADXL345SubscriptionResponseSchema>;\n\nexport type KlipperAccelSubscriptionData = z.infer<typeof klipperADXL345SubscriptionDataSchema>;\n\nexport type PSD = z.infer<typeof psdSchema>;\n\nexport type AccumulatedPSD = z.infer<typeof accumulatedPSDSchema>;\n\nexport type MacroID = z.infer<typeof macroIDSchema>;\n\nexport type MacroRecordingSettings = z.infer<typeof macroRecordingSettingsSchema>;\n\nexport type MacroRecording = z.infer<typeof macroRecordingSchema>;\n\nexport type MacroRecordingWithoutSourcePSDs = z.infer<typeof macroRecordingSchemaWithoutSourcePSDs>;\n\nexport type MacroSequence = z.infer<typeof macroSequenceSchema>;\n\nexport type Macro = z.infer<typeof macroSchema>;\n"],"names":["tailwind_config","darkMode","content","theme","container","center","padding","screens","extend","fontFamily","sans","defaultTheme","keyframes","ping","opacity","transform","from","height","to","animation","colors","brand","border","input","ring","background","foreground","primary","DEFAULT","secondary","destructive","muted","accent","popover","card","borderRadius","lg","md","sm","fontSize","s","containers","plugins","require","nocompatible","param","addBase","Object","fromEntries","entries","flattenColorPalette","map","key","val","parsed","convert","hsl","concat","startsWith","matchUtilities","backgroundImage","svgToDataUri","value","values","type","fullConfig","resolveConfig","tailwindConfig","twColors","shadableTWColors","keys","filter","twColor","color","c","ChartTheme","SciChartJSDarkv2Theme","constructor","sciChartBackground","loadingAnimationBackground","axisBandsFill","majorGridLineBrush","minorGridLineBrush","strokePalette","fillPalette","isLightBackground","ADXL_STREAM_BUFFER_SIZE","SciChartSurface","configure","wasmUrl","dataUrl","UseCommunityLicense","SIGNAL_CHART_AXIS_SIGNAL_ID","SIGNAL_CHART_AXIS_HISTORY_ID","SIGNAL_CHART_AXIS_AMPLITUDE_ID","isXyyDataSeries","ds","EDataSeriesType","Xyy","isXyDataSeries","Xy","getAxisColorName","axis","getAxisColor","NumberRange","useADXLSignalChart","useChart","useCallback","xAxis","CategoryAxis","surface","webAssemblyContext2D","id","autoRange","EAutoRange","Always","maxAutoTicks","drawLabels","drawMinorTickLines","drawMajorTickLines","drawMajorBands","drawMinorGridLines","drawMajorGridLines","xAxes","add","xHistoryAxis","yAxis","NumericAxis","Never","visibleRange","axisAlignment","EAxisAlignment","Left","yAxes","signalData","XyDataSeries","fifoCapacity","containsNaN","isSorted","dataSeriesName","toLocaleUpperCase","dataIsSortedInX","xValues","Array","fill","_","i","yValues","signalSeries","FastLineRenderableSeries","xAxisId","yAxisId","stroke","strokeThickness","dataSeries","effect","GlowEffect","intensity","range","renderableSeries","historyData","historySeries","WaveAnimation","duration","PSD_CHART_AXIS_AMPLITUDE_ID","PSDChartMinimumYVisibleRange","PSDChartNoSeriesDefinition","Thickness","fromNumber","EAxisType","options","labelStyle","inter","fontWeight","labelPostfix","minorsPerMajor","growBy","labelFormat","ENumericFormat","Exponential","autoRangeAnimation","animateInitialRanging","animateSubsequentRanging","easing","inOutCubic","axisTitleStyle","PSDChartDefinition","series","ESeriesType","MountainSeries","xyData","Math","floor","LineSeries","getPSDTooltipLegendTemplate","seriesInfos","svgAnnotation","outputSvgString","y","valuesWithLabels","forEach","seriesInfo","index","textColor","rolloverModifierProps","tooltipColor","push","separator","tooltipTitle","yValue","toFixed","formattedXValue","dataSeriesType","rolloverModifierProps1","si","y1Value","abs","width","length","calcTooltipWidth","reduce","prev","cur","psdRolloverTooltipTemplate","rolloverTooltip","valuesBlock","tooltipProps","tooltipTextColor","tooltipBorderColor","parseColorToTArgb","tooltipBGColor","tooltipLabelX","tooltipLabelY","shadowColor","round","tooltipDataTemplate","rolloverModifier","calcTooltipHeight","updateSize","blur","undefined","shadowRGBA","red","green","blue","parseTArgbToHtmlColor","usePSDChart","xAnimationSeries","addDeletable","yAnimationSeries","zAnimationSeries","totalAnimationSeries","asArray","rs","paletteProvider","PaletteFactory","createGradient","GradientParams","Point","offset","enableStroke","enableFill","fillOpacity","pointMarkerOpacity","tooltipTemplate","substring","toUpperCase","chartModifiers","CursorModifier","crosshairStroke","sky","crosshairStrokeThickness","showXLine","showYLine","showTooltip","tooltipLegendTemplate","tooltipLegendOffsetX","tooltipLegendOffsetY","axisLabelFill","zinc","axisLabelStroke","animationSeries","x","z","total","textLength","charWidth","lines","lineHeight","getWsURL","host","getHost","trim","REQ_ID","isSuccessResponse","res","useAccelerometerWithType","controlBoard","useRecoilValue","ControlboardState","toolheads","useToolheads","accelType","accelerometerName","ADXL345SPI","LIS2DW","toolboard","find","t","getToolboardName","getToolboard","useMemo","klipperAccelSensorSchema","parse","name","useRealtimeSensor","wsUrl","setWsUrl","useState","inFlightRequests","useRef","inFlightRequestTimeouts","isSubscribed","setIsSubscribed","onSubscriptionFailure","onDataUpdate","sensor","enabled","onSubscriptionSuccess","parsedSensor","isSubscribedRef","current","kippyState","useKlippyStateHandler","useEffect","lastJsonMessage","sendJsonMessage","readyState","useWebSocket","shouldReconnect","onMessage","JSON","message","data","params","klipperADXL345SubscriptionDataSchema","getLogger","error","e","console","warn","reconnectAttempts","Infinity","reconnectInterval","share","subscribe","Promise","resolve","reject","err","result","window","setTimeout","jsonrpc","method","response_template","then","klipperADXL345SubscriptionResponseSchema","info","header","catch","toast","description","clearTimeout","reqId","definition","initializer","indent","isInitialized","setIsInitialized","forwardProps","initChart","rootElement","chart","orgPadding","def","top","right","bottom","left","build2DChart","create","sciChartSurface","watermarkPosition","EWatermarkPosition","BottomLeft","watermarkRelativeToCanvas","onInit","style","marginLeft","fallback","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsx","FullLoadScreen","className","twJoin","defaultAxisMap","useADXLFifoTensor","dataHeader","buffer","sampleRate","dropped","setDropped","take","max","min","count","shape","out","keep","split","dispose","axisMap","findIndex","v","onData","incoming","gather","status","newBuffer","concat2d","debug","drop","useBufferedADXLSignal","fifoTensor","updateFn","lastUpdate","Date","getTime","update","tick","sinceLast","samples","ceil","toTake","time","reshape","useBufferedPSD","xref","tensor1d","yref","zref","isDetrended","rate","newX","newY","newZ","xData","clone","yData","zData","totalData","addN","xpsd","ypsd","zpsd","all","powerSpectralDensity","totalpsd","sumPSDs","useAccumulatedPSD","isAccumulating","setIsAccumulating","psds","start","stop","old","welch","source","newTotal","startAccumulation","stopAccumulation","useTicker","tickOrTargetFps","fnRef","interval","DEFAULT_FPS","isEnabled","maximumRangeUnion","isArray","getMaximumRange","union","visibleRangeUnion","growByUnion","useDynamicAxisRange","minimum","maxRef","lastChange","dataRange","axes","sinceLastUpdate","sinceLastChange","newMax","newMin","a","animateVisibleRange","inOutCirc","detrendSignal","tidy","sub","signal","mean","fftSize","_scaling","assign","log2","scaling_factor","win","tfSignal","hannWindow","klipScale","div","sum","pow","array","detrended","setBackend","f","stft","powers","frequencies","maxPower","minPower","fftRatio","frequency","nextFrequency","power","estimates","powerRange","PSDs","num_estimates","avg","p","acc","psd","props","Spinner","NoSSR","isClient","useIsClient","DynamicImport","children","lazy","default","Fragment","jsxs","svg","twMerge","noMargin","xmlns","viewBox","circle","cx","cy","r","strokeWidth","path","d","xEndstopOptions","config","toolheadConfig","endstops","title","badge","toolNumber","PrinterAxis","controlboard","defaultXEndstop","setIsClient","query","lastMessage","useMoonraker","passThroughUpdateMethods","klippyReadyState","setKlippyReadyState","queryKlippyState","serverInfo","klippy_state","klippyState","toolheadConfigs","PrinterToolheadsState","Boolean","ToolheadHelper","th","useToolheadConfiguration","toolOrAxis","errorIfNotExist","LoadablePrinterToolheadsState","toolheadConfigsRef","slice","toolhead","getTool","getMotionAxis","getExtruderAxis","hasManuallySelectedThermistor","setHasManuallySelectedThermistor","setToolhead","useRecoilCallback","set","snapshot","helper","currentConfig","getPromise","PrinterToolheadState","getToolCommand","extruder","getExtruder","stepper","deserializeStepper","PrinterRailState","rail","maxPeakCurrent","xEndstop","partFan","endsWith","newFan","partFanOptions","shift","hotendFan","hotendFanOptions","thermistor","getThermistor","hotend","getHotend","BaseToolheadConfiguration","ToolNumber","nullable","safeParse","success","aDXL345ResponseHeaderSchema","literal","object","tuple","number","overflows","optional","psdSchema","accumulatedPSDSchema","macroIDSchema","string","macroSequenceIDSchema","macroRecordingIdSchema","macroRecordingRunIdSchema","macroRecordingSettingsSchema","capturePSD","boolean","accelerometer","KlipperAccelSensorNameSchame","superRefine","ctx","addIssue","code","ZodIssueCode","custom","macroRecordingSchema","macroRecordingRunId","macroId","sequenceId","startTimeStamp","endTimeStamp","recordingHardwareName","omit","macroSequenceSchema","recording","gcode","macroSchema","createdAtTimeStamp","updatedAtTimeStamp","recordingCount","record","sequences","createMacroSchema"],"sourceRoot":""}