{"version":3,"file":"static/chunks/7705-a0dd7e8359f12b55.js","mappings":"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","sources":["webpack://_N_E/ignored|/home/runner/work/RatOS-configurator/RatOS-configurator/src/node_modules/.pnpm/pump@3.0.0/node_modules/pump|fs","webpack://_N_E/./helpers/logger.ts","webpack://_N_E/./zods/util.tsx","webpack://_N_E/./app/_helpers/logger.ts","webpack://_N_E/./components/common/badge.tsx","webpack://_N_E/./components/sync-with-moonraker.tsx","webpack://_N_E/./data/drivers.ts","webpack://_N_E/./components/ui/typography.tsx","webpack://_N_E/./data/fans.tsx","webpack://_N_E/./data/nozzles.ts","webpack://_N_E/./data/steppers.ts","webpack://_N_E/./helpers/toolhead.ts","webpack://_N_E/./helpers/trpc.ts","webpack://_N_E/./helpers/utils.ts","webpack://_N_E/./recoil/printer.ts","webpack://_N_E/./recoil/toolhead.ts","webpack://_N_E/./utils/serialization.ts","webpack://_N_E/./zods/boards.tsx","webpack://_N_E/./zods/hardware.tsx","webpack://_N_E/./zods/motion.tsx","webpack://_N_E/./zods/printer-configuration.tsx","webpack://_N_E/./zods/printer.tsx","webpack://_N_E/./zods/toolhead.tsx","webpack://_N_E/./env/schema.mjs","webpack://_N_E/<anon>"],"sourcesContent":["/* (ignored) */","import { LoggerOptions } from 'pino';\n\nexport const globalPinoOpts: LoggerOptions = {\n\ttimestamp: true,\n};\n","import { z } from 'zod';\n\nexport const PinoLogLevel = z.enum(['trace', 'debug', 'info', 'warn', 'error', 'fatal']);\n\nexport const PinoLogEvent = z.object({\n\tts: z.number(),\n\tmessages: z.array(z.any()),\n\tbindings: z.array(z.record(z.string(), z.any())),\n\tlevel: z.object({\n\t\tlabel: PinoLogLevel,\n\t\tvalue: z.number(),\n\t}),\n});\n","import pino from 'pino';\nimport { globalPinoOpts } from '@/helpers/logger';\nimport { trpcClient } from '@/helpers/trpc';\nimport { PinoLogEvent } from '@/zods/util';\nimport { write } from 'pino-pretty-browser';\n\nconst send = async function (level: pino.Level, logEvent: pino.LogEvent) {\n\ttrpcClient.clientLog.mutate({ level, logEvent: PinoLogEvent.parse(logEvent) });\n};\n\nlet logger: pino.Logger | null = null;\nexport const getLogger = () => {\n\tif (logger != null) {\n\t\treturn logger;\n\t}\n\tlogger = pino({\n\t\t...globalPinoOpts,\n\t\tbrowser: {\n\t\t\tasObject: true,\n\t\t\tserialize: true,\n\t\t\ttransmit: {\n\t\t\t\tsend,\n\t\t\t},\n\t\t\twrite: write,\n\t\t},\n\t});\n\treturn logger;\n};\n","import { VariantProps, cva } from 'class-variance-authority';\nimport { twMerge } from 'tailwind-merge';\nimport { z } from 'zod';\n\nexport const badgeColorOptions = z.union([\n\tz.literal('rose'),\n\tz.literal('red'),\n\tz.literal('yellow'),\n\tz.literal('orange'),\n\tz.literal('green'),\n\tz.literal('lime'),\n\tz.literal('blue'),\n\tz.literal('sky'),\n\tz.literal('indigo'),\n\tz.literal('purple'),\n\tz.literal('pink'),\n\tz.literal('brand'),\n\tz.literal('gray'),\n\tz.literal('plain'),\n]);\nexport const badgeTextColorStyle = cva('', {\n\tvariants: {\n\t\tcolor: {\n\t\t\trose: 'text-rose-700 dark:text-rose-400',\n\t\t\tred: 'text-red-700 dark:text-red-400',\n\t\t\tyellow: 'text-yellow-800 dark:text-yellow-500',\n\t\t\torange: 'text-orange-800 dark:text-orange-500',\n\t\t\tgreen: 'text-green-700 dark:text-green-400',\n\t\t\tlime: 'text-lime-700 dark:text-lime-400',\n\t\t\tblue: 'text-blue-700 dark:text-blue-400',\n\t\t\tsky: 'text-sky-700 dark:text-sky-400',\n\t\t\tindigo: 'text-indigo-700 dark:text-indigo-400',\n\t\t\tpurple: 'text-purple-700 dark:text-purple-400',\n\t\t\tpink: 'text-pink-700 dark:text-pink-400',\n\t\t\tbrand: 'text-brand-700 dark:text-brand-400',\n\t\t\tgray: 'text-zinc-600 dark:text-zinc-400',\n\t\t\tplain: 'text-zinc-900 dark:text-zinc-100',\n\t\t} satisfies { [key in z.infer<typeof badgeColorOptions>]: string },\n\t},\n});\n\nexport const badgeBackgroundColorStyle = cva('', {\n\tvariants: {\n\t\tcolor: {\n\t\t\trose: 'bg-rose-50 dark:bg-rose-400/10',\n\t\t\tred: 'bg-red-50 dark:bg-red-400/10',\n\t\t\tyellow: 'bg-yellow-50 dark:bg-yellow-400/10',\n\t\t\torange: 'bg-orange-50 dark:bg-orange-400/10',\n\t\t\tgreen: 'bg-green-50 dark:bg-green-500/10',\n\t\t\tlime: 'bg-lime-50 dark:bg-lime-500/10',\n\t\t\tblue: 'bg-blue-50 dark:bg-blue-400/10',\n\t\t\tsky: 'bg-sky-50 dark:bg-sky-400/10',\n\t\t\tindigo: 'bg-indigo-50 dark:bg-indigo-400/10',\n\t\t\tpurple: 'bg-purple-50 dark:bg-purple-400/10',\n\t\t\tpink: 'bg-pink-50 dark:bg-pink-400/10',\n\t\t\tbrand: 'bg-brand-100 dark:bg-brand-400/10',\n\t\t\tgray: 'bg-zinc-50 dark:bg-zinc-400/10',\n\t\t\tplain: 'bg-zinc-900/10 dark:bg-zinc-100/10',\n\t\t} satisfies { [key in z.infer<typeof badgeColorOptions>]: string },\n\t},\n});\n\nexport const badgeBorderColorStyle = cva('', {\n\tvariants: {\n\t\tcolor: {\n\t\t\trose: 'border-rose-600/10 dark:border-rose-400/20 ring-rose-600/10 dark:ring-rose-400/20',\n\t\t\tred: 'border-red-600/10 dark:border-red-400/20 ring-red-600/10 dark:ring-red-400/20',\n\t\t\tyellow: 'border-yellow-600/20 dark:border-yellow-400/20 ring-yellow-600/20 dark:ring-yellow-400/20',\n\t\t\torange: 'border-orange-600/20 dark:border-orange-400/20 ring-orange-600/20 dark:ring-orange-400/20',\n\t\t\tgreen: 'border-green-600/20 dark:border-green-500/20 ring-green-600/20 dark:ring-green-500/20',\n\t\t\tlime: 'border-lime-600/20 dark:border-lime-500/20 ring-lime-600/20 dark:ring-lime-500/20',\n\t\t\tblue: 'border-blue-700/10 dark:border-blue-400/30 ring-blue-700/10 dark:ring-blue-400/30',\n\t\t\tsky: 'border-sky-700/10 dark:border-sky-400/30 ring-sky-700/10 dark:ring-sky-400/30',\n\t\t\tindigo: 'border-indigo-700/10 dark:border-indigo-400/30 ring-indigo-700/10 dark:ring-indigo-400/30',\n\t\t\tpurple: 'border-purple-700/10 dark:border-purple-400/30 ring-purple-700/10 dark:ring-purple-400/30',\n\t\t\tpink: 'border-pink-700/10 dark:border-pink-400/20 ring-pink-700/10 dark:ring-pink-400/20',\n\t\t\tbrand: 'border-brand-600/40 dark:border-brand-400/30 ring-brand-600/40 dark:ring-brand-400/30',\n\t\t\tgray: 'border-zinc-500/10 dark:border-zinc-400/20 ring-zinc-500/10 dark:ring-zinc-400/20',\n\t\t\tplain: 'border-zinc-900 dark:border-zinc-100 ring-zinc-900 dark:ring-zinc-100',\n\t\t} satisfies { [key in z.infer<typeof badgeColorOptions>]: string },\n\t},\n});\n\nconst badgeStyle = cva('flex-0 inline-flex w-auto items-center rounded-md font-medium ring-1 ring-inset', {\n\tvariants: {\n\t\tsize: {\n\t\t\tsm: 'px-1.5 gap-1.5 py-1 text-2xs leading-3',\n\t\t\tmd: 'px-2 gap-2 py-1 text-xs leading-4',\n\t\t\tlg: 'px-2 gap-2 py-1 text-xs leading-6',\n\t\t},\n\t\tcolor: {\n\t\t\trose: [\n\t\t\t\tbadgeBackgroundColorStyle({ color: 'rose' }),\n\t\t\t\tbadgeBorderColorStyle({ color: 'rose' }),\n\t\t\t\tbadgeTextColorStyle({ color: 'rose' }),\n\t\t\t],\n\t\t\tred: [\n\t\t\t\tbadgeBackgroundColorStyle({ color: 'red' }),\n\t\t\t\tbadgeBorderColorStyle({ color: 'red' }),\n\t\t\t\tbadgeTextColorStyle({ color: 'red' }),\n\t\t\t],\n\t\t\tyellow: [\n\t\t\t\tbadgeBackgroundColorStyle({ color: 'yellow' }),\n\t\t\t\tbadgeBorderColorStyle({ color: 'yellow' }),\n\t\t\t\tbadgeTextColorStyle({ color: 'yellow' }),\n\t\t\t],\n\t\t\torange: [\n\t\t\t\tbadgeBackgroundColorStyle({ color: 'orange' }),\n\t\t\t\tbadgeBorderColorStyle({ color: 'orange' }),\n\t\t\t\tbadgeTextColorStyle({ color: 'orange' }),\n\t\t\t],\n\t\t\tgreen: [\n\t\t\t\tbadgeBackgroundColorStyle({ color: 'green' }),\n\t\t\t\tbadgeBorderColorStyle({ color: 'green' }),\n\t\t\t\tbadgeTextColorStyle({ color: 'green' }),\n\t\t\t],\n\t\t\tlime: [\n\t\t\t\tbadgeBackgroundColorStyle({ color: 'lime' }),\n\t\t\t\tbadgeBorderColorStyle({ color: 'lime' }),\n\t\t\t\tbadgeTextColorStyle({ color: 'lime' }),\n\t\t\t],\n\t\t\tblue: [\n\t\t\t\tbadgeBackgroundColorStyle({ color: 'blue' }),\n\t\t\t\tbadgeBorderColorStyle({ color: 'blue' }),\n\t\t\t\tbadgeTextColorStyle({ color: 'blue' }),\n\t\t\t],\n\t\t\tsky: [\n\t\t\t\tbadgeBackgroundColorStyle({ color: 'sky' }),\n\t\t\t\tbadgeBorderColorStyle({ color: 'sky' }),\n\t\t\t\tbadgeTextColorStyle({ color: 'sky' }),\n\t\t\t],\n\t\t\tindigo: [\n\t\t\t\tbadgeBackgroundColorStyle({ color: 'indigo' }),\n\t\t\t\tbadgeBorderColorStyle({ color: 'indigo' }),\n\t\t\t\tbadgeTextColorStyle({ color: 'indigo' }),\n\t\t\t],\n\t\t\tpurple: [\n\t\t\t\tbadgeBackgroundColorStyle({ color: 'purple' }),\n\t\t\t\tbadgeBorderColorStyle({ color: 'purple' }),\n\t\t\t\tbadgeTextColorStyle({ color: 'purple' }),\n\t\t\t],\n\t\t\tpink: [\n\t\t\t\tbadgeBackgroundColorStyle({ color: 'pink' }),\n\t\t\t\tbadgeBorderColorStyle({ color: 'pink' }),\n\t\t\t\tbadgeTextColorStyle({ color: 'pink' }),\n\t\t\t],\n\t\t\tbrand: [\n\t\t\t\tbadgeBackgroundColorStyle({ color: 'brand' }),\n\t\t\t\tbadgeBorderColorStyle({ color: 'brand' }),\n\t\t\t\tbadgeTextColorStyle({ color: 'brand' }),\n\t\t\t],\n\t\t\tgray: [\n\t\t\t\tbadgeBackgroundColorStyle({ color: 'gray' }),\n\t\t\t\tbadgeBorderColorStyle({ color: 'gray' }),\n\t\t\t\tbadgeTextColorStyle({ color: 'gray' }),\n\t\t\t],\n\t\t\tplain: [\n\t\t\t\tbadgeBackgroundColorStyle({ color: 'plain' }),\n\t\t\t\tbadgeBorderColorStyle({ color: 'plain' }),\n\t\t\t\tbadgeTextColorStyle({ color: 'plain' }),\n\t\t\t],\n\t\t} satisfies { [key in z.infer<typeof badgeColorOptions>]: string[] },\n\t},\n\tdefaultVariants: {\n\t\tsize: 'md',\n\t\tcolor: 'gray',\n\t},\n});\n\nexport type BadgeProps = JSX.IntrinsicElements['span'] &\n\tVariantProps<typeof badgeStyle> & {\n\t\tchildren: React.ReactNode;\n\t\tclassName?: string;\n\t};\n\nexport const Badge: React.FC<BadgeProps> = (props) => {\n\tconst { size, color, className, children, ...forwardProps } = props;\n\treturn (\n\t\t<span className={twMerge(badgeStyle({ size, color }), className)} {...forwardProps}>\n\t\t\t{children}\n\t\t</span>\n\t);\n};\n","'use client';\n\nimport React, { useCallback, useEffect } from 'react';\nimport { useMoonraker } from '@/moonraker/hooks';\nimport { ReadItem, RecoilSync } from 'recoil-sync';\nimport { AtomEffect, DefaultValue } from 'recoil';\nimport { getLogger } from '@/app/_helpers/logger';\n\nconst moonrakerSyncEventEmitter = new EventTarget();\n\nexport const DispatchSaveAtomEvent = (itemKey: string, value: unknown) => {\n\tmoonrakerSyncEventEmitter.dispatchEvent(\n\t\tnew CustomEvent('saveAtom', {\n\t\t\tdetail: {\n\t\t\t\titemKey,\n\t\t\t\tvalue,\n\t\t\t},\n\t\t}) satisfies SaveAtomEvent,\n\t);\n};\n\nexport const moonrakerWriteEffect = <T extends any = unknown>(): AtomEffect<T> => {\n\treturn (params) => {\n\t\tparams.onSet((newValue) => {\n\t\t\tgetLogger().debug(\n\t\t\t\t{\n\t\t\t\t\tkey: params.node.key,\n\t\t\t\t\tvalue: newValue,\n\t\t\t\t},\n\t\t\t\t`RatOS Atom Sync Effect: new value was saved to moonraker \"${params.trigger}\"`,\n\t\t\t);\n\t\t\tDispatchSaveAtomEvent(params.node.key, newValue == null ? 'null' : newValue); // Moonraker doesn't save null values..\n\t\t});\n\t};\n};\n\ntype SaveAtomEvent = CustomEvent<{ itemKey: string; value: unknown }>;\n\nexport const SyncWithMoonraker: React.FC<React.PropsWithChildren> = ({ children }) => {\n\tconst moonraker = useMoonraker();\n\tconst read: ReadItem = useCallback(\n\t\tasync (itemKey) => {\n\t\t\tconst value = await moonraker.getItem('RatOS', itemKey as '__recoil');\n\t\t\treturn value != null && value != 'null' ? value : new DefaultValue();\n\t\t},\n\t\t[moonraker],\n\t);\n\n\tconst saveAtom = useCallback(\n\t\tasync (event: Event) => {\n\t\t\tconst { itemKey, value } = (event as SaveAtomEvent).detail;\n\t\t\tawait moonraker.saveItem('RatOS', itemKey as '__recoil', value);\n\t\t},\n\t\t[moonraker],\n\t);\n\n\tuseEffect(() => {\n\t\tmoonrakerSyncEventEmitter.addEventListener('saveAtom', saveAtom);\n\t\treturn () => {\n\t\t\tmoonrakerSyncEventEmitter.removeEventListener('saveAtom', saveAtom);\n\t\t};\n\t}, [saveAtom]);\n\treturn <RecoilSync read={read}>{children}</RecoilSync>;\n};\n","import { z } from 'zod';\nimport { Driver } from '@/zods/motion';\n\nexport const Drivers = z.array(Driver).parse([\n\t{\n\t\tid: 'LDO-TMC2209',\n\t\ttitle: 'TMC2209',\n\t\ttype: 'TMC2209',\n\t\tprotocol: 'UART',\n\t\tsenseResistor: 0.11,\n\t\tcoolingCurrentThreshold: 1.1,\n\t\tvoltages: [24],\n\t\tmaxCurrent: 2.0,\n\t},\n\t{\n\t\tid: 'BTT-TMC2209-13',\n\t\ttitle: 'BTT TMC2209 v1.3',\n\t\ttype: 'TMC2209',\n\t\tprotocol: 'UART',\n\t\tsenseResistor: 0.11,\n\t\tcoolingCurrentThreshold: 1.1,\n\t\tvoltages: [24],\n\t\tmaxCurrent: 2.0,\n\t},\n\t{\n\t\tid: 'BTT-TMC2226-10',\n\t\ttitle: 'BTT TMC2226 v1.0',\n\t\ttype: 'TMC2209',\n\t\tprotocol: 'UART',\n\t\tsenseResistor: 0.11,\n\t\tcoolingCurrentThreshold: 1.1,\n\t\tvoltages: [24],\n\t\tmaxCurrent: 2.0,\n\t},\n\t{\n\t\tid: 'BTT-TMC5160-PRO-11',\n\t\ttitle: 'BTT TMC5160(T) Pro v1.1',\n\t\ttype: 'TMC5160',\n\t\tprotocol: 'SPI',\n\t\tsenseResistor: 0.075,\n\t\tvoltages: [24, 36, 48, 56],\n\t\tmaxCurrent: 3,\n\t\tcoolingCurrentThreshold: 1.5,\n\t},\n\t{\n\t\tid: 'BTT-TMC5160T-PLUS-10',\n\t\ttitle: 'BTT TMC5160T Plus v1.0',\n\t\ttype: 'TMC5160',\n\t\tprotocol: 'SPI',\n\t\tsenseResistor: 0.022,\n\t\tvoltages: [24, 36, 48, 56, 60],\n\t\tmaxCurrent: 10.6,\n\t\tcoolingCurrentThreshold: 3,\n\t\texternal: true,\n\t},\n\t{\n\t\tid: 'BTT-EZ2209',\n\t\ttitle: 'BTT EZ2209',\n\t\ttype: 'TMC2209',\n\t\tprotocol: 'UART',\n\t\tsenseResistor: 0.11,\n\t\tcoolingCurrentThreshold: 1.3,\n\t\tvoltages: [24],\n\t\tmaxCurrent: 2.0,\n\t},\n\t{\n\t\tid: 'BTT-EZ2226',\n\t\ttitle: 'BTT EZ2226',\n\t\ttype: 'TMC2209',\n\t\tprotocol: 'UART',\n\t\tsenseResistor: 0.11,\n\t\tcoolingCurrentThreshold: 1.3,\n\t\tvoltages: [24],\n\t\tmaxCurrent: 2.0,\n\t},\n\t{\n\t\tid: 'BTT-EZ2130',\n\t\ttitle: 'BTT EZ2130',\n\t\ttype: 'TMC2130',\n\t\tprotocol: 'SPI',\n\t\tsenseResistor: 0.11,\n\t\tcoolingCurrentThreshold: 0.9,\n\t\tvoltages: [24],\n\t\tmaxCurrent: 2.0,\n\t},\n\t{\n\t\tid: 'BTT-EZ5160-PRO',\n\t\ttitle: 'BTT EZ5160 Pro',\n\t\ttype: 'TMC5160',\n\t\tprotocol: 'SPI',\n\t\tsenseResistor: 0.075,\n\t\tcoolingCurrentThreshold: 1.6,\n\t\tvoltages: [24, 36, 48],\n\t\tmaxCurrent: 2.5,\n\t},\n\t{\n\t\tid: 'BTT-EZ5160-RGB',\n\t\ttitle: 'BTT EZ5160 RGB',\n\t\ttype: 'TMC5160',\n\t\tprotocol: 'SPI',\n\t\tsenseResistor: 0.05,\n\t\tcoolingCurrentThreshold: 3,\n\t\tvoltages: [24, 48, 36, 56],\n\t\tmaxCurrent: 4.7,\n\t},\n\t{\n\t\tid: 'MELLOW-FLY-HV-TMC5160-PRO-12',\n\t\ttitle: 'Mellow FLY HV TMC5160 Pro v1.2',\n\t\ttype: 'TMC5160',\n\t\tprotocol: 'SPI',\n\t\tsenseResistor: 0.033,\n\t\tcoolingCurrentThreshold: 3,\n\t\tvoltages: [24, 36, 48],\n\t\tmaxCurrent: 4.25,\n\t\texternal: true,\n\t},\n\t{\n\t\tid: 'MELLOW-FLY-TMC2209',\n\t\ttitle: 'Mellow FLY TMC2209',\n\t\ttype: 'TMC2209',\n\t\tprotocol: 'UART',\n\t\tsenseResistor: 0.11,\n\t\tcoolingCurrentThreshold: 1.1,\n\t\tvoltages: [24],\n\t\tmaxCurrent: 2.0,\n\t},\n\t{\n\t\tid: 'PRUSA-EINSY-RAMBO-TMC2130',\n\t\ttitle: 'Prusa Einsy Rambo TMC2130',\n\t\ttype: 'TMC2130',\n\t\tprotocol: 'SPI',\n\t\tsenseResistor: 0.22,\n\t\tcoolingCurrentThreshold: 0.9,\n\t\tvoltages: [24],\n\t\tmaxCurrent: 2.0,\n\t},\n\t{\n\t\tid: 'PRUSA-BUDDY-TMC2209',\n\t\ttitle: 'Prusa Buddy TMC2209',\n\t\ttype: 'TMC2209',\n\t\tprotocol: 'UART',\n\t\tsenseResistor: 0.11,\n\t\tcoolingCurrentThreshold: 1.1,\n\t\tvoltages: [24],\n\t\tmaxCurrent: 2.0,\n\t},\n] satisfies z.input<typeof Driver>[]);\n","import { cn, setDisplayName } from '@/helpers/utils';\nimport React from 'react';\n\nexport const Strong = React.forwardRef<HTMLElement, JSX.IntrinsicElements['strong']>(({ className, ...props }, ref) => (\n\t<strong ref={ref} className={cn('font-semibold', className)} {...props} />\n));\nsetDisplayName(Strong, 'Strong');\n","import { z } from 'zod';\nimport { Fan } from '@/zods/hardware';\nimport { PrinterAxis } from '@/zods/motion';\nimport type { PartialPrinterConfiguration } from '@/zods/printer-configuration';\nimport type { PartialToolheadConfiguration } from '@/zods/toolhead';\nimport { Strong } from '@/components/ui/typography';\nimport React from 'react';\n\nexport const fanHelp = (\n\t<>\n\t\t<p>\n\t\t\t<Strong className=\"dark:text-sky-300/70\">Input Voltage PWM</Strong> is used on fans that have no dedicated pwm pin\n\t\t\t(2 and 3-pin fans).\n\t\t</p>\n\t\t<p>\n\t\t\t<Strong className=\"dark:text-sky-300/70\">Digital PWM</Strong> is used for fans that have a dedicated PWM signal\n\t\t\twire (requires a 4-pin fan).\n\t\t</p>\n\t</>\n);\n\nexport const partFanOptions = (\n\tconfig?: PartialPrinterConfiguration | null,\n\ttoolheadConfig?: (PartialToolheadConfiguration & { axis: null | PrinterAxis }) | null,\n): z.infer<typeof Fan>[] => {\n\tconst fans: z.infer<typeof Fan>[] = [];\n\tif (toolheadConfig == null || toolheadConfig?.axis === PrinterAxis.x || toolheadConfig?.axis === null) {\n\t\tfans.push({\n\t\t\tid: '2pin' as const,\n\t\t\ttitle: 'Input Voltage PWM',\n\t\t\tbadge: [{ color: 'purple', children: config?.controlboard?.name ?? 'Control Board' }],\n\t\t});\n\t\tfans.push({\n\t\t\tid: '4pin' as const,\n\t\t\ttitle: 'Digital PWM on 2-pin port',\n\t\t\tbadge: [{ color: 'purple', children: config?.controlboard?.name ?? 'Control Board' }],\n\t\t});\n\t}\n\tif (config?.controlboard?.fourPinFanConnectorCount != null && config.controlboard.fourPinFanConnectorCount > 0) {\n\t\tfans.push({\n\t\t\tid: '4pin-dedicated' as const,\n\t\t\ttitle: 'Digital PWM on 4-pin port',\n\t\t\tbadge: [{ color: 'purple', children: config.controlboard.name }],\n\t\t});\n\t}\n\tif (toolheadConfig?.toolboard != null) {\n\t\tfans.push({\n\t\t\tid: '2pin-toolboard' as const,\n\t\t\ttitle: 'Input Voltage PWM',\n\t\t\tbadge: [{ color: 'sky', children: `${toolheadConfig.toolboard.name} T${toolheadConfig.toolNumber}` }],\n\t\t});\n\t\tfans.push({\n\t\t\tid: '4pin-toolboard' as const,\n\t\t\ttitle: 'Digital PWM on 2-pin port',\n\t\t\tbadge: [{ color: 'sky', children: `${toolheadConfig.toolboard.name} T${toolheadConfig.toolNumber}` }],\n\t\t});\n\t\tif (\n\t\t\ttoolheadConfig?.toolboard.fourPinFanConnectorCount != null &&\n\t\t\ttoolheadConfig.toolboard.fourPinFanConnectorCount > 0\n\t\t) {\n\t\t\tfans.push({\n\t\t\t\tid: '4pin-dedicated-toolboard' as const,\n\t\t\t\ttitle: 'Digital PWM on 4-pin port',\n\t\t\t\tbadge: [{ color: 'sky', children: `${toolheadConfig.toolboard.name} T${toolheadConfig.toolNumber}` }],\n\t\t\t});\n\t\t}\n\t}\n\treturn fans;\n};\n\nexport const hotendFanOptions = (\n\tconfig?: z.infer<typeof PartialPrinterConfiguration> | null,\n\ttoolheadConfig?: (PartialToolheadConfiguration & { axis: null | PrinterAxis }) | null,\n): z.infer<typeof Fan>[] => {\n\tconst fans: z.infer<typeof Fan>[] = [];\n\tif (toolheadConfig == null || toolheadConfig?.axis === PrinterAxis.x) {\n\t\tfans.push({\n\t\t\tid: '2pin' as const,\n\t\t\ttitle: 'Input Voltage PWM',\n\t\t\tbadge: [{ color: 'purple', children: config?.controlboard?.name ?? 'Control Board' }],\n\t\t});\n\t\tfans.push({\n\t\t\tid: '4pin' as const,\n\t\t\ttitle: 'Digital PWM on 2-pin port',\n\t\t\tbadge: [{ color: 'purple', children: config?.controlboard?.name ?? 'Control Board' }],\n\t\t});\n\t}\n\tif (\n\t\t(config?.controlboard?.fourPinFanConnectorCount != null && config.controlboard.fourPinFanConnectorCount > 2) ||\n\t\t(config?.controlboard?.fourPinFanConnectorCount != null &&\n\t\t\tconfig.controlboard.fourPinFanConnectorCount > 1 &&\n\t\t\tconfig.controllerFan?.id !== '4pin-dedicated')\n\t) {\n\t\tfans.push({\n\t\t\tid: '4pin-dedicated' as const,\n\t\t\ttitle: 'Digital PWM on 4-pin port',\n\t\t\tbadge: [{ color: 'purple', children: config?.controlboard?.name ?? 'Control Board' }],\n\t\t});\n\t}\n\tif (toolheadConfig?.toolboard != null) {\n\t\tfans.push({\n\t\t\tid: '2pin-toolboard' as const,\n\t\t\ttitle: 'Input Voltage PWM',\n\t\t\tbadge: [{ color: 'sky', children: `${toolheadConfig.toolboard.name} T${toolheadConfig.toolNumber}` }],\n\t\t});\n\t\tfans.push({\n\t\t\tid: '4pin-toolboard' as const,\n\t\t\ttitle: 'Digital PWM on 2-pin port',\n\t\t\tbadge: [{ color: 'sky', children: `${toolheadConfig.toolboard.name} T${toolheadConfig.toolNumber}` }],\n\t\t});\n\t\tif (\n\t\t\ttoolheadConfig?.toolboard.fourPinFanConnectorCount != null &&\n\t\t\ttoolheadConfig.toolboard.fourPinFanConnectorCount > 1\n\t\t) {\n\t\t\tfans.push({\n\t\t\t\tid: '4pin-dedicated-toolboard' as const,\n\t\t\t\ttitle: 'Digital PWM on 4-pin port',\n\t\t\t\tbadge: [{ color: 'sky', children: `${toolheadConfig.toolboard.name} T${toolheadConfig.toolNumber}` }],\n\t\t\t});\n\t\t}\n\t}\n\treturn fans;\n};\n\nexport const controllerFanOptions = (\n\tconfig?: z.infer<typeof PartialPrinterConfiguration> | null,\n\ttoolheadConfigs?: PartialToolheadConfiguration[] | null,\n): z.infer<typeof Fan>[] => {\n\tconst fans: z.infer<typeof Fan>[] = [\n\t\t{\n\t\t\tid: '2pin' as const,\n\t\t\ttitle: 'Input Voltage PWM',\n\t\t\tbadge: [{ color: 'purple', children: config?.controlboard?.name ?? 'Control Board' }],\n\t\t},\n\t\t{\n\t\t\tid: '4pin' as const,\n\t\t\ttitle: 'Digital PWM on 2-pin port',\n\t\t\tbadge: [{ color: 'purple', children: config?.controlboard?.name ?? 'Control Board' }],\n\t\t},\n\t];\n\tif (\n\t\t(config?.controlboard?.fourPinFanConnectorCount != null && config.controlboard.fourPinFanConnectorCount > 2) ||\n\t\t(config?.controlboard?.fourPinFanConnectorCount != null &&\n\t\t\tconfig.controlboard.fourPinFanConnectorCount > 1 &&\n\t\t\ttoolheadConfigs?.some((th) => th?.hotendFan?.id !== '4pin-dedicated'))\n\t) {\n\t\tfans.push({\n\t\t\tid: '4pin-dedicated' as const,\n\t\t\ttitle: 'Digital PWM on 4-pin port',\n\t\t\tbadge: [{ color: 'purple', children: config?.controlboard?.name ?? 'Control Board' }],\n\t\t});\n\t}\n\tfans.push({ id: 'none', title: 'No fan' });\n\treturn fans;\n};\n\nexport const defaultControllerFan = {\n\tid: '2pin' as const,\n\ttitle: 'Input Voltage PWM',\n\tbadge: [{ color: 'purple' as const, children: 'Control Board' }],\n};\n","import { z } from 'zod';\nimport { Nozzle } from '@/zods/hardware';\n\nexport const getDefaultNozzle = () => {\n\treturn { diameter: 0.4, type: 'Regular' } satisfies z.infer<typeof Nozzle>;\n};\n","import { z } from 'zod';\nimport { Drivers } from '@/data/drivers';\nimport { Stepper, StepperVoltage } from '@/zods/motion';\n\nexport const findPreset = (\n\tstepper: (typeof Steppers)[number],\n\tdriver: (typeof Drivers)[number],\n\tvoltage: StepperVoltage,\n\tcurrent?: number,\n\tperformanceMode?: boolean | null,\n) => {\n\treturn stepper.presets\n\t\t?.slice()\n\t\t.sort((a, b) => (performanceMode ? b.run_current - a.run_current : a.run_current - b.run_current))\n\t\t.find(\n\t\t\t(p) =>\n\t\t\t\tp.driver === driver.type &&\n\t\t\t\tp.voltage === voltage &&\n\t\t\t\tp.sense_resistor === driver.senseResistor &&\n\t\t\t\t(current == null || p.run_current === current),\n\t\t);\n};\n\nexport const Steppers = z.array(Stepper).parse([\n\t{\n\t\tid: 'generic',\n\t\ttitle: 'Generic Stepper',\n\t\tmaxPeakCurrent: 2.8,\n\t},\n\t{\n\t\tid: 'BONDTECH-42H025H-0704-002',\n\t\ttitle: 'Bondtech LGX Stepper',\n\t\tmaxPeakCurrent: 0.7,\n\t},\n\t{\n\t\tid: 'LDO-42STH48-2504AC',\n\t\ttitle: 'LDO-42STH48-2504AC',\n\t\tmaxPeakCurrent: 2.5,\n\t\tpresets: [\n\t\t\t{\n\t\t\t\trun_current: 1.1,\n\t\t\t\tvoltage: 24,\n\t\t\t\tdriver: 'TMC2209',\n\t\t\t\tsense_resistor: 0.11,\n\t\t\t\tdriver_TBL: 1,\n\t\t\t\tdriver_TOFF: 3,\n\t\t\t\tdriver_HEND: 0,\n\t\t\t\tdriver_HSTRT: 0,\n\t\t\t},\n\t\t\t{\n\t\t\t\trun_current: 1.6,\n\t\t\t\tvoltage: 24,\n\t\t\t\tdriver: 'TMC2209',\n\t\t\t\tsense_resistor: 0.11,\n\t\t\t\tdriver_TBL: 2,\n\t\t\t\tdriver_TOFF: 3,\n\t\t\t\tdriver_HEND: 0,\n\t\t\t\tdriver_HSTRT: 6,\n\t\t\t},\n\t\t\t{\n\t\t\t\trun_current: 1.6,\n\t\t\t\tvoltage: 24,\n\t\t\t\tdriver: 'TMC5160',\n\t\t\t\tsense_resistor: 0.075,\n\t\t\t\tdriver_TBL: 2,\n\t\t\t\tdriver_TOFF: 3,\n\t\t\t\tdriver_HEND: 0,\n\t\t\t\tdriver_HSTRT: 6,\n\t\t\t},\n\t\t\t{\n\t\t\t\trun_current: 1.768,\n\t\t\t\tvoltage: 48,\n\t\t\t\tdriver: 'TMC5160',\n\t\t\t\tsense_resistor: 0.075,\n\t\t\t\tdriver_TBL: 0,\n\t\t\t\tdriver_TOFF: 4,\n\t\t\t\tdriver_HEND: 0,\n\t\t\t\tdriver_HSTRT: 4,\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tid: 'LDO-42STH40-1684AC',\n\t\ttitle: 'LDO-42STH40-1684AC',\n\t\tmaxPeakCurrent: 1.68,\n\t\tpresets: [\n\t\t\t{\n\t\t\t\trun_current: 0.4,\n\t\t\t\tvoltage: 24,\n\t\t\t\tdriver: 'TMC2130',\n\t\t\t\tsense_resistor: 0.22,\n\t\t\t\tdriver_IHOLDDELAY: 8,\n\t\t\t\tdriver_TPOWERDOWN: 0,\n\t\t\t\tdriver_TBL: 2,\n\t\t\t\tdriver_TOFF: 3,\n\t\t\t\tdriver_HEND: 1,\n\t\t\t\tdriver_HSTRT: 5,\n\t\t\t\tdriver_PWM_FREQ: 2,\n\t\t\t\tdriver_PWM_GRAD: 2,\n\t\t\t\tdriver_PWM_AMPL: 230,\n\t\t\t\tdriver_PWM_AUTOSCALE: true,\n\t\t\t\tdriver_SGT: 5,\n\t\t\t},\n\t\t\t{\n\t\t\t\trun_current: 0.52,\n\t\t\t\tvoltage: 24,\n\t\t\t\tdriver: 'TMC2130',\n\t\t\t\tsense_resistor: 0.22,\n\t\t\t\tdriver_IHOLDDELAY: 8,\n\t\t\t\tdriver_TPOWERDOWN: 0,\n\t\t\t\tdriver_TBL: 2,\n\t\t\t\tdriver_TOFF: 3,\n\t\t\t\tdriver_HEND: 1,\n\t\t\t\tdriver_HSTRT: 5,\n\t\t\t\tdriver_PWM_FREQ: 2,\n\t\t\t\tdriver_PWM_GRAD: 4,\n\t\t\t\tdriver_PWM_AMPL: 240,\n\t\t\t\tdriver_PWM_AUTOSCALE: true,\n\t\t\t\tdriver_SGT: 3,\n\t\t\t},\n\t\t\t{\n\t\t\t\trun_current: 0.8,\n\t\t\t\tvoltage: 24,\n\t\t\t\tdriver: 'TMC2209',\n\t\t\t\tsense_resistor: 0.11,\n\t\t\t\tdriver_TBL: 1,\n\t\t\t\tdriver_TOFF: 3,\n\t\t\t\tdriver_HEND: 3,\n\t\t\t\tdriver_HSTRT: 0,\n\t\t\t},\n\t\t\t{\n\t\t\t\trun_current: 1.188,\n\t\t\t\tvoltage: 24,\n\t\t\t\tdriver: 'TMC2209',\n\t\t\t\tsense_resistor: 0.11,\n\t\t\t\tdriver_TBL: 0,\n\t\t\t\tdriver_TOFF: 3,\n\t\t\t\tdriver_HEND: 0,\n\t\t\t\tdriver_HSTRT: 0,\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tid: 'LDO-42STH48-2004MAH',\n\t\ttitle: 'LDO-42STH48-2004MAH',\n\t\tmaxPeakCurrent: 2.0,\n\t\tfullStepsPerRotation: 400,\n\t},\n\t{\n\t\tid: 'LDO-42STH48-2004AC',\n\t\ttitle: 'LDO-42STH48-2004AC',\n\t\tmaxPeakCurrent: 2.0,\n\t},\n\t{\n\t\tid: 'LDO-42STH25-1404MAC',\n\t\ttitle: 'LDO-42STH25-1404MAC',\n\t\tmaxPeakCurrent: 1.4,\n\t\tfullStepsPerRotation: 400,\n\t\tpresets: [\n\t\t\t{\n\t\t\t\tvoltage: 24,\n\t\t\t\tdriver: 'TMC2209',\n\t\t\t\tsense_resistor: 0.11,\n\t\t\t\trun_current: 0.85,\n\t\t\t\tdriver_TBL: 1,\n\t\t\t\tdriver_TOFF: 3,\n\t\t\t\tdriver_HEND: 2,\n\t\t\t\tdriver_HSTRT: 0,\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tid: 'LDO-42STH25-1004CL200E',\n\t\ttitle: 'LDO-42STH25-1004CL200E',\n\t\tmaxPeakCurrent: 1.0,\n\t},\n\t{\n\t\tid: 'LDO-36STH20-1004AHG',\n\t\ttitle: 'LDO-36STH20-1004AHG',\n\t\tmaxPeakCurrent: 1.0,\n\t\tpresets: [\n\t\t\t{\n\t\t\t\tvoltage: 24,\n\t\t\t\tdriver: 'TMC2209',\n\t\t\t\tsense_resistor: 0.11,\n\t\t\t\trun_current: 0.707,\n\t\t\t\tdriver_TBL: 0,\n\t\t\t\tdriver_HEND: 6,\n\t\t\t\tdriver_HSTRT: 7,\n\t\t\t\tdriver_TOFF: 4,\n\t\t\t},\n\t\t\t// {\n\t\t\t// \tvoltage: 24,\n\t\t\t// \tdriver: 'TMC2209',\n\t\t\t// \tsense_resistor: 0.11,\n\t\t\t// \trun_current: 0.85,\n\t\t\t// \tdriver_TBL: 0,\n\t\t\t// \tdriver_HEND: 6,\n\t\t\t// \tdriver_HSTRT: 7,\n\t\t\t// \tdriver_TOFF: 4,\n\t\t\t// },\n\t\t],\n\t},\n\t{\n\t\tid: 'LDO-36STH17-1004AHG',\n\t\ttitle: 'LDO-36STH17-1004AHG',\n\t\tmaxPeakCurrent: 1.0,\n\t},\n\t{\n\t\tid: 'LDO-35STH48-1684AH',\n\t\ttitle: 'LDO-35STH48-1684AH',\n\t\tmaxPeakCurrent: 1.68,\n\t},\n] satisfies z.input<typeof Stepper>[]);\n","import { serializeToolheadConfiguration } from '@/utils/serialization';\nimport { PrinterAxis } from '@/zods/motion';\nimport {\n\tPartialToolheadConfiguration,\n\tSerializedToolheadConfiguration,\n\tToolheadConfiguration,\n\tToolNumber,\n} from '@/zods/toolhead';\nimport { getDefaultNozzle } from '@/data/nozzles';\nimport deepEqual from 'deep-equal';\nimport { KlipperAccelSensorName } from '@/zods/hardware';\n\ntype ToolheadSuffix = `t${ToolNumber}`;\ntype ToolheadCommand = `T${ToolNumber}`;\ntype ToolboardAxisString = 'x' | 'dc';\ntype ToolboardShortName = ToolheadSuffix;\n\nexport class ToolheadHelper<IsToolboard extends boolean> {\n\tprotected config: ToolheadConfiguration<IsToolboard>;\n\tconstructor(toolhead: ToolheadConfiguration<IsToolboard>) {\n\t\tthis.config = toolhead;\n\t}\n\tpublic hasToolboard(): boolean {\n\t\treturn this.config.toolboard != null;\n\t}\n\tpublic getToolboard() {\n\t\treturn this.config.toolboard;\n\t}\n\tpublic getMotionStepperName() {\n\t\tif (this.config.axis === PrinterAxis.dual_carriage) {\n\t\t\treturn 'dual_carriage';\n\t\t}\n\t\treturn `stepper_${this.getMotionAxis()}`;\n\t}\n\tpublic getToolboardName(): `toolboard_${ToolboardShortName}` {\n\t\tif (this.config.toolboard == null) {\n\t\t\tthrow new Error(`Toolhead T${this.getTool()} does not have a toolboard`);\n\t\t}\n\t\treturn `toolboard_${this.getShortToolName()}`;\n\t}\n\tpublic getShortToolName(): ToolboardShortName {\n\t\treturn `t${this.getTool()}`;\n\t}\n\tpublic getDescription(): string {\n\t\treturn this.config.description ?? `the printer's toolhead`;\n\t}\n\tpublic getMotionAxis(): PrinterAxis.x | PrinterAxis.dual_carriage {\n\t\tif (this.config.axis === PrinterAxis.dual_carriage) {\n\t\t\treturn PrinterAxis.dual_carriage;\n\t\t}\n\t\treturn PrinterAxis.x;\n\t}\n\tpublic getExtruderAxis(): PrinterAxis.extruder | PrinterAxis.extruder1 {\n\t\tif (this.config.axis === PrinterAxis.dual_carriage) {\n\t\t\treturn PrinterAxis.extruder1;\n\t\t}\n\t\treturn PrinterAxis.extruder;\n\t}\n\tpublic getToolCommand(): ToolheadCommand {\n\t\treturn `T${this.getTool()}`;\n\t}\n\tpublic getTool(): ToolNumber {\n\t\tif (this.config.axis === PrinterAxis.dual_carriage) {\n\t\t\treturn 1;\n\t\t}\n\t\treturn 0;\n\t}\n\tpublic getSerialSuffix(): ToolheadSuffix {\n\t\treturn `t${this.getTool()}`;\n\t}\n\tpublic getExtruder() {\n\t\treturn this.config.extruder;\n\t}\n\tpublic getHotend() {\n\t\treturn this.config.hotend;\n\t}\n\tpublic getNozzle() {\n\t\treturn this.config.nozzle ?? getDefaultNozzle();\n\t}\n\tpublic getThermistor() {\n\t\treturn this.config.thermistor;\n\t}\n\tpublic getXEndstop() {\n\t\treturn this.config.xEndstop;\n\t}\n\tpublic getYEndstop() {\n\t\treturn this.config.yEndstop;\n\t}\n\tpublic getXAccelerometer() {\n\t\treturn this.config.xAccelerometer;\n\t}\n\tpublic getYAccelerometer() {\n\t\treturn this.config.yAccelerometer;\n\t}\n\tpublic getXAccelerometerName(): KlipperAccelSensorName {\n\t\tswitch (this.getXAccelerometer()?.id) {\n\t\t\tcase 'controlboard':\n\t\t\t\treturn 'controlboard';\n\t\t\tcase 'toolboard':\n\t\t\t\tif (this.hasToolboard()) {\n\t\t\t\t\treturn this.getToolboardName();\n\t\t\t\t}\n\t\t\tcase 'sbc':\n\t\t\t\treturn 'rpi';\n\t\t\tdefault:\n\t\t\t\treturn 'controlboard';\n\t\t}\n\t}\n\tpublic getYAccelerometerName(): KlipperAccelSensorName {\n\t\tswitch (this.getYAccelerometer()?.id) {\n\t\t\tcase 'controlboard':\n\t\t\t\treturn 'controlboard';\n\t\t\tcase 'toolboard':\n\t\t\t\tif (this.hasToolboard()) {\n\t\t\t\t\treturn this.getToolboardName();\n\t\t\t\t}\n\t\t\tcase 'sbc':\n\t\t\t\treturn 'rpi';\n\t\t\tdefault:\n\t\t\t\treturn 'controlboard';\n\t\t}\n\t}\n\tpublic getChangeSet(changes: PartialToolheadConfiguration) {\n\t\tif (changes == null) {\n\t\t\treturn null;\n\t\t}\n\t\tconst changeSet: any = {};\n\t\tObject.keys(changes).forEach((key) => {\n\t\t\tconst current = this.getConfig()[key as keyof ToolheadConfiguration<IsToolboard>];\n\t\t\tconst change = changes[key as keyof ToolheadConfiguration<IsToolboard>];\n\t\t\tif ((current != null && change == null) || (current == null && change != null)) {\n\t\t\t\tchangeSet[key] = change;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (current && change) {\n\t\t\t\tif (typeof current === 'object' && 'id' in current && typeof change === 'object' && 'id' in change) {\n\t\t\t\t\tif (current.id !== change.id) {\n\t\t\t\t\t\tchangeSet[key] = change;\n\t\t\t\t\t}\n\t\t\t\t} else if (!deepEqual(current, change)) {\n\t\t\t\t\tchangeSet[key] = change;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tconst parsed = PartialToolheadConfiguration.safeParse(changeSet);\n\t\treturn parsed;\n\t}\n\tpublic getProbe() {\n\t\treturn this.config.probe;\n\t}\n\tpublic getPartFan() {\n\t\treturn this.config.partFan;\n\t}\n\tpublic getHotendFan() {\n\t\treturn this.config.hotendFan;\n\t}\n\tpublic serialize(): SerializedToolheadConfiguration {\n\t\treturn serializeToolheadConfiguration(this.config);\n\t}\n\tpublic getConfig(): ToolheadConfiguration<IsToolboard> {\n\t\treturn { ...this.config };\n\t}\n}\n","import { proxyClient, trpc } from '@/utils/trpc';\nexport { trpc, proxyClient as trpcClient };\n","import { type ClassValue, clsx } from 'clsx';\nimport { twMerge } from 'tailwind-merge';\n\nexport function cn(...inputs: ClassValue[]) {\n\treturn twMerge(clsx(inputs));\n}\n\nexport function setDisplayName(Component: React.ComponentType<any>, name: string | undefined) {\n\t(Component as any).displayName = name;\n}\n","import { ReadAtomInterface, syncEffect } from 'recoil-sync';\nimport { PrinterDefinitionWithResolvedToolheads } from '@/zods/printer';\nimport { trpcClient } from '@/helpers/trpc';\nimport { atomFamily, selector, DefaultValue, atom, noWait } from 'recoil';\nimport { z } from 'zod';\nimport { getRefineCheckerForZodSchema } from 'zod-refine';\nimport { deserializePrinterRail, serializePrinterRail } from '@/utils/serialization';\nimport { SerializedPrinterRail, PrinterAxis, PrinterRail } from '@/zods/motion';\nimport { Board, BoardPath } from '@/zods/boards';\nimport { moonrakerWriteEffect } from '@/components/sync-with-moonraker';\nimport { PrinterSize } from '@/zods/printer-configuration';\n\nlet cachedPrinters: { [id: string]: z.infer<typeof PrinterDefinitionWithResolvedToolheads> } = {};\n\n// SyncEffect read methods\nexport const readPrinterAtom = async ({\n\tread,\n}: ReadAtomInterface): Promise<z.infer<typeof PrinterDefinitionWithResolvedToolheads> | null> => {\n\tconst printer = await read(PrinterState.key);\n\tif (printer != null) {\n\t\tconst printerId = z.object({ id: PrinterDefinitionWithResolvedToolheads.shape.id }).safeParse(printer);\n\t\tif (printerId.success) {\n\t\t\tlet newPrinter: null | PrinterDefinitionWithResolvedToolheads = cachedPrinters[printerId.data.id];\n\t\t\tif (newPrinter == null) {\n\t\t\t\tnewPrinter = await trpcClient.printer.printer.query(printerId.data.id, {});\n\t\t\t\tif (newPrinter) {\n\t\t\t\t\tcachedPrinters[printerId.data.id] = newPrinter;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn newPrinter ?? null;\n\t\t}\n\t}\n\treturn null;\n};\n\nexport const readPrinterRailAtom =\n\t(param: PrinterAxis) =>\n\tasync ({ read }: ReadAtomInterface): Promise<z.infer<typeof SerializedPrinterRail> | null> => {\n\t\tconst printerRailState = await read(PrinterRailState(param).key);\n\t\tif (printerRailState != null) {\n\t\t\tconst parsedRail = SerializedPrinterRail.safeParse(printerRailState);\n\t\t\tif (parsedRail.success) {\n\t\t\t\treturn parsedRail.data;\n\t\t\t}\n\t\t\tconst printer = await readPrinterAtom({ read });\n\t\t\tconst printerRailDefault = printer?.defaults.rails.find((r) => r.axis === param);\n\t\t\tif (printerRailDefault != null) {\n\t\t\t\tconst parsedRailRepaired = SerializedPrinterRail.safeParse({ ...printerRailDefault, ...printerRailState });\n\t\t\t\tif (parsedRailRepaired.success) {\n\t\t\t\t\treturn parsedRailRepaired.data;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t};\n\nexport const PrinterState = atom<z.infer<typeof PrinterDefinitionWithResolvedToolheads> | null>({\n\tkey: 'Printer',\n\tdefault: null,\n\teffects: [\n\t\tmoonrakerWriteEffect(),\n\t\tsyncEffect({\n\t\t\tread: readPrinterAtom,\n\t\t\twrite: async ({ write }, newValue) => {\n\t\t\t\tawait new Promise((resolve) => {\n\t\t\t\t\tif (newValue instanceof DefaultValue) {\n\t\t\t\t\t\twrite(PrinterState.key, null);\n\t\t\t\t\t} else {\n\t\t\t\t\t\twrite(PrinterState.key, newValue ?? null);\n\t\t\t\t\t}\n\t\t\t\t\tsetTimeout(() => {}, 500);\n\t\t\t\t});\n\t\t\t},\n\t\t\trefine: getRefineCheckerForZodSchema(PrinterDefinitionWithResolvedToolheads.nullable()),\n\t\t}),\n\t],\n});\n\nexport const LoadablePrinterState = selector<z.infer<typeof PrinterDefinitionWithResolvedToolheads> | null>({\n\tkey: 'LoadablePrinterState',\n\tget: async ({ get }) => {\n\t\tconst loadable = get(noWait(PrinterState));\n\t\treturn {\n\t\t\thasValue: () => loadable.contents,\n\t\t\thasError: () => [],\n\t\t\tloading: () => [],\n\t\t}[loadable.state]();\n\t},\n});\n\nexport const PrinterSizeState = atom<z.output<typeof PrinterSize> | null>({\n\tkey: 'PrinterOption',\n\tdefault: null,\n\teffects: [\n\t\tmoonrakerWriteEffect(),\n\t\tsyncEffect({\n\t\t\trefine: getRefineCheckerForZodSchema(PrinterSize.nullable()),\n\t\t}),\n\t],\n});\n\nexport const ControlboardState = atom<Board | null>({\n\tkey: 'Controlboard',\n\tdefault: null,\n\teffects: [\n\t\tmoonrakerWriteEffect(),\n\t\tsyncEffect({\n\t\t\tread: async ({ read }) => {\n\t\t\t\tconst board = await read(ControlboardState.key);\n\t\t\t\tif (board != null) {\n\t\t\t\t\tconst boardId = z.object({ path: BoardPath }).safeParse(board);\n\t\t\t\t\tif (boardId.success) {\n\t\t\t\t\t\tconst boardReq = await trpcClient.mcu.boards.query({ boardFilters: { toolboard: false } });\n\t\t\t\t\t\tconst newBoard = boardReq.find((b) => b.path === boardId.data.path);\n\t\t\t\t\t\treturn newBoard ?? null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t},\n\t\t\trefine: getRefineCheckerForZodSchema(Board.nullable()),\n\t\t}),\n\t],\n});\n\nexport const PrinterRailState = atomFamily<z.infer<typeof SerializedPrinterRail> | null, PrinterAxis>({\n\tkey: 'PrinterRail',\n\tdefault: null,\n\teffects: (param) => [\n\t\tmoonrakerWriteEffect(),\n\t\tsyncEffect({\n\t\t\tread: readPrinterRailAtom(param),\n\t\t\trefine: getRefineCheckerForZodSchema(SerializedPrinterRail.nullable()),\n\t\t}),\n\t],\n});\n\nexport const PrinterRailsState = selector<z.infer<typeof PrinterRail>[]>({\n\tkey: 'PrinterRails',\n\tget: ({ get }) => {\n\t\tconst printer = get(PrinterState);\n\t\tconst rails = printer?.defaults.rails.map((rail) => {\n\t\t\tconst railState = get(PrinterRailState(rail.axis));\n\t\t\treturn deserializePrinterRail(railState ?? rail);\n\t\t});\n\t\treturn rails ?? [];\n\t},\n\tset: ({ set }, newValue) => {\n\t\tif (newValue instanceof DefaultValue) {\n\t\t\tObject.values(PrinterAxis).forEach((axis) => {\n\t\t\t\tset(PrinterRailState(axis), null);\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\tnewValue.forEach((rail) => {\n\t\t\tset(PrinterRailState(rail.axis), serializePrinterRail(rail));\n\t\t});\n\t},\n});\n\nexport const LoadablePrinterRailsState = selector<z.infer<typeof PrinterRail>[]>({\n\tkey: 'LoadablePrinterRailsState',\n\tget: async ({ get }) => {\n\t\tconst loadable = get(noWait(PrinterRailsState));\n\t\treturn {\n\t\t\thasValue: () => loadable.contents,\n\t\t\thasError: () => [],\n\t\t\tloading: () => [],\n\t\t}[loadable.state]();\n\t},\n});\n","import { atomFamily, DefaultValue, selector, selectorFamily, noWait, waitForAll } from 'recoil';\nimport { ReadAtomInterface, syncEffect } from 'recoil-sync';\nimport { z } from 'zod';\nimport { getRefineCheckerForZodSchema } from 'zod-refine';\nimport { trpcClient } from '@/helpers/trpc';\nimport { BoardPath, Toolboard } from '@/zods/boards';\nimport { PrinterAxis } from '@/zods/motion';\nimport {\n\tBaseToolheadConfiguration,\n\tSerializedToolheadConfiguration,\n\tToolheadConfiguration,\n\tToolNumber,\n} from '@/zods/toolhead';\nimport { PrinterState } from '@/recoil/printer';\nimport { moonrakerWriteEffect } from '@/components/sync-with-moonraker';\nimport { getLogger } from '@/app/_helpers/logger';\n\nexport const isAxisValidForTool = (axis: PrinterAxis, tool: ToolNumber) => {\n\tif (axis === PrinterAxis.dual_carriage && tool === 1) {\n\t\treturn true;\n\t}\n\tif (axis === PrinterAxis.x) {\n\t\treturn true;\n\t}\n\treturn false;\n};\n\nexport const PrinterToolheadState = atomFamily<\n\t(ToolheadConfiguration<any> & { toolNumber: ToolNumber }) | null,\n\tToolNumber\n>({\n\tkey: 'PrinterToolhead',\n\tdefault: null,\n\teffects: (param) => [\n\t\tmoonrakerWriteEffect(),\n\t\tsyncEffect({\n\t\t\tread: async ({\n\t\t\t\tread,\n\t\t\t}: ReadAtomInterface): Promise<(ToolheadConfiguration<any> & { toolNumber: ToolNumber }) | null> => {\n\t\t\t\tconst state = await read(PrinterToolheadState(param).key);\n\t\t\t\tif (typeof state !== 'object') {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tif (state == null) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tconst { toolNumber: tNum, ...printerToolheadState } = state as ToolheadConfiguration<any> & {\n\t\t\t\t\ttoolNumber: ToolNumber;\n\t\t\t\t};\n\t\t\t\tif (printerToolheadState != null) {\n\t\t\t\t\tconst parsedToolhead = ToolheadConfiguration.safeParse(printerToolheadState);\n\t\t\t\t\tif (parsedToolhead.success) {\n\t\t\t\t\t\tlet freshToolboard = parsedToolhead.data.toolboard;\n\t\t\t\t\t\tif (freshToolboard) {\n\t\t\t\t\t\t\tif (freshToolboard != null) {\n\t\t\t\t\t\t\t\tconst toolboardPath = z.object({ path: BoardPath }).safeParse(freshToolboard);\n\t\t\t\t\t\t\t\tif (toolboardPath.success) {\n\t\t\t\t\t\t\t\t\tconst boardReq = await trpcClient.mcu.boards.query({ boardFilters: { toolboard: true } });\n\t\t\t\t\t\t\t\t\tconst maybeToolboard = boardReq.find((b) => b.path === toolboardPath.data.path);\n\t\t\t\t\t\t\t\t\tif (maybeToolboard) {\n\t\t\t\t\t\t\t\t\t\tfreshToolboard = Toolboard.parse(maybeToolboard);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn { ...parsedToolhead.data, toolboard: freshToolboard, toolNumber: param };\n\t\t\t\t\t}\n\t\t\t\t\tconsole.debug(\n\t\t\t\t\t\t'RecoilSync: failed to read toolhead!',\n\t\t\t\t\t\tPrinterToolheadState(param).key,\n\t\t\t\t\t\tparsedToolhead.error,\n\t\t\t\t\t\tprinterToolheadState,\n\t\t\t\t\t);\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t},\n\t\t\trefine: getRefineCheckerForZodSchema(BaseToolheadConfiguration.extend({ toolNumber: ToolNumber }).nullable()),\n\t\t}),\n\t],\n});\n\nexport const DeserializeToolheadQuery = selectorFamily<\n\t(ToolheadConfiguration<any> & { toolNumber: ToolNumber }) | null,\n\t{ th: SerializedToolheadConfiguration; boardId: string; toolNumber: ToolNumber }\n>({\n\tkey: 'DeserializeToolheadQuery',\n\tget:\n\t\t(param) =>\n\t\tasync ({ get }) => {\n\t\t\tconst parsedToolhead = ToolheadConfiguration.safeParse(\n\t\t\t\tawait trpcClient.printer.deserializeToolheadConfiguration.query({\n\t\t\t\t\tconfig: param.th,\n\t\t\t\t\tprinterConfig: { controlboard: param.boardId },\n\t\t\t\t}),\n\t\t\t);\n\t\t\tif (!parsedToolhead.success) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn { ...parsedToolhead.data, toolNumber: param.toolNumber };\n\t\t},\n});\n\nexport const PrinterToolheadsState = selector<(ToolheadConfiguration<any> & { toolNumber: ToolNumber })[]>({\n\tkey: 'PrinterToolheadsState',\n\tget: ({ get }) => {\n\t\tconst printer = get(PrinterState);\n\t\tif (printer == null) {\n\t\t\treturn [];\n\t\t}\n\t\treturn get(waitForAll(printer.defaults.toolheads.map((th, i) => PrinterToolheadState(i as ToolNumber)))).filter(\n\t\t\tBoolean,\n\t\t);\n\t},\n\tset: ({ set, reset }, newValue) => {\n\t\tif (newValue instanceof DefaultValue) {\n\t\t\tthrow new Error('ToolheadsState cannot be reset, please reset the individual ToolheadState instead');\n\t\t}\n\t\tnewValue.forEach((th) => {\n\t\t\tset(PrinterToolheadState(th.toolNumber), { ...th, toolNumber: th.toolNumber });\n\t\t});\n\t},\n});\n\nexport const LoadablePrinterToolheadsState = selector<(ToolheadConfiguration<any> & { toolNumber: ToolNumber })[]>({\n\tkey: 'LoadablePrinterToolheadsState',\n\tget: async ({ get }) => {\n\t\tconst loadable = get(noWait(PrinterToolheadsState));\n\t\tgetLogger().debug('LoadableToolheadState', loadable);\n\t\treturn {\n\t\t\thasValue: () => loadable.contents,\n\t\t\thasError: () => [],\n\t\t\tloading: () => [],\n\t\t}[loadable.state]();\n\t},\n});\n","import type { z } from 'zod';\nimport { Drivers } from '@/data/drivers';\nimport {\n\tBasePrinterRail,\n\tDriver,\n\tPrinterRail,\n\tPrinterRailDefinition,\n\tSerializedPrinterRail,\n\tSerializedPrinterRailDefinition,\n\tStepper,\n\tPrinterAxis,\n} from '@/zods/motion';\nimport { Steppers } from '@/data/steppers';\nimport {\n\tToolheadConfiguration,\n\tSerializedToolheadConfiguration,\n\tPartialToolheadConfiguration,\n\tSerializedPartialToolheadConfiguration,\n\tToolOrAxis,\n} from '@/zods/toolhead';\nimport { PartialPrinterConfiguration } from '@/zods/printer-configuration';\nimport { ToolheadHelper } from '@/helpers/toolhead';\n\nexport const deserializeDriver = (driverId: z.input<typeof Driver.shape.id>): z.infer<typeof Driver> | null => {\n\treturn Drivers.find((d) => d.id === driverId) ?? null;\n};\n\nexport const deserializeStepper = (stepperId: z.input<typeof Stepper.shape.id>): z.infer<typeof Stepper> | null => {\n\treturn Steppers.find((d) => d.id === stepperId) ?? null;\n};\n\nexport const deserializePrinterRail = (rail: z.input<typeof SerializedPrinterRail>): z.infer<typeof PrinterRail> => {\n\tconst stepper = deserializeStepper(rail.stepper);\n\tconst driver = deserializeDriver(rail.driver);\n\tif (stepper == null) {\n\t\tthrow new Error(`Stepper ${rail.stepper} not found in database`);\n\t}\n\tif (driver == null) {\n\t\tthrow new Error(`Driver ${rail.driver} not found in database`);\n\t}\n\treturn BasePrinterRail.parse({\n\t\t...rail,\n\t\tstepper,\n\t\tdriver,\n\t});\n};\n\nexport const deserializePrinterRailDefinition = (\n\trail: z.input<typeof SerializedPrinterRailDefinition>,\n): z.infer<typeof PrinterRailDefinition> => {\n\tconst stepper = deserializeStepper(rail.stepper);\n\tconst driver = deserializeDriver(rail.driver);\n\tif (stepper == null) {\n\t\tthrow new Error(`Stepper ${rail.stepper} not found in database`);\n\t}\n\tif (driver == null) {\n\t\tthrow new Error(`Driver ${rail.driver} not found in database`);\n\t}\n\treturn PrinterRailDefinition.parse({\n\t\t...rail,\n\t\tstepper,\n\t\tdriver,\n\t});\n};\n\nexport const stringToTitleObject = <Item extends string>(data: Item): { id: Item; title: Item } => {\n\treturn { id: data, title: data };\n};\n\nexport const serializePrinterRail = (rail: z.input<typeof PrinterRail>): z.infer<typeof SerializedPrinterRail> => {\n\treturn SerializedPrinterRail.parse({\n\t\t...rail,\n\t\tdriver: rail.driver.id,\n\t\tstepper: rail.stepper.id,\n\t});\n};\n\nexport const serializeToolheadConfiguration = (th: ToolheadConfiguration<any>): SerializedToolheadConfiguration => {\n\treturn {\n\t\t...th,\n\t\ttoolboard: th.toolboard?.id,\n\t\thotend: th.hotend.id,\n\t\tthermistor: th.thermistor,\n\t\textruder: th.extruder.id,\n\t\tprobe: th.probe?.id,\n\t\txEndstop: th.xEndstop.id,\n\t\tyEndstop: th.yEndstop.id,\n\t\tpartFan: th.partFan.id,\n\t\thotendFan: th.hotendFan.id,\n\t\txAccelerometer: th.xAccelerometer?.id,\n\t\tyAccelerometer: th.yAccelerometer?.id,\n\t};\n};\n\nexport const serializePartialToolheadConfiguration = (\n\tth: PartialToolheadConfiguration,\n): SerializedPartialToolheadConfiguration => {\n\treturn th == null\n\t\t? undefined\n\t\t: {\n\t\t\t\t...th,\n\t\t\t\ttoolboard: th.toolboard?.id,\n\t\t\t\thotend: th.hotend?.id,\n\t\t\t\tthermistor: th.thermistor,\n\t\t\t\textruder: th.extruder?.id,\n\t\t\t\tprobe: th.probe?.id,\n\t\t\t\txEndstop: th.xEndstop?.id,\n\t\t\t\tyEndstop: th.yEndstop?.id,\n\t\t\t\tpartFan: th.partFan?.id,\n\t\t\t\thotendFan: th.hotendFan?.id,\n\t\t\t\txAccelerometer: th.xAccelerometer?.id,\n\t\t\t\tyAccelerometer: th.yAccelerometer?.id,\n\t\t\t};\n};\n\nexport const extractToolheadsFromPrinterConfiguration = (config: PartialPrinterConfiguration) => {\n\tconst toolheads = config?.toolheads\n\t\t?.map((th) => {\n\t\t\tif (th == null) {\n\t\t\t\tthrow new Error('Toolhead can not be null');\n\t\t\t}\n\t\t\treturn new ToolheadHelper(ToolheadConfiguration.parse(th));\n\t\t})\n\t\t.filter(Boolean);\n\tif (toolheads == null) {\n\t\tthrow new Error('No toolheads found');\n\t}\n\treturn toolheads;\n};\n\nexport const extractToolheadFromPrinterConfiguration = (\n\ttoolOrAxis: ToolOrAxis | PrinterAxis,\n\tconfig: PartialPrinterConfiguration,\n) => {\n\tif (config?.toolheads == null || config.toolheads.length === 0) {\n\t\tthrow new Error('No toolheads preset in supplied printer config');\n\t}\n\tconst toolheads = extractToolheadsFromPrinterConfiguration(config);\n\tconst th =\n\t\ttypeof toolOrAxis === 'number'\n\t\t\t? toolheads.find((th) => th.getTool() === toolOrAxis)\n\t\t\t: toolheads.find((th) => th.getExtruderAxis() === toolOrAxis || th.getMotionAxis() === toolOrAxis);\n\treturn th;\n};\n","import { z } from 'zod';\nimport { PrinterAxis, Voltage } from '@/zods/motion';\n\n// Complete map of all available RatOS pin aliases.\nexport const AllPins = {\n\tx_step_pin: z.string().optional(),\n\tx_dir_pin: z.string().optional(),\n\tx_enable_pin: z.string().optional(),\n\tx_uart_pin: z.string().optional(),\n\tx_diag_pin: z.string().optional(),\n\tx_endstop_pin: z.string().optional(),\n\tx1_step_pin: z.string().optional(),\n\tx1_dir_pin: z.string().optional(),\n\tx1_enable_pin: z.string().optional(),\n\tx1_uart_pin: z.string().optional(),\n\tx1_diag_pin: z.string().optional(),\n\tx1_endstop_pin: z.string().optional(),\n\tdual_carriage_step_pin: z.string().optional(),\n\tdual_carriage_dir_pin: z.string().optional(),\n\tdual_carriage_enable_pin: z.string().optional(),\n\tdual_carriage_uart_pin: z.string().optional(),\n\tdual_carriage_diag_pin: z.string().optional(),\n\tdual_carriage_endstop_pin: z.string().optional(),\n\ty_step_pin: z.string().optional(),\n\ty_dir_pin: z.string().optional(),\n\ty_enable_pin: z.string().optional(),\n\ty_uart_pin: z.string().optional(),\n\ty_diag_pin: z.string().optional(),\n\ty_endstop_pin: z.string().optional(),\n\ty1_step_pin: z.string().optional(),\n\ty1_dir_pin: z.string().optional(),\n\ty1_enable_pin: z.string().optional(),\n\ty1_uart_pin: z.string().optional(),\n\ty1_diag_pin: z.string().optional(),\n\ty1_endstop_pin: z.string().optional(),\n\ty2_step_pin: z.string().optional(),\n\ty2_dir_pin: z.string().optional(),\n\ty2_enable_pin: z.string().optional(),\n\ty2_uart_pin: z.string().optional(),\n\ty2_diag_pin: z.string().optional(),\n\ty2_endstop_pin: z.string().optional(),\n\tz0_step_pin: z.string().optional(),\n\tz0_dir_pin: z.string().optional(),\n\tz0_enable_pin: z.string().optional(),\n\tz0_uart_pin: z.string().optional(),\n\tz0_diag_pin: z.string().optional(),\n\tz1_step_pin: z.string().optional(),\n\tz1_dir_pin: z.string().optional(),\n\tz1_enable_pin: z.string().optional(),\n\tz1_uart_pin: z.string().optional(),\n\tz1_diag_pin: z.string().optional(),\n\tz2_step_pin: z.string().optional(),\n\tz2_dir_pin: z.string().optional(),\n\tz2_enable_pin: z.string().optional(),\n\tz2_uart_pin: z.string().optional(),\n\tz2_diag_pin: z.string().optional(),\n\tz3_step_pin: z.string().optional(),\n\tz3_dir_pin: z.string().optional(),\n\tz3_enable_pin: z.string().optional(),\n\tz3_uart_pin: z.string().optional(),\n\tz3_diag_pin: z.string().optional(),\n\te_step_pin: z.string().optional(),\n\te_dir_pin: z.string().optional(),\n\te_enable_pin: z.string().optional(),\n\te_uart_pin: z.string().optional(),\n\te_diag_pin: z.string().optional(),\n\te_heater_pin: z.string().optional(),\n\te_sensor_pin: z.string().optional(),\n\tstepper_spi_mosi_pin: z.string().optional(),\n\tstepper_spi_miso_pin: z.string().optional(),\n\tstepper_spi_sclk_pin: z.string().optional(),\n\tadxl345_cs_pin: z.string().optional(),\n\tbltouch_sensor_pin: z.string().optional(),\n\tbltouch_control_pin: z.string().optional(),\n\tprobe_pin: z.string().optional(),\n\tfan_part_cooling_pin: z.string().optional(),\n\tfan_toolhead_cooling_pin: z.string().optional(),\n\tfan_controller_board_pin: z.string().optional(),\n\theater_bed_heating_pin: z.string().optional(),\n\theater_bed_sensor_pin: z.string().optional(),\n\t'4p_fan_part_cooling_pin': z.string().optional(),\n\t'4p_fan_part_cooling_tach_pin': z.string().optional(),\n\t'4p_toolhead_cooling_pin': z.string().optional(),\n\t'4p_toolhead_cooling_tach_pin': z.string().optional(),\n\t'4p_controller_board_pin': z.string().optional(),\n\t'4p_controller_board_tach_pin': z.string().optional(),\n};\nexport const PinMap = z.object(AllPins);\n\nexport enum AxisPinPrefix {\n\tx = 'x',\n\tx1 = 'x1',\n\ty = 'y',\n\ty1 = 'y1',\n\ty2 = 'y2',\n\tz0 = 'z0',\n\tz1 = 'z1',\n\tz2 = 'z2',\n\tz3 = 'z3',\n\te = 'e',\n\te1 = 'e1',\n\tdual_carriage = 'dual_carriage',\n}\n\nexport const pinAliasPrefixToPrinterAxis: { [key in AxisPinPrefix]: PrinterAxis } = {\n\tx: PrinterAxis['x'],\n\tx1: PrinterAxis['x1'],\n\ty: PrinterAxis['y'],\n\ty1: PrinterAxis['y1'],\n\ty2: PrinterAxis['y2'],\n\tz0: PrinterAxis['z'],\n\tz1: PrinterAxis['z1'],\n\tz2: PrinterAxis['z2'],\n\tz3: PrinterAxis['z3'],\n\te: PrinterAxis['extruder'],\n\te1: PrinterAxis['extruder1'],\n\tdual_carriage: PrinterAxis['dual_carriage'],\n};\n\nexport const pinPrefixToAxis = z.nativeEnum(AxisPinPrefix).transform((v) => pinAliasPrefixToPrinterAxis[v] ?? null);\nexport const axisToPinPrefix = z\n\t.nativeEnum(PrinterAxis)\n\t.transform(\n\t\t(pa) =>\n\t\t\t(Object.keys(pinAliasPrefixToPrinterAxis) as AxisPinPrefix[]).find(\n\t\t\t\t(p) => pinAliasPrefixToPrinterAxis[p] === pa,\n\t\t\t) ?? null,\n\t);\n\nexport const ControlBoardPinMap = PinMap.extend({\n\tx_step_pin: z.string(),\n\tx_dir_pin: z.string(),\n\tx_enable_pin: z.string(),\n\tx_uart_pin: z.string(),\n\tx_endstop_pin: z.string(),\n\ty_step_pin: z.string(),\n\ty_dir_pin: z.string(),\n\ty_enable_pin: z.string(),\n\ty_uart_pin: z.string(),\n\ty_endstop_pin: z.string(),\n\tz0_step_pin: z.string(),\n\tz0_dir_pin: z.string(),\n\tz0_enable_pin: z.string(),\n\tz0_uart_pin: z.string(),\n\te_step_pin: z.string(),\n\te_dir_pin: z.string(),\n\te_enable_pin: z.string(),\n\te_uart_pin: z.string(),\n\te_heater_pin: z.string(),\n\te_sensor_pin: z.string(),\n\tprobe_pin: z.string(),\n\theater_bed_heating_pin: z.string(),\n\theater_bed_sensor_pin: z.string(),\n}).and(\n\tz\n\t\t.object({\n\t\t\tfan_part_cooling_pin: z.string(),\n\t\t\tfan_toolhead_cooling_pin: z.string(),\n\t\t})\n\t\t.or(\n\t\t\tz.object({\n\t\t\t\t'4p_fan_part_cooling_pin': z.string(),\n\t\t\t\t'4p_fan_part_cooling_tach_pin': z.string(),\n\t\t\t\t'4p_toolhead_cooling_pin': z.string(),\n\t\t\t\t'4p_toolhead_cooling_tach_pin': z.string(),\n\t\t\t}),\n\t\t),\n);\n\nexport const ExtruderlessControlBoardPinMap = PinMap.extend({\n\tx_step_pin: z.string(),\n\tx_dir_pin: z.string(),\n\tx_enable_pin: z.string(),\n\tx_uart_pin: z.string(),\n\tx_endstop_pin: z.string(),\n\ty_step_pin: z.string(),\n\ty_dir_pin: z.string(),\n\ty_enable_pin: z.string(),\n\ty_uart_pin: z.string(),\n\ty_endstop_pin: z.string(),\n\tz0_step_pin: z.string(),\n\tz0_dir_pin: z.string(),\n\tz0_enable_pin: z.string(),\n\tz0_uart_pin: z.string(),\n\tz1_step_pin: z.string(),\n\tz1_dir_pin: z.string(),\n\tz1_enable_pin: z.string(),\n\tz1_uart_pin: z.string(),\n\tz2_step_pin: z.string(),\n\tz2_dir_pin: z.string(),\n\tz2_enable_pin: z.string(),\n\tz2_uart_pin: z.string(),\n\tprobe_pin: z.string(),\n\theater_bed_heating_pin: z.string(),\n\theater_bed_sensor_pin: z.string(),\n}).and(\n\tz\n\t\t.object({\n\t\t\tfan_part_cooling_pin: z.string(),\n\t\t\tfan_toolhead_cooling_pin: z.string(),\n\t\t})\n\t\t.or(\n\t\t\tz.object({\n\t\t\t\t'4p_fan_part_cooling_pin': z.string(),\n\t\t\t\t'4p_fan_part_cooling_tach_pin': z.string(),\n\t\t\t\t'4p_toolhead_cooling_pin': z.string(),\n\t\t\t\t'4p_toolhead_cooling_tach_pin': z.string(),\n\t\t\t}),\n\t\t),\n);\nexport const ToolboardPinMap = PinMap.extend({\n\te_step_pin: z.string(),\n\te_dir_pin: z.string(),\n\te_enable_pin: z.string(),\n\te_uart_pin: z.string(),\n\te_heater_pin: z.string(),\n\te_sensor_pin: z.string(),\n\tadxl345_cs_pin: z.string(),\n\tprobe_pin: z.string(),\n}).and(\n\tz\n\t\t.object({\n\t\t\tfan_part_cooling_pin: z.string(),\n\t\t\tfan_toolhead_cooling_pin: z.string(),\n\t\t})\n\t\t.or(\n\t\t\tz.object({\n\t\t\t\t'4p_fan_part_cooling_pin': z.string(),\n\t\t\t\t'4p_fan_part_cooling_tach_pin': z.string(),\n\t\t\t\t'4p_toolhead_cooling_pin': z.string(),\n\t\t\t\t'4p_toolhead_cooling_tach_pin': z.string(),\n\t\t\t}),\n\t\t),\n);\n\nexport const UARTPins = z.object({\n\tuart_pin: z.string(),\n\tuart_address: z.string().optional(),\n\trx_pin: z.string().optional(),\n\ttx_pin: z.string().optional(),\n});\n\nexport const SPIPins = z\n\t.object({\n\t\tcs_pin: z.string(),\n\t})\n\t.and(\n\t\tz.object({ spi_bus: z.string() }).or(\n\t\t\tz.object({\n\t\t\t\tspi_software_mosi_pin: z.string().optional(),\n\t\t\t\tspi_software_miso_pin: z.string().optional(),\n\t\t\t\tspi_software_sclk_pin: z.string().optional(),\n\t\t\t}),\n\t\t),\n\t);\n\nexport const hasSPI = (slot: unknown) => {\n\treturn SPIPins.safeParse(slot).success;\n};\n\nexport const hasUART = (slot: unknown) => {\n\treturn UARTPins.safeParse(slot).success;\n};\n\nexport const MotorSlotPins = z.object({\n\tstep_pin: z.string(),\n\tdir_pin: z.string(),\n\tenable_pin: z.string(),\n\tdiag_pin: z.string().optional(),\n\tendstop_pin: z.string().optional(),\n\t// UART\n\tuart_pin: z.string().optional(),\n\trx_pin: z.string().optional(),\n\ttx_pin: z.string().optional(),\n\t// SPI\n\tcs_pin: z.string().optional(),\n});\n\nexport const MotorSlot = MotorSlotPins.extend({\n\ttitle: z.string(),\n\t// UART\n\tuart_address: z.string().optional(),\n\t// SPI\n\tspi_bus: z.string().optional(),\n\tspi_software_mosi_pin: z.string().optional(),\n\tspi_software_miso_pin: z.string().optional(),\n\tspi_software_sclk_pin: z.string().optional(),\n}).refine(\n\t(slot) => {\n\t\treturn hasSPI(slot) || hasUART(slot);\n\t},\n\t{ message: 'Motor slot must have either SPI or UART pins' },\n);\n\nexport type MotorSlot = z.output<typeof MotorSlot>;\n\nconst AnySlotPin = MotorSlot.innerType().omit({ title: true }).partial();\nexport type AnySlotPin = z.infer<typeof AnySlotPin>;\n\nexport const MotorSlotKey = z.string();\n\nexport const reversePinLookup: (pins: AnySlotPin, board: Board) => z.infer<typeof MotorSlotKey> | undefined = (\n\tpins,\n\tboard,\n) => {\n\tconst slots = Object.entries(board.motorSlots ?? {});\n\tfor (const [key, slot] of slots) {\n\t\tif (Object.entries(pins).every(([pin, value]) => slot[pin as keyof typeof slot] === value)) {\n\t\t\treturn key;\n\t\t}\n\t}\n\treturn undefined;\n};\n\nexport const BoardID = z.string().brand('BoardID');\nexport const BoardPath = z.string().brand('BoardPath');\nexport const BoardSerialPath = z.string().brand('BoardSerialPath');\n\nconst integratedDrivers = z.record(z.nativeEnum(PrinterAxis), z.string());\nconst motorSlots = z.record(MotorSlotKey, MotorSlot);\n\nexport const Board = z\n\t.object({\n\t\tid: BoardID,\n\t\tisToolboard: z.boolean().optional(),\n\t\tisHost: z.boolean().optional(),\n\t\tserialPath: BoardSerialPath.optional(),\n\t\tname: z.string(),\n\t\tmanufacturer: z.string(),\n\t\tfirmwareBinaryName: z.string(),\n\t\tcompileScript: z.string(),\n\t\tflashScript: z.string().optional(),\n\t\tflashInstructions: z.string().optional(),\n\t\tdisableAutoFlash: z.boolean().optional(),\n\t\tdocumentationLink: z.string().optional(),\n\t\thasQuirksFiles: z.boolean().optional(),\n\t\tdriverCount: z.number(),\n\t\tintegratedDrivers: integratedDrivers.optional(),\n\t\textruderlessConfig: z.string().optional(),\n\t\tfourPinFanConnectorCount: z.number().optional(),\n\t\tdriverVoltages: Voltage.array().default([24]),\n\t\thasMcuTempSensor: z.boolean().default(true),\n\t\talternativePT1000Resistor: z.number().optional(),\n\t\tmotorSlots: z.record(MotorSlotKey, MotorSlot).optional(),\n\t\toutputPins: z\n\t\t\t.array(\n\t\t\t\tz.object({\n\t\t\t\t\tpin: z.string(),\n\t\t\t\t\tname: z.string(),\n\t\t\t\t\tvalue: z.number().min(0).max(1),\n\t\t\t\t}),\n\t\t\t)\n\t\t\t.optional(),\n\t\tdfu: z\n\t\t\t.object({\n\t\t\t\tdfuBootImage: z.string(),\n\t\t\t\tflashDevice: z.string(),\n\t\t\t\tinstructions: z.array(z.string()),\n\t\t\t\treminder: z.string().optional(),\n\t\t\t\thasBoot0Jumper: z.boolean(),\n\t\t\t})\n\t\t\t.optional(),\n\t\tstepperSPI: z\n\t\t\t.object({\n\t\t\t\tsoftware: z.object({\n\t\t\t\t\tsclk: z.string(),\n\t\t\t\t\tmosi: z.string(),\n\t\t\t\t\tmiso: z.string(),\n\t\t\t\t}),\n\t\t\t})\n\t\t\t.or(\n\t\t\t\tz.object({\n\t\t\t\t\thardware: z.object({\n\t\t\t\t\t\tbus: z.string(),\n\t\t\t\t\t}),\n\t\t\t\t}),\n\t\t\t)\n\t\t\t.optional(),\n\t\tADXL345SPI: z\n\t\t\t.object({\n\t\t\t\tcs_pin: z.string(),\n\t\t\t})\n\t\t\t.and(\n\t\t\t\tz\n\t\t\t\t\t.object({\n\t\t\t\t\t\tsoftware: z.object({\n\t\t\t\t\t\t\tsclk: z.string(),\n\t\t\t\t\t\t\tmosi: z.string(),\n\t\t\t\t\t\t\tmiso: z.string(),\n\t\t\t\t\t\t}),\n\t\t\t\t\t})\n\t\t\t\t\t.or(\n\t\t\t\t\t\tz.object({\n\t\t\t\t\t\t\thardware: z.object({\n\t\t\t\t\t\t\t\tbus: z.string(),\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t}),\n\t\t\t\t\t),\n\t\t\t)\n\t\t\t.optional(),\n\t\tLIS2DW: z\n\t\t\t.object({\n\t\t\t\tcs_pin: z.string(),\n\t\t\t})\n\t\t\t.and(\n\t\t\t\tz\n\t\t\t\t\t.object({\n\t\t\t\t\t\tsoftware: z.object({\n\t\t\t\t\t\t\tsclk: z.string(),\n\t\t\t\t\t\t\tmosi: z.string(),\n\t\t\t\t\t\t\tmiso: z.string(),\n\t\t\t\t\t\t}),\n\t\t\t\t\t})\n\t\t\t\t\t.or(\n\t\t\t\t\t\tz.object({\n\t\t\t\t\t\t\thardware: z.object({\n\t\t\t\t\t\t\t\tbus: z.string(),\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t}),\n\t\t\t\t\t),\n\t\t\t)\n\t\t\t.optional(),\n\t\tpath: BoardPath,\n\t})\n\t.and(\n\t\tz\n\t\t\t.object({ isToolboard: z.literal(true), motorSlots: z.undefined() })\n\t\t\t.or(z.object({ motorSlots: motorSlots }))\n\t\t\t.or(z.object({ isHost: z.literal(true), motorSlots: z.undefined() })),\n\t);\n\nexport const BoardWithDetectionStatus = Board.and(\n\tz.object({\n\t\tdetected: z.boolean(),\n\t}),\n);\n\nexport const AutoFlashableBoard = z.object({\n\tid: z.string(),\n\tdisableAutoFlash: z.literal(false).optional(),\n\tisToolboard: z.boolean().optional(),\n\tcompileScript: z.string(),\n\tflashScript: z.string(),\n\tpath: BoardPath,\n});\n\nexport const Toolboard = Board.and(\n\tz.object({\n\t\tisToolboard: z.literal(true),\n\t\tisHost: z.literal(false).optional(),\n\t\tintegratedDrivers: integratedDrivers.and(\n\t\t\tz.object({\n\t\t\t\t[PrinterAxis.extruder]: z.string(),\n\t\t\t}),\n\t\t),\n\t}),\n);\n\nexport const ToolboardWithDetectionStatus = Toolboard.and(\n\tz.object({\n\t\tdetected: z.boolean(),\n\t}),\n);\n\nexport type Board = z.infer<typeof Board>;\nexport type BoardWithDetectionStatus = z.infer<typeof BoardWithDetectionStatus>;\nexport type Toolboard = z.infer<typeof Toolboard>;\nexport type ToolboardWithDetectionStatus = z.infer<typeof ToolboardWithDetectionStatus>;\nexport type AutoFlashableBoard = z.infer<typeof AutoFlashableBoard>;\nexport type ToolboardPinMap = z.infer<typeof ToolboardPinMap>;\nexport type ControlBoardPinMap = z.infer<typeof ControlBoardPinMap>;\nexport type ExtruderlessControlBoardPinMap = z.infer<typeof ExtruderlessControlBoardPinMap>;\n","import { z } from 'zod';\nimport { serverSchema } from '@/env/schema.mjs';\nimport { PrinterRailDefinition, Stepper } from '@/zods/motion';\nimport { badgeColorOptions } from '@/components/common/badge';\n\nexport const thermistors = [\n\t'EPCOS 100K B57560G104F',\n\t'ATC Semitec 104GT-2',\n\t'ATC Semitec 104NT-4-R025H42G',\n\t'Generic 3950',\n\t'Honeywell 100K 135-104LAG-J01',\n\t'NTC 100K MGB18-104F39050L32',\n\t'SliceEngineering 450',\n\t'TDK NTCG104LH104JT1',\n\t'PT1000',\n] as const;\n\nlet startsWithServerValidation = '';\nif (process.env.RATOS_CONFIGURATION_PATH) {\n\tconst environment = serverSchema.parse(process.env);\n\tstartsWithServerValidation = environment.RATOS_CONFIGURATION_PATH;\n}\nconst hardwareType = z.object({\n\tpath: z.string().startsWith(startsWithServerValidation).endsWith('.cfg'),\n\tid: z.string(),\n});\n\nexport const Thermistor = z.enum(thermistors);\n\nexport const Hotend = hardwareType.extend({\n\ttype: z.literal('hotend'),\n\ttitle: z.string(),\n\tthermistor: z.enum(thermistors),\n\tflowType: z.union([z.literal('sf'), z.literal('hf'), z.literal('uhf')]),\n});\n\nexport const Nozzle = z.object({\n\ttype: z.enum(['Regular', 'CHT']),\n\tdiameter: z.number().min(0.2).max(1.8),\n});\n\nexport const Extruder = hardwareType.extend({\n\ttype: z.literal('extruder'),\n\tstepper: Stepper.shape.id.optional(),\n\tcurrent: PrinterRailDefinition.shape.current.optional(),\n\ttitle: z.string(),\n});\n\nexport const Probe = hardwareType.extend({\n\ttype: z.literal('static-probe').or(z.literal('stowable-probe')),\n\ttitle: z.string(),\n});\n\nexport const Endstop = z.object({\n\tid: z.enum(['endstop', 'endstop-toolboard', 'sensorless']),\n\ttitle: z.string(),\n\tbadge: z\n\t\t.array(\n\t\t\tz.object({\n\t\t\t\tchildren: z.string(),\n\t\t\t\tcolor: badgeColorOptions,\n\t\t\t}),\n\t\t)\n\t\t.optional(),\n});\n\nexport const KlipperAccelSensorNameSchame = z.union([\n\tz.literal('toolboard_t0'),\n\tz.literal('toolboard_t1'),\n\tz.literal('controlboard'),\n\tz.literal('rpi'),\n]);\n\nexport const AccelerometerType = z.union([z.literal('adxl345'), z.literal('lis2dw')]);\n\nexport const Accelerometer = z.object({\n\tid: z.enum(['toolboard', 'controlboard', 'sbc', 'none']),\n\ttitle: z.string(),\n\taccelerometerType: AccelerometerType.default('adxl345').optional(),\n});\n\nexport type KlipperAccelSensorName = z.infer<typeof KlipperAccelSensorNameSchame>;\n\nexport const klipperAccelSensorSchema = z.object({\n\tname: KlipperAccelSensorNameSchame,\n\ttype: AccelerometerType,\n});\n\nexport type KlipperAccelSensorSchema = z.infer<typeof klipperAccelSensorSchema>;\n\nexport const AccelerometerWithType = Accelerometer.extend({\n\taccelerometerType: AccelerometerType,\n});\n\nexport type AccelerometerWithType = z.infer<typeof AccelerometerWithType>;\n\nexport const Fan = z.object({\n\tid: z.enum([\n\t\t'2pin',\n\t\t'4pin',\n\t\t'4pin-dedicated',\n\t\t'2pin-toolboard',\n\t\t'4pin-toolboard',\n\t\t'4pin-dedicated-toolboard',\n\t\t'none',\n\t]),\n\ttitle: z.string(),\n\tbadge: z\n\t\t.array(\n\t\t\tz.object({\n\t\t\t\tchildren: z.string(),\n\t\t\t\tcolor: badgeColorOptions,\n\t\t\t}),\n\t\t)\n\t\t.optional(),\n});\n","import * as z from 'zod';\nimport type { Board, Toolboard } from '@/zods/boards';\nexport enum StepperVoltage {\n\t'24V' = 24,\n\t'36V' = 36,\n\t'48V' = 48,\n\t'56V' = 56,\n\t'60V' = 60,\n}\n\nexport const Voltages: { id: StepperVoltage; title: string }[] = [\n\t{ id: StepperVoltage['24V'], title: '24V' },\n\t{ id: StepperVoltage['36V'], title: '36V' },\n\t{ id: StepperVoltage['48V'], title: '48V' },\n\t{ id: StepperVoltage['56V'], title: '56V' },\n\t{ id: StepperVoltage['60V'], title: '60V' },\n];\n\nexport const getSupportedVoltages = (\n\tboard: Board | Toolboard | null,\n\tdriver?: z.infer<typeof Driver>,\n): typeof Voltages => {\n\tif (driver?.external) {\n\t\treturn Voltages.filter((v) => driver?.voltages?.includes(v.id) || v.id === StepperVoltage['24V']);\n\t}\n\treturn Voltages.filter((v) => board?.driverVoltages?.includes(v.id) || v.id === StepperVoltage['24V']).filter(\n\t\t(v) => driver?.voltages?.includes(v.id) || v.id === StepperVoltage['24V'],\n\t);\n};\n\nexport const matchesDefaultRail = (\n\trail: Zod.infer<typeof BasePrinterRail>,\n\tdefaultRail: Zod.infer<typeof PrinterRailDefinition>,\n\tperformanceMode: boolean,\n) => {\n\treturn (\n\t\trail.axis === defaultRail.axis &&\n\t\trail.driver.id === defaultRail.driver.id &&\n\t\trail.stepper.id === defaultRail.stepper.id &&\n\t\t((performanceMode &&\n\t\t\tdefaultRail.performanceMode &&\n\t\t\trail.voltage === defaultRail.performanceMode?.voltage &&\n\t\t\trail.current === defaultRail.performanceMode?.current) ||\n\t\t\t(!performanceMode && rail.voltage === defaultRail.voltage && rail.current === defaultRail.current))\n\t);\n};\n\nexport const Voltage = z.nativeEnum(StepperVoltage);\n\nexport const Driver = z.object({\n\tid: z.string(),\n\ttitle: z.string(),\n\ttype: z.enum(['TMC2209', 'TMC2226', 'TMC5160', 'TMC2130', 'TMC2240']),\n\tprotocol: z.enum(['SPI', 'UART']),\n\tsenseResistor: z.number().min(0),\n\tcoolingCurrentThreshold: z.number(),\n\tvoltages: Voltage.array(),\n\tmaxCurrent: z.number().min(0),\n\texternal: z.boolean().optional(),\n});\n\nconst BaseStepperPreset = z.object({\n\tvoltage: Voltage,\n\trun_current: z.number(),\n\tdriver: Driver.shape.id,\n\tsense_resistor: z.number(),\n});\n\nexport const Stepper = z.object({\n\tid: z.string(),\n\ttitle: z.string(),\n\tfullStepsPerRotation: z.number().default(200),\n\tmaxPeakCurrent: z.number().min(0),\n\tpresets: z\n\t\t.array(\n\t\t\tz.discriminatedUnion('driver', [\n\t\t\t\tBaseStepperPreset.extend({\n\t\t\t\t\tdriver: z.enum(['TMC2130', 'TMC5160', 'TMC2240']),\n\t\t\t\t\tdriver_MSLUT0: z.number().optional(),\n\t\t\t\t\tdriver_MSLUT1: z.number().optional(),\n\t\t\t\t\tdriver_MSLUT2: z.number().optional(),\n\t\t\t\t\tdriver_MSLUT3: z.number().optional(),\n\t\t\t\t\tdriver_MSLUT4: z.number().optional(),\n\t\t\t\t\tdriver_MSLUT5: z.number().optional(),\n\t\t\t\t\tdriver_MSLUT6: z.number().optional(),\n\t\t\t\t\tdriver_MSLUT7: z.number().optional(),\n\t\t\t\t\tdriver_W0: z.number().optional(),\n\t\t\t\t\tdriver_W1: z.number().optional(),\n\t\t\t\t\tdriver_W2: z.number().optional(),\n\t\t\t\t\tdriver_W3: z.number().optional(),\n\t\t\t\t\tdriver_X1: z.number().optional(),\n\t\t\t\t\tdriver_X2: z.number().optional(),\n\t\t\t\t\tdriver_X3: z.number().optional(),\n\t\t\t\t\tdriver_START_SIN: z.number().optional(),\n\t\t\t\t\tdriver_START_SIN90: z.number().optional(),\n\t\t\t\t\tdriver_IHOLDDELAY: z.number().optional(),\n\t\t\t\t\tdriver_TPOWERDOWN: z.number().optional(),\n\t\t\t\t\tdriver_TBL: z.number().optional(),\n\t\t\t\t\tdriver_TOFF: z.number().optional(),\n\t\t\t\t\tdriver_HEND: z.number().optional(),\n\t\t\t\t\tdriver_HSTRT: z.number().optional(),\n\t\t\t\t\tdriver_PWM_AUTOSCALE: z.boolean().optional(),\n\t\t\t\t\tdriver_PWM_FREQ: z.number().optional(),\n\t\t\t\t\tdriver_PWM_GRAD: z.number().optional(),\n\t\t\t\t\tdriver_PWM_AMPL: z.number().optional(),\n\t\t\t\t\tdriver_SGT: z.number().optional(),\n\t\t\t\t}),\n\t\t\t\tBaseStepperPreset.extend({\n\t\t\t\t\tdriver: z.enum(['TMC2209']),\n\t\t\t\t\tdriver_TBL: z.number().optional(),\n\t\t\t\t\tdriver_TOFF: z.number().optional(),\n\t\t\t\t\tdriver_HEND: z.number().optional(),\n\t\t\t\t\tdriver_HSTRT: z.number().optional(),\n\t\t\t\t}),\n\t\t\t]),\n\t\t)\n\t\t.optional()\n\t\t.describe('Stepper presets are tightly coupled to the driver type, sense_resistor, stepper, voltage and current.'),\n});\n\nexport enum PrinterAxis {\n\t'x' = 'x',\n\t'dual_carriage' = 'dual_carriage',\n\t'x1' = 'x1',\n\t'y' = 'y',\n\t'y1' = 'y1',\n\t'y2' = 'y2',\n\t'z' = 'z',\n\t'z1' = 'z1',\n\t'z2' = 'z2',\n\t'z3' = 'z3',\n\t'extruder' = 'extruder',\n\t'extruder1' = 'extruder1',\n}\n\nexport const BasePrinterRail = z.object({\n\taxis: z.nativeEnum(PrinterAxis).describe('Axis of the rail'),\n\taxisDescription: z.string().optional().describe('Description of the axis'),\n\tdriver: Driver.describe('Stepper driver used on this axis'),\n\tvoltage: Voltage.default(StepperVoltage['24V']).describe('Voltage of the stepper driver'),\n\tstepper: Stepper.describe('Stepper motor connected to this axis'),\n\tmotorSlot: z.string().optional().describe('Optional board motor slot of the stepper driver'),\n\tcurrent: z.number().min(0),\n\trotationDistance: z.number().min(0).describe('Distance in mm the axis travels per stepper rotation'),\n\tgearRatio: z\n\t\t.string()\n\t\t.regex(/^\\d+:\\d+$/)\n\t\t.optional()\n\t\t.describe('Optional gear ratio of the axis'),\n\thomingSpeed: z.number().min(0).default(10).describe('Axis speed during homing in mm/s'),\n\tmicrostepping: z\n\t\t.number()\n\t\t.min(16)\n\t\t.max(256)\n\t\t.default(64)\n\t\t.describe(\n\t\t\t'Microstepping of the stepper driver, higher values increase resolution and lower noise but increases load on the MCU',\n\t\t),\n});\n\nexport const PrinterRailDefinition = BasePrinterRail.extend({\n\tmotorSlot: z.undefined(),\n\tperformanceMode: z\n\t\t.object({\n\t\t\tcurrent: z.number().min(0),\n\t\t\tvoltage: Voltage.default(StepperVoltage['24V']).describe('Voltage of the stepper driver in performance mode'),\n\t\t\thomingSpeed: z.number().min(0).optional().describe('Axis speed during homing in mm/s in performance mode'),\n\t\t})\n\t\t.optional(),\n});\n\nexport const SerializedPrinterRailDefinition = PrinterRailDefinition.extend({\n\tdriver: Driver.shape.id,\n\tstepper: Stepper.shape.id,\n});\n\nexport const PrinterRail = BasePrinterRail\n\t// Don't enforce this, warn about temperatures in the frontend instead.\n\t// .refine(\n\t// \t(data) => data.current <= data.stepper.maxPeakCurrent / 1.41,\n\t// \t'Current must be less than max peak current of the stepper divided by 1.41',\n\t// )\n\t.refine((data) => data.current <= data.driver.maxCurrent, 'Current must be less than max current of the driver');\n\nexport const SerializedPrinterRail = BasePrinterRail.extend({\n\tdriver: Driver.shape.id,\n\tstepper: Stepper.shape.id,\n});\n\nexport const Limits = z.object({\n\tmin: z.number(),\n\tmax: z.number(),\n\tendstop: z.number(),\n});\nexport type Limits = z.infer<typeof Limits>;\n","import { Board, BoardID } from '@/zods/boards';\nimport { Fan } from '@/zods/hardware';\nimport { PrinterDefinition, PrinterSizeDefinition } from '@/zods/printer';\nimport { PrinterAxis, PrinterRail, SerializedPrinterRail } from '@/zods/motion';\nimport {\n\tPartialToolheadConfiguration,\n\tSerializedPartialToolheadConfiguration,\n\tSerializedToolheadConfiguration,\n\tToolheadConfiguration,\n} from '@/zods/toolhead';\nimport { ToolheadHelper } from '@/helpers/toolhead';\nimport { z } from 'zod';\n\nexport const PrinterSize = z.union([PrinterSizeDefinition, z.number(), z.string()]).nullable().optional();\n\nconst BasePrinterConfiguration = z\n\t.object({\n\t\tprinter: PrinterDefinition,\n\t\tcontrolboard: Board,\n\t\ttoolheads: z.array(ToolheadConfiguration).min(1).max(2),\n\t\tsize: PrinterSize,\n\t\tcontrollerFan: Fan,\n\t\tperformanceMode: z.boolean().default(false),\n\t\tstealthchop: z.boolean().default(false),\n\t\tstandstillStealth: z.boolean().default(false),\n\t\trails: z.array(PrinterRail),\n\t})\n\t.strict()\n\t.transform((data, ctx) => {\n\t\tif (data.size == null) {\n\t\t\tdata.size = data.printer.sizes[Object.keys(data.printer.sizes)[0]];\n\t\t} else if (typeof data.size === 'number' || typeof data.size === 'string') {\n\t\t\tconst size = data.printer.sizes[data.size.toString()];\n\t\t\tif (size == null) {\n\t\t\t\tctx.addIssue({\n\t\t\t\t\tcode: z.ZodIssueCode.custom,\n\t\t\t\t\tmessage: `Size ${data.size} is not a valid size for a ${data.printer.name} config`,\n\t\t\t\t});\n\t\t\t\treturn z.NEVER;\n\t\t\t}\n\t\t\tdata.size = size;\n\t\t}\n\t\treturn data as Omit<typeof data, 'size'> & { size: z.output<typeof PrinterSizeDefinition> };\n\t});\n\nexport const PrinterConfiguration = BasePrinterConfiguration.superRefine((arg, ctx) => {\n\t// Driver count validation\n\tconst toolboardCount = arg.toolheads.map((t) => t.toolboard).filter(Boolean).length;\n\tif (toolboardCount + arg.controlboard.driverCount < arg.printer.driverCountRequired) {\n\t\tctx.addIssue({\n\t\t\tcode: z.ZodIssueCode.too_small,\n\t\t\tmessage: `Your combination of controlboard and toolboards do not have enough stepper drivers for a ${arg.printer.name} config`,\n\t\t\tminimum: arg.printer.driverCountRequired,\n\t\t\tinclusive: true,\n\t\t\ttype: 'number',\n\t\t});\n\t}\n}).superRefine((arg, ctx) => {\n\t// Rail motor slot validation\n\tconst toolheads = arg.toolheads.map((t) => new ToolheadHelper(t));\n\tconst errors = arg.rails\n\t\t.map((r, i) => {\n\t\t\tconst toolhead = toolheads.find((th) => th.getExtruderAxis() === r.axis);\n\t\t\tif (r.motorSlot != null) {\n\t\t\t\tconst conflicts = arg.rails.filter((pr) => {\n\t\t\t\t\tconst conflictingToolhead = toolheads.find((th) => th.getExtruderAxis() === pr.axis);\n\t\t\t\t\tif (pr.axis === r.axis || toolhead?.hasToolboard() != null) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\tif (conflictingToolhead?.hasToolboard != null) {\n\t\t\t\t\t\t// The rail is an extruder rail and the toolhead has a toolboard, no chance of conflict.\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\treturn pr.motorSlot === r.motorSlot;\n\t\t\t\t});\n\t\t\t\tconst railName = (axis: PrinterAxis) =>\n\t\t\t\t\taxis === 'extruder'\n\t\t\t\t\t\t? 'Extruder T0'\n\t\t\t\t\t\t: axis === PrinterAxis.extruder1\n\t\t\t\t\t\t\t? 'Extruder T1'\n\t\t\t\t\t\t\t: 'Stepper ' + axis.toLocaleUpperCase();\n\t\t\t\tif (conflicts.length === 1) {\n\t\t\t\t\tctx.addIssue({\n\t\t\t\t\t\tcode: z.ZodIssueCode.custom,\n\t\t\t\t\t\tmessage: `Motor slot ${r.motorSlot} is already in use on ${railName(conflicts[0].axis)}`,\n\t\t\t\t\t\tpath: ['rails', i, 'motorSlot'],\n\t\t\t\t\t});\n\t\t\t\t} else if (conflicts.length > 1) {\n\t\t\t\t\tctx.addIssue({\n\t\t\t\t\t\tcode: z.ZodIssueCode.custom,\n\t\t\t\t\t\tmessage: `Motor slot ${r.motorSlot} is already in use on ${conflicts\n\t\t\t\t\t\t\t.slice(0, -1)\n\t\t\t\t\t\t\t.map((cr) => railName(cr.axis))\n\t\t\t\t\t\t\t.join(', ')} and ${railName(conflicts[conflicts.length - 1].axis)}`,\n\t\t\t\t\t\tpath: ['rails', i, 'motorSlot'],\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn conflicts.length > 0 ? { rail: r, conflicts } : 0;\n\t\t\t}\n\t\t\treturn null;\n\t\t})\n\t\t.filter(Boolean);\n\tif (errors.length > 0) {\n\t\tctx.addIssue({\n\t\t\tcode: z.ZodIssueCode.custom,\n\t\t\tmessage: 'Motor slot conflicts detected',\n\t\t});\n\t}\n});\n\nexport const SerializedPrinterConfiguration = BasePrinterConfiguration.innerType()\n\t.extend({\n\t\tprinter: PrinterDefinition.shape.id,\n\t\tcontrolboard: BoardID,\n\t\ttoolheads: z.array(SerializedToolheadConfiguration).min(1).max(2),\n\t\tcontrollerFan: Fan.shape.id,\n\t\trails: z.array(SerializedPrinterRail),\n\t})\n\t.strict();\n\nexport const PartialPrinterConfiguration = BasePrinterConfiguration.innerType()\n\t.extend({\n\t\ttoolheads: z.array(PartialToolheadConfiguration).min(1).max(2),\n\t})\n\t.strict()\n\t.partial()\n\t.optional();\n\nexport const SerializedPartialPrinterConfiguration = SerializedPrinterConfiguration.extend({\n\ttoolheads: z.array(SerializedPartialToolheadConfiguration).min(1).max(2),\n})\n\t.strict()\n\t.partial();\n\nexport type PrinterConfiguration = z.infer<typeof PrinterConfiguration>;\nexport type PartialPrinterConfiguration = z.infer<typeof PartialPrinterConfiguration>;\nexport type SerializedPrinterConfiguration = z.infer<typeof SerializedPrinterConfiguration>;\nexport type SerializedPartialPrinterConfiguration = z.infer<typeof SerializedPartialPrinterConfiguration>;\n","import { z } from 'zod';\nimport { serverSchema } from '@/env/schema.mjs';\nimport path from 'path';\nimport { SerializedPrinterRailDefinition } from '@/zods/motion';\nimport { SerializedToolheadConfiguration, ToolheadConfiguration } from '@/zods/toolhead';\nimport { Fan } from '@/zods/hardware';\nimport { BoardID } from '@/zods/boards';\n\nlet startsWithServerValidation = '';\nif (process.env.RATOS_CONFIGURATION_PATH) {\n\tconst environment = serverSchema.parse(process.env);\n\tstartsWithServerValidation = path.join(environment.RATOS_CONFIGURATION_PATH, 'printers');\n}\n\nconst SpeedLimits = z\n\t.object({\n\t\tvelocity: z.number().min(0).describe('Maximum velocity for this printer'),\n\t\taccel: z.number().min(0).describe('Maximum acceleration for this printer'),\n\t\tz_velocity: z.number().min(0).describe('Maximum z velocity for this printer'),\n\t\tz_accel: z.number().min(0).describe('Maximum z acceleration for this printer'),\n\t\tsquare_corner_velocity: z.number().min(0).default(5).describe('Maximum square corner velocity for this printer'),\n\t\ttravel_velocity: z.number().min(0).default(200).describe('Maximum travel velocity for this printer'),\n\t\ttravel_accel: z.number().min(0).default(3000).describe('Maximum travel velocity for this printer'),\n\t})\n\t.strict();\n\nexport const PrinterSizeDefinition = z\n\t.object({\n\t\tx: z.number().min(0).describe('The print volume in X'),\n\t\ty: z.number().min(0).describe('The print volume in Y'),\n\t\tz: z.number().min(0).describe('The print volume in Z'),\n\t})\n\t.describe('The print volume of a printer');\n\nexport const PrinterDefinition = z\n\t.object({\n\t\tid: z.string(),\n\t\tname: z.string().describe('The name of the printer'),\n\t\tdescription: z.string().describe('A description of the printer'),\n\t\tmanufacturer: z.string().describe('The name of the manufacturer of this printer'),\n\t\tdocumentationLink: z.string().describe('Link to the RatOS documentation for this printer'),\n\t\timage: z.string().describe('Link to an image of the printer'),\n\t\tsizes: z.record(z.string(), PrinterSizeDefinition).describe('Size options for this printer'),\n\t\ttemplate: z.string().describe('Printer.cfg template for this printer'),\n\t\tpath: z.string().startsWith(startsWithServerValidation),\n\t\tdriverCountRequired: z.number().describe('Number of drivers required for this printer'),\n\t\tkinematics: z\n\t\t\t.union([z.literal('cartesian'), z.literal('corexy'), z.literal('hybrid-corexy'), z.literal('hybrid-corexy-idex')])\n\t\t\t.optional(),\n\t\tbedMargin: z\n\t\t\t.object({\n\t\t\t\tx: z.tuple([z.number().default(0), z.number().default(0)]),\n\t\t\t\ty: z.tuple([z.number().default(0), z.number().default(0)]),\n\t\t\t})\n\t\t\t.describe('Margin of available movement around the bed for this printer')\n\t\t\t.default({ x: [0, 0], y: [0, 0] }),\n\t\tspeedLimits: z\n\t\t\t.object({\n\t\t\t\tbasic: SpeedLimits,\n\t\t\t\tperformance: SpeedLimits.optional(),\n\t\t\t})\n\t\t\t.strict()\n\t\t\t.describe('Speed limits for this printer'),\n\t\tdefaults: z\n\t\t\t.object({\n\t\t\t\ttoolheads: z.array(SerializedToolheadConfiguration).describe('Default toolheads for this printer'),\n\t\t\t\tboard: BoardID.describe('Default board for this printer. Should be the name of the board directory.'),\n\t\t\t\trails: z.array(SerializedPrinterRailDefinition).describe('Default rails for this printer'),\n\t\t\t\tcontrollerFan: Fan.shape.id.optional().describe('Default controller fan for this printer'),\n\t\t\t})\n\t\t\t.strict()\n\t\t\t.describe('Default hardware for this printer'),\n\t})\n\t.describe('A RatOS supported 3d printer');\n\nexport const PrinterDefinitionWithResolvedToolheads = PrinterDefinition.extend({\n\tdefaults: PrinterDefinition.shape.defaults\n\t\t.extend({\n\t\t\ttoolheads: z.array(ToolheadConfiguration),\n\t\t})\n\t\t.strict(),\n});\n\nexport type PrinterDefinition = z.infer<typeof PrinterDefinition>;\nexport type PrinterDefinitionWithResolvedToolheads = z.infer<typeof PrinterDefinitionWithResolvedToolheads>;\n","import { z } from 'zod';\nimport { BoardID, Toolboard } from '@/zods/boards';\nimport { Hotend, Thermistor, Extruder, Probe, Endstop, Fan, Accelerometer, Nozzle } from '@/zods/hardware';\nimport { PrinterAxis } from '@/zods/motion';\nimport { getDefaultNozzle } from '@/data/nozzles';\n\nexport const BaseToolheadConfiguration = z\n\t.object({\n\t\thotend: Hotend,\n\t\tthermistor: Thermistor,\n\t\textruder: Extruder,\n\t\txEndstop: Endstop,\n\t\tyEndstop: Endstop,\n\t\thotendFan: Fan,\n\t\tpartFan: Fan,\n\t\tnozzle: Nozzle.default(getDefaultNozzle()),\n\t\txAccelerometer: Accelerometer.optional().nullable(),\n\t\tyAccelerometer: Accelerometer.optional().nullable(),\n\t\ttoolboard: Toolboard.nullable(),\n\t\tprobe: Probe.optional(),\n\t\taxis: z.literal(PrinterAxis.x).or(z.literal(PrinterAxis.dual_carriage)),\n\t\tdescription: z.string().optional(),\n\t\ttoolNumber: z.number().optional(),\n\t})\n\t.strict();\n\nexport const ToolNumber = z.union([z.literal(0), z.literal(1)]);\nexport const ToolAxis = z.union([\n\tz.literal(PrinterAxis.x),\n\tz.literal(PrinterAxis.dual_carriage),\n\tz.literal(PrinterAxis.extruder),\n\tz.literal(PrinterAxis.extruder1),\n]);\nexport const ToolOrAxis = z.union([ToolAxis, ToolNumber]);\nexport type ToolNumber = z.infer<typeof ToolNumber>;\nexport type ToolAxis = z.infer<typeof ToolAxis>;\nexport type ToolOrAxis = z.infer<typeof ToolOrAxis>;\n\nexport const ToolheadConfiguration = BaseToolheadConfiguration.refine(\n\t(data) => data.toolboard !== null || data.xEndstop.id !== 'endstop-toolboard',\n\t'Cannot use toolboard endstop without a toolboard',\n)\n\t.refine(\n\t\t(data) =>\n\t\t\tdata.toolboard !== null ||\n\t\t\t!['2pin-toolboard', '4pin-toolboard', '4pin-dedicated-toolboard'].includes(data.hotendFan.id),\n\t\t'Cannot use toolboard hotend fan without a toolboard',\n\t)\n\t.refine(\n\t\t(data) =>\n\t\t\tdata.toolboard !== null ||\n\t\t\t!['2pin-toolboard', '4pin-toolboard', '4pin-dedicated-toolboard'].includes(data.partFan.id),\n\t\t'Cannot use toolboard part cooling fan without a toolboard',\n\t);\n\nexport const PartialToolheadConfiguration = BaseToolheadConfiguration.partial().optional();\nexport const SerializedToolheadConfiguration = BaseToolheadConfiguration.extend({\n\thotend: Hotend.shape.id,\n\textruder: Extruder.shape.id,\n\tthermistor: Thermistor,\n\txEndstop: Endstop.shape.id,\n\tyEndstop: Endstop.shape.id,\n\thotendFan: Fan.shape.id,\n\tpartFan: Fan.shape.id,\n\txAccelerometer: Accelerometer.shape.id.optional().nullable(),\n\tyAccelerometer: Accelerometer.shape.id.optional().nullable(),\n\ttoolboard: BoardID.optional().nullable(),\n\tprobe: Probe.shape.id.optional().nullable(),\n}).strict();\nexport const SerializedPartialToolheadConfiguration = SerializedToolheadConfiguration.partial().optional();\n\nexport type ToolheadConfiguration<T extends boolean> = z.infer<typeof ToolheadConfiguration> & {\n\ttoolboard: T extends true ? Toolboard : null;\n};\nexport type PartialToolheadConfiguration = z.infer<typeof PartialToolheadConfiguration>;\nexport type SerializedToolheadConfiguration = z.infer<typeof SerializedToolheadConfiguration>;\nexport type SerializedPartialToolheadConfiguration = z.infer<typeof SerializedPartialToolheadConfiguration>;\n","// @ts-check\nimport { z } from 'zod';\n\n/**\n * Specify your server-side environment variables schema here.\n * This way you can ensure the app isn't built with invalid env vars.\n */\nexport const serverSchema = z.object({\n\tNODE_ENV: z.enum(['development', 'test', 'production']),\n\tRATOS_CONFIGURATION_PATH: z.string(),\n\tRATOS_SCRIPT_DIR: z.string(),\n\tKLIPPER_CONFIG_PATH: z.string(),\n\tKLIPPER_DIR: z.string(),\n\tKLIPPER_ENV: z.string(),\n\tMOONRAKER_DIR: z.string(),\n\tLOG_FILE: z.string(),\n\tRATOS_DATA_DIR: z.string(),\n});\n\n/**\n * Specify your client-side environment variables schema here.\n * This way you can ensure the app isn't built with invalid env vars.\n * To expose them to the client, prefix them with `NEXT_PUBLIC_`.\n */\nexport const clientSchema = z.object({\n\tNEXT_PUBLIC_KLIPPER_HOSTNAME: z.string().optional(),\n});\n\n/**\n * You can't destruct `process.env` as a regular object, so you have to do\n * it manually here. This is because Next.js evaluates this at build time,\n * and only used environment variables are included in the build.\n * @type {{ [k in keyof z.infer<typeof clientSchema>]: z.infer<typeof clientSchema>[k] | undefined }}\n */\nexport const clientEnv = {\n\tNEXT_PUBLIC_KLIPPER_HOSTNAME: process.env.NEXT_PUBLIC_KLIPPER_HOSTNAME,\n};\n"],"names":["globalPinoOpts","timestamp","PinoLogLevel","z","enum","PinoLogEvent","object","ts","number","messages","array","any","bindings","record","string","level","label","value","send","logEvent","trpcClient","clientLog","mutate","parse","logger","getLogger","pino","browser","asObject","serialize","transmit","write","badgeColorOptions","union","literal","badgeTextColorStyle","cva","variants","color","rose","red","yellow","orange","green","lime","blue","sky","indigo","purple","pink","brand","gray","plain","badgeBackgroundColorStyle","badgeBorderColorStyle","badgeStyle","size","sm","md","lg","defaultVariants","Badge","className","children","forwardProps","props","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsx","span","twMerge","moonrakerSyncEventEmitter","EventTarget","DispatchSaveAtomEvent","itemKey","dispatchEvent","CustomEvent","detail","moonrakerWriteEffect","params","onSet","debug","key","node","newValue","concat","trigger","SyncWithMoonraker","param","moonraker","useMoonraker","read","useCallback","getItem","DefaultValue","saveAtom","event","saveItem","useEffect","addEventListener","removeEventListener","RecoilSync","Drivers","Driver","id","title","type","protocol","senseResistor","coolingCurrentThreshold","voltages","maxCurrent","external","Strong","React","ref","jsx_runtime","strong","cn","setDisplayName","fanHelp","jsxs","Fragment","p","partFanOptions","config","toolheadConfig","fans","axis","PrinterAxis","x","push","badge","controlboard","name","fourPinFanConnectorCount","toolboard","toolNumber","hotendFanOptions","controllerFan","defaultControllerFan","getDefaultNozzle","diameter","findPreset","stepper","driver","voltage","current","performanceMode","presets","slice","sort","a","b","run_current","find","sense_resistor","Steppers","Stepper","maxPeakCurrent","driver_TBL","driver_TOFF","driver_HEND","driver_HSTRT","driver_IHOLDDELAY","driver_TPOWERDOWN","driver_PWM_FREQ","driver_PWM_GRAD","driver_PWM_AMPL","driver_PWM_AUTOSCALE","driver_SGT","fullStepsPerRotation","ToolheadHelper","hasToolboard","getToolboard","getMotionStepperName","dual_carriage","getMotionAxis","getToolboardName","getTool","getShortToolName","getDescription","_this_config_description","description","getExtruderAxis","extruder1","extruder","getToolCommand","getSerialSuffix","getExtruder","getHotend","hotend","getNozzle","_this_config_nozzle","nozzle","getThermistor","thermistor","getXEndstop","xEndstop","getYEndstop","yEndstop","getXAccelerometer","xAccelerometer","getYAccelerometer","yAccelerometer","getXAccelerometerName","_this_getXAccelerometer","getYAccelerometerName","_this_getYAccelerometer","getChangeSet","changes","changeSet","Object","keys","forEach","getConfig","change","deepEqual","parsed","PartialToolheadConfiguration","safeParse","getProbe","probe","getPartFan","partFan","getHotendFan","hotendFan","serializeToolheadConfiguration","constructor","toolhead","_len","arguments","length","inputs","_key","clsx","Component","displayName","cachedPrinters","readPrinterAtom","printer","PrinterState","printerId","PrinterDefinitionWithResolvedToolheads","shape","success","newPrinter","data","query","readPrinterRailAtom","param1","printerRailState","PrinterRailState","parsedRail","SerializedPrinterRail","printerRailDefault","defaults","rails","r","parsedRailRepaired","atom","default","effects","syncEffect","Promise","setTimeout","refine","getRefineCheckerForZodSchema","nullable","LoadablePrinterState","selector","get","loadable","noWait","hasValue","contents","hasError","loading","state","PrinterSizeState","PrinterSize","ControlboardState","board","boardId","path","BoardPath","boardReq","mcu","boards","boardFilters","newBoard","Board","atomFamily","PrinterRailsState","map","railState","rail","deserializePrinterRail","set","values","serializePrinterRail","PrinterToolheadState","tNum","printerToolheadState","parsedToolhead","ToolheadConfiguration","freshToolboard","toolboardPath","maybeToolboard","Toolboard","console","error","BaseToolheadConfiguration","extend","ToolNumber","selectorFamily","deserializeToolheadConfiguration","th","printerConfig","PrinterToolheadsState","waitForAll","toolheads","i","filter","Boolean","reset","LoadablePrinterToolheadsState","deserializeDriver","d","driverId","deserializeStepper","stepperId","BasePrinterRail","deserializePrinterRailDefinition","PrinterRailDefinition","stringToTitleObject","serializePartialToolheadConfiguration","undefined","AxisPinPrefix","AllPins","x_step_pin","optional","x_dir_pin","x_enable_pin","x_uart_pin","x_diag_pin","x_endstop_pin","x1_step_pin","x1_dir_pin","x1_enable_pin","x1_uart_pin","x1_diag_pin","x1_endstop_pin","dual_carriage_step_pin","dual_carriage_dir_pin","dual_carriage_enable_pin","dual_carriage_uart_pin","dual_carriage_diag_pin","dual_carriage_endstop_pin","y_step_pin","y_dir_pin","y_enable_pin","y_uart_pin","y_diag_pin","y_endstop_pin","y1_step_pin","y1_dir_pin","y1_enable_pin","y1_uart_pin","y1_diag_pin","y1_endstop_pin","y2_step_pin","y2_dir_pin","y2_enable_pin","y2_uart_pin","y2_diag_pin","y2_endstop_pin","z0_step_pin","z0_dir_pin","z0_enable_pin","z0_uart_pin","z0_diag_pin","z1_step_pin","z1_dir_pin","z1_enable_pin","z1_uart_pin","z1_diag_pin","z2_step_pin","z2_dir_pin","z2_enable_pin","z2_uart_pin","z2_diag_pin","z3_step_pin","z3_dir_pin","z3_enable_pin","z3_uart_pin","z3_diag_pin","e_step_pin","e_dir_pin","e_enable_pin","e_uart_pin","e_diag_pin","e_heater_pin","e_sensor_pin","stepper_spi_mosi_pin","stepper_spi_miso_pin","stepper_spi_sclk_pin","adxl345_cs_pin","bltouch_sensor_pin","bltouch_control_pin","probe_pin","fan_part_cooling_pin","fan_toolhead_cooling_pin","fan_controller_board_pin","heater_bed_heating_pin","heater_bed_sensor_pin","PinMap","pinAliasPrefixToPrinterAxis","x1","y","y1","y2","z0","z1","z2","z3","e","e1","nativeEnum","transform","v","_Object_keys_find","pa","and","or","UARTPins","uart_pin","uart_address","rx_pin","tx_pin","SPIPins","cs_pin","spi_bus","spi_software_mosi_pin","spi_software_miso_pin","spi_software_sclk_pin","hasSPI","slot","hasUART","MotorSlotPins","step_pin","dir_pin","enable_pin","diag_pin","endstop_pin","MotorSlot","message","innerType","omit","partial","MotorSlotKey","BoardID","BoardSerialPath","integratedDrivers","motorSlots","isToolboard","boolean","isHost","serialPath","manufacturer","firmwareBinaryName","compileScript","flashScript","flashInstructions","disableAutoFlash","documentationLink","hasQuirksFiles","driverCount","extruderlessConfig","driverVoltages","Voltage","hasMcuTempSensor","alternativePT1000Resistor","outputPins","pin","min","max","dfu","dfuBootImage","flashDevice","instructions","reminder","hasBoot0Jumper","stepperSPI","software","sclk","mosi","miso","hardware","bus","ADXL345SPI","LIS2DW","detected","thermistors","startsWithServerValidation","process","env","RATOS_CONFIGURATION_PATH","environment","serverSchema","hardwareType","startsWith","endsWith","Thermistor","Hotend","flowType","Nozzle","Extruder","Probe","Endstop","KlipperAccelSensorNameSchame","AccelerometerType","Accelerometer","accelerometerType","klipperAccelSensorSchema","Fan","StepperVoltage","Voltages","getSupportedVoltages","includes","matchesDefaultRail","defaultRail","BaseStepperPreset","driver_MSLUT0","driver_MSLUT1","driver_MSLUT2","driver_MSLUT3","driver_MSLUT4","driver_MSLUT5","driver_MSLUT6","driver_MSLUT7","driver_W0","driver_W1","driver_W2","driver_W3","driver_X1","driver_X2","driver_X3","driver_START_SIN","driver_START_SIN90","describe","axisDescription","motorSlot","rotationDistance","gearRatio","regex","homingSpeed","microstepping","SerializedPrinterRailDefinition","PrinterRail","endstop","PrinterSizeDefinition","BasePrinterConfiguration","PrinterDefinition","stealthchop","standstillStealth","strict","ctx","sizes","toString","addIssue","code","ZodIssueCode","custom","NEVER","PrinterConfiguration","superRefine","arg","toolboardCount","t","driverCountRequired","too_small","minimum","inclusive","errors","conflicts","conflictingToolhead","pr","railName","toLocaleUpperCase","cr","join","SerializedPrinterConfiguration","SerializedToolheadConfiguration","PartialPrinterConfiguration","SerializedPartialPrinterConfiguration","SerializedPartialToolheadConfiguration","SpeedLimits","velocity","accel","z_velocity","z_accel","square_corner_velocity","travel_velocity","travel_accel","image","template","kinematics","bedMargin","tuple","speedLimits","basic","performance","ToolAxis","NODE_ENV","RATOS_SCRIPT_DIR","KLIPPER_CONFIG_PATH","KLIPPER_DIR","KLIPPER_ENV","MOONRAKER_DIR","LOG_FILE","RATOS_DATA_DIR","NEXT_PUBLIC_KLIPPER_HOSTNAME"],"sourceRoot":""}