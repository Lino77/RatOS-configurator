{"version":3,"file":"static/chunks/7370-099edd457bc8ee17.js","mappings":"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","sources":["webpack://_N_E/ignored|/home/runner/work/RatOS-configurator/RatOS-configurator/src/node_modules/.pnpm/@tensorflow+tfjs-core@4.17.0_encoding@0.1.13/node_modules/@tensorflow/tfjs-core/dist/platforms|node-fetch","webpack://_N_E/ignored|/home/runner/work/RatOS-configurator/RatOS-configurator/src/node_modules/.pnpm/@tensorflow+tfjs-core@4.17.0_encoding@0.1.13/node_modules/@tensorflow/tfjs-core/dist/platforms|util","webpack://_N_E/./tailwind.config.ts","webpack://_N_E/./app/_helpers/colors.ts","webpack://_N_E/./app/analysis/chart-theme.ts","webpack://_N_E/./app/analysis/charts.tsx","webpack://_N_E/./app/analysis/hooks.tsx","webpack://_N_E/./app/analysis/periodogram.ts","webpack://_N_E/./components/common/full-load-screen.tsx","webpack://_N_E/./components/common/no-ssr.tsx","webpack://_N_E/./components/common/spinner.tsx","webpack://_N_E/./hooks/isClient.tsx","webpack://_N_E/./hooks/useKlippyStateHandler.tsx","webpack://_N_E/./zods/analysis.tsx","webpack://_N_E/<anon>"],"sourcesContent":["/* (ignored) */","/* (ignored) */","import defaultTheme from 'tailwindcss/defaultTheme';\nimport { Config } from 'tailwindcss/types/config';\n\nimport flattenColorPalette from 'tailwindcss/lib/util/flattenColorPalette';\nimport convert from 'color-convert';\nimport svgToDataUri from 'mini-svg-data-uri';\n\nexport default {\n\tdarkMode: 'class',\n\tcontent: [\n\t\t'./pages/**/*.{js,ts,jsx,tsx}',\n\t\t'./components/**/*.{js,ts,jsx,tsx}',\n\t\t'./helpers/**/*.{js,ts,jsx,tsx}',\n\t\t'./app/**/*.{js,ts,jsx,tsx}',\n\t],\n\ttheme: {\n\t\tcontainer: {\n\t\t\tcenter: true,\n\t\t\tpadding: '2rem',\n\t\t\tscreens: {\n\t\t\t\t'2xl': '1400px',\n\t\t\t},\n\t\t},\n\t\textend: {\n\t\t\tfontFamily: {\n\t\t\t\tsans: ['var(--inter-font)', ...defaultTheme.fontFamily.sans],\n\t\t\t},\n\t\t\tkeyframes: {\n\t\t\t\tping: {\n\t\t\t\t\t'0%': {\n\t\t\t\t\t\topacity: '100',\n\t\t\t\t\t},\n\t\t\t\t\t'75%, 100%': {\n\t\t\t\t\t\ttransform: 'scale(2)',\n\t\t\t\t\t\topacity: '0',\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t'accordion-down': {\n\t\t\t\t\tfrom: { height: '0' },\n\t\t\t\t\tto: { height: 'var(--radix-accordion-content-height)' },\n\t\t\t\t},\n\t\t\t\t'accordion-up': {\n\t\t\t\t\tfrom: { height: 'var(--radix-accordion-content-height)' },\n\t\t\t\t\tto: { height: '0' },\n\t\t\t\t},\n\t\t\t},\n\t\t\tanimation: {\n\t\t\t\t'spin-fast': 'spin 0.5s linear infinite',\n\t\t\t\t'accordion-down': 'accordion-down 0.2s ease-out',\n\t\t\t\t'accordion-up': 'accordion-up 0.2s ease-out',\n\t\t\t},\n\t\t\tcolors: {\n\t\t\t\tbrand: {\n\t\t\t\t\t50: '#f2ffe1',\n\t\t\t\t\t100: '#deffcc',\n\t\t\t\t\t200: '#bdff99',\n\t\t\t\t\t300: '#9cff66',\n\t\t\t\t\t400: '#7bff33',\n\t\t\t\t\t500: '#5aff00',\n\t\t\t\t\t600: '#48cc00',\n\t\t\t\t\t700: '#369900',\n\t\t\t\t\t800: '#246600',\n\t\t\t\t\t900: '#123300',\n\t\t\t\t},\n\t\t\t\tborder: 'hsl(var(--border))',\n\t\t\t\tinput: 'hsl(var(--input))',\n\t\t\t\tring: 'hsl(var(--ring))',\n\t\t\t\tbackground: 'hsl(var(--background))',\n\t\t\t\tforeground: 'hsl(var(--foreground))',\n\t\t\t\tprimary: {\n\t\t\t\t\tDEFAULT: 'hsl(var(--brand-400) / 50%)',\n\t\t\t\t\tforeground: 'hsl(var(--white))',\n\t\t\t\t},\n\t\t\t\tsecondary: {\n\t\t\t\t\tDEFAULT: 'hsl(var(--secondary))',\n\t\t\t\t\tforeground: 'hsl(var(--white))',\n\t\t\t\t},\n\t\t\t\tdestructive: {\n\t\t\t\t\tDEFAULT: 'hsl(var(--red-400))',\n\t\t\t\t\tforeground: 'hsl(var(--black))',\n\t\t\t\t},\n\t\t\t\tmuted: {\n\t\t\t\t\tDEFAULT: 'hsl(var(--muted))',\n\t\t\t\t\tforeground: 'hsl(var(--muted-foreground))',\n\t\t\t\t},\n\t\t\t\taccent: {\n\t\t\t\t\tDEFAULT: 'hsl(var(--accent))',\n\t\t\t\t\tforeground: 'hsl(var(--white))',\n\t\t\t\t},\n\t\t\t\tpopover: {\n\t\t\t\t\tDEFAULT: 'hsl(var(--popover))',\n\t\t\t\t\tforeground: 'hsl(var(--popover-foreground))',\n\t\t\t\t},\n\t\t\t\tcard: {\n\t\t\t\t\tDEFAULT: 'hsl(var(--card))',\n\t\t\t\t\tforeground: 'hsl(var(--card-foreground))',\n\t\t\t\t},\n\t\t\t},\n\t\t\tborderRadius: {\n\t\t\t\tlg: 'var(--radius)',\n\t\t\t\tmd: 'calc(var(--radius) - 2px)',\n\t\t\t\tsm: 'calc(var(--radius) - 4px)',\n\t\t\t},\n\t\t\tfontSize: {\n\t\t\t\t'2xs': '0.6rem',\n\t\t\t\ts: '0.8125rem',\n\t\t\t},\n\t\t\tcontainers: {\n\t\t\t\t'screen-sm': '640px',\n\t\t\t\t'screen-md': '768px',\n\t\t\t\t'screen-lg': '1024px',\n\t\t\t\t'screen-xl': '1280px',\n\t\t\t\t'screen-2xl': '1536px',\n\t\t\t},\n\t\t},\n\t},\n\tplugins: [\n\t\trequire('@tailwindcss/forms'),\n\t\trequire('@tailwindcss/container-queries'),\n\t\trequire('tailwindcss-animate'),\n\t\trequire('tailwind-scrollbar')({ nocompatible: true }),\n\t\taddVariablesForColors,\n\t\tfunction ({ matchUtilities, theme }: any) {\n\t\t\tmatchUtilities(\n\t\t\t\t{\n\t\t\t\t\t'bg-grid': (value: any) => ({\n\t\t\t\t\t\tbackgroundImage: `url(\"${svgToDataUri(\n\t\t\t\t\t\t\t`<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\" width=\"32\" height=\"32\" fill=\"none\" stroke=\"${value}\"><path d=\"M0 .5H31.5V32\"/></svg>`,\n\t\t\t\t\t\t)}\")`,\n\t\t\t\t\t}),\n\t\t\t\t\t'bg-grid-small': (value: any) => ({\n\t\t\t\t\t\tbackgroundImage: `url(\"${svgToDataUri(\n\t\t\t\t\t\t\t`<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\" width=\"8\" height=\"8\" fill=\"none\" stroke=\"${value}\"><path d=\"M0 .5H31.5V32\"/></svg>`,\n\t\t\t\t\t\t)}\")`,\n\t\t\t\t\t}),\n\t\t\t\t\t'bg-dot': (value: any) => ({\n\t\t\t\t\t\tbackgroundImage: `url(\"${svgToDataUri(\n\t\t\t\t\t\t\t`<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\" width=\"16\" height=\"16\" fill=\"none\"><circle fill=\"${value}\" id=\"pattern-circle\" cx=\"10\" cy=\"10\" r=\"1.6257413380501518\"></circle></svg>`,\n\t\t\t\t\t\t)}\")`,\n\t\t\t\t\t}),\n\t\t\t\t},\n\t\t\t\t{ values: flattenColorPalette(theme('backgroundColor')), type: 'color' },\n\t\t\t);\n\t\t},\n\t],\n} satisfies Config;\n\nfunction addVariablesForColors({ addBase, theme }: any) {\n\tlet allColors = flattenColorPalette(theme('colors'));\n\tlet newVars = Object.fromEntries(\n\t\tObject.entries(allColors).map(([key, val]) => {\n\t\t\tconst parsed = convert.hex.hsl(val);\n\t\t\treturn [`--${key}`, val.startsWith('#') ? `${parsed[0]} ${parsed[1]}% ${parsed[2]}%` : val];\n\t\t}),\n\t);\n\n\taddBase({\n\t\t':root': newVars,\n\t});\n}\n","import resolveConfig from 'tailwindcss/resolveConfig';\nimport tailwindConfig from '@/tailwind.config';\nconst fullConfig = resolveConfig(tailwindConfig);\ntype TWShade<T extends keyof typeof fullConfig.theme.colors> = {\n\t[Color in T]: ExplicitObject<typeof fullConfig.theme.colors>[Color] extends string | { DEFAULT: string }\n\t\t? never\n\t\t: Color;\n}[T];\nexport type TWShadeableColorName = TWShade<keyof typeof fullConfig.theme.colors>;\nexport const twColors = fullConfig.theme.colors;\nexport const isShadableColor = (color: string): color is TWShadeableColorName => {\n\tconst twColor = twColors[color as keyof typeof twColors];\n\treturn twColor != null && typeof twColor !== 'string' && !('DEFAULT' in twColor);\n};\nexport const shadableTWColors = Object.fromEntries(\n\tObject.keys(twColors)\n\t\t.filter(isShadableColor)\n\t\t.map((c) => [c, twColors[c]]),\n) as { [color in TWShadeableColorName]: (typeof twColors)[TWShadeableColorName] };\n","import { SciChartJSDarkv2Theme } from 'scichart';\n\nexport class ChartTheme extends SciChartJSDarkv2Theme {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.sciChartBackground = 'transparent';\n\t\tthis.loadingAnimationBackground = 'transparent';\n\t\tthis.axisBandsFill = '#20212333';\n\t\tthis.majorGridLineBrush = '#AAAAAA37';\n\t\tthis.minorGridLineBrush = '#77777719';\n\t\tthis.strokePalette = ['#F48420', '#AE408E', '#209FD9', '#264B93'];\n\t\tthis.fillPalette = ['#F4842077', '#AE408E77', '#209FD977', '#264B9377'];\n\t\tthis.isLightBackground = false;\n\t}\n}\n","'use client';\nimport {\n\tXyDataSeries,\n\tSciChartSurface,\n\tThickness,\n\tNumericAxis,\n\tEAutoRange,\n\tNumberRange,\n\tEAxisAlignment,\n\tFastLineRenderableSeries,\n\tENumericFormat,\n\teasing,\n\tFastMountainRenderableSeries,\n\tPaletteFactory,\n\tGradientParams,\n\tPoint,\n\tISciChart2DDefinition,\n\tEAxisType,\n\tESeriesType,\n\tWaveAnimation,\n\tCategoryAxis,\n\tGlowEffect,\n\tSeriesInfo,\n\tRolloverLegendSvgAnnotation,\n\tRolloverModifier,\n\tEXyDirection,\n\tCursorModifier,\n\tRolloverTooltipSvgAnnotation,\n\tTRolloverTooltipSvgTemplate,\n\tparseColorToTArgb,\n\tparseTArgbToHtmlColor,\n\tEVerticalAnchorPoint,\n\tECoordinateMode,\n\tEExecuteOn,\n\tCursorTooltipSvgAnnotation,\n\tEDataSeriesType,\n\tXyySeriesInfo,\n} from 'scichart';\nimport { useChart } from '@/app/analysis/hooks';\nimport { ChartTheme } from '@/app/analysis/chart-theme';\n\nimport { inter } from '@/app/fonts';\nimport { TWShadeableColorName, shadableTWColors, twColors } from '@/app/_helpers/colors';\nimport { useCallback } from 'react';\n\nexport const ADXL_STREAM_BUFFER_SIZE = 128;\nconst historyCount = 200;\n\nSciChartSurface.configure({\n\twasmUrl: '/configure/scichart2d.wasm',\n\tdataUrl: '/configure/scichart2d.data',\n});\nSciChartSurface.UseCommunityLicense();\nconst theme = new ChartTheme();\n\nexport const SIGNAL_CHART_AXIS_SIGNAL_ID = 'signal';\nexport const SIGNAL_CHART_AXIS_HISTORY_ID = 'history';\nexport const SIGNAL_CHART_SERIES_SIGNAL_ID = 'signal-series';\nexport const SIGNAL_CHART_SERIES_HISTORY_ID = 'history-series';\nexport const SIGNAL_CHART_AXIS_AMPLITUDE_ID = 'amplitude';\nconst PSDLength = 131;\n\ntype ADXLAxes = 'x' | 'y' | 'z';\n\nexport const getAxisColorName = (axis: ADXLAxes): TWShadeableColorName => {\n\tswitch (axis) {\n\t\tcase 'x':\n\t\t\treturn `yellow`;\n\t\tcase 'y':\n\t\t\treturn `sky`;\n\t\tcase 'z':\n\t\t\treturn `rose`;\n\t\tdefault:\n\t\t\treturn `brand`;\n\t}\n};\n\nexport const getAxisColor = (axis: ADXLAxes) => {\n\treturn twColors[getAxisColorName(axis)];\n};\n\nexport const SignalChartMinimumRange = new NumberRange(-10000, 10000);\n\nexport const useADXLSignalChart = (axis: ADXLAxes) => {\n\treturn useChart(\n\t\tnull,\n\t\tuseCallback(\n\t\t\t(surface: SciChartSurface) => {\n\t\t\t\tconst color = getAxisColor(axis);\n\t\t\t\t// Category axis as the actual time doesn't matter (samples are evenly spaced).\n\t\t\t\tconst xAxis = new CategoryAxis(surface.webAssemblyContext2D, {\n\t\t\t\t\tid: SIGNAL_CHART_AXIS_SIGNAL_ID + axis,\n\t\t\t\t\tautoRange: EAutoRange.Always,\n\t\t\t\t\tmaxAutoTicks: ADXL_STREAM_BUFFER_SIZE,\n\t\t\t\t\tdrawLabels: false,\n\t\t\t\t\tdrawMinorTickLines: false,\n\t\t\t\t\tdrawMajorTickLines: false,\n\t\t\t\t\tdrawMajorBands: false,\n\t\t\t\t\tdrawMinorGridLines: false,\n\t\t\t\t\tdrawMajorGridLines: false,\n\t\t\t\t});\n\t\t\t\tsurface.xAxes.add(xAxis);\n\n\t\t\t\t// Category axis as the actual time doesn't matter (samples are evenly spaced).\n\t\t\t\tconst xHistoryAxis = new CategoryAxis(surface.webAssemblyContext2D, {\n\t\t\t\t\tid: SIGNAL_CHART_AXIS_HISTORY_ID + axis,\n\t\t\t\t\tautoRange: EAutoRange.Always,\n\t\t\t\t\tdrawLabels: false,\n\t\t\t\t\tdrawMinorGridLines: false,\n\t\t\t\t\tdrawMajorTickLines: false,\n\t\t\t\t});\n\t\t\t\tsurface.xAxes.add(xHistoryAxis);\n\n\t\t\t\tconst yAxis = new NumericAxis(surface.webAssemblyContext2D, {\n\t\t\t\t\tautoRange: EAutoRange.Never,\n\t\t\t\t\tvisibleRange: new NumberRange(-1000, 1000),\n\t\t\t\t\tdrawLabels: false,\n\t\t\t\t\tid: SIGNAL_CHART_AXIS_AMPLITUDE_ID + axis,\n\t\t\t\t\tdrawMinorTickLines: false,\n\t\t\t\t\tdrawMajorTickLines: false,\n\t\t\t\t\tdrawMajorBands: false,\n\t\t\t\t\tdrawMinorGridLines: false,\n\t\t\t\t\tdrawMajorGridLines: false,\n\t\t\t\t\taxisAlignment: EAxisAlignment.Left,\n\t\t\t\t});\n\t\t\t\tsurface.yAxes.add(yAxis);\n\n\t\t\t\tconst signalData = new XyDataSeries(surface.webAssemblyContext2D, {\n\t\t\t\t\tfifoCapacity: ADXL_STREAM_BUFFER_SIZE,\n\t\t\t\t\tcontainsNaN: false,\n\t\t\t\t\tisSorted: true,\n\t\t\t\t\tdataSeriesName: axis.toLocaleUpperCase(),\n\t\t\t\t\tdataIsSortedInX: true,\n\t\t\t\t\txValues: Array(ADXL_STREAM_BUFFER_SIZE)\n\t\t\t\t\t\t.fill(0)\n\t\t\t\t\t\t.map((_, i) => i),\n\t\t\t\t\tyValues: Array(ADXL_STREAM_BUFFER_SIZE).fill(0),\n\t\t\t\t});\n\n\t\t\t\t// Line series to render the live signal data.\n\t\t\t\tconst signalSeries = new FastLineRenderableSeries(surface.webAssemblyContext2D, {\n\t\t\t\t\txAxisId: SIGNAL_CHART_AXIS_SIGNAL_ID + axis,\n\t\t\t\t\tyAxisId: SIGNAL_CHART_AXIS_AMPLITUDE_ID + axis,\n\t\t\t\t\tstroke: color[400],\n\t\t\t\t\tstrokeThickness: 2,\n\t\t\t\t\tdataSeries: signalData,\n\t\t\t\t\teffect: new GlowEffect(surface.webAssemblyContext2D, {\n\t\t\t\t\t\tintensity: 1,\n\t\t\t\t\t\trange: 1,\n\t\t\t\t\t}),\n\t\t\t\t});\n\n\t\t\t\tsurface.renderableSeries.add(signalSeries);\n\n\t\t\t\tconst historyData = new XyDataSeries(surface.webAssemblyContext2D, {\n\t\t\t\t\tfifoCapacity: ADXL_STREAM_BUFFER_SIZE * historyCount,\n\t\t\t\t\tcontainsNaN: false,\n\t\t\t\t\tisSorted: true,\n\t\t\t\t\tdataSeriesName: axis.toLocaleUpperCase() + ' History',\n\t\t\t\t\tdataIsSortedInX: true,\n\t\t\t\t\txValues: Array(ADXL_STREAM_BUFFER_SIZE * historyCount)\n\t\t\t\t\t\t.fill(0)\n\t\t\t\t\t\t.map((_, i) => i),\n\t\t\t\t\tyValues: Array(ADXL_STREAM_BUFFER_SIZE * historyCount).fill(0),\n\t\t\t\t});\n\n\t\t\t\t// Line series to render the historical signal data (last 200 buffers)\n\t\t\t\tconst historySeries = new FastLineRenderableSeries(surface.webAssemblyContext2D, {\n\t\t\t\t\tstroke: color[500] + '22',\n\t\t\t\t\tstrokeThickness: 1,\n\t\t\t\t\topacity: 0.6,\n\t\t\t\t\tyAxisId: SIGNAL_CHART_AXIS_AMPLITUDE_ID + axis,\n\t\t\t\t\txAxisId: SIGNAL_CHART_AXIS_HISTORY_ID + axis,\n\t\t\t\t\tdataSeries: historyData,\n\t\t\t\t});\n\t\t\t\tsurface.renderableSeries.add(historySeries);\n\n\t\t\t\tsignalSeries.animation = new WaveAnimation({\n\t\t\t\t\tduration: 500,\n\t\t\t\t});\n\t\t\t\thistorySeries.animation = new WaveAnimation({\n\t\t\t\t\tduration: 500,\n\t\t\t\t});\n\n\t\t\t\treturn {\n\t\t\t\t\tsignalData: signalData,\n\t\t\t\t\tsignalSeries: signalSeries,\n\t\t\t\t\thistoryData: historyData,\n\t\t\t\t\thistorySeries: historySeries,\n\t\t\t\t\txAxis,\n\t\t\t\t\txHistoryAxis,\n\t\t\t\t\tyAxis,\n\t\t\t\t};\n\t\t\t},\n\t\t\t[axis],\n\t\t),\n\t);\n};\n\nexport const PSD_CHART_AXIS_AMPLITUDE_ID = 'amplitude';\nexport const PSDChartMinimumYVisibleRange = new NumberRange(0, 1500);\nexport const PSDChardNoSeriesDefinition: ISciChart2DDefinition = {\n\tsurface: {\n\t\ttheme: theme,\n\t\tpadding: Thickness.fromNumber(0),\n\t},\n\txAxes: [\n\t\t{\n\t\t\ttype: EAxisType.NumericAxis,\n\t\t\toptions: {\n\t\t\t\tvisibleRange: new NumberRange(0, 200),\n\t\t\t\tlabelStyle: {\n\t\t\t\t\t...inter.style,\n\t\t\t\t\tfontSize: 13,\n\t\t\t\t\tfontWeight: '600',\n\t\t\t\t\tpadding: new Thickness(15, 15, 15, 15),\n\t\t\t\t},\n\t\t\t\tlabelPostfix: 'Hz',\n\t\t\t\tdrawMinorGridLines: true,\n\t\t\t\tminorsPerMajor: 10,\n\t\t\t\tdrawMinorTickLines: false,\n\t\t\t\tdrawMajorTickLines: false,\n\t\t\t\tdrawMajorBands: false,\n\t\t\t},\n\t\t},\n\t],\n\tyAxes: [\n\t\t{\n\t\t\ttype: EAxisType.NumericAxis,\n\t\t\toptions: {\n\t\t\t\tid: PSD_CHART_AXIS_AMPLITUDE_ID,\n\t\t\t\taxisAlignment: EAxisAlignment.Left,\n\t\t\t\tgrowBy: new NumberRange(0, 0.1),\n\t\t\t\tvisibleRange: PSDChartMinimumYVisibleRange,\n\t\t\t\tlabelFormat: ENumericFormat.Exponential,\n\t\t\t\tlabelStyle: {\n\t\t\t\t\t...inter.style,\n\t\t\t\t\tfontSize: 13,\n\t\t\t\t\tfontWeight: '600',\n\t\t\t\t\tpadding: new Thickness(15, 15, 15, 15),\n\t\t\t\t},\n\t\t\t\tautoRangeAnimation: {\n\t\t\t\t\tduration: 140,\n\t\t\t\t\tanimateInitialRanging: false,\n\t\t\t\t\tanimateSubsequentRanging: true,\n\t\t\t\t\teasing: easing.inOutCubic,\n\t\t\t\t},\n\t\t\t\tdrawMinorGridLines: true,\n\t\t\t\tdrawMinorTickLines: false,\n\t\t\t\tdrawMajorTickLines: false,\n\t\t\t\tdrawMajorBands: false,\n\t\t\t\taxisTitleStyle: { fontSize: 10 },\n\t\t\t},\n\t\t},\n\t],\n};\nexport const PSDChartDefinition: ISciChart2DDefinition = {\n\t...PSDChardNoSeriesDefinition,\n\tseries: [\n\t\t{\n\t\t\ttype: ESeriesType.MountainSeries,\n\t\t\toptions: {\n\t\t\t\tid: 'total',\n\t\t\t\tyAxisId: PSD_CHART_AXIS_AMPLITUDE_ID,\n\t\t\t\tstrokeThickness: 3,\n\t\t\t\tfill: twColors.brand[500] + '22',\n\t\t\t\tstroke: twColors.brand[400],\n\t\t\t},\n\t\t\txyData: {\n\t\t\t\tcontainsNaN: false,\n\t\t\t\tisSorted: true,\n\t\t\t\txValues: Array(PSDLength)\n\t\t\t\t\t.fill(0)\n\t\t\t\t\t.map((_, i) => Math.floor((i / PSDLength) * 200)),\n\t\t\t\tyValues: Array(PSDLength)\n\t\t\t\t\t.fill(0)\n\t\t\t\t\t.map((_, i) => 0),\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\ttype: ESeriesType.LineSeries,\n\t\t\toptions: {\n\t\t\t\tid: 'z',\n\t\t\t\tyAxisId: PSD_CHART_AXIS_AMPLITUDE_ID,\n\t\t\t\tstrokeThickness: 3,\n\t\t\t\tstroke: getAxisColor('z')[400],\n\t\t\t},\n\t\t\txyData: {\n\t\t\t\tcontainsNaN: false,\n\t\t\t\tisSorted: true,\n\t\t\t\txValues: Array(PSDLength)\n\t\t\t\t\t.fill(0)\n\t\t\t\t\t.map((_, i) => Math.floor((i / PSDLength) * 200)),\n\t\t\t\tyValues: Array(PSDLength)\n\t\t\t\t\t.fill(0)\n\t\t\t\t\t.map((_, i) => 0),\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\ttype: ESeriesType.LineSeries,\n\t\t\toptions: {\n\t\t\t\tid: 'y',\n\t\t\t\tyAxisId: PSD_CHART_AXIS_AMPLITUDE_ID,\n\t\t\t\tstrokeThickness: 3,\n\t\t\t\tstroke: getAxisColor('y')[400],\n\t\t\t},\n\t\t\txyData: {\n\t\t\t\tcontainsNaN: false,\n\t\t\t\tisSorted: true,\n\t\t\t\txValues: Array(PSDLength)\n\t\t\t\t\t.fill(0)\n\t\t\t\t\t.map((_, i) => Math.floor((i / PSDLength) * 200)),\n\t\t\t\tyValues: Array(PSDLength)\n\t\t\t\t\t.fill(0)\n\t\t\t\t\t.map((_, i) => 0),\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\ttype: ESeriesType.LineSeries,\n\t\t\toptions: {\n\t\t\t\tid: 'x',\n\t\t\t\tyAxisId: PSD_CHART_AXIS_AMPLITUDE_ID,\n\t\t\t\tstrokeThickness: 3,\n\t\t\t\tstroke: getAxisColor('x')[400],\n\t\t\t},\n\t\t\txyData: {\n\t\t\t\tcontainsNaN: false,\n\t\t\t\tisSorted: true,\n\t\t\t\txValues: Array(PSDLength)\n\t\t\t\t\t.fill(0)\n\t\t\t\t\t.map((_, i) => Math.floor((i / PSDLength) * 200)),\n\t\t\t\tyValues: Array(PSDLength)\n\t\t\t\t\t.fill(0)\n\t\t\t\t\t.map((_, i) => 0),\n\t\t\t},\n\t\t},\n\t],\n};\n\n// Override the standard tooltip displayed by CursorModifier\nexport const getPSDTooltipLegendTemplate = (seriesInfos: SeriesInfo[], svgAnnotation: CursorTooltipSvgAnnotation) => {\n\tlet outputSvgString = '';\n\n\t// Foreach series there will be a seriesInfo supplied by SciChart. This contains info about the series under the house\n\tconst padding = 16;\n\tlet y = padding * 2;\n\tconst valuesWithLabels: string[] = [];\n\tseriesInfos.forEach((seriesInfo, index) => {\n\t\tlet separator = ':';\n\t\tlet textColor = seriesInfo.renderableSeries.rolloverModifierProps.tooltipColor as TWShadeableColorName;\n\t\tvaluesWithLabels.push(\n\t\t\t`${seriesInfo.renderableSeries.rolloverModifierProps.tooltipTitle}${separator} ${(seriesInfo.yValue / 1000).toFixed(2)} g^2/Hz @ ${seriesInfo.formattedXValue}`,\n\t\t);\n\t\toutputSvgString += `<text x=\"${padding}\" y=\"${y}\" class=\"text-sm text-medium font-sans\" fill=\"${shadableTWColors[textColor][400]}\">\n\t\t<tspan class=\"font-bold\">${seriesInfo.renderableSeries.rolloverModifierProps.tooltipTitle}</tspan>${separator} ${(seriesInfo.yValue / 1000).toFixed(2)} g<tspan y=\"${y - 4}\" class=\"sup\">2</tspan><tspan y=${y}>/Hz</tspan>@ ${seriesInfo.formattedXValue}\n\t\t</text>`;\n\t\ty += 20;\n\t\tif (seriesInfo.dataSeriesType === EDataSeriesType.Xyy) {\n\t\t\tconst si = seriesInfo as XyySeriesInfo;\n\t\t\tlet textColor = seriesInfo.renderableSeries.rolloverModifierProps1.tooltipColor as TWShadeableColorName;\n\t\t\tvaluesWithLabels.push(\n\t\t\t\t`${si.renderableSeries.rolloverModifierProps1.tooltipTitle}${separator} ${(si.y1Value / 1000).toFixed(2)} g^2/Hz @ ${si.formattedXValue}`,\n\t\t\t);\n\t\t\toutputSvgString += `<text x=\"${padding}\" y=\"${y}\" class=\"text-sm text-medium font-sans\" fill=\"${shadableTWColors[textColor][400]}\">\n\t\t\t\t<tspan class=\"font-bold\">${si.renderableSeries.rolloverModifierProps1.tooltipTitle}</tspan>${separator} ${(si.y1Value / 1000).toFixed(2)} g<tspan y=\"${y - 4}\" class=\"sup\">2</tspan><tspan y=${y}>/Hz</tspan> @ ${si.formattedXValue}\n\t\t\t</text>`;\n\t\t\ty += 20;\n\n\t\t\toutputSvgString += `<text x=\"${padding}\" y=\"${y}\" class=\"text-sm text-medium font-sans\" fill=\"${shadableTWColors['zinc'][400]}\">\n\t\t\t\t<tspan class=\"font-bold\">Amplitude Difference</tspan>${separator} ${Math.abs((si.y1Value - si.yValue) / 1000).toFixed(2)} g<tspan y=\"${y - 4}\" class=\"sup\">2</tspan><tspan y=${y}>/Hz</tspan>\n\t\t\t</text>`;\n\t\t\ty += 20;\n\t\t}\n\t});\n\tconst width =\n\t\tseriesInfos.length === 0\n\t\t\t? 0\n\t\t\t: padding +\n\t\t\t\tcalcTooltipWidth(\n\t\t\t\t\tvaluesWithLabels.reduce(function (prev, cur) {\n\t\t\t\t\t\treturn cur.length > prev ? cur.length : prev;\n\t\t\t\t\t}, 0),\n\t\t\t\t) *\n\t\t\t\t\t1.7;\n\t// tooltip height\n\tconst height = seriesInfos.length === 0 ? 0 : y;\n\n\treturn `<svg width=\"${width}\" height=\"${height}\">\n\t\t\t\t<rect rx=\"8\" ry=\"8\" width=\"100%\" height=\"100%\" class=\"stroke-zinc-400/10 fill-zinc-900/70 stroke-1\" />\n                ${outputSvgString}\n            </svg>`;\n};\n\n// Override the standard tooltip displayed by CursorModifier\nexport const psdRolloverTooltipTemplate: TRolloverTooltipSvgTemplate = (id, seriesInfo, rolloverTooltip) => {\n\tlet valuesBlock = '';\n\tconst tooltipProps = rolloverTooltip.tooltipProps;\n\tconst tooltipTitle = tooltipProps.tooltipTitle,\n\t\ttooltipColor = tooltipProps.tooltipColor as TWShadeableColorName,\n\t\ttooltipTextColor = twColors[tooltipColor][100],\n\t\ttooltipBorderColor = parseColorToTArgb(twColors[tooltipColor][400]),\n\t\ttooltipBGColor = parseColorToTArgb(twColors[tooltipColor][600]),\n\t\ttooltipLabelX = tooltipProps.tooltipLabelX,\n\t\ttooltipLabelY = tooltipProps.tooltipLabelY,\n\t\tshadowColor = twColors[tooltipColor][900];\n\n\ttooltipBorderColor.opacity = Math.round(255 * 0.8);\n\ttooltipBGColor.opacity = Math.round(255 * 0.2);\n\tconst tooltipDataTemplate =\n\t\trolloverTooltip.tooltipProps.tooltipDataTemplate ??\n\t\trolloverTooltip.tooltipProps.rolloverModifier.tooltipDataTemplate;\n\tconst valuesWithLabels = tooltipDataTemplate(seriesInfo, tooltipTitle, tooltipLabelX, tooltipLabelY);\n\t// tooltip width\n\tconst width =\n\t\ttooltipProps.width ??\n\t\tcalcTooltipWidth(\n\t\t\tvaluesWithLabels.reduce(function (prev, cur) {\n\t\t\t\treturn cur.length > prev ? cur.length : prev;\n\t\t\t}, 0),\n\t\t);\n\t// tooltip height\n\tconst height = tooltipProps.height ?? calcTooltipHeight(valuesWithLabels.length);\n\trolloverTooltip.updateSize(width, height);\n\tvaluesWithLabels.forEach(function (val, index) {\n\t\tvaluesBlock += `<tspan x=\"8\" dy=\"1.2em\">${val}</tspan>`;\n\t});\n\tlet blur = `<feGaussianBlur result=\"blurOut\" in=\"offOut\" stdDeviation=\"3\" />`;\n\tif (shadowColor !== undefined) {\n\t\tvar shadowRGBA = parseColorToTArgb(shadowColor);\n\t\tblur = `\n\t\t\t<feColorMatrix result=\"matrixOut\" in=\"offOut\" type=\"matrix\"\n\t\t\t\tvalues=\"0 0 0 0 \n\t\t\t\t${shadowRGBA.red / 255}\n\t\t\t\t0 0 0 0\n\t\t\t\t${shadowRGBA.green / 255}\n\t\t\t\t0 0 0 0\n\t\t\t\t${shadowRGBA.blue / 255}\n\t\t\t\t0 0 0 \n\t\t\t\t${shadowRGBA.opacity / 255}\n\t\t\t\t0 0\" \n\t\t\t/>\n\t\t\t<feGaussianBlur result=\"blurOut\" in=\"matrixOut\" stdDeviation=\"3\" />`;\n\t}\n\treturn `\n\t\t<svg class=\"scichart__rollover-tooltip transition-all\" width=\"${width}\" height=\"${height}\">\n\t\t\t<defs>\n\t\t\t\t<filter id=\"${id}\" x=\"0\" y=\"0\" width=\"200%\" height=\"200%\">\n\t\t\t\t\t<feOffset result=\"offOut\" in=\"SourceAlpha\" dx=\"3\" dy=\"3\" />\n\t\t\t\t\t\t\n\t\t\t\t\t\t${blur}\n\t\t\t\t\t<feBlend in=\"SourceGraphic\" in2=\"blurOut\" mode=\"normal\" />\n\t\t\t\t</filter>\n\t\t\t</defs>\n\t\t\t<rect rx=\"8\" ry=\"8\" width=\"100%\" height=\"100%\" fill=\"${parseTArgbToHtmlColor(tooltipBGColor)}\" stroke=\"${parseTArgbToHtmlColor(tooltipBorderColor)}\" stroke-width=\"2\"  filter=\"url(#${id}\" />\n\t\t\t<svg width=\"100%\">\n\t\t\t\t<text x=\"8\" y=\"3\" class=\"text-sm font-sans font-semibold\" dy=\"0\" fill=\"${tooltipTextColor}\">\n\t\t\t\t${valuesBlock}\n\t\t\t\t</text>\n\t\t\t</svg>\n\t\t</svg>`;\n};\n\nconst getTooltipDataTemplate = (\n\tseriesInfo: SeriesInfo,\n\ttooltipTitle: string,\n\ttooltipLabelX: string,\n\ttooltipLabelY: string,\n) => {\n\t// Lines here are returned to the tooltip and displayed as text-line per tooltip\n\tconst lines: string[] = [];\n\tlines.push(tooltipTitle);\n\tlines.push(\n\t\t`<tspan class=\"opacity-70 font-medium\">${seriesInfo.formattedYValue} @ ${seriesInfo.formattedXValue}</tspan>`,\n\t);\n\treturn lines;\n};\n\nexport const usePSDChart = () => {\n\treturn useChart(\n\t\tPSDChartDefinition,\n\t\tuseCallback((surface: SciChartSurface) => {\n\t\t\tconst xAnimationSeries = new XyDataSeries(surface.webAssemblyContext2D, {\n\t\t\t\tid: 'xAnimationSeries',\n\t\t\t\tcontainsNaN: false,\n\t\t\t\tisSorted: true,\n\t\t\t\tdataIsSortedInX: true,\n\t\t\t});\n\t\t\tsurface.addDeletable(xAnimationSeries);\n\t\t\tconst yAnimationSeries = new XyDataSeries(surface.webAssemblyContext2D, {\n\t\t\t\tid: 'yAnimationSeries',\n\t\t\t\tcontainsNaN: false,\n\t\t\t\tisSorted: true,\n\t\t\t\tdataIsSortedInX: true,\n\t\t\t});\n\t\t\tsurface.addDeletable(yAnimationSeries);\n\t\t\tconst zAnimationSeries = new XyDataSeries(surface.webAssemblyContext2D, {\n\t\t\t\tid: 'zAnimationSeries',\n\t\t\t\tcontainsNaN: false,\n\t\t\t\tisSorted: true,\n\t\t\t\tdataIsSortedInX: true,\n\t\t\t});\n\t\t\tsurface.addDeletable(zAnimationSeries);\n\t\t\tconst totalAnimationSeries = new XyDataSeries(surface.webAssemblyContext2D, {\n\t\t\t\tid: 'totalAnimationSeries',\n\t\t\t\tcontainsNaN: false,\n\t\t\t\tisSorted: true,\n\t\t\t\tdataIsSortedInX: true,\n\t\t\t});\n\t\t\tsurface.addDeletable(totalAnimationSeries);\n\t\t\t(surface.renderableSeries.asArray() as FastMountainRenderableSeries[]).forEach((rs) => {\n\t\t\t\tif (rs.id === 'total') {\n\t\t\t\t\trs.paletteProvider = PaletteFactory.createGradient(\n\t\t\t\t\t\tsurface.webAssemblyContext2D,\n\t\t\t\t\t\tnew GradientParams(new Point(0, 0), new Point(1, 1), [\n\t\t\t\t\t\t\t{ offset: 0, color: twColors.brand[400] },\n\t\t\t\t\t\t\t{ offset: 0.8, color: twColors.brand[600] },\n\t\t\t\t\t\t]),\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tenableStroke: true,\n\t\t\t\t\t\t\tenableFill: true,\n\t\t\t\t\t\t\tfillOpacity: 0.17,\n\t\t\t\t\t\t\tpointMarkerOpacity: 0.5,\n\t\t\t\t\t\t},\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\trs.rolloverModifierProps.tooltipColor = getAxisColorName(rs.id as ADXLAxes);\n\t\t\t\trs.rolloverModifierProps.tooltipTemplate = psdRolloverTooltipTemplate;\n\t\t\t\trs.rolloverModifierProps.tooltipTitle =\n\t\t\t\t\trs.id.substring(0, 1).toUpperCase() + rs.id.substring(1) + ' Power Spectral Density';\n\t\t\t\trs.animation = new WaveAnimation({\n\t\t\t\t\tduration: 500,\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tsurface.chartModifiers.add(\n\t\t\t\tnew RolloverModifier({\n\t\t\t\t\t// Defines if rollover vertical line is shown\n\t\t\t\t\tshowRolloverLine: true,\n\t\t\t\t\t// Shows the default tooltip\n\t\t\t\t\tshowTooltip: false,\n\t\t\t\t\tyAxisId: PSD_CHART_AXIS_AMPLITUDE_ID,\n\t\t\t\t\t// Optional: Overrides the content of the tooltip\n\t\t\t\t\ttooltipDataTemplate: getTooltipDataTemplate,\n\t\t\t\t}),\n\t\t\t);\n\n\t\t\tsurface.chartModifiers.add(\n\t\t\t\tnew CursorModifier({\n\t\t\t\t\t// Defines if crosshair is shown\n\t\t\t\t\tcrosshairStroke: twColors.sky[400],\n\t\t\t\t\tcrosshairStrokeThickness: 1,\n\t\t\t\t\tshowXLine: true,\n\t\t\t\t\tshowYLine: true,\n\t\t\t\t\t// Shows the default tooltip\n\t\t\t\t\tshowTooltip: false,\n\t\t\t\t\tyAxisId: PSD_CHART_AXIS_AMPLITUDE_ID,\n\t\t\t\t\taxisLabelFill: twColors.zinc[900],\n\t\t\t\t\taxisLabelStroke: twColors.zinc[100],\n\t\t\t\t}),\n\t\t\t);\n\n\t\t\treturn {\n\t\t\t\tanimationSeries: {\n\t\t\t\t\tx: xAnimationSeries,\n\t\t\t\t\ty: yAnimationSeries,\n\t\t\t\t\tz: zAnimationSeries,\n\t\t\t\t\ttotal: totalAnimationSeries,\n\t\t\t\t},\n\t\t\t};\n\t\t}, []),\n\t);\n};\nvar calcTooltipWidth = function (textLength: number = 20, charWidth = 4) {\n\treturn textLength * charWidth + 20;\n};\n/** @ignore */\nvar calcTooltipHeight = function (lines: number = 2, lineHeight = 15) {\n\treturn lineHeight * lines + 16;\n};\n","'use client';\nimport useWebSocket from 'react-use-websocket';\nimport { getHost } from '@/helpers/util';\nimport {\n\tInFlightRequestCallbacks,\n\tInFlightRequestTimeouts,\n\tMoonrakerResponse,\n\tMoonrakerResponseSuccess,\n} from '@/moonraker/types';\nimport { MutableRefObject, useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { getLogger } from '@/app/_helpers/logger';\nimport { useKlippyStateHandler } from '@/hooks/useKlippyStateHandler';\nimport {\n\tAxisBase2D,\n\tEDataSeriesType,\n\tEWatermarkPosition,\n\tISciChart2DDefinition,\n\tNumberRange,\n\tSciChartSurface,\n\tTSciChart,\n\tThickness,\n\tXyDataSeries,\n\tbuild2DChart,\n\teasing,\n} from 'scichart';\nimport {\n\tTensor1D,\n\tTensor2D,\n\taddN,\n\tconcat,\n\tconcat2d,\n\treshape,\n\tsplit,\n\tsum,\n\ttensor1d,\n\ttensor2d,\n\ttidy,\n} from '@tensorflow/tfjs-core';\nimport '@tensorflow/tfjs-backend-webgl';\nimport { powerSpectralDensity, sumPSDs, welch } from '@/app/analysis/periodogram';\nimport { ADXL_STREAM_BUFFER_SIZE } from '@/app/analysis/charts';\nimport { TChartComponentProps } from 'scichart-react/types';\nimport { ChartTheme } from '@/app/analysis/chart-theme';\nimport {\n\tADXL345SensorName,\n\tAccumulatedPSD,\n\tKlipperADXL345SubscriptionData,\n\tPSD,\n\tklipperADXL345SubscriptionDataSchema,\n\tklipperADXL345SubscriptionResponseSchema,\n} from '@/zods/analysis';\nimport { twJoin } from 'tailwind-merge';\nimport { FullLoadScreen } from '@/components/common/full-load-screen';\n\nconst getWsURL = () => {\n\tconst host = getHost();\n\tif (host == null || host.trim() == '') {\n\t\treturn null;\n\t}\n\tif (typeof window == 'undefined') {\n\t\treturn null;\n\t}\n\treturn `ws://${host}:7125/klippysocket`;\n};\n\nlet REQ_ID = 0;\n\nexport interface RealtimeADXLOptions {\n\tonDataUpdate?: (status: KlipperADXL345SubscriptionData) => void;\n\tenabled?: boolean;\n\tsensor: ADXL345SensorName;\n}\n\nconst isSuccessResponse = (res: MoonrakerResponse): res is MoonrakerResponseSuccess => {\n\treturn !('error' in res);\n};\n\nexport const useRealtimeADXL = (options: RealtimeADXLOptions) => {\n\tconst [wsUrl, setWsUrl] = useState(getWsURL());\n\tconst inFlightRequests = useRef<InFlightRequestCallbacks>({});\n\tconst inFlightRequestTimeouts = useRef<InFlightRequestTimeouts>({});\n\tconst [isSubscribed, setIsSubscribed] = useState(false);\n\tconst isSubscribedRef = useRef(isSubscribed);\n\tisSubscribedRef.current = isSubscribed;\n\tconst kippyState = useKlippyStateHandler();\n\tuseEffect(() => {\n\t\tsetWsUrl(getWsURL());\n\t}, []);\n\tconst { lastJsonMessage, sendJsonMessage, readyState } = useWebSocket<MoonrakerResponse>(\n\t\toptions.enabled === false ? null : wsUrl,\n\t\t{\n\t\t\tshouldReconnect: (closeEvent) => {\n\t\t\t\treturn true;\n\t\t\t},\n\t\t\tonMessage: (message) => {\n\t\t\t\tif (options?.onDataUpdate && isSubscribedRef.current) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst parsed = JSON.parse(message.data) as MoonrakerResponse;\n\t\t\t\t\t\tif (isSuccessResponse(parsed) && parsed.params != null && 'data' in parsed.params) {\n\t\t\t\t\t\t\tconst res = klipperADXL345SubscriptionDataSchema.parse(parsed.params);\n\t\t\t\t\t\t\toptions.onDataUpdate?.(res);\n\t\t\t\t\t\t} else if (!isSuccessResponse(parsed)) {\n\t\t\t\t\t\t\tgetLogger().error('Error in response from klipper socket', parsed);\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tconsole.warn('OnMessage: Failed to parse message', e, message.data);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\treconnectAttempts: Infinity,\n\t\t\treconnectInterval: 3000,\n\t\t\tshare: false,\n\t\t},\n\t);\n\n\tconst subscribe = useCallback(async <R = unknown,>() => {\n\t\tconst id = ++REQ_ID;\n\t\treturn new Promise<R>((resolve, reject) => {\n\t\t\tinFlightRequests.current[id] = (err, result) => {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn reject(err);\n\t\t\t\t}\n\t\t\t\tif (result?.error) {\n\t\t\t\t\treturn reject(result.error);\n\t\t\t\t}\n\t\t\t\tresolve(result);\n\t\t\t};\n\t\t\tlet timeout = 10 * 1000;\n\t\t\tinFlightRequestTimeouts.current[id] = window.setTimeout(() => {\n\t\t\t\tinFlightRequests.current[id]?.(new Error('Request timed out'), null);\n\t\t\t\tdelete inFlightRequests.current[id];\n\t\t\t\tdelete inFlightRequestTimeouts.current[id];\n\t\t\t}, timeout); // 10 second timeout.\n\t\t\tsendJsonMessage({\n\t\t\t\tjsonrpc: '2.0',\n\t\t\t\tmethod: 'adxl345/dump_adxl345',\n\t\t\t\tparams: {\n\t\t\t\t\tsensor: options.sensor,\n\t\t\t\t\tresponse_template: {},\n\t\t\t\t},\n\t\t\t\tid: id,\n\t\t\t});\n\t\t});\n\t}, [options.sensor, sendJsonMessage]);\n\n\tuseEffect(() => {\n\t\tif (readyState === 1 && kippyState === 'ready' && !isSubscribedRef.current) {\n\t\t\tsubscribe()\n\t\t\t\t.then((res) => {\n\t\t\t\t\tconst result = klipperADXL345SubscriptionResponseSchema.parse(res);\n\t\t\t\t\tgetLogger().info('Subscribed to ADXL345', result);\n\t\t\t\t\tsetIsSubscribed(true);\n\t\t\t\t})\n\t\t\t\t.catch((err) => {\n\t\t\t\t\tgetLogger().error(err);\n\t\t\t\t\tsetIsSubscribed(false);\n\t\t\t\t});\n\t\t} else if (isSubscribedRef.current) {\n\t\t\tsetIsSubscribed(false);\n\t\t}\n\t}, [kippyState, readyState, subscribe]);\n\n\tuseEffect(() => {\n\t\tif (lastJsonMessage?.id && inFlightRequests.current[lastJsonMessage.id]) {\n\t\t\twindow.clearTimeout(inFlightRequestTimeouts.current[lastJsonMessage.id]);\n\t\t\tif (isSuccessResponse(lastJsonMessage)) {\n\t\t\t\tinFlightRequests.current[lastJsonMessage.id](null, lastJsonMessage.result);\n\t\t\t} else {\n\t\t\t\tinFlightRequests.current[lastJsonMessage.id](new Error(lastJsonMessage.error.message), null);\n\t\t\t}\n\t\t\tdelete inFlightRequestTimeouts.current[lastJsonMessage.id];\n\t\t\tdelete inFlightRequests.current[lastJsonMessage.id];\n\t\t}\n\t}, [lastJsonMessage]);\n\n\tuseEffect(() => {\n\t\t// cleanup\n\t\treturn () => {\n\t\t\tisSubscribedRef.current = false;\n\t\t\tfor (const reqId in inFlightRequestTimeouts.current) {\n\t\t\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t\t\t\tdelete inFlightRequestTimeouts.current[reqId];\n\t\t\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t\t\t\tdelete inFlightRequests.current[reqId];\n\t\t\t}\n\t\t};\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, []);\n\n\treturn {\n\t\tisSubscribed,\n\t};\n};\n\nconst theme = new ChartTheme();\nexport const useChart = <T,>(\n\tdefinition: ISciChart2DDefinition | null,\n\tinitializer?: (surface: SciChartSurface) => T,\n\tindent = true,\n) => {\n\tconst surface = useRef<SciChartSurface | null>(null);\n\tconst [isInitialized, setIsInitialized] = useState(false);\n\tconst data = useRef<T | null>(null);\n\treturn useMemo(\n\t\t() => ({\n\t\t\tforwardProps: {\n\t\t\t\tinitChart: async (rootElement: string | HTMLDivElement) => {\n\t\t\t\t\tlet chart: null | { wasmContext: TSciChart; sciChartSurface: SciChartSurface } = null;\n\t\t\t\t\tif (definition != null) {\n\t\t\t\t\t\tconst orgPadding = definition.surface?.padding;\n\t\t\t\t\t\tconst def = {\n\t\t\t\t\t\t\t...definition,\n\t\t\t\t\t\t\tsurface: {\n\t\t\t\t\t\t\t\t...definition.surface,\n\t\t\t\t\t\t\t\tpadding: new Thickness(\n\t\t\t\t\t\t\t\t\torgPadding?.top ?? 0,\n\t\t\t\t\t\t\t\t\torgPadding?.right ?? 0,\n\t\t\t\t\t\t\t\t\torgPadding?.bottom ?? 0,\n\t\t\t\t\t\t\t\t\t(orgPadding?.left ?? 0) + (indent ? 300 : 0),\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t};\n\t\t\t\t\t\tchart = await build2DChart(rootElement, def);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tchart = await SciChartSurface.create(rootElement, {\n\t\t\t\t\t\t\ttheme: theme,\n\t\t\t\t\t\t\tpadding: new Thickness(0, 0, 0, indent ? 300 : 0),\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tchart.sciChartSurface.watermarkPosition = EWatermarkPosition.BottomLeft;\n\t\t\t\t\tchart.sciChartSurface.watermarkRelativeToCanvas = true;\n\t\t\t\t\tsurface.current = chart.sciChartSurface;\n\t\t\t\t\tif (initializer) {\n\t\t\t\t\t\tdata.current = initializer(chart.sciChartSurface);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn { sciChartSurface: chart.sciChartSurface };\n\t\t\t\t},\n\t\t\t\tonInit: () => setIsInitialized(true),\n\t\t\t\tstyle: {\n\t\t\t\t\tmarginLeft: indent ? -300 : 0,\n\t\t\t\t},\n\n\t\t\t\tfallback: <FullLoadScreen className={twJoin(indent && 'ml-[150px]', 'bg-zinc-900')} />,\n\t\t\t} satisfies TChartComponentProps,\n\t\t\tsurface,\n\t\t\tisInitialized,\n\t\t\tdata,\n\t\t}),\n\t\t[indent, isInitialized, definition, initializer],\n\t);\n};\n\nexport const useADXLFifoTensor = (fifoCapacity: number = 8192) => {\n\tconst buffer = useRef<Tensor2D | null>(null);\n\tconst sampleRate = useRef<number>(0);\n\tconst [dropped, setDropped] = useState(0);\n\tconst take = useCallback((count: number) => {\n\t\tif (buffer.current == null) {\n\t\t\treturn null;\n\t\t}\n\t\tconst max = Math.min(count, buffer.current.shape[0]);\n\t\tconst [out, keep] = split<Tensor2D>(buffer.current, [max, buffer.current.shape[0] - max], 0);\n\t\tbuffer.current.dispose();\n\t\tbuffer.current = keep;\n\t\treturn out;\n\t}, []);\n\tconst onData = useCallback(\n\t\t(status: KlipperADXL345SubscriptionData) => {\n\t\t\tconst incoming = tensor2d(status.data);\n\t\t\tconst newBuffer = buffer.current ? concat2d([buffer.current, incoming], 0) : incoming;\n\t\t\tif (newBuffer !== incoming) {\n\t\t\t\tincoming.dispose();\n\t\t\t}\n\t\t\tbuffer.current?.dispose();\n\t\t\tbuffer.current = newBuffer;\n\t\t\tsampleRate.current = status.data.length / (status.data[status.data.length - 1][0] - status.data[0][0]);\n\t\t\tif (buffer.current.shape[0] > fifoCapacity) {\n\t\t\t\tconsole.debug('Fifo capacity exceeded, dropping frames', buffer.current.shape[0]);\n\t\t\t\tconst drop = buffer.current.shape[0] - fifoCapacity;\n\t\t\t\ttake(drop)?.dispose();\n\t\t\t\tsetDropped((prev) => prev + drop);\n\t\t\t}\n\t\t},\n\t\t[fifoCapacity, take],\n\t);\n\tuseEffect(() => {\n\t\treturn () => {\n\t\t\tbuffer.current?.dispose();\n\t\t\tbuffer.current = null;\n\t\t};\n\t}, []);\n\treturn {\n\t\tonData: onData,\n\t\ttake: take,\n\t\tbuffer: buffer,\n\t\tdropped: dropped,\n\t\tsampleRate: sampleRate,\n\t};\n};\n\nexport const isXySeries = (series: any): series is XyDataSeries => {\n\treturn series.type === EDataSeriesType.Xy;\n};\n\nexport const useBufferedADXLSignal = (\n\tfifoTensor: ReturnType<typeof useADXLFifoTensor>,\n\t/**\n\t * NOTE: Make absolutely sure to dispose of the tensors passed to this function\n\t */\n\tupdateFn: null | ((time: Tensor1D, x: Tensor1D, y: Tensor1D, z: Tensor1D) => void),\n) => {\n\tconst lastUpdate = useRef<number>(new Date().getTime());\n\tconst update = useRef(updateFn);\n\tupdate.current = updateFn;\n\tconst tick = useCallback(async () => {\n\t\tconst sinceLast = new Date().getTime() - lastUpdate.current;\n\t\tif (fifoTensor.buffer.current == null || fifoTensor.buffer.current.shape[0] < ADXL_STREAM_BUFFER_SIZE / 2) {\n\t\t\treturn;\n\t\t}\n\t\tlet toTake = ADXL_STREAM_BUFFER_SIZE / 2;\n\t\tif (fifoTensor.buffer.current.shape[0] > ADXL_STREAM_BUFFER_SIZE * 12) {\n\t\t\ttoTake += ADXL_STREAM_BUFFER_SIZE;\n\t\t}\n\t\tconst data = fifoTensor.take(toTake);\n\t\tif (data == null) {\n\t\t\treturn;\n\t\t}\n\t\tconst [time, x, y, z] = split<Tensor2D>(data, 4, 1);\n\t\tupdate.current?.(\n\t\t\treshape(time, [time.shape[0]]),\n\t\t\treshape(x, [x.shape[0]]),\n\t\t\treshape(y, [y.shape[0]]),\n\t\t\treshape(z, [z.shape[0]]),\n\t\t);\n\t\ttime.dispose();\n\t\tdata.dispose();\n\t\tx.dispose();\n\t\ty.dispose();\n\t\tz.dispose();\n\t}, [fifoTensor]);\n\treturn tick;\n};\n\nexport const useBufferedPSD = (\n\tsampleRate: MutableRefObject<number>,\n\tupdateFn: null | ((x: PSD, y: PSD, z: PSD, total: PSD) => void),\n) => {\n\tconst xref = useRef<Tensor1D>(tensor1d([]));\n\tconst yref = useRef<Tensor1D>(tensor1d([]));\n\tconst zref = useRef<Tensor1D>(tensor1d([]));\n\tconst update = useRef(updateFn);\n\tupdate.current = updateFn;\n\n\tconst onData = useCallback(\n\t\tasync (time: Tensor1D, x: Tensor1D, y: Tensor1D, z: Tensor1D, isDetrended?: boolean) => {\n\t\t\tconst rate = sampleRate.current;\n\t\t\tconst newX = concat([x, xref.current]);\n\t\t\tconst newY = concat([y, yref.current]);\n\t\t\tconst newZ = concat([z, zref.current]);\n\t\t\tx.dispose();\n\t\t\ty.dispose();\n\t\t\tz.dispose();\n\t\t\ttime.dispose();\n\t\t\txref.current.dispose();\n\t\t\tyref.current.dispose();\n\t\t\tzref.current.dispose();\n\t\t\txref.current = newX;\n\t\t\tyref.current = newY;\n\t\t\tzref.current = newZ;\n\t\t\tif (xref.current.shape[0] > rate) {\n\t\t\t\tconst xData = xref.current.clone();\n\t\t\t\tconst yData = yref.current.clone();\n\t\t\t\tconst zData = zref.current.clone();\n\t\t\t\tconst totalData = addN([xData, yData, zData]);\n\t\t\t\txref.current.dispose();\n\t\t\t\tyref.current.dispose();\n\t\t\t\tzref.current.dispose();\n\t\t\t\txref.current = tensor1d([]);\n\t\t\t\tyref.current = tensor1d([]);\n\t\t\t\tzref.current = tensor1d([]);\n\t\t\t\tconst [xpsd, ypsd, zpsd] = await Promise.all([\n\t\t\t\t\tpowerSpectralDensity(xData, rate, { isDetrended: isDetrended }),\n\t\t\t\t\tpowerSpectralDensity(yData, rate, { isDetrended: isDetrended }),\n\t\t\t\t\tpowerSpectralDensity(zData, rate, { isDetrended: isDetrended }),\n\t\t\t\t]);\n\t\t\t\tconst totalpsd = sumPSDs([xpsd, ypsd, zpsd]);\n\t\t\t\txData.dispose();\n\t\t\t\tyData.dispose();\n\t\t\t\tzData.dispose();\n\t\t\t\ttotalData.dispose();\n\t\t\t\tupdate.current?.(xpsd, ypsd, zpsd, totalpsd);\n\t\t\t}\n\t\t},\n\t\t[sampleRate],\n\t);\n\treturn onData;\n};\n\nexport const useAccumulatedPSD = (updateFn?: (result: AccumulatedPSD) => void) => {\n\tconst [isAccumulating, setIsAccumulating] = useState(false);\n\tconst psds = useRef<{ x: PSD[]; y: PSD[]; z: PSD[]; total: PSD[] }>({ x: [], y: [], z: [], total: [] });\n\tconst update = useRef(updateFn);\n\tupdate.current = updateFn;\n\n\tconst start = useCallback(async () => {\n\t\tpsds.current = { x: [], y: [], z: [], total: [] };\n\t\tsetIsAccumulating(true);\n\t}, []);\n\n\tconst stop = useCallback(async () => {\n\t\tconst old = psds.current;\n\t\tconst [x, y, z, total] = await Promise.all([welch(old.x), welch(old.y), welch(old.z), welch(old.total)]);\n\t\tpsds.current = { x: [], y: [], z: [], total: [] };\n\t\tsetIsAccumulating(false);\n\t\treturn { x, y, z, total, source: old };\n\t}, []);\n\n\tconst onData = useCallback(\n\t\tasync (newX: PSD, newY: PSD, newZ: PSD, newTotal: PSD) => {\n\t\t\tif (!isAccumulating) {\n\t\t\t\tconst result = {\n\t\t\t\t\tx: newX,\n\t\t\t\t\ty: newY,\n\t\t\t\t\tz: newZ,\n\t\t\t\t\ttotal: newTotal,\n\t\t\t\t\tsource: {\n\t\t\t\t\t\tx: [newX],\n\t\t\t\t\t\ty: [newY],\n\t\t\t\t\t\tz: [newZ],\n\t\t\t\t\t\ttotal: [newTotal],\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t\tupdate.current?.(result);\n\t\t\t\treturn result;\n\t\t\t}\n\t\t\tpsds.current.x.push(newX);\n\t\t\tpsds.current.y.push(newY);\n\t\t\tpsds.current.z.push(newZ);\n\t\t\tpsds.current.total.push(newTotal);\n\t\t\tconst [x, y, z, total] = await Promise.all([\n\t\t\t\twelch(psds.current.x),\n\t\t\t\twelch(psds.current.y),\n\t\t\t\twelch(psds.current.z),\n\t\t\t\twelch(psds.current.total),\n\t\t\t]);\n\t\t\tconst result = { x, y, z, total, source: psds.current };\n\t\t\tupdate.current?.(result);\n\t\t\treturn result;\n\t\t},\n\t\t[isAccumulating],\n\t);\n\n\treturn useMemo(\n\t\t() => ({\n\t\t\tstartAccumulation: start,\n\t\t\tstopAccumulation: stop,\n\t\t\tonData: onData,\n\t\t\tisAccumulating,\n\t\t}),\n\t\t[isAccumulating, onData, start, stop],\n\t);\n};\n\nexport function useTicker(tickOrTargetFps: () => Promise<void>, tick?: undefined): void;\nexport function useTicker(tickOrTargetFps: number, tick: () => Promise<void>): void;\nexport function useTicker(tickOrTargetFps: number | (() => Promise<void>), tick?: () => Promise<void>) {\n\tif (typeof tickOrTargetFps === 'function') {\n\t\ttick = tickOrTargetFps;\n\t}\n\tif (tick == null) {\n\t\tthrow new Error('Tick function is required');\n\t}\n\tconst fnRef = useRef(tick);\n\tfnRef.current = tick;\n\tconst interval = Math.floor(1000 / (typeof tickOrTargetFps === 'function' ? 50 : tickOrTargetFps));\n\tuseEffect(() => {\n\t\tlet id = 0;\n\t\tconst update = async () => {\n\t\t\tawait fnRef.current();\n\t\t\tid = window.setTimeout(update, interval);\n\t\t};\n\t\tid = window.setTimeout(update, interval);\n\t\treturn () => {\n\t\t\twindow.clearTimeout(id);\n\t\t};\n\t}, [interval]);\n}\n\nconst maximumRangeUnion = (axis: AxisBase2D | (AxisBase2D | null)[]) => {\n\tif (Array.isArray(axis)) {\n\t\treturn axis.reduce((prev, cur) => {\n\t\t\tif (cur == null) {\n\t\t\t\treturn prev;\n\t\t\t}\n\t\t\tconst max = cur.getMaximumRange();\n\t\t\treturn prev.union(max);\n\t\t}, new NumberRange());\n\t}\n\treturn axis.getMaximumRange();\n};\nconst visibleRangeUnion = (axis: AxisBase2D | (AxisBase2D | null)[]) => {\n\tif (Array.isArray(axis)) {\n\t\treturn axis.reduce((prev, cur) => {\n\t\t\tif (cur == null) {\n\t\t\t\treturn prev;\n\t\t\t}\n\t\t\tconst max = cur.visibleRange;\n\t\t\treturn prev.union(max);\n\t\t}, new NumberRange());\n\t}\n\treturn axis.visibleRange;\n};\nconst growByUnion = (axis: AxisBase2D | (AxisBase2D | null)[]) => {\n\tif (Array.isArray(axis)) {\n\t\treturn axis.reduce((prev, cur) => {\n\t\t\tif (cur == null) {\n\t\t\t\treturn prev;\n\t\t\t}\n\t\t\tconst max = cur.growBy ?? new NumberRange();\n\t\t\treturn prev.union(max);\n\t\t}, new NumberRange());\n\t}\n\treturn axis.growBy;\n};\n\nexport function useDynamicAxisRange(\n\taxis: AxisBase2D | (AxisBase2D | null)[] | null,\n\tminimum: NumberRange = new NumberRange(0, 0),\n) {\n\tconst maxRef = useRef<NumberRange | null>(axis ? maximumRangeUnion(axis) : null);\n\tconst lastUpdate = useRef<number>(new Date().getTime());\n\tconst lastChange = useRef<number>(new Date().getTime());\n\n\tconst update = useCallback(\n\t\t(dataRange: NumberRange = minimum) => {\n\t\t\tif (axis == null) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst axes = Array.isArray(axis) ? axis : [axis];\n\t\t\tif (maxRef.current == null) {\n\t\t\t\tmaxRef.current = visibleRangeUnion(axis);\n\t\t\t}\n\t\t\tconst sinceLastUpdate = new Date().getTime() - lastUpdate.current;\n\t\t\tconst sinceLastChange = new Date().getTime() - lastChange.current;\n\t\t\tlastUpdate.current = new Date().getTime();\n\t\t\tlet max = maximumRangeUnion(axis);\n\t\t\tif (dataRange) {\n\t\t\t\tmax = max.union(dataRange);\n\t\t\t}\n\t\t\tconst growBy = growByUnion(axis);\n\t\t\tif (growBy) {\n\t\t\t\tmax.growBy(growBy);\n\t\t\t}\n\t\t\tlet newMax: null | number = null;\n\t\t\tlet newMin: null | number = null;\n\t\t\tif (max.max > maxRef.current.max) {\n\t\t\t\tnewMax = max.max;\n\t\t\t}\n\t\t\tif (max.min < maxRef.current.min) {\n\t\t\t\tnewMin = max.min;\n\t\t\t}\n\t\t\tif (newMax != null || newMin != null) {\n\t\t\t\taxes.forEach((a) => {\n\t\t\t\t\tif (maxRef.current == null || a == null) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\ta.animateVisibleRange(\n\t\t\t\t\t\tnew NumberRange(\n\t\t\t\t\t\t\tMath.min(newMin ?? maxRef.current.min, minimum.min),\n\t\t\t\t\t\t\tMath.max(newMax ?? maxRef.current.max, minimum.max),\n\t\t\t\t\t\t),\n\t\t\t\t\t\tsinceLastUpdate,\n\t\t\t\t\t\teasing.inOutCirc,\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t\tlastChange.current = new Date().getTime();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (sinceLastChange > sinceLastUpdate * 3) {\n\t\t\t\tif (max.max < maxRef.current.max) {\n\t\t\t\t\tnewMax = maxRef.current.max - (maxRef.current.max - max.max);\n\t\t\t\t}\n\t\t\t\tif (max.min > maxRef.current.min) {\n\t\t\t\t\tnewMin = maxRef.current.min + (max.min - maxRef.current.min);\n\t\t\t\t}\n\t\t\t\tif (newMax != null || newMin != null) {\n\t\t\t\t\taxes.forEach((a) => {\n\t\t\t\t\t\tif (maxRef.current == null || a == null) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ta.animateVisibleRange(\n\t\t\t\t\t\t\tnew NumberRange(\n\t\t\t\t\t\t\t\tMath.min(newMin ?? maxRef.current.min, minimum.min),\n\t\t\t\t\t\t\t\tMath.max(newMax ?? maxRef.current.max, minimum.max),\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tsinceLastUpdate / 2,\n\t\t\t\t\t\t\teasing.inOutCirc,\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\t\tlastChange.current = new Date().getTime();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t[axis, minimum],\n\t);\n\n\treturn update;\n}\n","import {\n\tsignal as tfSignal,\n\tTensor1D,\n\tsum,\n\tpow,\n\tdiv,\n\tmean,\n\tsub,\n\ttidy,\n\tadd,\n\treal,\n\timag,\n\tmul,\n\trange,\n\tTensor,\n\tRank,\n} from '@tensorflow/tfjs-core';\nimport '@tensorflow/tfjs-backend-webgl';\nimport { NumberRange } from 'scichart';\nimport { PSD } from '@/zods/analysis';\n\n/**\n * Returns the ceil of the log2 of the absolute value of the passed number\n * @memberof module:bcijs\n * @function\n * @name nextpow2\n * @param {number} num\n * @returns {number} The ceil of the log2 of the absolute value of the passed number\n * @example\n * nextpow2(8); // 3\n * nextpow2(9); // 4\n * nextpow2(16); // 4\n * nextpow2(30); // 5\n * nextpow2(0); // -Infinity\n */\nexport function nextpow2(num: number): number {\n\treturn Math.ceil(Math.log2(Math.abs(num)));\n}\n\nexport const detrendSignal = (signal: Tensor1D) => tidy(() => sub<Tensor1D>(signal, mean(signal, 0, true)));\n\nconst WINDOW_T_SEC = 0.5;\nconst MAX_FREQ = 200;\n\n/**\n * Estimates the power spectral density of a real-valued input signal using the periodogram method and a hann window.\n * Output units are based on that of the input signal, of the form X^2/Hz, where X is the units of the input signal.\n *\n * @memberof module:bcijs\n * @function\n * @name periodogram\n * @param {number[]} signal - The signal.\n * @param {number} sampleRate - sample rate in Hz\n * @param {Object} [options]\n * @param {number} [options.fftSize=1 << nextpow2(sample_rate * WINDOW_T_SEC - 1)] - Size of the fft to be used. Should be a power of 2.\n * @returns {Object} Object with keys 'estimates' (the psd estimates) and 'frequencies' (the corresponding frequencies in Hz)\n */\nexport async function powerSpectralDensity(\n\tsignal: Tensor1D,\n\tsampleRate: number,\n\toptions?: { fftSize?: number; _scaling?: string; isDetrended?: boolean },\n): Promise<PSD> {\n\tlet { fftSize, _scaling } = Object.assign(\n\t\t{\n\t\t\tfftSize: 1 << nextpow2(sampleRate * WINDOW_T_SEC - 1),\n\t\t\t_scaling: 'psd',\n\t\t},\n\t\toptions,\n\t);\n\t// Validate _scaling\n\tif (_scaling != 'psd' && _scaling != 'none') {\n\t\tthrow new Error('Unknown scaling');\n\t}\n\n\tlet scaling_factor: number = _scaling === 'none' ? 1 : 2;\n\tconst win = tfSignal.hannWindow(fftSize);\n\tlet klipScale = (await tidy(() => div(div(1.0, sum(pow(win, 2))), sampleRate)).array()) as number;\n\n\tconst detrended = options?.isDetrended ? signal : detrendSignal(signal);\n\t// console.log('stft options', sample_rate, signal.size, fftSize);\n\tlet f = tfSignal.stft(detrended, fftSize, Math.floor(fftSize / 2), fftSize, tfSignal.hannWindow);\n\n\tlet x = (await f.array()) as number[][];\n\tf.dispose();\n\tdetrended.dispose();\n\twin.dispose();\n\n\treturn welch(\n\t\tx.map((series) => {\n\t\t\t// Get the power of each FFT bin value\n\t\t\tlet powers: number[] = [];\n\t\t\tlet frequencies: number[] = [];\n\t\t\tlet maxPower = 0;\n\t\t\tlet minPower = 0;\n\t\t\tfor (var i = 0; i < series.length - 1; i += 2) {\n\t\t\t\tconst frequency = (i === 0 ? 0 : i / 2) * (sampleRate / fftSize);\n\t\t\t\tif (frequency > MAX_FREQ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tconst nextFrequency = ((i + 2) / 2) * (sampleRate / fftSize);\n\t\t\t\t// apply scaling\n\t\t\t\t// magnitude is sqrt(real^2 + imag^2), power is magnitude^2\n\t\t\t\tlet power: number = series[i] ** 2 + series[i + 1] ** 2;\n\t\t\t\tpower *= klipScale;\n\t\t\t\t// Don't scale DC or Nyquist by 2\n\t\t\t\tif (_scaling == 'psd' && i > 0 && nextFrequency < MAX_FREQ) {\n\t\t\t\t\tpower *= scaling_factor;\n\t\t\t\t}\n\t\t\t\tif (power > maxPower) {\n\t\t\t\t\tmaxPower = power;\n\t\t\t\t}\n\t\t\t\tif (power < minPower) {\n\t\t\t\t\tminPower = power;\n\t\t\t\t}\n\t\t\t\tpowers.push(power);\n\t\t\t\tfrequencies.push(frequency);\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\testimates: powers,\n\t\t\t\tfrequencies: frequencies,\n\t\t\t\tpowerRange: new NumberRange(minPower, maxPower),\n\t\t\t};\n\t\t}),\n\t);\n}\n\n// Keep this async so that we can potentially move it to the GPU\nexport const welch = async (PSDs: PSD[]): Promise<PSD> => {\n\tif (PSDs.length == 0) throw new Error('Unable to calculate any PSD estimates');\n\tif (PSDs.length == 1) {\n\t\tconsole.warn('Not enough data to compute more than one segment, returning single modified periodogram.');\n\t\treturn PSDs[0];\n\t}\n\n\t// Compute average PSD\n\tlet num_estimates = PSDs[0].estimates.length;\n\tlet avg = new Array(num_estimates).fill(0);\n\tfor (let p = 0; p < PSDs.length; p++) {\n\t\tfor (let i = 0; i < num_estimates; i++) {\n\t\t\tavg[i] += PSDs[p].estimates[i];\n\t\t}\n\t}\n\tlet maxPower = 0;\n\tlet minPower = 0;\n\tfor (let i = 0; i < num_estimates; i++) {\n\t\tavg[i] = avg[i] / PSDs.length;\n\t\tif (avg[i] > maxPower) {\n\t\t\tmaxPower = avg[i];\n\t\t}\n\t\tif (avg[i] < minPower) {\n\t\t\tminPower = avg[i];\n\t\t}\n\t}\n\n\treturn {\n\t\testimates: avg,\n\t\tfrequencies: PSDs[0].frequencies,\n\t\tpowerRange: new NumberRange(minPower, maxPower),\n\t};\n};\n\nexport const sumPSDs = (PSDs: PSD[]): PSD => {\n\tlet num_estimates = PSDs[0].estimates.length;\n\tlet sum = new Array(num_estimates).fill(0);\n\tfor (let p = 0; p < PSDs.length; p++) {\n\t\tfor (let i = 0; i < num_estimates; i++) {\n\t\t\tsum[i] += PSDs[p].estimates[i];\n\t\t}\n\t}\n\tconst { minPower, maxPower } = PSDs.reduce(\n\t\t(acc, psd) => {\n\t\t\tif (psd.powerRange.min < acc.minPower) {\n\t\t\t\tacc.minPower = psd.powerRange.min;\n\t\t\t}\n\t\t\tif (psd.powerRange.max > acc.maxPower) {\n\t\t\t\tacc.maxPower = psd.powerRange.max;\n\t\t\t}\n\t\t\treturn acc;\n\t\t},\n\t\t{ minPower: 0, maxPower: 0 },\n\t);\n\treturn {\n\t\testimates: sum,\n\t\tfrequencies: PSDs[0].frequencies,\n\t\tpowerRange: new NumberRange(minPower, maxPower),\n\t};\n};\n","import { Spinner } from '@/components/common/spinner';\nimport { twJoin } from 'tailwind-merge';\n\nexport const FullLoadScreen = (props: { className?: string }) => {\n\treturn (\n\t\t<div className={twJoin('flex h-full w-full flex-1 items-center justify-center', props.className)}>\n\t\t\t<Spinner className=\"h-8 w-8\" />\n\t\t</div>\n\t);\n};\n","'use client';\nimport { useIsClient } from '@/hooks/isClient';\nimport dynamic from 'next/dynamic';\nimport React, { lazy } from 'react';\nimport { FullLoadScreen } from '@/components/common/full-load-screen';\nexport const NoSSR = (props: React.PropsWithChildren<{ fallback?: React.ReactNode }>) => {\n\tconst isClient = useIsClient();\n\treturn isClient ? <DynamicImport>{props.children}</DynamicImport> : props.fallback ?? <FullLoadScreen />;\n};\nconst DynamicImport = lazy(() =>\n\tPromise.resolve({ default: (props: React.PropsWithChildren) => <>{props.children}</> }),\n);\n","import { twMerge } from 'tailwind-merge';\n\nexport const Spinner: React.FC<{ className?: string; noMargin?: boolean }> = (props) => {\n\treturn (\n\t\t<svg\n\t\t\tclassName={twMerge(\n\t\t\t\t'h-5 w-5 animate-spin text-black dark:text-white',\n\t\t\t\t!props.noMargin ? '-ml-1 mr-3' : '',\n\t\t\t\tprops.className,\n\t\t\t)}\n\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\tfill=\"none\"\n\t\t\tviewBox=\"0 0 24 24\"\n\t\t>\n\t\t\t<circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n\t\t\t<path\n\t\t\t\tclassName=\"opacity-75\"\n\t\t\t\tfill=\"currentColor\"\n\t\t\t\td=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n\t\t\t></path>\n\t\t</svg>\n\t);\n};\n","'use client';\nimport { useEffect, useState } from 'react';\n\nexport const useIsClient = () => {\n\tconst [isClient, setIsClient] = useState(false);\n\tuseEffect(() => {\n\t\tif (typeof window !== 'undefined') {\n\t\t\tsetIsClient(true);\n\t\t}\n\t}, []);\n\treturn isClient;\n};\n","'use client';\n\nimport { useCallback, useEffect, useState } from 'react';\nimport { atom, useSetRecoilState } from 'recoil';\nimport { useMoonraker } from '@/moonraker/hooks';\n\nexport type KlippyReadyStates = 'ready' | 'error' | 'shutdown' | 'startup' | 'unknown';\n\nexport const useKlippyStateHandler = () => {\n\tconst { query, lastMessage } = useMoonraker({\n\t\tpassThroughUpdateMethods: ['notify_klippy_ready', 'notify_klippy_shutdown', 'notify_klippy_disconnected'],\n\t});\n\tconst [klippyReadyState, setKlippyReadyState] = useState<KlippyReadyStates>('unknown');\n\n\tconst queryKlippyState = useCallback(async () => {\n\t\tif (query != null) {\n\t\t\ttry {\n\t\t\t\tconst serverInfo = await query('server.info');\n\t\t\t\tif (serverInfo?.klippy_state == null) return;\n\t\t\t\tconst klippyState: KlippyReadyStates = serverInfo.klippy_state;\n\t\t\t\tsetKlippyReadyState(klippyState);\n\t\t\t\tif (klippyState === 'startup') {\n\t\t\t\t\t// Query for server info in two seconds as instructed by the moonraker docs.\n\t\t\t\t\t// Seems unnecessary with globally published events?\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tqueryKlippyState();\n\t\t\t\t\t}, 2000);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tsetKlippyReadyState('unknown');\n\t\t\t}\n\t\t}\n\t}, [query, setKlippyReadyState]);\n\n\tuseEffect(() => {\n\t\tif (query != null) {\n\t\t\tqueryKlippyState();\n\t\t}\n\t}, [query, queryKlippyState]);\n\n\tuseEffect(() => {\n\t\tif (lastMessage && 'method' in lastMessage && lastMessage.method === 'notify_klippy_ready') {\n\t\t\tsetKlippyReadyState('ready');\n\t\t}\n\t\tif (lastMessage && 'method' in lastMessage && lastMessage.method === 'notify_klippy_shutdown') {\n\t\t\tsetKlippyReadyState('shutdown');\n\t\t}\n\t\tif (lastMessage && 'method' in lastMessage && lastMessage.method === 'notify_klippy_disconnected') {\n\t\t\tsetKlippyReadyState('unknown');\n\t\t\tqueryKlippyState();\n\t\t}\n\t}, [lastMessage, queryKlippyState, setKlippyReadyState]);\n\n\treturn klippyReadyState;\n};\n","// Generated by ts-to-zod (https://www.npmjs.com/package/ts-to-zod)\nimport { z } from 'zod';\n\nexport const aDXL345SensorNameSchema = z.union([\n\tz.literal('toolboard_t0'),\n\tz.literal('toolboard_t1'),\n\tz.literal('controlboard'),\n\tz.literal('rpi'),\n]);\n\nexport const aDXL345ResponseHeaderSchema = z.union([\n\tz.literal('time'),\n\tz.literal('x_acceleration'),\n\tz.literal('y_acceleration'),\n\tz.literal('z_acceleration'),\n]);\n\nexport const klipperADXL345SubscriptionResponseSchema = z.object({\n\theader: z.tuple([\n\t\taDXL345ResponseHeaderSchema,\n\t\taDXL345ResponseHeaderSchema,\n\t\taDXL345ResponseHeaderSchema,\n\t\taDXL345ResponseHeaderSchema,\n\t]),\n});\n\nexport const klipperADXL345SubscriptionDataSchema = z.object({\n\tdata: z.array(z.tuple([z.number(), z.number(), z.number(), z.number()])),\n\toverflows: z.number().optional(),\n});\n\nexport const psdSchema = z.object({\n\tfrequencies: z.array(z.number()),\n\testimates: z.array(z.number()),\n\tpowerRange: z.object({\n\t\tmax: z.number(),\n\t\tmin: z.number(),\n\t}),\n});\n\nexport const accumulatedPSDSchema = z.object({\n\tx: psdSchema,\n\ty: psdSchema,\n\tz: psdSchema,\n\ttotal: psdSchema,\n\tsource: z.object({\n\t\tx: z.array(psdSchema),\n\t\ty: z.array(psdSchema),\n\t\tz: z.array(psdSchema),\n\t\ttotal: z.array(psdSchema),\n\t}),\n});\n\n// Macro data structure\nexport const macroIDSchema = z.string().brand('MacroID');\n\nexport const macroSequenceIDSchema = z.string().brand('MacroSequenceID');\n\nexport const macroRecordingIdSchema = z.string().brand('MacroRecordingID');\n\nexport const macroRecordingRunIdSchema = z.string().brand('MacroRecordingRunID');\n\nexport const macroRecordingSettingsSchema = z\n\t.object({\n\t\tcapturePSD: z.boolean().default(false),\n\t\taccelerometer: aDXL345SensorNameSchema.optional(),\n\t\tcolor: z.string().optional(),\n\t})\n\t.superRefine((val, ctx) => {\n\t\tif (val.capturePSD && val.accelerometer == null) {\n\t\t\tctx.addIssue({\n\t\t\t\tcode: z.ZodIssueCode.custom,\n\t\t\t\tmessage: 'Required when recording resonance data',\n\t\t\t\tpath: ['accelerometer'],\n\t\t\t});\n\t\t}\n\t\treturn val;\n\t});\n\nexport const macroRecordingSchema = z.object({\n\tid: macroRecordingIdSchema,\n\tmacroRecordingRunId: macroRecordingRunIdSchema,\n\tmacroId: macroIDSchema,\n\tsequenceId: macroSequenceIDSchema,\n\tstartTimeStamp: z.number(),\n\tendTimeStamp: z.number(),\n\taccelerometer: aDXL345SensorNameSchema,\n\trecordingHardwareName: z.string(),\n\tpsd: accumulatedPSDSchema,\n\tname: z.string(),\n});\n\nexport const macroRecordingSchemaWithoutSourcePSDs = macroRecordingSchema.extend({\n\tpsd: accumulatedPSDSchema.omit({ source: true }),\n});\n\nexport const macroSequenceSchema = z.object({\n\tid: macroSequenceIDSchema,\n\tname: z.string(),\n\trecording: macroRecordingSettingsSchema.nullable(),\n\tgcode: z.string().min(2),\n});\n\nexport const macroSchema = z.object({\n\tid: macroIDSchema,\n\tname: z.string(),\n\tdescription: z.string(),\n\tcreatedAtTimeStamp: z.number(),\n\tupdatedAtTimeStamp: z.number().nullable(),\n\trecordingCount: z.record(macroSequenceIDSchema, z.number()),\n\tsequences: z.array(macroSequenceSchema),\n});\n\nexport const createMacroSchema = macroSchema.omit({\n\trecordingCount: true,\n\tcreatedAtTimeStamp: true,\n\tupdatedAtTimeStamp: true,\n});\n\n// inferred types:\nexport type ADXL345SensorName = z.infer<typeof aDXL345SensorNameSchema>;\n\nexport type ADXL345ResponseHeader = z.infer<typeof aDXL345ResponseHeaderSchema>;\n\nexport type KlipperADXL345SubscriptionResponse = z.infer<typeof klipperADXL345SubscriptionResponseSchema>;\n\nexport type KlipperADXL345SubscriptionData = z.infer<typeof klipperADXL345SubscriptionDataSchema>;\n\nexport type PSD = z.infer<typeof psdSchema>;\n\nexport type AccumulatedPSD = z.infer<typeof accumulatedPSDSchema>;\n\nexport type MacroID = z.infer<typeof macroIDSchema>;\n\nexport type MacroRecordingSettings = z.infer<typeof macroRecordingSettingsSchema>;\n\nexport type MacroRecording = z.infer<typeof macroRecordingSchema>;\n\nexport type MacroRecordingWithoutSourcePSDs = z.infer<typeof macroRecordingSchemaWithoutSourcePSDs>;\n\nexport type MacroSequence = z.infer<typeof macroSequenceSchema>;\n\nexport type Macro = z.infer<typeof macroSchema>;\n"],"names":["tailwind_config","darkMode","content","theme","container","center","padding","screens","extend","fontFamily","sans","defaultTheme","keyframes","ping","opacity","transform","from","height","to","animation","colors","brand","border","input","ring","background","foreground","primary","DEFAULT","secondary","destructive","muted","accent","popover","card","borderRadius","lg","md","sm","fontSize","s","containers","plugins","require","nocompatible","param","addBase","Object","fromEntries","entries","flattenColorPalette","map","key","val","parsed","convert","hsl","concat","startsWith","matchUtilities","backgroundImage","svgToDataUri","value","values","type","fullConfig","resolveConfig","tailwindConfig","twColors","shadableTWColors","keys","filter","twColor","color","c","ChartTheme","SciChartJSDarkv2Theme","constructor","sciChartBackground","loadingAnimationBackground","axisBandsFill","majorGridLineBrush","minorGridLineBrush","strokePalette","fillPalette","isLightBackground","ADXL_STREAM_BUFFER_SIZE","SciChartSurface","configure","wasmUrl","dataUrl","UseCommunityLicense","SIGNAL_CHART_AXIS_SIGNAL_ID","SIGNAL_CHART_AXIS_HISTORY_ID","SIGNAL_CHART_AXIS_AMPLITUDE_ID","getAxisColorName","axis","getAxisColor","NumberRange","useADXLSignalChart","useChart","useCallback","xAxis","CategoryAxis","surface","webAssemblyContext2D","id","autoRange","EAutoRange","Always","maxAutoTicks","drawLabels","drawMinorTickLines","drawMajorTickLines","drawMajorBands","drawMinorGridLines","drawMajorGridLines","xAxes","add","xHistoryAxis","yAxis","NumericAxis","Never","visibleRange","axisAlignment","EAxisAlignment","Left","yAxes","signalData","XyDataSeries","fifoCapacity","containsNaN","isSorted","dataSeriesName","toLocaleUpperCase","dataIsSortedInX","xValues","Array","fill","_","i","yValues","signalSeries","FastLineRenderableSeries","xAxisId","yAxisId","stroke","strokeThickness","dataSeries","effect","GlowEffect","intensity","range","renderableSeries","historyData","historySeries","WaveAnimation","duration","PSD_CHART_AXIS_AMPLITUDE_ID","PSDChartMinimumYVisibleRange","PSDChardNoSeriesDefinition","Thickness","fromNumber","EAxisType","options","labelStyle","inter","fontWeight","labelPostfix","minorsPerMajor","growBy","labelFormat","ENumericFormat","Exponential","autoRangeAnimation","animateInitialRanging","animateSubsequentRanging","easing","inOutCubic","axisTitleStyle","PSDChartDefinition","series","ESeriesType","MountainSeries","xyData","Math","floor","LineSeries","getPSDTooltipLegendTemplate","seriesInfos","svgAnnotation","outputSvgString","y","valuesWithLabels","forEach","seriesInfo","index","textColor","rolloverModifierProps","tooltipColor","push","separator","tooltipTitle","yValue","toFixed","formattedXValue","dataSeriesType","EDataSeriesType","Xyy","rolloverModifierProps1","si","y1Value","abs","width","length","calcTooltipWidth","reduce","prev","cur","psdRolloverTooltipTemplate","rolloverTooltip","valuesBlock","tooltipProps","tooltipTextColor","tooltipBorderColor","parseColorToTArgb","tooltipBGColor","tooltipLabelX","tooltipLabelY","shadowColor","round","tooltipDataTemplate","rolloverModifier","calcTooltipHeight","updateSize","blur","undefined","shadowRGBA","red","green","blue","parseTArgbToHtmlColor","getTooltipDataTemplate","lines","formattedYValue","usePSDChart","xAnimationSeries","addDeletable","yAnimationSeries","zAnimationSeries","totalAnimationSeries","asArray","rs","paletteProvider","PaletteFactory","createGradient","GradientParams","Point","offset","enableStroke","enableFill","fillOpacity","pointMarkerOpacity","tooltipTemplate","substring","toUpperCase","chartModifiers","RolloverModifier","showRolloverLine","showTooltip","CursorModifier","crosshairStroke","sky","crosshairStrokeThickness","showXLine","showYLine","axisLabelFill","zinc","axisLabelStroke","animationSeries","x","z","total","textLength","charWidth","lineHeight","getWsURL","host","getHost","trim","REQ_ID","isSuccessResponse","res","useRealtimeADXL","wsUrl","setWsUrl","useState","inFlightRequests","useRef","inFlightRequestTimeouts","isSubscribed","setIsSubscribed","isSubscribedRef","current","kippyState","useKlippyStateHandler","useEffect","lastJsonMessage","sendJsonMessage","readyState","useWebSocket","enabled","shouldReconnect","onMessage","onDataUpdate","JSON","parse","message","data","params","klipperADXL345SubscriptionDataSchema","getLogger","error","e","console","warn","reconnectAttempts","Infinity","reconnectInterval","share","subscribe","Promise","resolve","reject","err","result","window","setTimeout","jsonrpc","method","sensor","response_template","then","klipperADXL345SubscriptionResponseSchema","info","catch","clearTimeout","reqId","definition","initializer","indent","isInitialized","setIsInitialized","useMemo","forwardProps","initChart","rootElement","chart","orgPadding","def","top","right","bottom","left","build2DChart","create","sciChartSurface","watermarkPosition","EWatermarkPosition","BottomLeft","watermarkRelativeToCanvas","onInit","style","marginLeft","fallback","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsx","FullLoadScreen","className","twJoin","useADXLFifoTensor","buffer","sampleRate","dropped","setDropped","take","max","min","count","shape","out","keep","split","dispose","onData","incoming","tensor2d","status","newBuffer","concat2d","debug","drop","useBufferedADXLSignal","fifoTensor","updateFn","lastUpdate","Date","getTime","update","tick","toTake","time","reshape","useBufferedPSD","xref","tensor1d","yref","zref","isDetrended","rate","newX","newY","newZ","xData","clone","yData","zData","totalData","addN","xpsd","ypsd","zpsd","all","powerSpectralDensity","totalpsd","sumPSDs","useAccumulatedPSD","isAccumulating","setIsAccumulating","psds","start","stop","old","welch","source","newTotal","startAccumulation","stopAccumulation","useTicker","tickOrTargetFps","fnRef","interval","maximumRangeUnion","isArray","getMaximumRange","union","visibleRangeUnion","growByUnion","useDynamicAxisRange","minimum","maxRef","lastChange","dataRange","axes","sinceLastUpdate","sinceLastChange","newMax","newMin","a","animateVisibleRange","inOutCirc","detrendSignal","tidy","sub","signal","mean","fftSize","_scaling","assign","ceil","log2","scaling_factor","win","tfSignal","hannWindow","klipScale","div","sum","pow","array","detrended","f","stft","powers","frequencies","maxPower","minPower","frequency","nextFrequency","power","estimates","powerRange","PSDs","num_estimates","avg","p","acc","psd","props","Spinner","NoSSR","isClient","useIsClient","DynamicImport","children","lazy","default","Fragment","jsxs","svg","twMerge","noMargin","xmlns","viewBox","circle","cx","cy","r","strokeWidth","path","d","setIsClient","query","lastMessage","useMoonraker","passThroughUpdateMethods","klippyReadyState","setKlippyReadyState","queryKlippyState","serverInfo","klippy_state","klippyState","aDXL345SensorNameSchema","literal","aDXL345ResponseHeaderSchema","object","header","tuple","number","overflows","optional","psdSchema","accumulatedPSDSchema","macroIDSchema","string","macroSequenceIDSchema","macroRecordingIdSchema","macroRecordingRunIdSchema","macroRecordingSettingsSchema","capturePSD","boolean","accelerometer","superRefine","ctx","addIssue","code","ZodIssueCode","custom","macroRecordingSchema","macroRecordingRunId","macroId","sequenceId","startTimeStamp","endTimeStamp","recordingHardwareName","name","omit","macroSequenceSchema","recording","nullable","gcode","macroSchema","description","createdAtTimeStamp","updatedAtTimeStamp","recordingCount","record","sequences","createMacroSchema"],"sourceRoot":""}