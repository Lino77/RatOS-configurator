{"version":3,"file":"static/chunks/4595-1a9f399703a036dc.js","mappings":"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","sources":["webpack://_N_E/ignored|/home/runner/work/RatOS-configurator/RatOS-configurator/src/node_modules/.pnpm/object-inspect@1.13.1/node_modules/object-inspect|./util.inspect","webpack://_N_E/./app/_helpers/logger.ts","webpack://_N_E/./components/common/badge.tsx","webpack://_N_E/./helpers/logger.ts","webpack://_N_E/./helpers/trpc.ts","webpack://_N_E/./helpers/util.ts","webpack://_N_E/./moonraker/migrations.ts","webpack://_N_E/./moonraker/hooks.tsx","webpack://_N_E/./utils/trpc.ts","webpack://_N_E/./zods/util.tsx","webpack://_N_E/<anon>"],"sourcesContent":["/* (ignored) */","import pino from 'pino';\nimport { globalPinoOpts } from '@/helpers/logger';\nimport { trpcClient } from '@/helpers/trpc';\nimport { PinoLogEvent } from '@/zods/util';\nimport { prettyFactory, write } from 'pino-pretty-browser';\n\nconst send = async function (level: pino.Level, logEvent: pino.LogEvent) {\n\ttrpcClient.clientLog.mutate({ level, logEvent: PinoLogEvent.parse(logEvent) });\n};\n\nlet logger: pino.Logger | null = null;\nexport const getLogger = () => {\n\tif (logger != null) {\n\t\treturn logger;\n\t}\n\tlogger = pino({\n\t\t...globalPinoOpts,\n\t\tbrowser: {\n\t\t\ttransmit: {\n\t\t\t\tsend,\n\t\t\t},\n\t\t},\n\t});\n\treturn logger;\n};\n","import { VariantProps, cva } from 'class-variance-authority';\nimport { twMerge } from 'tailwind-merge';\nimport { z } from 'zod';\n\nexport const badgeColorOptions = z.union([\n\tz.literal('rose'),\n\tz.literal('red'),\n\tz.literal('yellow'),\n\tz.literal('orange'),\n\tz.literal('green'),\n\tz.literal('lime'),\n\tz.literal('blue'),\n\tz.literal('sky'),\n\tz.literal('indigo'),\n\tz.literal('purple'),\n\tz.literal('pink'),\n\tz.literal('brand'),\n\tz.literal('gray'),\n\tz.literal('plain'),\n]);\nexport const badgeTextColorStyle = cva('', {\n\tvariants: {\n\t\tcolor: {\n\t\t\trose: 'text-rose-700 dark:text-rose-400',\n\t\t\tred: 'text-red-700 dark:text-red-400',\n\t\t\tyellow: 'text-yellow-800 dark:text-yellow-500',\n\t\t\torange: 'text-orange-800 dark:text-orange-500',\n\t\t\tgreen: 'text-green-700 dark:text-green-400',\n\t\t\tlime: 'text-lime-700 dark:text-lime-400',\n\t\t\tblue: 'text-blue-700 dark:text-blue-400',\n\t\t\tsky: 'text-sky-700 dark:text-sky-400',\n\t\t\tindigo: 'text-indigo-700 dark:text-indigo-400',\n\t\t\tpurple: 'text-purple-700 dark:text-purple-400',\n\t\t\tpink: 'text-pink-700 dark:text-pink-400',\n\t\t\tbrand: 'text-brand-700 dark:text-brand-400',\n\t\t\tgray: 'text-zinc-600 dark:text-zinc-400',\n\t\t\tplain: 'text-zinc-900 dark:text-zinc-100',\n\t\t} satisfies { [key in z.infer<typeof badgeColorOptions>]: string },\n\t},\n});\n\nexport const badgeBackgroundColorStyle = cva('', {\n\tvariants: {\n\t\tcolor: {\n\t\t\trose: 'bg-rose-50 dark:bg-rose-400/10',\n\t\t\tred: 'bg-red-50 dark:bg-red-400/10',\n\t\t\tyellow: 'bg-yellow-50 dark:bg-yellow-400/10',\n\t\t\torange: 'bg-orange-50 dark:bg-orange-400/10',\n\t\t\tgreen: 'bg-green-50 dark:bg-green-500/10',\n\t\t\tlime: 'bg-lime-50 dark:bg-lime-500/10',\n\t\t\tblue: 'bg-blue-50 dark:bg-blue-400/10',\n\t\t\tsky: 'bg-sky-50 dark:bg-sky-400/10',\n\t\t\tindigo: 'bg-indigo-50 dark:bg-indigo-400/10',\n\t\t\tpurple: 'bg-purple-50 dark:bg-purple-400/10',\n\t\t\tpink: 'bg-pink-50 dark:bg-pink-400/10',\n\t\t\tbrand: 'bg-brand-100 dark:bg-brand-400/10',\n\t\t\tgray: 'bg-zinc-50 dark:bg-zinc-400/10',\n\t\t\tplain: 'bg-zinc-900/10 dark:bg-zinc-100/10',\n\t\t} satisfies { [key in z.infer<typeof badgeColorOptions>]: string },\n\t},\n});\n\nexport const badgeBorderColorStyle = cva('', {\n\tvariants: {\n\t\tcolor: {\n\t\t\trose: 'border-rose-600/10 dark:border-rose-400/20 ring-rose-600/10 dark:ring-rose-400/20',\n\t\t\tred: 'border-red-600/10 dark:border-red-400/20 ring-red-600/10 dark:ring-red-400/20',\n\t\t\tyellow: 'border-yellow-600/20 dark:border-yellow-400/20 ring-yellow-600/20 dark:ring-yellow-400/20',\n\t\t\torange: 'border-orange-600/20 dark:border-orange-400/20 ring-orange-600/20 dark:ring-orange-400/20',\n\t\t\tgreen: 'border-green-600/20 dark:border-green-500/20 ring-green-600/20 dark:ring-green-500/20',\n\t\t\tlime: 'border-lime-600/20 dark:border-lime-500/20 ring-lime-600/20 dark:ring-lime-500/20',\n\t\t\tblue: 'border-blue-700/10 dark:border-blue-400/30 ring-blue-700/10 dark:ring-blue-400/30',\n\t\t\tsky: 'border-sky-700/10 dark:border-sky-400/30 ring-sky-700/10 dark:ring-sky-400/30',\n\t\t\tindigo: 'border-indigo-700/10 dark:border-indigo-400/30 ring-indigo-700/10 dark:ring-indigo-400/30',\n\t\t\tpurple: 'border-purple-700/10 dark:border-purple-400/30 ring-purple-700/10 dark:ring-purple-400/30',\n\t\t\tpink: 'border-pink-700/10 dark:border-pink-400/20 ring-pink-700/10 dark:ring-pink-400/20',\n\t\t\tbrand: 'border-brand-600/40 dark:border-brand-400/30 ring-brand-600/40 dark:ring-brand-400/30',\n\t\t\tgray: 'border-zinc-500/10 dark:border-zinc-400/20 ring-zinc-500/10 dark:ring-zinc-400/20',\n\t\t\tplain: 'border-zinc-900 dark:border-zinc-100 ring-zinc-900 dark:ring-zinc-100',\n\t\t} satisfies { [key in z.infer<typeof badgeColorOptions>]: string },\n\t},\n});\n\nconst badgeStyle = cva('flex-0 inline-flex w-auto items-center rounded-md font-medium ring-1 ring-inset', {\n\tvariants: {\n\t\tsize: {\n\t\t\tsm: 'px-1.5 gap-1.5 py-1 text-2xs leading-3',\n\t\t\tmd: 'px-2 gap-2 py-1 text-xs leading-4',\n\t\t\tlg: 'px-2 gap-2 py-1 text-xs leading-6',\n\t\t},\n\t\tcolor: {\n\t\t\trose: [\n\t\t\t\tbadgeBackgroundColorStyle({ color: 'rose' }),\n\t\t\t\tbadgeBorderColorStyle({ color: 'rose' }),\n\t\t\t\tbadgeTextColorStyle({ color: 'rose' }),\n\t\t\t],\n\t\t\tred: [\n\t\t\t\tbadgeBackgroundColorStyle({ color: 'red' }),\n\t\t\t\tbadgeBorderColorStyle({ color: 'red' }),\n\t\t\t\tbadgeTextColorStyle({ color: 'red' }),\n\t\t\t],\n\t\t\tyellow: [\n\t\t\t\tbadgeBackgroundColorStyle({ color: 'yellow' }),\n\t\t\t\tbadgeBorderColorStyle({ color: 'yellow' }),\n\t\t\t\tbadgeTextColorStyle({ color: 'yellow' }),\n\t\t\t],\n\t\t\torange: [\n\t\t\t\tbadgeBackgroundColorStyle({ color: 'orange' }),\n\t\t\t\tbadgeBorderColorStyle({ color: 'orange' }),\n\t\t\t\tbadgeTextColorStyle({ color: 'orange' }),\n\t\t\t],\n\t\t\tgreen: [\n\t\t\t\tbadgeBackgroundColorStyle({ color: 'green' }),\n\t\t\t\tbadgeBorderColorStyle({ color: 'green' }),\n\t\t\t\tbadgeTextColorStyle({ color: 'green' }),\n\t\t\t],\n\t\t\tlime: [\n\t\t\t\tbadgeBackgroundColorStyle({ color: 'lime' }),\n\t\t\t\tbadgeBorderColorStyle({ color: 'lime' }),\n\t\t\t\tbadgeTextColorStyle({ color: 'lime' }),\n\t\t\t],\n\t\t\tblue: [\n\t\t\t\tbadgeBackgroundColorStyle({ color: 'blue' }),\n\t\t\t\tbadgeBorderColorStyle({ color: 'blue' }),\n\t\t\t\tbadgeTextColorStyle({ color: 'blue' }),\n\t\t\t],\n\t\t\tsky: [\n\t\t\t\tbadgeBackgroundColorStyle({ color: 'sky' }),\n\t\t\t\tbadgeBorderColorStyle({ color: 'sky' }),\n\t\t\t\tbadgeTextColorStyle({ color: 'sky' }),\n\t\t\t],\n\t\t\tindigo: [\n\t\t\t\tbadgeBackgroundColorStyle({ color: 'indigo' }),\n\t\t\t\tbadgeBorderColorStyle({ color: 'indigo' }),\n\t\t\t\tbadgeTextColorStyle({ color: 'indigo' }),\n\t\t\t],\n\t\t\tpurple: [\n\t\t\t\tbadgeBackgroundColorStyle({ color: 'purple' }),\n\t\t\t\tbadgeBorderColorStyle({ color: 'purple' }),\n\t\t\t\tbadgeTextColorStyle({ color: 'purple' }),\n\t\t\t],\n\t\t\tpink: [\n\t\t\t\tbadgeBackgroundColorStyle({ color: 'pink' }),\n\t\t\t\tbadgeBorderColorStyle({ color: 'pink' }),\n\t\t\t\tbadgeTextColorStyle({ color: 'pink' }),\n\t\t\t],\n\t\t\tbrand: [\n\t\t\t\tbadgeBackgroundColorStyle({ color: 'brand' }),\n\t\t\t\tbadgeBorderColorStyle({ color: 'brand' }),\n\t\t\t\tbadgeTextColorStyle({ color: 'brand' }),\n\t\t\t],\n\t\t\tgray: [\n\t\t\t\tbadgeBackgroundColorStyle({ color: 'gray' }),\n\t\t\t\tbadgeBorderColorStyle({ color: 'gray' }),\n\t\t\t\tbadgeTextColorStyle({ color: 'gray' }),\n\t\t\t],\n\t\t\tplain: [\n\t\t\t\tbadgeBackgroundColorStyle({ color: 'plain' }),\n\t\t\t\tbadgeBorderColorStyle({ color: 'plain' }),\n\t\t\t\tbadgeTextColorStyle({ color: 'plain' }),\n\t\t\t],\n\t\t} satisfies { [key in z.infer<typeof badgeColorOptions>]: string[] },\n\t},\n\tdefaultVariants: {\n\t\tsize: 'md',\n\t\tcolor: 'gray',\n\t},\n});\n\nexport type BadgeProps = JSX.IntrinsicElements['span'] &\n\tVariantProps<typeof badgeStyle> & {\n\t\tchildren: React.ReactNode;\n\t\tclassName?: string;\n\t};\n\nexport const Badge: React.FC<BadgeProps> = (props) => {\n\tconst { size, color, className, children, ...forwardProps } = props;\n\treturn (\n\t\t<span className={twMerge(badgeStyle({ size, color }), className)} {...forwardProps}>\n\t\t\t{children}\n\t\t</span>\n\t);\n};\n","import { LoggerOptions } from 'pino';\n\nexport const globalPinoOpts: LoggerOptions = {\n\ttimestamp: true,\n\tlevel: process.env.NODE_ENV === 'development' ? 'debug' : 'info',\n};\n","import { proxyClient, trpc } from '@/utils/trpc';\nexport { trpc, proxyClient as trpcClient };\n","'use client';\nexport const getHost = () => {\n\treturn process.env.NEXT_PUBLIC_KLIPPER_HOSTNAME != null && process.env.NEXT_PUBLIC_KLIPPER_HOSTNAME.trim() != ''\n\t\t? process.env.NEXT_PUBLIC_KLIPPER_HOSTNAME\n\t\t: typeof window !== 'undefined' && window.location?.hostname != null\n\t\t\t? window.location.hostname\n\t\t\t: null;\n};\n","/* eslint-disable no-console */\nimport { getHost } from '@/helpers/util';\nimport { MoonrakerDBItemResponse } from '@/moonraker/types';\n\ninterface Migration {\n\tversion: number;\n\tdescription: string;\n\tup: () => Promise<{ result: string }>;\n\tdown: () => Promise<{ result: string }>;\n}\n\nexport const migrations: Migration[] = [\n\t{\n\t\tversion: 1,\n\t\tdescription: \"Undo double JSON encoding of RatOS's data\",\n\t\tup: async () => {\n\t\t\tconst res = await window.fetch(`http://${getHost()}/server/database/item?namespace=RatOS`);\n\t\t\tif (res.ok) {\n\t\t\t\tconst data = (await res.json()) as\n\t\t\t\t\t| { result: MoonrakerDBItemResponse<{ [key: string]: unknown }> }\n\t\t\t\t\t| { error: { message: string } };\n\t\t\t\tif ('error' in data) {\n\t\t\t\t\tthrow new Error(data.error.message);\n\t\t\t\t}\n\t\t\t\tconst result: string[] = [];\n\t\t\t\tif (data.result.value == null) {\n\t\t\t\t\treturn { result: 'Nothing to migrate' };\n\t\t\t\t}\n\t\t\t\tfor await (const [key, value] of Object.entries(data.result.value)) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst parsed = JSON.parse(value as any);\n\t\t\t\t\t\tconsole.log('Migrating', key, 'from', value, 'to', parsed);\n\t\t\t\t\t\tawait window.fetch(`http://${getHost()}/server/database/item`, {\n\t\t\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\t\t\t\tnamespace: 'RatOS',\n\t\t\t\t\t\t\t\tkey,\n\t\t\t\t\t\t\t\tvalue: parsed,\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t});\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tconsole.error('Error migrating', key, value, 'clearing key');\n\t\t\t\t\t\tawait window.fetch(\n\t\t\t\t\t\t\t`http://${getHost()}/server/database/item?namespace=RatOS&key=${encodeURIComponent(key)}`,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tmethod: 'DELETE',\n\t\t\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\t\t\t\t\tnamespace: 'RatOS',\n\t\t\t\t\t\t\t\t\tkey,\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn { result: `Succesfully decoded ${result.length} keys.\\n${result.join('\\n')}` };\n\t\t\t} else {\n\t\t\t\treturn { result: 'Nothing to migrate' };\n\t\t\t}\n\t\t},\n\t\tdown: async () => {\n\t\t\t// drop table\n\t\t\tconst res = await window.fetch(`http://${getHost()}/server/database/item?namespace=RatOS`);\n\t\t\tif (res.ok) {\n\t\t\t\tconst data = (await res.json()) as\n\t\t\t\t\t| { result: MoonrakerDBItemResponse<{ [key: string]: unknown }> }\n\t\t\t\t\t| { error: { message: string } };\n\t\t\t\tif ('error' in data) {\n\t\t\t\t\tthrow new Error(data.error.message);\n\t\t\t\t}\n\t\t\t\tif (data.result.value == null) {\n\t\t\t\t\treturn { result: 'Nothing to migrate' };\n\t\t\t\t}\n\t\t\t\tconst result: string[] = [];\n\t\t\t\tfor await (const [key, value] of Object.entries(data.result.value)) {\n\t\t\t\t\tconst encoded = JSON.stringify(value as any);\n\t\t\t\t\tawait window.fetch(`http://${getHost()}/server/database/item`, {\n\t\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\t\t},\n\t\t\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\t\t\tnamespace: 'RatOS',\n\t\t\t\t\t\t\tkey,\n\t\t\t\t\t\t\tvalue: encoded,\n\t\t\t\t\t\t}),\n\t\t\t\t\t});\n\t\t\t\t\tresult.push(`Re-encoded ${key}`);\n\t\t\t\t}\n\t\t\t\treturn { result: `Succesfully re-encoded ${result.length} keys.\\n${result.join('\\n')}` };\n\t\t\t}\n\t\t\treturn { result: 'Nothing to migrate' };\n\t\t},\n\t},\n\t{\n\t\tversion: 2,\n\t\tdescription: 'Change caramba printers to v-core-4 / v-chonk',\n\t\tup: async () => {\n\t\t\tconst res = await window.fetch(`http://${getHost()}/server/database/item?namespace=RatOS`);\n\t\t\tif (res.ok) {\n\t\t\t\tconst data = (await res.json()) as\n\t\t\t\t\t| { result: MoonrakerDBItemResponse<{ [key: string]: unknown }> }\n\t\t\t\t\t| { error: { message: string } };\n\t\t\t\tif ('error' in data) {\n\t\t\t\t\tthrow new Error(data.error.message);\n\t\t\t\t}\n\t\t\t\tconst result: string[] = [];\n\t\t\t\tif (data.result.value == null) {\n\t\t\t\t\treturn { result: 'Nothing to migrate' };\n\t\t\t\t}\n\t\t\t\tfor await (const [key, value] of Object.entries(data.result.value)) {\n\t\t\t\t\tif (key === 'Printer' && typeof value === 'string') {\n\t\t\t\t\t\tconst migratedValue = value.replace(/caramba-chonk/g, 'v-chonk').replace(/caramba/g, 'v-core-4');\n\t\t\t\t\t\tif (migratedValue === value) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tawait window.fetch(`http://${getHost()}/server/database/item`, {\n\t\t\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\t\t\t\tnamespace: 'RatOS',\n\t\t\t\t\t\t\t\tkey: 'Printer',\n\t\t\t\t\t\t\t\tvalue: migratedValue,\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t});\n\t\t\t\t\t\tresult.push(`Migrated ${value} to ${migratedValue}`);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn { result: `Succesfully migrated ${result.length} keys.\\n${result.join('\\n')}` };\n\t\t\t} else {\n\t\t\t\treturn { result: 'Nothing to migrate' };\n\t\t\t}\n\t\t},\n\t\tdown: async () => {\n\t\t\tconst res = await window.fetch(`http://${getHost()}/server/database/item?namespace=RatOS`);\n\t\t\tif (res.ok) {\n\t\t\t\tconst data = (await res.json()) as\n\t\t\t\t\t| { result: MoonrakerDBItemResponse<{ [key: string]: unknown }> }\n\t\t\t\t\t| { error: { message: string } };\n\t\t\t\tif ('error' in data) {\n\t\t\t\t\tthrow new Error(data.error.message);\n\t\t\t\t}\n\t\t\t\tconst result: string[] = [];\n\t\t\t\tif (data.result.value == null) {\n\t\t\t\t\treturn { result: 'Nothing to migrate' };\n\t\t\t\t}\n\t\t\t\tfor await (const [key, value] of Object.entries(data.result.value)) {\n\t\t\t\t\tif (key === 'Printer' && typeof value === 'string') {\n\t\t\t\t\t\tconst migratedValue = value.replace(/v-chonk/g, 'caramba-chonk').replace(/v-core-4/g, 'caramba');\n\t\t\t\t\t\tif (migratedValue === value) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tawait window.fetch(`http://${getHost()}/server/database/item`, {\n\t\t\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\t\t\t\tnamespace: 'RatOS',\n\t\t\t\t\t\t\t\tkey: 'Printer',\n\t\t\t\t\t\t\t\tvalue: migratedValue,\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t});\n\t\t\t\t\t\tresult.push(`Migrated ${value} to ${migratedValue}`);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn { result: `Succesfully migrated ${result.length} keys.\\n${result.join('\\n')}` };\n\t\t\t} else {\n\t\t\t\treturn { result: 'Nothing to migrate' };\n\t\t\t}\n\t\t},\n\t},\n];\n\nexport const getCurrentVersion = async (): Promise<number> => {\n\tconst res = await window.fetch(`http://${getHost()}/server/database/item?namespace=RatOS&key=__db_version`);\n\tif (res.ok) {\n\t\tconst data = (await res.json()) as { result: MoonrakerDBItemResponse<number> } | { error: { message: string } };\n\t\tif ('error' in data) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn data.result.value as number;\n\t}\n\treturn 0;\n};\n\nexport const setCurrentVersion = async (version: number) => {\n\tawait window.fetch(`http://${getHost()}/server/database/item`, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json',\n\t\t},\n\t\tbody: JSON.stringify({\n\t\t\tnamespace: 'RatOS',\n\t\t\tkey: '__db_version',\n\t\t\tvalue: version,\n\t\t}),\n\t});\n};\n\nlet isMigrating = false;\nexport const migrate = async (from: number, to: number) => {\n\tif (isMigrating) {\n\t\treturn console.log('Already migrating, ignoring..');\n\t}\n\tif (from === to) {\n\t\treturn console.log('Already at target version');\n\t}\n\tisMigrating = true;\n\ttry {\n\t\tconst migrationsToRun = migrations\n\t\t\t.filter((m) => m.version > from && m.version <= to)\n\t\t\t.sort((a, b) => (from <= to ? a.version - b.version : b.version - a.version));\n\t\tfor await (const migration of migrationsToRun) {\n\t\t\tconst result = await (from < to ? migration.up() : migration.down());\n\t\t\tconsole.log(`Migrated to version ${migration.version}: ${result.result}`);\n\t\t}\n\t\tawait setCurrentVersion(to);\n\t} finally {\n\t\tisMigrating = false;\n\t}\n};\n\nlet isMigrated = false;\nexport const migrateToLatest = async () => {\n\tif (isMigrated) {\n\t\treturn console.log('Already migrated, ignoring..');\n\t}\n\tconst currentVersion = await getCurrentVersion();\n\tconst latestVersion = Math.max(...migrations.map((m) => m.version));\n\tif (currentVersion === latestVersion) {\n\t\tconsole.log('Already at latest version');\n\t\treturn;\n\t}\n\tif (isMigrating) {\n\t\tconsole.log('Already migrating, ignoring..');\n\t\treturn;\n\t}\n\tconsole.log('Migrating to latest version...', currentVersion, latestVersion);\n\tawait migrate(currentVersion, latestVersion);\n\tisMigrated = true;\n\tconsole.log('Migration complete.');\n};\n","'use client';\nimport { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { UseMutationOptions, UseQueryOptions, useMutation, useQuery } from '@tanstack/react-query';\nimport useWebSocket from 'react-use-websocket';\nimport { migrateToLatest } from '@/moonraker/migrations';\nimport type {\n\tInFlightRequestCallbacks,\n\tInFlightRequestTimeouts,\n\tJSONRPCResponse,\n\tMoonrakerStatus,\n\tMoonrakerSaveItemFn,\n\tMoonrakerNamespaces,\n\tMoonrakerDBItemResponse,\n\tMoonrakerGetItemFn,\n\tMoonrakerNamespaceKeys,\n\tMoonrakerDBValue,\n\tMoonrakerQueryFn,\n\tMoonrakerQueryKeys,\n\tMoonrakerQueryParams,\n\tMoonrakerQueryResult,\n\tMoonrakerMutationKeys,\n\tMoonrakerMutationParams,\n\tMoonrakerMutationResult,\n\tMoonrakerMutationFn,\n\tPrinterObjectKeys,\n\tPrinterObjectsMoonrakerQueryParams,\n\tPrinterObjectResult,\n\tJSONRPCResponseSuccess,\n} from '@/moonraker/types';\nimport { getHost } from '@/helpers/util';\nimport { merge } from 'ts-deepmerge';\nimport deepEqual from 'deep-equal';\nimport { getLogger } from '@/app/_helpers/logger';\n\nlet REQ_ID = 0;\n\nconst getWsURL = () => {\n\tconst host = getHost();\n\tif (host == null || host.trim() == '') {\n\t\treturn null;\n\t}\n\treturn `ws://${host}/websocket`;\n};\n\nconst subscriptions: { [key: number]: Partial<PrinterObjectsMoonrakerQueryParams> } = {};\n\ntype MoonrakerStatusUpdate = { [key in PrinterObjectKeys]: PrinterObjectResult<PrinterObjectKeys> };\n\ninterface MoonrakerHookOptions {\n\tonStatusUpdate?: (status: MoonrakerStatusUpdate) => void;\n\tpassThroughUpdateMethods?: string[];\n}\n\nexport const useMoonraker = (options?: MoonrakerHookOptions) => {\n\tconst inFlightRequests = useRef<InFlightRequestCallbacks>({});\n\tconst inFlightRequestTimeouts = useRef<InFlightRequestTimeouts>({});\n\tconst localSubscriptions = useRef<number[]>([]);\n\tconst onReadyCallbacks = useRef<{ resolve: () => void; reject: () => void }[]>([]);\n\tconst [wsUrl, setWsUrl] = useState(getWsURL());\n\tuseEffect(() => {\n\t\tsetWsUrl(getWsURL());\n\t}, []);\n\n\tconst containsSubscriptionUpdate = useCallback(\n\t\t(jsonMessage: JSONRPCResponse): jsonMessage is JSONRPCResponseSuccess => {\n\t\t\tif ('error' in jsonMessage) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (jsonMessage.method === 'notify_status_update' && jsonMessage.params != null) {\n\t\t\t\tconst res = jsonMessage.params[0] as MoonrakerStatusUpdate;\n\t\t\t\tif (res != null) {\n\t\t\t\t\tfor (const sub of localSubscriptions.current) {\n\t\t\t\t\t\tconst objects = subscriptions[sub];\n\t\t\t\t\t\tif (objects != null) {\n\t\t\t\t\t\t\tfor (const key in objects) {\n\t\t\t\t\t\t\t\tif (res[key as PrinterObjectKeys] != null) {\n\t\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\t[],\n\t);\n\n\tconst { lastJsonMessage, sendJsonMessage, readyState } = useWebSocket<JSONRPCResponse>(wsUrl, {\n\t\tfilter: (message) => {\n\t\t\tif (moonrakerStatus !== 'connected') {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tconst parsed = JSON.parse(message.data) as JSONRPCResponse;\n\t\t\t\tif (inFlightRequests.current[parsed.id] != null) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tif (\n\t\t\t\t\toptions?.passThroughUpdateMethods?.length &&\n\t\t\t\t\t'method' in parsed &&\n\t\t\t\t\toptions.passThroughUpdateMethods.includes(parsed.method)\n\t\t\t\t) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t} catch (e) {\n\t\t\t\tgetLogger().warn({ e, messageData: message.data }, 'Filter: Failed to parse message');\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\tonMessage: (message) => {\n\t\t\tif (options?.onStatusUpdate) {\n\t\t\t\ttry {\n\t\t\t\t\tconst parsed = JSON.parse(message.data) as JSONRPCResponse;\n\t\t\t\t\tif (containsSubscriptionUpdate(parsed)) {\n\t\t\t\t\t\tconst res = parsed.params[0] as MoonrakerStatusUpdate;\n\t\t\t\t\t\toptions.onStatusUpdate?.(res);\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\tgetLogger().warn({ e, messageData: message.data }, 'OnMessage: Failed to parse message');\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tshouldReconnect: (closeEvent) => {\n\t\t\treturn true;\n\t\t},\n\t\treconnectAttempts: Infinity,\n\t\treconnectInterval: 3000,\n\t\tshare: true,\n\t});\n\tconst readyStateRef = useRef(readyState);\n\treadyStateRef.current = readyState;\n\tconst [moonrakerStatus, setMoonrakerStatus] = useState<null | MoonrakerStatus>(\n\t\treadyState === 1 ? 'connected' : 'connecting',\n\t);\n\n\tconst whenReady = useCallback((resolve: () => void, reject: () => void) => {\n\t\tif (readyStateRef.current === 1) {\n\t\t\tresolve();\n\t\t} else {\n\t\t\tonReadyCallbacks.current.push({ resolve, reject });\n\t\t}\n\t}, []);\n\n\tconst isReady = useCallback(\n\t\t() =>\n\t\t\tnew Promise<void>((resolve, reject) => {\n\t\t\t\twhenReady(resolve, reject);\n\t\t\t}),\n\t\t[whenReady],\n\t);\n\tconst moonrakerQuery: MoonrakerQueryFn & MoonrakerMutationFn = useCallback(\n\t\tasync <Response = any,>(method: string, params: any = {}) => {\n\t\t\tconst id = ++REQ_ID;\n\t\t\tawait isReady();\n\t\t\treturn new Promise<Response>((resolve, reject) => {\n\t\t\t\tinFlightRequests.current[id] = (err, result) => {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treturn reject(err);\n\t\t\t\t\t}\n\t\t\t\t\tif (result && typeof result === 'object' && 'error' in result && result.error) {\n\t\t\t\t\t\treturn reject(result.error);\n\t\t\t\t\t}\n\t\t\t\t\tif (result == null) {\n\t\t\t\t\t\treturn reject(new Error('No result. Unknown response format.'));\n\t\t\t\t\t}\n\t\t\t\t\tresolve(result as Response);\n\t\t\t\t};\n\t\t\t\tlet timeout = 10 * 1000;\n\t\t\t\tif (method === 'printer.gcode.script') {\n\t\t\t\t\t// Allow 10 minutes for gcode macros.\n\t\t\t\t\ttimeout = 10 * 60 * 1000;\n\t\t\t\t}\n\t\t\t\tinFlightRequestTimeouts.current[id] = window.setTimeout(() => {\n\t\t\t\t\tinFlightRequests.current[id]?.(new Error('Request timed out'), null);\n\t\t\t\t\tdelete inFlightRequests.current[id];\n\t\t\t\t\tdelete inFlightRequestTimeouts.current[id];\n\t\t\t\t}, timeout); // 10 second timeout.\n\t\t\t\tsendJsonMessage({\n\t\t\t\t\tjsonrpc: '2.0',\n\t\t\t\t\tmethod,\n\t\t\t\t\tparams,\n\t\t\t\t\tid: id,\n\t\t\t\t});\n\t\t\t});\n\t\t},\n\t\t[isReady, sendJsonMessage],\n\t);\n\n\tconst subscribeToObject = useCallback(\n\t\tasync <TArgs extends [PrinterObjectKeys, ...PrinterObjectKeys[]]>(...args: TArgs) => {\n\t\t\tconst objects = Object.fromEntries(args.map((key) => [key, null])) as PrinterObjectsMoonrakerQueryParams;\n\t\t\tconst allSubscribedObjects = Object.assign(\n\t\t\t\t{},\n\t\t\t\tobjects,\n\t\t\t\t...Object.values(subscriptions).filter((v) => v != null),\n\t\t\t) as PrinterObjectsMoonrakerQueryParams;\n\t\t\tconst q = moonrakerQuery('printer.objects.subscribe' as 'printer.objects.query', {\n\t\t\t\tobjects: allSubscribedObjects,\n\t\t\t});\n\t\t\t// Capture request id we just generated;\n\t\t\tconst reqId = REQ_ID;\n\t\t\tsubscriptions[reqId] = objects;\n\t\t\tlocalSubscriptions.current.push(reqId);\n\n\t\t\tconst res = (await q).status as {\n\t\t\t\t[K in TArgs[number]]: PrinterObjectResult<K>;\n\t\t\t};\n\t\t\treturn {\n\t\t\t\tres,\n\t\t\t\tunsuscribe: async () => {\n\t\t\t\t\tlocalSubscriptions.current = localSubscriptions.current.filter((v) => v !== reqId);\n\t\t\t\t\tif (subscriptions[reqId] == null) {\n\t\t\t\t\t\tdelete subscriptions[reqId];\n\t\t\t\t\t\tconst allSubscribedObjects = Object.assign(\n\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t...Object.values(subscriptions).filter((v) => v != null),\n\t\t\t\t\t\t) as PrinterObjectsMoonrakerQueryParams;\n\t\t\t\t\t\tawait moonrakerQuery('printer.objects.subscribe' as 'printer.objects.query', {\n\t\t\t\t\t\t\tobjects: allSubscribedObjects,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t};\n\t\t},\n\t\t[moonrakerQuery],\n\t);\n\n\tconst saveItem = useCallback<MoonrakerSaveItemFn>(\n\t\tasync <Data,>(namespace: MoonrakerNamespaces, key: unknown, value: unknown) => {\n\t\t\tawait isReady();\n\t\t\treturn (await moonrakerQuery('server.database.post_item', {\n\t\t\t\tnamespace: namespace,\n\t\t\t\tkey,\n\t\t\t\tvalue: value,\n\t\t\t})) as Data;\n\t\t},\n\t\t[moonrakerQuery, isReady],\n\t);\n\n\tconst getItem = useCallback<MoonrakerGetItemFn>(\n\t\tasync <Data,>(namespace: MoonrakerNamespaces, key: unknown): Promise<Data | null> => {\n\t\t\tawait isReady();\n\t\t\ttry {\n\t\t\t\tconst result = await moonrakerQuery('server.database.get_item', {\n\t\t\t\t\tnamespace: namespace,\n\t\t\t\t\tkey,\n\t\t\t\t});\n\t\t\t\treturn (result?.value ?? null) as Data;\n\t\t\t} catch (e) {\n\t\t\t\tgetLogger().warn(e);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t},\n\t\t[moonrakerQuery, isReady],\n\t);\n\n\tuseEffect(() => {\n\t\tif (readyState === 1) {\n\t\t\t(async () => {\n\t\t\t\tawait migrateToLatest();\n\t\t\t\tonReadyCallbacks.current.forEach((cb) => cb.resolve());\n\t\t\t\tonReadyCallbacks.current = [];\n\t\t\t\tsetMoonrakerStatus('connected');\n\t\t\t})();\n\t\t} else {\n\t\t\tsetMoonrakerStatus('connecting');\n\t\t}\n\t}, [readyState]);\n\n\tuseEffect(() => {\n\t\tif (lastJsonMessage?.id && inFlightRequests.current[lastJsonMessage.id]) {\n\t\t\twindow.clearTimeout(inFlightRequestTimeouts.current[lastJsonMessage.id]);\n\t\t\tif ('error' in lastJsonMessage) {\n\t\t\t\tinFlightRequests.current[lastJsonMessage.id](new Error(lastJsonMessage.error.message), null);\n\t\t\t} else {\n\t\t\t\tinFlightRequests.current[lastJsonMessage.id](null, lastJsonMessage.result);\n\t\t\t}\n\t\t\tdelete inFlightRequestTimeouts.current[lastJsonMessage.id];\n\t\t\tdelete inFlightRequests.current[lastJsonMessage.id];\n\t\t}\n\t}, [lastJsonMessage]);\n\n\tuseEffect(() => {\n\t\treturn () => {\n\t\t\tfor (const reqId in inFlightRequestTimeouts.current) {\n\t\t\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t\t\t\tdelete inFlightRequestTimeouts.current[reqId];\n\t\t\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t\t\t\tdelete inFlightRequests.current[reqId];\n\t\t\t}\n\t\t\tif (localSubscriptions.current.length > 0) {\n\t\t\t\tlocalSubscriptions.current.forEach((sub) => {\n\t\t\t\t\tdelete subscriptions[sub];\n\t\t\t\t});\n\t\t\t\tlocalSubscriptions.current = [];\n\t\t\t\tconst allSubscribedObjects = Object.assign(\n\t\t\t\t\t{},\n\t\t\t\t\t...Object.values(subscriptions).filter((v) => v != null),\n\t\t\t\t) as PrinterObjectsMoonrakerQueryParams;\n\t\t\t\tmoonrakerQuery('printer.objects.subscribe' as 'printer.objects.query', {\n\t\t\t\t\tobjects: Object.keys(allSubscribedObjects).length > 0 ? allSubscribedObjects : null,\n\t\t\t\t}).catch((e) => {\n\t\t\t\t\t// ignore\n\t\t\t\t});\n\t\t\t}\n\t\t\tonReadyCallbacks.current.forEach((cb) => cb.reject());\n\t\t\tonReadyCallbacks.current = [];\n\t\t};\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, []);\n\n\treturn {\n\t\tquery: moonrakerQuery,\n\t\tsaveItem,\n\t\tgetItem,\n\t\tsubscribeToObject,\n\t\tstatus: moonrakerStatus,\n\t\tlastMessage: lastJsonMessage,\n\t\tisReady: readyState === 1,\n\t};\n};\n\nexport const useNamespacedItemQuery = <\n\tN extends MoonrakerNamespaces,\n\tK extends MoonrakerNamespaceKeys<N>,\n\tV extends MoonrakerDBValue<N, K>,\n>(\n\tnamespace: N,\n\tkey: K,\n\toptions?: Omit<UseQueryOptions<V, unknown, V, N[]>, 'queryKey' | 'queryFn'>,\n) => {\n\tconst { getItem } = useMoonraker();\n\treturn useQuery({\n\t\t...options,\n\t\tqueryKey: [namespace, key],\n\t\tqueryFn: async () => {\n\t\t\treturn getItem(namespace, key) as Promise<V>;\n\t\t},\n\t});\n};\n\nexport const useMoonrakerQuery = <\n\tK extends MoonrakerQueryKeys = MoonrakerQueryKeys,\n\tP extends MoonrakerQueryParams<K> = MoonrakerQueryParams<K>,\n\tO extends Omit<\n\t\tUseQueryOptions<MoonrakerQueryResult<K>, unknown, MoonrakerQueryResult<K>, K[]>,\n\t\t'queryKey' | 'queryFn'\n\t> = Omit<UseQueryOptions<MoonrakerQueryResult<K>, unknown, MoonrakerQueryResult<K>, K[]>, 'queryKey' | 'queryFn'>,\n>(\n\t...args: P extends void ? [K, O?] : [K, P, O?]\n) => {\n\tconst { query } = useMoonraker();\n\tconst options = args.length === 3 ? (args[2] as O) : (args[1] as O);\n\tconst params = args.length === 3 ? args[1] : undefined;\n\tconst key = args[0];\n\tconst passed = (args.length === 3 ? [key, params] : [key]) as P extends void ? [K] : [K, P];\n\treturn useQuery({\n\t\t...(options ?? {}),\n\t\tqueryKey: [args[0]],\n\t\tqueryFn: async () => {\n\t\t\treturn query(...passed) as Promise<MoonrakerQueryResult<K>>;\n\t\t},\n\t});\n};\n\nexport const useMoonrakerMutation = <\n\tK extends MoonrakerMutationKeys = MoonrakerMutationKeys,\n\tP extends MoonrakerMutationParams<K> = MoonrakerMutationParams<K>,\n\tO extends Omit<UseMutationOptions<MoonrakerMutationResult<K>, unknown, P, K[]>, 'mutationKey' | 'mutationFn'> = Omit<\n\t\tUseMutationOptions<MoonrakerMutationResult<K>, unknown, P, K[]>,\n\t\t'mutationKey' | 'mutationFn'\n\t>,\n>(\n\t...args: [K, O?]\n) => {\n\tconst { query } = useMoonraker();\n\tconst options = args[1];\n\tconst key = args[0];\n\treturn useMutation({\n\t\t...options,\n\t\tmutationKey: [args[0]],\n\t\tmutationFn: async (params: P) => {\n\t\t\tconst passed = (params ? [key, params] : [key]) as P extends void ? [K] : [K, P];\n\t\t\treturn query(...passed) as Promise<MoonrakerMutationResult<K>>;\n\t\t},\n\t});\n};\n\nexport const usePrinterObjectQuery = <TArgs extends [PrinterObjectKeys, ...PrinterObjectKeys[]]>(...args: TArgs) => {\n\tconst { query } = useMoonraker();\n\treturn useQuery({\n\t\tqueryKey: args,\n\t\tqueryFn: async () => {\n\t\t\tconst objects = Object.fromEntries(args.map((key) => [key, null])) as PrinterObjectsMoonrakerQueryParams;\n\t\t\treturn (await query('printer.objects.query', { objects })).status as {\n\t\t\t\t[K in TArgs[number]]: PrinterObjectResult<K>;\n\t\t\t};\n\t\t},\n\t});\n};\n\nexport const usePrinterObjectSubscription = <\n\tTArgs extends [PrinterObjectKeys, ...PrinterObjectKeys[]],\n\tR extends object = { [K in TArgs[number]]: PrinterObjectResult<K> },\n>(\n\tselect: null | ((res: { [K in TArgs[number]]: PrinterObjectResult<K> }) => R),\n\t...args: TArgs\n) => {\n\tconst [state, setState] = useState<R | null>(null);\n\tconst stateRef = useRef(state);\n\tstateRef.current = state;\n\tconst selectRef = useRef(select);\n\tselectRef.current = select;\n\n\tconst _select = useCallback((res: { [K in TArgs[number]]: PrinterObjectResult<K> }) => {\n\t\tif (selectRef.current == null) {\n\t\t\treturn res as R;\n\t\t}\n\t\treturn selectRef.current?.(res);\n\t}, []);\n\n\tconst keys = useMemo(\n\t\t() => Object.fromEntries(args.map((key) => [key, null])) as PrinterObjectsMoonrakerQueryParams,\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t\t[JSON.stringify(args.sort())],\n\t);\n\n\tconst { subscribeToObject } = useMoonraker({\n\t\tonStatusUpdate: useCallback(\n\t\t\t(res: MoonrakerStatusUpdate) => {\n\t\t\t\tconst changed = {} as typeof res;\n\t\t\t\tfor (const key in keys) {\n\t\t\t\t\tif (res[key as keyof typeof res] != null) {\n\t\t\t\t\t\tchanged[key as keyof typeof res] = res[key as keyof typeof res];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconst changeSelection = _select(changed);\n\t\t\t\tif (changeSelection == null || typeof changeSelection !== 'object') {\n\t\t\t\t\tthrow new Error('Invalid selection function, must return object, got ' + typeof changeSelection);\n\t\t\t\t}\n\t\t\t\tif (Object.keys(changed).length > 0 && deepEqual(changeSelection, stateRef.current) === false) {\n\t\t\t\t\tsetState((prev) => {\n\t\t\t\t\t\treturn merge(prev ?? {}, changeSelection) as R;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\t\t\t[_select, keys],\n\t\t),\n\t});\n\n\tuseEffect(() => {\n\t\tconst subscription = subscribeToObject(...(Object.keys(keys) as TArgs));\n\t\tsubscription\n\t\t\t.then((sub) => {\n\t\t\t\tsetState(_select(sub.res));\n\t\t\t})\n\t\t\t.catch((e) => {\n\t\t\t\tif (e instanceof Error) {\n\t\t\t\t\tgetLogger().error(e);\n\t\t\t\t}\n\t\t\t});\n\t\treturn () => {\n\t\t\tsubscription\n\t\t\t\t.then((sub) => sub.unsuscribe())\n\t\t\t\t.catch((e) => {\n\t\t\t\t\tif (e instanceof Error) {\n\t\t\t\t\t\tgetLogger().error(e);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t};\n\t}, [_select, keys, subscribeToObject]);\n\n\treturn state;\n};\n\nexport const useNamespacedItemMutation = <\n\tN extends MoonrakerNamespaces,\n\tK extends MoonrakerNamespaceKeys<N>,\n\tV extends MoonrakerDBValue<N, K>,\n>(\n\tnamespace: N,\n\tkey: K,\n\toptions?: Omit<UseMutationOptions<MoonrakerDBItemResponse<V>, unknown, V>, 'mutationKey' | 'mutationFn'>,\n) => {\n\tconst { saveItem } = useMoonraker();\n\treturn useMutation<MoonrakerDBItemResponse<V>, unknown, V>({\n\t\t...options,\n\t\tmutationKey: [namespace, key],\n\t\tmutationFn: (value: V) => saveItem(namespace, key, value) as Promise<MoonrakerDBItemResponse<V>>,\n\t});\n};\n\nexport const useMoonrakerState = <\n\tN extends MoonrakerNamespaces,\n\tK extends MoonrakerNamespaceKeys<N>,\n\tV extends MoonrakerDBValue<N, K>,\n\tVal extends NonNullable<V> | null,\n>(\n\tnamespace: N,\n\tkey: K,\n\tinitialValue: Val = null as Val,\n) => {\n\tconst query = useNamespacedItemQuery(namespace, key, { initialData: initialValue });\n\tconst mutation = useNamespacedItemMutation<N, K, V>(namespace, key);\n\tconst mutate = useCallback(\n\t\tasync (value: V | ((prev: NonNullable<V> | Val) => NonNullable<V> | Val)) => {\n\t\t\tconst newValue =\n\t\t\t\ttypeof value === 'function' ? (value as (prev: NonNullable<V> | Val) => V)(query.data ?? initialValue) : value;\n\t\t\tawait mutation.mutateAsync(newValue, {\n\t\t\t\tonSuccess: () => {\n\t\t\t\t\t// Todo, implement optimistic updates\n\t\t\t\t\tquery.refetch();\n\t\t\t\t},\n\t\t\t});\n\t\t},\n\t\t[initialValue, mutation, query],\n\t);\n\treturn [query.data ?? initialValue, mutate, query, mutation] as const;\n};\n","'use client';\nimport { createTRPCProxyClient, httpBatchLink } from '@trpc/client';\nimport { createTRPCNext } from '@trpc/next';\nimport type { AppRouter } from '@/server/routers/index';\nexport type {\n\tPrinterRouterLike,\n\tDropdownQuery,\n\tDropdownQueryKeys,\n\tDropdownQueryInput,\n\tDropdownQueryOutput,\n} from '@/server/routers/printer';\n\nexport function getBaseUrl() {\n\tif (typeof window !== 'undefined')\n\t\t// browser should use relative path\n\t\treturn '/configure';\n\tif (process.env.RENDER_INTERNAL_HOSTNAME)\n\t\t// reference for render.com\n\t\treturn `http://${process.env.RENDER_INTERNAL_HOSTNAME}:${process.env.PORT}/configure`;\n\t// assume localhost\n\treturn `http://127.0.0.1:${process.env.PORT ?? 3000}/configure`;\n}\nexport const trpc = createTRPCNext<AppRouter>({\n\tconfig() {\n\t\treturn {\n\t\t\tlinks: [\n\t\t\t\thttpBatchLink({\n\t\t\t\t\t/**\n\t\t\t\t\t * @link https://trpc.io/docs/ssr\n\t\t\t\t\t **/\n\t\t\t\t\turl: `${getBaseUrl()}/api/trpc`,\n\t\t\t\t\tmaxURLLength: 2083, // a suitable size\n\t\t\t\t}),\n\t\t\t],\n\t\t};\n\t},\n\toverrides: {\n\t\tuseMutation: {\n\t\t\t/**\n\t\t\t * This function is called whenever a `.useMutation` succeeds\n\t\t\t **/\n\t\t\tasync onSuccess(opts) {\n\t\t\t\t/**\n\t\t\t\t * @note that order here matters:\n\t\t\t\t * The order here allows route changes in `onSuccess` without\n\t\t\t\t * having a flash of content change whilst redirecting.\n\t\t\t\t **/\n\t\t\t\t// Calls the `onSuccess` defined in the `useQuery()`-options:\n\t\t\t\tawait opts.originalFn();\n\t\t\t\t// Invalidate all queries in the react-query cache:\n\t\t\t\tawait opts.queryClient.invalidateQueries();\n\t\t\t},\n\t\t},\n\t},\n\t/**\n\t * @link https://trpc.io/docs/ssr\n\t **/\n\tssr: false,\n});\nexport const proxyClient = createTRPCProxyClient<AppRouter>({\n\tlinks: [\n\t\thttpBatchLink({\n\t\t\t/**\n\t\t\t * @link https://trpc.io/docs/ssr\n\t\t\t **/\n\t\t\turl: `${getBaseUrl()}/api/trpc`,\n\t\t\tmaxURLLength: 2083, // a suitable size\n\t\t}),\n\t],\n});\n","import { z } from 'zod';\n\nexport const PinoLogLevel = z.enum(['trace', 'debug', 'info', 'warn', 'error', 'fatal']);\n\nexport const PinoLogEvent = z.object({\n\tts: z.number(),\n\tmessages: z.array(z.any()),\n\tbindings: z.array(z.record(z.string(), z.any())),\n\tlevel: z.object({\n\t\tlabel: PinoLogLevel,\n\t\tvalue: z.number(),\n\t}),\n});\n"],"names":["send","level","logEvent","trpcClient","clientLog","mutate","PinoLogEvent","parse","logger","getLogger","pino","globalPinoOpts","browser","transmit","badgeColorOptions","z","union","literal","badgeTextColorStyle","cva","variants","color","rose","red","yellow","orange","green","lime","blue","sky","indigo","purple","pink","brand","gray","plain","badgeBackgroundColorStyle","badgeBorderColorStyle","badgeStyle","size","sm","md","lg","defaultVariants","Badge","className","children","forwardProps","props","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsx","span","twMerge","timestamp","getHost","window","process","trim","location","hostname","migrations","version","description","up","res","fetch","concat","ok","result","data","json","error","message","value","key","Object","entries","parsed","JSON","console","log","method","headers","body","stringify","namespace","e","encodeURIComponent","length","join","down","encoded","push","migratedValue","replace","getCurrentVersion","setCurrentVersion","isMigrating","migrate","from","to","migrationsToRun","filter","m","sort","a","b","migration","isMigrated","migrateToLatest","currentVersion","latestVersion","Math","max","map","REQ_ID","getWsURL","host","subscriptions","useMoonraker","inFlightRequests","useRef","inFlightRequestTimeouts","localSubscriptions","onReadyCallbacks","wsUrl","setWsUrl","useState","useEffect","containsSubscriptionUpdate","useCallback","jsonMessage","params","sub","current","objects","lastJsonMessage","sendJsonMessage","readyState","useWebSocket","moonrakerStatus","options","id","passThroughUpdateMethods","includes","warn","messageData","onMessage","onStatusUpdate","shouldReconnect","reconnectAttempts","Infinity","reconnectInterval","share","readyStateRef","setMoonrakerStatus","whenReady","resolve","reject","isReady","Promise","moonrakerQuery","err","timeout","setTimeout","jsonrpc","subscribeToObject","args","fromEntries","allSubscribedObjects","assign","values","v","q","reqId","status","unsuscribe","saveItem","getItem","forEach","cb","clearTimeout","keys","catch","query","lastMessage","useNamespacedItemQuery","useQuery","queryKey","queryFn","useMoonrakerQuery","undefined","passed","useMoonrakerMutation","useMutation","mutationKey","mutationFn","usePrinterObjectQuery","usePrinterObjectSubscription","select","state","setState","stateRef","selectRef","_select","useMemo","changed","changeSelection","deepEqual","merge","prev","subscription","then","Error","useNamespacedItemMutation","useMoonrakerState","initialValue","initialData","mutation","newValue","mutateAsync","onSuccess","refetch","getBaseUrl","trpc","createTRPCNext","config","links","httpBatchLink","url","maxURLLength","overrides","opts","originalFn","queryClient","invalidateQueries","ssr","proxyClient","createTRPCProxyClient","PinoLogLevel","enum","object","ts","number","messages","array","any","bindings","record","string","label"],"sourceRoot":""}